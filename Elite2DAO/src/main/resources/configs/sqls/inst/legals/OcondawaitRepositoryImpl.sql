OCONDAWAIT_RG_LOCATION_REC_GROUP{
SELECT CAL.AGY_LOC_ID CODE, AL.DESCRIPTION DESCRIPTION FROM CASELOAD_AGENCY_LOCATIONS CAL, AGENCY_LOCATIONS AL WHERE AL.AGENCY_LOCATION_TYPE = 'COMM'  AND CAL.CASELOAD_ID = :caseLoadID AND CAL.AGY_LOC_ID = AL.AGY_LOC_ID AND AL.ACTIVE_FLAG = 'Y'
}
OCONDAWAIT_RG_TEAM_REC_GROUP{
select at.team_code team_code, at.description description , to_char(at.team_id) code, case when tsm.staff_id = ( select staff_id from staff_members where staff_members.user_id = :createUserId and staff_members.status = 'ACTIVE') then 'Y' else 'N' end as active_flag,tal.agy_loc_id from automation_teams at, team_agency_loc tal, team_staff_members tsm where (at.active_flag = 'Y' and tal.active_flag = 'Y' and tsm.active_flag = 'Y' ) and tal.team_id = at.team_id and tsm.team_id = at.team_id
}
OCONDAWAIT_GET_SENTENCE_DATA{
select * from ( select OST.*, VHB.OFFENDER_ID_DISPLAY, VHB.LAST_NAME, VHB.FIRST_NAME, VHB.OFFENDER_BOOK_ID, VHB.INTAKE_AGY_LOC_ID, OCD.FORM_INFO_JSON_BLOB from ( select OCT.*, case when ( select COMM_CONDITION_TYPE from OFFENDER_SENT_CONDITIONS OSC where OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'CUST' then 'CUST' when ( select COMM_CONDITION_TYPE from OFFENDER_SENT_CONDITIONS OSC where OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'PAR' then 'PAR' when ( select COMM_CONDITION_TYPE from OFFENDER_SENT_CONDITIONS OSC where OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'BAIL' then 'BAIL' else 'NONCUST' end as ORDER_TYPE from OFFENDER_COND_TRANSFER OCT, ( select MAX(CON_TRANSFER_ID) MAX_CON_TRANSFER_ID, OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER where OFFENDER_SENT_CONDITION_ID in ( select OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER ) group by OFFENDER_SENT_CONDITION_ID ) B where OCT.CON_TRANSFER_ID = B.MAX_CON_TRANSFER_ID and OCT.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID) OST, ( select FORM_INFO_JSON as FORM_INFO_JSON_BLOB, (FORM_IDENTIFIER::JSON ->> 'offenderBookId')::INT as FORM_IDENTIFIER, (FORM_IDENTIFIER::JSON ->> 'orderType')::text as ORDER_TYPE from OCDLEGLO_DATA ) OCD, ( select O.OFFENDER_ID , O.LAST_NAME , O.FIRST_NAME , OB.OFFENDER_BOOK_ID, O.OFFENDER_ID_DISPLAY, OB.INTAKE_AGY_LOC_ID, OB.COMMUNITY_ACTIVE_FLAG from OFFENDERS O, OFFENDER_BOOKINGS OB where OB.OFFENDER_ID = O.OFFENDER_ID ) as VHB where (OST.AGY_LOC_ID = :CASELOADID or OST.TO_AGY_LOC_ID = :CASELOADID) and OST.STAFF_ID is null and OST.TO_STAFF_ID is null and OST.TEAM_MEMBER_ID is null and OST.TO_TEAM_MEMBER_ID is null and OCD.FORM_IDENTIFIER::BIGINT = OST.OFFENDER_BOOK_ID and OCD.ORDER_TYPE = OST.ORDER_TYPE and VHB.OFFENDER_BOOK_ID = OST.OFFENDER_BOOK_ID and VHB.COMMUNITY_ACTIVE_FLAG = 'Y' and ((coalesce(OST.PARENT_CON_TRANSFER_ID, 0)= 0 and OST.OFFENDER_SENT_CONDITION_ID in ( select OSC.OFFENDER_SENT_CONDITION_ID from COMMUNITY_CONDITIONS CC, OFFENDER_SENT_CONDITIONS OSC where CC.COMM_CONDITION_TYPE in ('CUST', 'NCUS','PAR','BAIL') and ( coalesce (:TEAMID, 0 ) = 0 or ( select COUNT(*) from TEAM_FUNCTIONS TF, TEAM_AGENCY_LOC TAL where TF.FUNCTION_TYPE = CC.FUNCTION_TYPE and TF.TEAM_ID = TAL.TEAM_ID and TAL.AGY_LOC_ID =:CASELOADID) = 1 and ( select COUNT(*) from TEAM_FUNCTIONS TF, TEAM_AGENCY_LOC TAL where TF.FUNCTION_TYPE = CC.FUNCTION_TYPE and TF.TEAM_ID = :TEAMID and TF.TEAM_ID = TAL.TEAM_ID and TAL.AGY_LOC_ID =:CASELOADID) = 1) and CC.COMM_CONDITION_TYPE = OSC.COMM_CONDITION_TYPE and CC.CATEGORY_TYPE = OSC.CATEGORY_TYPE and CC.COMM_CONDITION_CODE = OSC.COMM_CONDITION_CODE ) ) or (coalesce(OST.PARENT_CON_TRANSFER_ID, 0) != 0 and OST.OFFENDER_SENT_CONDITION_ID in ( select A.OFFENDER_SENT_CONDITION_ID from ( select MAX(CON_TRANSFER_ID) MAX_CON_TRANS_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER group by OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID) B, OFFENDER_COND_TRANSFER A where A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID and A.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID and A.CON_TRANSFER_ID = B.MAX_CON_TRANS_ID and((coalesce (:TEAMID , 0) = 0) or ((A.TEAM_ID = :TEAMID and coalesce (A.TO_TEAM_ID , 0) = 0) or (A.TO_TEAM_ID = :TEAMID and coalesce (A.TEAM_ID , 0) = 0)))))) ) A where (coalesce(A.PARENT_CON_TRANSFER_ID, 0) != 0 or exists ( select 'Y' from COMMUNITY_CONDITIONS CC, OFFENDER_SENT_CONDITIONS OSC where OSC.OFFENDER_SENT_CONDITION_ID = A.OFFENDER_SENT_CONDITION_ID and OSC.COMM_CONDITION_TYPE = CC.COMM_CONDITION_TYPE and OSC.COMM_CONDITION_CODE = CC.COMM_CONDITION_CODE and OSC.CATEGORY_TYPE = CC.CATEGORY_TYPE and CC.ALLOCATION_FLAG = 'Y')) and A.OFFENDER_SENT_CONDITION_ID in ( select OFFENDER_SENT_CONDITION_ID from OFFENDER_SENT_CONDITIONS OSC where CONDITION_STATUS in ( select UPDATE_REASON_CODE from LEGAL_UPDATE_REASONS LUR where LUR.ACTIVE_TYPE = 'A'))
}
OCONDAWAIT_CHECK_CONDITIONS_EXISTS_INTAKE{
SELECT A.*, CASE WHEN COALESCE(A.PARENT_COND_TRANSFER_ID, 0)= 0 THEN CASE WHEN (( SELECT COUNT(*) FROM TEAM_FUNCTIONS TF, TEAM_AGENCY_LOC TAL WHERE TF.FUNCTION_TYPE = A.FUNCTION_TYPE AND TF.TEAM_ID = TAL.TEAM_ID AND TAL.AGY_LOC_ID =:CASELOADID) = 1) THEN ( SELECT TF.TEAM_ID FROM TEAM_FUNCTIONS TF, TEAM_AGENCY_LOC TAL WHERE TF.FUNCTION_TYPE = A.FUNCTION_TYPE AND TF.TEAM_ID = TAL.TEAM_ID AND TAL.AGY_LOC_ID =:CASELOADID) ELSE 0 END ELSE 0 END AS DEFAULT_ASSIGNED_TEAM FROM ( SELECT OCT.PARENT_CON_TRANSFER_ID AS PARENT_COND_TRANSFER_ID, OSC.COMM_CONDITION_TYPE, OSC.CATEGORY_TYPE, OSC.COMM_CONDITION_CODE, OSC.SENTENCE_SEQ, OSC.OFFENDER_SENT_CONDITION_ID, OSC.LONG_COMMENT_TEXT, TAG_LICENCE_GET_REQUIREMENT(OSC.COMM_CONDITION_CODE, OSC.COMM_CONDITION_TYPE, OSC.CATEGORY_TYPE) AS DESCRIPTION, OCT.CON_TRANSFER_ID, OCT.TEAM_ID, OCT.TO_TEAM_ID, OCT.RECEIVED_FROM_LOCATION, OCT.RECEIVED_FROM_TEAM, ( SELECT CC.FUNCTION_TYPE FROM COMMUNITY_CONDITIONS CC, OFFENDER_SENT_CONDITIONS OSC WHERE CC.COMM_CONDITION_TYPE IN ('CUST', 'NCUS','PAR','BAIL') AND OSC.OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID AND CC.COMM_CONDITION_TYPE = OSC.COMM_CONDITION_TYPE AND CC.CATEGORY_TYPE = OSC.CATEGORY_TYPE AND CC.COMM_CONDITION_CODE = OSC.COMM_CONDITION_CODE ) AS FUNCTION_TYPE FROM ( SELECT A.CON_TRANSFER_ID, A.OFFENDER_BOOK_ID, A.OFFENDER_SENT_CONDITION_ID, A.STAFF_ID, A.TEAM_ID, A.TEAM_MEMBER_ID, A.AGY_LOC_ID, A.TO_TEAM_ID, A.TO_AGY_LOC_ID, A.CONDI_STATUS, A.CREATE_DATETIME, A.CREATE_USER_ID, A.MODIFY_DATETIME, A.MODIFY_USER_ID, A.SEAL_FLAG, A.TO_STAFF_ID, A.TO_TEAM_MEMBER_ID, A.PARENT_CON_TRANSFER_ID, A.SENTENCE_SEQ, A.RCVD_FROM_LOC AS RECEIVED_FROM_LOCATION, A.RCVD_FROM_TEAM AS RECEIVED_FROM_TEAM FROM ( SELECT MAX(CON_TRANSFER_ID) MAX_CON_TRANS_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER GROUP BY OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID) B, OFFENDER_COND_TRANSFER A WHERE A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID AND A.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID AND A.CON_TRANSFER_ID = B.MAX_CON_TRANS_ID AND A.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND A.SENTENCE_SEQ = :SENTENCESEQ AND (A.AGY_LOC_ID = :CASELOADID OR A.TO_AGY_LOC_ID = :CASELOADID ) AND A.STAFF_ID IS NULL AND A.TO_STAFF_ID IS NULL AND A.TEAM_MEMBER_ID IS NULL AND A.TO_TEAM_MEMBER_ID IS NULL ) OCT , OFFENDER_SENT_CONDITIONS OSC WHERE OCT.OFFENDER_BOOK_ID = OSC.OFFENDER_BOOK_ID AND OCT.SENTENCE_SEQ = OSC.SENTENCE_SEQ AND OCT.OFFENDER_SENT_CONDITION_ID = OSC.OFFENDER_SENT_CONDITION_ID AND OSC.COMM_CONDITION_TYPE = :ORDERTYPE AND ( COALESCE (:TEAMID, 0 ) = 0 OR ((COALESCE(OCT.PARENT_CON_TRANSFER_ID, 0)= 0 AND OCT.OFFENDER_SENT_CONDITION_ID IN ( SELECT OSC.OFFENDER_SENT_CONDITION_ID FROM COMMUNITY_CONDITIONS CC, OFFENDER_SENT_CONDITIONS OSC WHERE CC.COMM_CONDITION_TYPE IN ('CUST', 'NCUS','PAR','BAIL') AND (( SELECT COUNT(*) FROM TEAM_FUNCTIONS TF, TEAM_AGENCY_LOC TAL WHERE TF.FUNCTION_TYPE = CC.FUNCTION_TYPE AND TF.TEAM_ID = TAL.TEAM_ID AND TAL.AGY_LOC_ID =:CASELOADID) = 1 AND ( SELECT COUNT(*) FROM TEAM_FUNCTIONS TF, TEAM_AGENCY_LOC TAL WHERE TF.FUNCTION_TYPE = CC.FUNCTION_TYPE AND TF.TEAM_ID = :TEAMID AND TF.TEAM_ID = TAL.TEAM_ID AND TAL.AGY_LOC_ID =:CASELOADID) = 1) AND CC.COMM_CONDITION_TYPE = OSC.COMM_CONDITION_TYPE AND CC.CATEGORY_TYPE = OSC.CATEGORY_TYPE AND CC.COMM_CONDITION_CODE = OSC.COMM_CONDITION_CODE ) ) OR OCT.OFFENDER_SENT_CONDITION_ID IN ( SELECT A.OFFENDER_SENT_CONDITION_ID FROM ( SELECT MAX(CON_TRANSFER_ID) MAX_CON_TRANS_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER GROUP BY OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID) B, OFFENDER_COND_TRANSFER A WHERE A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID AND A.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID AND A.CON_TRANSFER_ID = B.MAX_CON_TRANS_ID AND A.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND((COALESCE (:TEAMID , 0) = 0) OR ((A.TEAM_ID = :TEAMID AND COALESCE (A.TO_TEAM_ID , 0) = 0) OR (A.TO_TEAM_ID = :TEAMID AND COALESCE (A.TEAM_ID , 0) = 0)))))) ) A WHERE (COALESCE(A.PARENT_COND_TRANSFER_ID, 0) != 0 OR EXISTS ( SELECT 'Y' FROM COMMUNITY_CONDITIONS CC, OFFENDER_SENT_CONDITIONS OSC WHERE OSC.OFFENDER_SENT_CONDITION_ID = A.OFFENDER_SENT_CONDITION_ID AND OSC.COMM_CONDITION_TYPE = CC.COMM_CONDITION_TYPE AND OSC.COMM_CONDITION_CODE = CC.COMM_CONDITION_CODE AND OSC.CATEGORY_TYPE = CC.CATEGORY_TYPE AND CC.ALLOCATION_FLAG = 'Y')) AND A.OFFENDER_SENT_CONDITION_ID IN ( SELECT OFFENDER_SENT_CONDITION_ID FROM OFFENDER_SENT_CONDITIONS OSC WHERE CONDITION_STATUS IN ( SELECT UPDATE_REASON_CODE FROM LEGAL_UPDATE_REASONS LUR WHERE ACTIVE_TYPE = 'A'))
}
OCONDWAIT_INSERT_OFFENDER_COND_TRANSFER{
insert into OFFENDER_COND_TRANSFER(CON_TRANSFER_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID, STAFF_ID, TEAM_ID, TEAM_MEMBER_ID, AGY_LOC_ID, TO_TEAM_ID, TO_AGY_LOC_ID, CONDI_STATUS, CREATE_DATETIME, CREATE_USER_ID, SEAL_FLAG, TO_STAFF_ID, TO_TEAM_MEMBER_ID, PARENT_CON_TRANSFER_ID, SENTENCE_SEQ, RCVD_FROM_LOC, RCVD_FROM_TEAM, MODIFY_DATETIME) values (nextval('OFFENDER_COND_TRANSFER_ID'), :offenderBookId, :offenderSentConditionId, :staffId, :teamId, :teamMemberId, :agyLocId, :toTeamId, :toAgyLocId, :condiStatus, current_timestamp, :createUserId, :sealFlag, :toStaffId, :toTeamMemberId, :parentCondTransferId, :sentenceSeq, :rcvdFromLoc, :rcvdFromTeam, null )
}
OCNDAWAIT_ASSIGNED_OFFENDER_CONDITIONS{
SELECT OCT.*, VHB.OFFENDER_ID_DISPLAY, VHB.LAST_NAME, VHB.FIRST_NAME, VHB.OFFENDER_BOOK_ID, VHB.INTAKE_AGY_LOC_ID, OCD.FORM_INFO_JSON_BLOB FROM ( SELECT OCT.*, CASE WHEN ( SELECT COMM_CONDITION_TYPE FROM OFFENDER_SENT_CONDITIONS OSC WHERE OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'CUST' THEN 'CUST' WHEN ( SELECT COMM_CONDITION_TYPE FROM OFFENDER_SENT_CONDITIONS OSC WHERE OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'PAR' THEN 'PAR' WHEN ( SELECT COMM_CONDITION_TYPE FROM OFFENDER_SENT_CONDITIONS OSC WHERE OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'BAIL' THEN 'BAIL' ELSE 'NONCUST' END AS ORDER_TYPE FROM OFFENDER_COND_TRANSFER OCT, ( SELECT MAX(CON_TRANSFER_ID) MAX_CON_TRANSFER_ID, OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER WHERE OFFENDER_SENT_CONDITION_ID IN ( SELECT OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER ) GROUP BY OFFENDER_SENT_CONDITION_ID ) B WHERE OCT.CON_TRANSFER_ID = B.MAX_CON_TRANSFER_ID AND OCT.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID) OCT, ( SELECT FORM_INFO_JSON AS FORM_INFO_JSON_BLOB, (FORM_IDENTIFIER::JSON ->> 'offenderBookId')::INT AS FORM_IDENTIFIER, (FORM_IDENTIFIER::JSON ->> 'orderType')::TEXT AS ORDER_TYPE FROM OCDLEGLO_DATA ) OCD, ( SELECT O.OFFENDER_ID , O.LAST_NAME , O.FIRST_NAME , OB.OFFENDER_BOOK_ID, O.OFFENDER_ID_DISPLAY, OB.INTAKE_AGY_LOC_ID, OB.COMMUNITY_ACTIVE_FLAG FROM OFFENDERS O, OFFENDER_BOOKINGS OB WHERE OB.OFFENDER_ID = O.OFFENDER_ID ) AS VHB WHERE (OCT.AGY_LOC_ID = :CASELOADID OR OCT.TO_AGY_LOC_ID = :CASELOADID) AND ( COALESCE(:STAFFID, 0) = 0 OR ( COALESCE(OCT.TO_STAFF_ID, 0) = 0 AND OCT.STAFF_ID = :STAFFID ) OR ( COALESCE(OCT.STAFF_ID, 0) = 0 AND OCT.TO_STAFF_ID = :STAFFID ) ) AND ( COALESCE(:TEAMID, 0) = 0 OR ( COALESCE(OCT.TO_TEAM_ID, 0) = 0 AND OCT.TEAM_ID = :TEAMID ) OR ( COALESCE(OCT.TEAM_ID, 0) = 0 AND OCT.TO_TEAM_ID = :TEAMID ) ) AND ( COALESCE(:TEAMMEMBERID, 0) = 0 OR ( COALESCE(OCT.TEAM_MEMBER_ID, 0) = 0 AND OCT.TO_TEAM_MEMBER_ID = :TEAMMEMBERID ) OR ( COALESCE(OCT.TO_TEAM_MEMBER_ID, 0) = 0 AND OCT.TEAM_MEMBER_ID = :TEAMMEMBERID ) ) AND OCD.FORM_IDENTIFIER::BIGINT = VHB.OFFENDER_BOOK_ID AND OCT.OFFENDER_BOOK_ID = VHB.OFFENDER_BOOK_ID AND VHB.COMMUNITY_ACTIVE_FLAG = 'Y' AND OCD.ORDER_TYPE = OCT.ORDER_TYPE AND OCT.PARENT_CON_TRANSFER_ID IS NOT NULL AND OCT.CONDI_STATUS = 'ASSIGNED' AND OCT.OFFENDER_SENT_CONDITION_ID IN ( SELECT OFFENDER_SENT_CONDITION_ID FROM OFFENDER_SENT_CONDITIONS OSC WHERE CONDITION_STATUS IN ( SELECT UPDATE_REASON_CODE FROM LEGAL_UPDATE_REASONS LUR WHERE LUR.ACTIVE_TYPE = 'A'))
}
OCONDTRF_GET_ASSIGNED_CONDITIONS{
SELECT OCT.*, TAG_LICENCE_GET_REQUIREMENT(OSC.COMM_CONDITION_CODE, OSC.COMM_CONDITION_TYPE, OSC.CATEGORY_TYPE) DESCRIPTION, OSC.OFFENDER_SENT_CONDITION_ID, OSC.COMM_CONDITION_TYPE, OSC.COMM_CONDITION_CODE, OSC.CATEGORY_TYPE, OSC.SENTENCE_SEQ, OSC.OFFENDER_BOOK_ID, OSC.LONG_COMMENT_TEXT, CASE WHEN COALESCE(OCT.STAFF_ID, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = OCT.STAFF_ID) WHEN COALESCE(OCT.TO_STAFF_ID, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = OCT.TO_STAFF_ID) WHEN COALESCE(OCT.TEAM_MEMBER_ID, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = ( SELECT STAFF_ID FROM TEAM_STAFF_MEMBERS TSM WHERE TEAM_MEMBER_ID = OCT.TEAM_MEMBER_ID)) WHEN COALESCE(OCT.TO_TEAM_MEMBER_ID, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = ( SELECT STAFF_ID FROM TEAM_STAFF_MEMBERS TSM WHERE TEAM_MEMBER_ID = OCT.TO_TEAM_MEMBER_ID)) END AS OFFICERS_NAME FROM ( SELECT A.* FROM ( SELECT MAX(CON_TRANSFER_ID) MAX_CON_TRANS_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER GROUP BY OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID) B, OFFENDER_COND_TRANSFER A WHERE A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID AND A.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID AND A.CON_TRANSFER_ID = B.MAX_CON_TRANS_ID AND A.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND A.SENTENCE_SEQ = :SENTENCESEQ AND (A.AGY_LOC_ID = :CASELOADID OR A.TO_AGY_LOC_ID = :CASELOADID) AND (COALESCE(:STAFFID, 0) = 0 OR (A.STAFF_ID = :STAFFID OR A.TO_STAFF_ID = :STAFFID)) AND (COALESCE(:TEAMID, 0) = 0 OR (A.TEAM_ID = :TEAMID OR A.TO_TEAM_ID = :TEAMID)) AND (COALESCE(:TEAMMEMBERID, 0) = 0 OR (A.TEAM_MEMBER_ID = :TEAMMEMBERID OR A.TO_TEAM_MEMBER_ID = :TEAMMEMBERID)) ) OCT, OFFENDER_SENT_CONDITIONS OSC WHERE OSC.OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID AND OCT.PARENT_CON_TRANSFER_ID IS NOT NULL AND OCT.CONDI_STATUS = 'ASSIGNED' AND OSC.COMM_CONDITION_TYPE = :ORDERTYPE AND OCT.OFFENDER_SENT_CONDITION_ID IN ( SELECT OFFENDER_SENT_CONDITION_ID FROM OFFENDER_SENT_CONDITIONS OSC WHERE CONDITION_STATUS IN ( SELECT UPDATE_REASON_CODE FROM LEGAL_UPDATE_REASONS LUR WHERE LUR.ACTIVE_TYPE = 'A'))
}
OCONDAWAIT_GET_TRANSFERRED_COND{
SELECT OCT.*, CASE WHEN TO_TEAM_ID IS NULL THEN (SELECT AGY_LOC_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) ELSE OCT.TO_AGY_LOC_ID END AS RECEIVED_FROM FROM OFFENDER_COND_TRANSFER OCT, ( SELECT MAX(CON_TRANSFER_ID) MAX_CON_TRANSFER_ID, OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER WHERE OFFENDER_SENT_CONDITION_ID IN ( SELECT OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER WHERE CONDI_STATUS = 'TRANSFERRED' ) GROUP BY OFFENDER_SENT_CONDITION_ID ) B WHERE OCT.CON_TRANSFER_ID = B.MAX_CON_TRANSFER_ID AND OCT.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID AND (COALESCE(:TEAMID, 0) = 0 OR OCT.TO_TEAM_ID = :TEAMID)
}
OCONDAWAIT_GET_TRANFERRED_COND_OFFENDERS{
select A.*, VHB.OFFENDER_ID_DISPLAY, VHB.LAST_NAME, VHB.FIRST_NAME, VHB.OFFENDER_BOOK_ID, VHB.INTAKE_AGY_LOC_ID, OCT.* from ( select OCT.*, case when ( select COMM_CONDITION_TYPE from OFFENDER_SENT_CONDITIONS OSC where OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'CUST' then 'CUST' when ( select COMM_CONDITION_TYPE from OFFENDER_SENT_CONDITIONS OSC where OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'PAR' then 'PAR' when ( select COMM_CONDITION_TYPE from OFFENDER_SENT_CONDITIONS OSC where OFFENDER_SENT_CONDITION_ID = OCT.OFFENDER_SENT_CONDITION_ID) = 'BAIL' then 'BAIL' else 'NONCUST' end as ORDER_TYPE, case when coalesce( (select AGY_LOC_ID from OFFENDER_COND_TRANSFER where CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID), 'A') = 'A' then( select TO_AGY_LOC_ID from OFFENDER_COND_TRANSFER where CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) else ( select AGY_LOC_ID from OFFENDER_COND_TRANSFER where CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) end as RECEIVED_FROM, case when coalesce( (select TEAM_ID from OFFENDER_COND_TRANSFER where CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID), 0) = 0 then( select TO_TEAM_ID from OFFENDER_COND_TRANSFER where CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) else ( select TEAM_ID from OFFENDER_COND_TRANSFER where CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) end as RECEIVED_FROM_TEAM from OFFENDER_COND_TRANSFER OCT, ( select MAX(CON_TRANSFER_ID) MAX_CON_TRANSFER_ID, OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER where OFFENDER_SENT_CONDITION_ID in ( select OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER where CONDI_STATUS = 'TRANSFERRED' ) group by OFFENDER_SENT_CONDITION_ID ) B where OCT.CON_TRANSFER_ID = B.MAX_CON_TRANSFER_ID and OCT.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID ) OCT , ( select FORM_INFO_JSON as FORM_INFO_JSON_BLOB, (FORM_IDENTIFIER::JSON ->> 'offenderBookId')::INT as FORM_IDENTIFIER, (FORM_IDENTIFIER::JSON ->> 'orderType')::text as ORDER_TYPE from OCDLEGLO_DATA ) A, ( select O.OFFENDER_ID , O.LAST_NAME , O.FIRST_NAME , OB.OFFENDER_BOOK_ID, O.OFFENDER_ID_DISPLAY, OB.INTAKE_AGY_LOC_ID, OB.COMMUNITY_ACTIVE_FLAG from OFFENDERS O, OFFENDER_BOOKINGS OB where OB.OFFENDER_ID = O.OFFENDER_ID ) as VHB where OCT.CONDI_STATUS = 'TRANSFERRED' and OCT.RECEIVED_FROM = :CASELOADID and (coalesce(:TEAMID, 0) = 0 or OCT.RECEIVED_FROM_TEAM = :TEAMID) and VHB.OFFENDER_BOOK_ID = OCT.OFFENDER_BOOK_ID and A.FORM_IDENTIFIER::BIGINT = VHB.OFFENDER_BOOK_ID and VHB.COMMUNITY_ACTIVE_FLAG = 'Y' and A.ORDER_TYPE = OCT.ORDER_TYPE
}
OCONAWAIT_GET_TRANFERRED_CONDITIONS{
SELECT A.*, ( SELECT RCVD_FROM_TEAM FROM OFFENDER_COND_TRANSFER OCT2 WHERE CON_TRANSFER_ID = A.PARENT_CON_TRANSFER_ID) AS RCVD_FROM_TEAM, ( SELECT RCVD_FROM_LOC FROM OFFENDER_COND_TRANSFER OCT2 WHERE CON_TRANSFER_ID = A.PARENT_CON_TRANSFER_ID) AS RCVD_FROM_LOC, CASE WHEN COALESCE(A.PRVS_ALLOC_OFFICER, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = A.PRVS_ALLOC_OFFICER) WHEN COALESCE(A.PRVS_ALLOC_TO_OFFICER, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = A.PRVS_ALLOC_TO_OFFICER) WHEN COALESCE(A.PRVS_ALLOC_TEAM_MEMBER_ID, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = ( SELECT STAFF_ID FROM TEAM_STAFF_MEMBERS TSM WHERE TEAM_MEMBER_ID = A.PRVS_ALLOC_TEAM_MEMBER_ID)) WHEN COALESCE(A.PRVS_ALLOC_TO_TEAM_MEMBER_ID, 0) != 0 THEN ( SELECT SM.LAST_NAME || ' , ' || SM.FIRST_NAME FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = ( SELECT STAFF_ID FROM TEAM_STAFF_MEMBERS TSM WHERE TEAM_MEMBER_ID = A.PRVS_ALLOC_TO_TEAM_MEMBER_ID)) END AS OFFICERS_NAME FROM ( SELECT ( SELECT STAFF_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_OFFICER, ( SELECT TO_STAFF_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_TO_OFFICER, ( SELECT AGY_LOC_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_AGY_LOC_ID, ( SELECT TO_AGY_LOC_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_TO_AGY_LOC_ID, ( SELECT TEAM_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_TEAM_ID, ( SELECT TO_TEAM_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_TO_TEAM_ID, ( SELECT TEAM_MEMBER_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_TEAM_MEMBER_ID, ( SELECT TO_TEAM_MEMBER_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID ) AS PRVS_ALLOC_TO_TEAM_MEMBER_ID, OCT.*, TAG_LICENCE_GET_REQUIREMENT(OSC.COMM_CONDITION_CODE, OSC.COMM_CONDITION_TYPE, OSC.CATEGORY_TYPE) DESCRIPTION, OSC.OFFENDER_SENT_CONDITION_ID, OSC.COMM_CONDITION_TYPE, OSC.COMM_CONDITION_CODE, OSC.CATEGORY_TYPE, OSC.SENTENCE_SEQ, OSC.OFFENDER_BOOK_ID, OSC.LONG_COMMENT_TEXT FROM ( SELECT OCT.CON_TRANSFER_ID, OCT.OFFENDER_BOOK_ID, OCT.OFFENDER_SENT_CONDITION_ID, OCT.STAFF_ID, OCT.TEAM_ID, OCT.TEAM_MEMBER_ID, OCT.AGY_LOC_ID, OCT.TO_TEAM_ID, OCT.TO_AGY_LOC_ID, OCT.CONDI_STATUS, OCT.CREATE_DATETIME, OCT.CREATE_USER_ID, OCT.MODIFY_DATETIME, OCT.MODIFY_USER_ID, OCT.SEAL_FLAG, OCT.TO_STAFF_ID, OCT.TO_TEAM_MEMBER_ID, OCT.PARENT_CON_TRANSFER_ID, OCT.SENTENCE_SEQ, CASE WHEN COALESCE( (SELECT AGY_LOC_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID), 'A') = 'A' THEN( SELECT TO_AGY_LOC_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) ELSE ( SELECT AGY_LOC_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) END AS RECEIVED_FROM, CASE WHEN COALESCE( (SELECT TEAM_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID), 0) = 0 THEN( SELECT TO_TEAM_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) ELSE ( SELECT TEAM_ID FROM OFFENDER_COND_TRANSFER WHERE CON_TRANSFER_ID = OCT.PARENT_CON_TRANSFER_ID) END AS RECEIVED_FROM_TEAM FROM OFFENDER_COND_TRANSFER OCT, ( SELECT MAX(CON_TRANSFER_ID) MAX_CON_TRANSFER_ID, OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER WHERE OFFENDER_SENT_CONDITION_ID IN ( SELECT OFFENDER_SENT_CONDITION_ID FROM OFFENDER_COND_TRANSFER WHERE CONDI_STATUS = 'TRANSFERRED' ) GROUP BY OFFENDER_SENT_CONDITION_ID ) B WHERE OCT.CON_TRANSFER_ID = B.MAX_CON_TRANSFER_ID AND OCT.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID ) OCT, OFFENDER_SENT_CONDITIONS OSC WHERE OCT.OFFENDER_SENT_CONDITION_ID = OSC.OFFENDER_SENT_CONDITION_ID AND OCT.SENTENCE_SEQ = :SENTENCESEQ AND OCT.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND OSC.COMM_CONDITION_TYPE IN ('CUST', 'NCUS', 'PAR','BAIL') AND OCT.CONDI_STATUS = 'TRANSFERRED' AND OCT.RECEIVED_FROM = :CASELOADID AND ( COALESCE(:TEAMID, 0) = 0 OR OCT.RECEIVED_FROM_TEAM = :TEAMID )) AS A WHERE A.COMM_CONDITION_TYPE = :ORDERTYPE
}
OCONDWAIT_GET_STAFF_ID{
SELECT to_char(SM.STAFF_ID) CODE, (SM.LAST_NAME || ' , ' || SM.FIRST_NAME) DESCRIPTION FROM  STAFF_ACCESSIBLE_CASELOADS SAC, STAFF_MEMBERS SM WHERE  SAC.CASELOAD_ID = :caseLoadID AND SAC.STAFF_ID =SM.STAFF_ID AND SM.STATUS = 'ACTIVE' ORDER BY SM.STAFF_ID ASC
}
OCONDWAIT_GET_TEAM_MEMBERS_ID{
SELECT TO_CHAR(TSM.TEAM_MEMBER_ID) CODE, (SM.LAST_NAME || ' , ' || SM.FIRST_NAME) DESCRIPTION FROM TEAM_STAFF_MEMBERS TSM, STAFF_MEMBERS SM WHERE TEAM_ID = :teamId AND SM.STAFF_ID = TSM.STAFF_ID AND TSM.ACTIVE_FLAG = 'Y' AND SM.STATUS = 'ACTIVE'
}

OCONDWAIT_OFFENDER_COND_TRANSFERINSERT_CASEPLAN{
update offender_case_conditions set team_id = coalesce(:teamId, :toTeamId), team_member_id = coalesce(:teamMemberId, :toTeamMemberId), staff_id = coalesce(:staffId, :toStaffId), modify_datetime =current_timestamp, modify_user_id =:modifyUserId where offender_book_id = :offenderBookId and case_plan_id = ( select case_plan_id from case_plans where offender_book_id = :offenderBookId and case_plan_status = 'ACTIVE') and offender_sent_condition_id =:offenderSentConditionId
}

OCONDAWAIT_TEAM_LOV_FOR_OCONDTRF{
select
	at2.team_code team_code,
	at2.description description ,
	to_char(at2.team_id) code,
	at2.active_flag 
from
	automation_teams at2,
	team_agency_loc tal
where
	tal.team_id = at2.team_id
	and tal.agy_loc_id = :caseLoadId
}
OCONDAWAIT_GET_INST_ASSIGNED_CONDITIONS_FOR_OFFENDERS{
SELECT OCT.CON_TRANSFER_ID ,VHB.INTAKE_AGY_LOC_ID AS AGY_LOC_ID  FROM OFFENDER_COND_TRANSFER OCT, ( SELECT O.OFFENDER_ID , O.LAST_NAME , O.FIRST_NAME , OB.OFFENDER_BOOK_ID, O.OFFENDER_ID_DISPLAY, OB.INTAKE_AGY_LOC_ID, OB.COMMUNITY_ACTIVE_FLAG FROM OFFENDERS O, OFFENDER_BOOKINGS OB WHERE OB.OFFENDER_ID = O.OFFENDER_ID AND OB.COMMUNITY_ACTIVE_FLAG = 'Y') AS VHB WHERE COALESCE(OCT.PARENT_CON_TRANSFER_ID, 0) = 0 AND COALESCE(OCT.AGY_LOC_ID, '') = '' AND VHB.OFFENDER_BOOK_ID = OCT.OFFENDER_BOOK_ID
}

OCONDAWAIT_UPDATE_INST_CONDITIONS_TO_COMM{
update offender_cond_transfer set agy_loc_id = :agyLocId, modify_datetime = current_timestamp, modify_user_id =:modifyUserId where con_transfer_id = :conTransferId 
}
