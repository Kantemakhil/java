-- oms_owner.v_offender_course_events source

CREATE OR REPLACE VIEW oms_owner.v_offender_course_events
AS SELECT NULL::bigint AS event_id,
    opp.offender_book_id,
    substr(
        CASE
            WHEN rc.parent_code::text = 'BOTH'::text THEN tag_prg_prg_event_class(opp.off_prgref_id)
            ELSE rc.parent_code
        END::text, 1, 12) AS event_class,
    substr(COALESCE(ps.program_category, tag_prg_prg_event_type(ps.program_id))::text, 1, 12) AS event_type,
    ca.course_activity_type AS event_sub_type,
    opp.off_prgref_id,
    cs.crs_sch_id AS reference_id,
    cs.crs_sch_id,
    NULL::numeric AS crs_appt_id,
    opp.program_id,
    ca.code AS course_code,
    ca.description,
    cs.crs_acty_id,
    to_char(cs.schedule_date, 'DY'::text) AS weekday,
    cs.schedule_date AS event_date,
    cs.start_time,
    cs.end_time,
        CASE
            WHEN rc.parent_code::text = 'COMM'::text THEN cs.start_time
            ELSE NULL::timestamp without time zone
        END AS in_time,
        CASE
            WHEN rc.parent_code::text = 'COMM'::text THEN cs.end_time
            ELSE NULL::timestamp without time zone
        END AS out_time,
        CASE
            WHEN opp.suspended_flag::text = 'N'::text THEN 'SCH'::text
            ELSE 'CANC'::text
        END AS event_status,
    NULL::text AS event_outcome,
    opp.agy_loc_id,
    ca.internal_location_id AS to_internal_location_id,
    NULL::text AS comment_text,
    NULL::text AS outcome_reason_code,
    NULL::bigint AS piece_work,
    NULL::text AS engagement_code,
    NULL::text AS understanding_code,
    NULL::bigint AS credited_hours,
    opp.agreed_travel_hour,
    NULL::text AS behaviour_code,
    NULL::text AS action_code,
    NULL::date AS sick_note_received_date,
    NULL::date AS sick_note_expiry_date,
    NULL::character varying AS performance_code,
    addr.owner_code AS to_agy_loc_id,
    ca.services_address_id AS to_address_id,
    NULL::text AS performance_desc,
    NULL::text AS event_outcome_desc,
    NULL::bigint AS supervisor_staff_id,
    NULL::text AS unexcused_absence_flag,
        CASE
            WHEN
            CASE
                WHEN rc.parent_code::text = 'BOTH'::text THEN tag_prg_prg_event_class(opp.off_prgref_id)
                ELSE rc.parent_code
            END::text = 'EXT_MOV'::text THEN 'OUT'::text
            ELSE NULL::text
        END AS direction_code,
    NULL::timestamp without time zone AS ext_move_out_time,
    NULL::timestamp without time zone AS ext_move_in_time,
        CASE
            WHEN
            CASE
                WHEN rc.parent_code::text = 'BOTH'::text THEN tag_prg_prg_event_class(opp.off_prgref_id)
                ELSE rc.parent_code
            END::text = 'EXT_MOV'::text THEN cs.start_time
            ELSE NULL::timestamp without time zone
        END AS schedule_movement_time,
    cs.session_no,
    'V_CRS_GRP'::text AS record_source,
    0 AS check_sum
   FROM reference_codes rc,
    program_services ps,
    offender_program_profiles opp,
    offender_bookings ob,
    course_schedules cs,
    course_activities ca
     LEFT JOIN addresses addr ON ca.services_address_id = addr.address_id
  WHERE opp.crs_acty_id = cs.crs_acty_id AND ca.crs_acty_id = opp.crs_acty_id AND ca.course_activity_type IS NOT NULL AND ca.course_activity_type::text <> ''::text AND opp.offender_program_status::text = 'ALLOC'::text AND ca.program_id = ps.program_id AND rc.domain::text = 'PS_CATEGORY'::text AND rc.code::text = COALESCE(ps.program_category, tag_prg_prg_event_type(ps.program_id))::text AND (rc.parent_code::text = ANY (ARRAY['COMM'::character varying::text, 'INT_MOV'::character varying::text, 'BOTH'::character varying::text, 'EXT_MOV'::character varying::text])) AND ca.active_flag::text = 'Y'::text AND ob.offender_book_id = opp.offender_book_id AND COALESCE(cs.catch_up_crs_sch_id::text, ''::text) = ''::text AND (COALESCE(cs.session_no::text, ''::text) = ''::text OR COALESCE(opp.start_session_no::text, ''::text) = ''::text OR cs.session_no >= opp.start_session_no) AND COALESCE(opp.offender_start_date, cs.schedule_date) <= cs.schedule_date AND COALESCE(COALESCE(opp.offender_end_date, ca.schedule_end_date), cs.schedule_date) >= cs.schedule_date AND NOT (EXISTS ( SELECT 'x'::text AS text
           FROM offender_course_attendances oca
          WHERE oca.offender_book_id = opp.offender_book_id AND oca.event_date = cs.schedule_date AND oca.crs_sch_id = cs.crs_sch_id))
UNION ALL
 SELECT NULL::bigint AS event_id,
    opp.offender_book_id,
    substr(
        CASE
            WHEN rc.parent_code::text = 'BOTH'::text THEN tag_prg_prg_event_class(opp.off_prgref_id)
            ELSE rc.parent_code
        END::text, 1, 12) AS event_class,
    substr(COALESCE(ps.program_category, tag_prg_prg_event_type(ps.program_id))::text, 1, 12) AS event_type,
    ca.course_activity_type AS event_sub_type,
    opp.off_prgref_id,
    voca.crs_appt_id AS reference_id,
    NULL::bigint AS crs_sch_id,
    voca.crs_appt_id,
    opp.program_id,
    ca.code AS course_code,
    ca.description,
    opp.crs_acty_id,
    to_char(voca.schedule_date, 'DY'::text) AS weekday,
    voca.schedule_date AS event_date,
    voca.start_time,
    voca.end_time,
        CASE
            WHEN rc.parent_code::text = 'COMM'::text THEN voca.start_time
            ELSE NULL::date::timestamp without time zone
        END AS in_time,
        CASE
            WHEN rc.parent_code::text = 'COMM'::text THEN voca.end_time
            ELSE NULL::date::timestamp without time zone
        END AS out_time,
        CASE
            WHEN opp.suspended_flag::text = 'N'::text THEN 'SCH'::text
            ELSE 'CANC'::text
        END AS event_status,
    NULL::text AS event_outcome,
    opp.agy_loc_id,
    ca.internal_location_id AS to_internal_location_id,
    NULL::text AS comment_text,
    NULL::text AS outcome_reason_code,
    NULL::bigint AS piece_work,
    NULL::text AS engagement_code,
    NULL::text AS understanding_code,
    NULL::bigint AS credited_hours,
    NULL::numeric AS agreed_travel_hour,
    NULL::text AS behaviour_code,
    NULL::text AS action_code,
    NULL::date AS sick_note_received_date,
    NULL::date AS sick_note_expiry_date,
    NULL::character varying AS performance_code,
    addr.owner_code AS to_agy_loc_id,
    ca.services_address_id AS to_address_id,
    NULL::text AS performance_desc,
    NULL::text AS event_outcome_desc,
    NULL::bigint AS supervisor_staff_id,
    NULL::text AS unexcused_absence_flag,
        CASE
            WHEN
            CASE
                WHEN rc.parent_code::text = 'BOTH'::text THEN tag_prg_prg_event_class(opp.off_prgref_id)
                ELSE rc.parent_code
            END::text = 'EXT_MOV'::text THEN 'OUT'::text
            ELSE NULL::text
        END AS direction_code,
    NULL::timestamp without time zone AS ext_move_out_time,
    NULL::timestamp without time zone AS ext_move_in_time,
        CASE
            WHEN
            CASE
                WHEN rc.parent_code::text = 'BOTH'::text THEN tag_prg_prg_event_class(opp.off_prgref_id)
                ELSE rc.parent_code
            END::text = 'EXT_MOV'::text THEN voca.start_time
            ELSE NULL::date::timestamp without time zone
        END AS schedule_movement_time,
    NULL::integer AS session_no,
    'V_CRS_APPT'::text AS record_source,
    0 AS check_sum
   FROM v_offender_course_appts_2 voca,
    reference_codes rc,
    program_services ps,
    offender_program_profiles opp,
    offender_bookings bkg,
    course_activities ca
     LEFT JOIN addresses addr ON ca.services_address_id = addr.address_id
  WHERE voca.off_prgref_id = opp.off_prgref_id AND opp.offender_program_status::text = 'ALLOC'::text AND voca.schedule_date >= opp.offender_start_date AND voca.schedule_date <= COALESCE(COALESCE(opp.offender_end_date, ca.schedule_end_date), to_date('30001231'::text, 'YYYYMMDD'::text)::timestamp without time zone) AND ca.crs_acty_id = opp.crs_acty_id AND ca.course_activity_type IS NOT NULL AND ca.course_activity_type::text <> ''::text AND ca.program_id = ps.program_id AND rc.domain::text = 'PS_CATEGORY'::text AND (rc.parent_code::text = ANY (ARRAY['COMM'::character varying::text, 'INT_MOV'::character varying::text, 'BOTH'::character varying::text, 'EXT_MOV'::character varying::text])) AND rc.code::text = COALESCE(ps.program_category, tag_prg_prg_event_type(ps.program_id))::text AND bkg.offender_book_id = opp.offender_book_id AND NOT (EXISTS ( SELECT 'x'::text AS text
           FROM offender_course_attendances oca
          WHERE oca.offender_book_id = opp.offender_book_id AND oca.event_date = voca.schedule_date AND oca.crs_appt_id = voca.crs_appt_id))
UNION ALL
 SELECT oca.event_id,
    oca.offender_book_id,
    oca.event_class,
    oca.event_type,
    oca.event_sub_type,
    oca.off_prgref_id,
    oca.reference_id,
    oca.crs_sch_id,
    oca.crs_appt_id,
    opp.program_id,
    ca.code AS course_code,
    ca.description,
    oca.crs_acty_id,
    to_char(oca.event_date, 'DY'::text) AS weekday,
    oca.event_date,
    oca.start_time,
    oca.end_time,
    oca.in_time,
    oca.out_time,
    oca.event_status,
    oca.event_outcome,
    oca.agy_loc_id,
    oca.to_internal_location_id,
    oca.comment_text,
    oca.outcome_reason_code,
    oca.piece_work,
    oca.engagement_code,
    oca.understanding_code,
    oca.credited_hours,
    oca.agreed_travel_hour,
    oca.behaviour_code,
    oca.action_code,
    oca.sick_note_received_date,
    oca.sick_note_expiry_date,
    oca.performance_code,
    oca.to_agy_loc_id,
    oca.to_address_id,
    substr(oms_miscellaneous_getdesccode('PERFORMANCE'::character varying, oca.performance_code)::text, 1, 40) AS performance_desc,
    substr(oms_miscellaneous_getdesccode('OUTCOMES'::character varying, oca.event_outcome)::text, 1, 40) AS event_outcome_desc,
    oca.supervisor_staff_id,
    oca.unexcused_absence_flag,
    oca.direction_code,
        CASE
            WHEN oca.event_class::text = 'EXT_MOV'::text THEN tag_prg_external_movement_time(oca.event_id, 'OUT'::character varying)
            ELSE NULL::timestamp without time zone
        END AS ext_move_out_time,
        CASE
            WHEN oca.event_class::text = 'EXT_MOV'::text THEN tag_prg_external_movement_time(oca.event_id, 'IN'::character varying)
            ELSE NULL::timestamp without time zone
        END AS ext_move_in_time,
        CASE
            WHEN oca.direction_code::text = 'OUT'::text THEN oca.start_time
            WHEN oca.direction_code::text = 'IN'::text THEN oca.end_time
            ELSE NULL::timestamp without time zone
        END AS schedule_movement_time,
    oca.session_no,
    'CRS_ATT'::text AS record_source,
    tag_schedule_check_sum(COALESCE(oca.modify_datetime, oca.create_datetime)) AS check_sum
   FROM offender_bookings bkg,
    offender_course_attendances oca
     LEFT JOIN offender_program_profiles opp ON oca.off_prgref_id = opp.off_prgref_id
     LEFT JOIN course_activities ca ON opp.crs_acty_id = ca.crs_acty_id
  WHERE oca.offender_book_id = bkg.offender_book_id AND oca.event_status::text <> 'DEL'::text;