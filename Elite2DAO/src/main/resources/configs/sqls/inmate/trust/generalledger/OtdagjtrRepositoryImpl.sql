
OTDAGJTR_FIND_CGFKGLTXNTXNTYPE {
SELECT TXN_TYPE.TXN_TYPE CODE , TXN_TYPE.DESCRIPTION DESCRIPTION   FROM TRANSACTION_TYPES TXN_TYPE  WHERE TXN_TYPE IN
(SELECT TXN_TYPE FROM TRANSACTION_OPERATIONS WHERE MODULE_NAME = 'OTDAGJTR' AND CASELOAD_ID = :caseloadId ) 
 AND TXN_TYPE.CASELOAD_TYPE = :caseloadType    AND TXN_TYPE.ACTIVE_FLAG = 'Y'  ORDER BY TXN_TYPE.LIST_SEQ , TXN_TYPE.TXN_TYPE 	
}

OTDAGJTR_FIND_CGFKGLTXNPAYEEPERSONID {
 	SELECT PER.PERSON_ID  ,PER.LAST_NAME ,PER.FIRST_NAME  FROM   PERSONS PER WHERE PER.PERSON_ID = :personId
}

OTDAGJTR_FIND_CGFKGLTXNPAYEECORPORATEID {
 	SELECT CORP.CORPORATE_ID  , CORP.CORPORATE_NAME FROM 
(SELECT CRP.CORPORATE_ID , CRP.CORPORATE_NAME , CRP.CASELOAD_ID FROM CORPORATES CRP , CORPORATE_TYPES CTP WHERE 
CRP.CORPORATE_ID = CTP.CORPORATE_ID AND CTP.CORPORATE_TYPE NOT IN ('VENDOR' , 'PROGRAM' ) UNION 
 SELECT CRP2.CORPORATE_ID , CRP2.CORPORATE_NAME , CRP2.CASELOAD_ID FROM CORPORATES CRP2 
WHERE NOT EXISTS (SELECT 1 FROM CORPORATE_TYPES CTP2 WHERE CRP2.CORPORATE_ID = CTP2.CORPORATE_ID ) ) CORP WHERE CORP.CORPORATE_ID = :corporateId
}

OTDAGJTR_GLTXN_FIND_GL_TRANSACTIONS {
 	SELECT TXN_ID ,TXN_ENTRY_SEQ ,GL_ENTRY_SEQ ,ACCOUNT_PERIOD_ID ,ACCOUNT_CODE ,TXN_ENTRY_DATE ,TXN_TYPE ,TXN_POST_USAGE ,CASELOAD_ID ,OFFENDER_ID ,OFFENDER_BOOK_ID ,TXN_ENTRY_AMOUNT ,TXN_ENTRY_DESC ,TXN_REFERENCE_NUMBER ,BANK_STATEMENT_DATE ,RECON_CLEAR_FLAG ,TXN_REVERSED_FLAG ,REVERSED_TXN_ID ,PAYEE_PERSON_ID ,REVERSED_TXN_ENTRY_SEQ ,REVERSED_GL_ENTRY_SEQ ,PAYEE_CORPORATE_ID ,PAYEE_NAME_TEXT ,TXN_OBJECT_CODE ,LIST_SEQ ,TXN_OBJECT_ID ,CREATE_USER_ID ,CREATE_DATE ,INFO_NUMBER ,DEDUCTION_ID ,TXN_ENTRY_TIME ,RECEIPT_NUMBER ,REVERSAL_REASON_CODE ,TXN_LOC_ID ,PAYEE_CLEAR_FLAG ,CREATE_DATETIME ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM GL_TRANSACTIONS  /* where  */
}
OTDAGJTR_GLTXN_INSERT_GL_TRANSACTIONS {
 insert into GL_TRANSACTIONS(TXN_ID , TXN_ENTRY_SEQ , GL_ENTRY_SEQ , ACCOUNT_PERIOD_ID , ACCOUNT_CODE , TXN_ENTRY_DATE , TXN_TYPE , TXN_POST_USAGE , CASELOAD_ID , OFFENDER_ID , OFFENDER_BOOK_ID , TXN_ENTRY_AMOUNT , TXN_ENTRY_DESC , TXN_REFERENCE_NUMBER , BANK_STATEMENT_DATE , RECON_CLEAR_FLAG , TXN_REVERSED_FLAG , REVERSED_TXN_ID , PAYEE_PERSON_ID , REVERSED_TXN_ENTRY_SEQ , REVERSED_GL_ENTRY_SEQ , PAYEE_CORPORATE_ID , PAYEE_NAME_TEXT , TXN_OBJECT_CODE , LIST_SEQ , TXN_OBJECT_ID , CREATE_USER_ID , CREATE_DATE , INFO_NUMBER , DEDUCTION_ID , TXN_ENTRY_TIME , RECEIPT_NUMBER , REVERSAL_REASON_CODE , TXN_LOC_ID , PAYEE_CLEAR_FLAG , CREATE_DATETIME , MODIFY_DATETIME , SEAL_FLAG ) values(:txnId , :txnEntrySeq , :glEntrySeq , :accountPeriodId , :accountCode , :txnEntryDate , :txnType , :txnPostUsage , :caseloadId , :offenderId , :offenderBookId , :txnEntryAmount , :txnEntryDesc , :txnReferenceNumber , :bankStatementDate , :reconClearFlag , :txnReversedFlag , :reversedTxnId , :payeePersonId , :reversedTxnEntrySeq , :reversedGlEntrySeq , :payeeCorporateId , :payeeNameText , :txnObjectCode , :listSeq , :txnObjectId , :createUserId , :createDate , :infoNumber , :deductionId , :txnEntryTime , :receiptNumber , :reversalReasonCode , :txnLocId , :payeeClearFlag , current_timestamp , null , :sealFlag )
}

OTDAGJTR_SYSPFL_FIND_SYSTEM_PROFILES {
 	SELECT PROFILE_TYPE ,PROFILE_CODE ,DESCRIPTION ,PROFILE_VALUE ,PROFILE_VALUE_2 ,MODIFY_USER_ID ,OLD_TABLE_NAME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG   FROM SYSTEM_PROFILES  /* where  */
}
OTDAGJTR_SYSPFL_INSERT_SYSTEM_PROFILES {
 insert into GL_TRANSACTIONS(TXN_ID , TXN_ENTRY_SEQ , GL_ENTRY_SEQ , ACCOUNT_PERIOD_ID , ACCOUNT_CODE , TXN_ENTRY_DATE , TXN_TYPE , TXN_POST_USAGE , CASELOAD_ID , OFFENDER_ID , OFFENDER_BOOK_ID , TXN_ENTRY_AMOUNT , TXN_ENTRY_DESC , TXN_REFERENCE_NUMBER , BANK_STATEMENT_DATE , RECON_CLEAR_FLAG , TXN_REVERSED_FLAG , REVERSED_TXN_ID , PAYEE_PERSON_ID , REVERSED_TXN_ENTRY_SEQ , REVERSED_GL_ENTRY_SEQ , PAYEE_CORPORATE_ID , PAYEE_NAME_TEXT , TXN_OBJECT_CODE , LIST_SEQ , TXN_OBJECT_ID , CREATE_USER_ID , CREATE_DATE , INFO_NUMBER , DEDUCTION_ID , TXN_ENTRY_TIME , RECEIPT_NUMBER , REVERSAL_REASON_CODE , TXN_LOC_ID , PAYEE_CLEAR_FLAG , CREATE_DATETIME , MODIFY_DATETIME , SEAL_FLAG ) values(:txnId , :txnEntrySeq , :glEntrySeq , :accountPeriodId , :accountCode , :txnEntryDate , :txnType , :txnPostUsage , :caseloadId , :offenderId , :offenderBookId , :txnEntryAmount , :txnEntryDesc , :txnReferenceNumber , :bankStatementDate , :reconClearFlag , :txnReversedFlag , :reversedTxnId , :payeePersonId , :reversedTxnEntrySeq , :reversedGlEntrySeq , :payeeCorporateId , :payeeNameText , :txnObjectCode , :listSeq , :txnObjectId , :createUserId , :createDate , :infoNumber , :deductionId , :txnEntryTime , :receiptNumber , :reversalReasonCode , :txnLocId , :payeeClearFlag , current_timestamp , null , :sealFlag )
}

OTDAGJTR_SYSPFL_DELETE_SYSTEM_PROFILES { 
	DELETE FROM SYSTEM_PROFILES/* where */
}


OTDAGJTR_CGFKCHK_GL_TXN_GL_TXN_CORP_F8_ {
	SELECT CORP.CORPORATE_NAME FROM   CORPORATES CORP WHERE  CORP.CORPORATE_ID = :PAYEECORPORATEID
}

OTDAGJTR_CGFKCHK_GL_TXN_GL_TXN_PER_F7_ {
	SELECT PER.LAST_NAME ,PER.FIRST_NAME FROM   PERSONS PER WHERE  PER.PERSON_ID = :PAYEEPERSONID
}

OTDAGJTR_CGFKCHK_GL_TXN_GL_TXN_TXN_TYP_ {
	SELECT TXN_TYPE.DESCRIPTION FROM   TRANSACTION_TYPES TXN_TYPE WHERE  TXN_TYPE.TXN_TYPE = :TXNTYPE AND     TXN_TYPE IN (SELECT  TXN_TYPE FROM TRANSACTION_OPERATIONS WHERE  MODULE_NAME = 'OTDAGJTR' AND    CASELOAD_ID = :CASELOADID) AND TXN_TYPE.CASELOAD_TYPE = :CASELOADTYPE
}

OTDAGJTR_CGFKCHK_GL_TXN_GL_TXN_AC_CODE_ {
	SELECT AC_CODE.ACCOUNT_NAME ,AC_CODE.TXN_POSTING_TYPE FROM   ACCOUNT_CODES AC_CODE WHERE  AC_CODE.ACCOUNT_CODE = :ACCOUNTCODE AND    AC_CODE.CASELOAD_TYPE = :CASELOADTYPE
}

OTDAGJTR_CGWHEN_NEW_FORM_INSTANCE_ {
	SELECT  SYSDATE, USER FROM    SYS.DUAL
}

OTDAGJTR_CGFKCHK_GL_TXN1_GL_TXN_AC_COD_ {
	SELECT AC_CODE1.ACCOUNT_NAME ,AC_CODE1.TXN_POSTING_TYPE FROM   ACCOUNT_CODES AC_CODE1 WHERE  AC_CODE1.ACCOUNT_CODE = :ACCOUNTCODE AND    AC_CODE1.CASELOAD_TYPE = :CASELOADTYPE
}

OTDAGJTR_CGRICHK_GL_TRANSACTIONS_ {
	SELECT  '1' FROM    GL_TRANSACTIONS GL_TXN WHERE   (GL_TXN.REVERSED_TXN_ID = P_TXN_ID OR (GL_TXN.REVERSED_TXN_ID IS NULL AND P_TXN_ID IS NULL )) AND     (GL_TXN.REVERSED_TXN_ENTRY_SEQ = P_TXN_ENTRY_SEQ OR (GL_TXN.REVERSED_TXN_ENTRY_SEQ IS NULL AND P_TXN_ENTRY_SEQ IS NULL )) AND     (GL_TXN.REVERSED_GL_ENTRY_SEQ = P_GL_ENTRY_SEQ OR (GL_TXN.REVERSED_GL_ENTRY_SEQ IS NULL AND P_GL_ENTRY_SEQ IS NULL ))
}
GET_PERSON_NAME {
SELECT TRUST_GJ_GET_PERSON_NAME (:personId) PERSON_NAME FROM DUAL
}
GET_CORPORATE_NAME {
SELECT TRUST_GJ_GET_CORPORATE_NAME (:corporateName) CORPORATE_NAME FROM DUAL
}
TRUST_GJ_GET_LAST_CLOSED_PERIOD {
	select trust_gj_get_last_closed_period (:caseloadId) from dual
}
TRUST_GJ_GET_ALLOWED_BACK_DATED_PERIOD {
select trust_gj_get_allowed_back_dated_period (:caseloadId) from dual
}
TRUST_GJ_GET_ACCOUNT_PERIOD {
select trust_gj_get_account_period (:txnEntryDate::date) from dual
}
CHECK_PERIOD_DAYS {
SELECT coalesce(COUNT(*), 0)  FROM CASELOAD_ACCOUNT_SUMMARIES  WHERE CASELOAD_ID = :caseloadId  AND ACCOUNT_PERIOD_ID = :lvEnterAccountPeriod AND ACCOUNT_PERIOD_ID <>
             (SELECT MIN(ACCOUNT_PERIOD_ID) FROM ACCOUNT_PERIODS  WHERE START_DATE IS NOT NULL   AND END_DATE IS NOT NULL)
}
C_ACCOUNT_STATUS {
SELECT cap.account_period_status FROM caseload_account_periods cap WHERE cap.account_period_id = :lvEnterAccountPeriod  AND cap.caseload_id = :caseloadId
}
TRUST_GJ_GET_PERIOD_START_DATE {
SELECT trust_gj_get_period_start_date(:lvEnterAccountPeriod) FROM dual
}
TRUST_GJ_GET_PERIOD_END_DATE {
SELECT trust_gj_get_period_end_date(:lvLastClosedPeriod) FROM dual
}
GET_TXN_OP {
SELECT txnop.dr_account_code, txnop.cr_account_code, txnop.cheque_production_flag   FROM transaction_operations txnop  WHERE module_name = 'OTDAGJTR' AND txn_type = :txnType
 AND txn_operation_seq = 1  AND caseload_id = :caseloadId
 }
GET_ACCOUNT_TYPE_AND_POSTING_TYPE {
SELECT acct_code.account_name, acct_code.txn_posting_type FROM account_codes acct_code WHERE account_code = :acct AND caseload_type = :caseloadType
}

GET_CURRENT_BALANCE_FN {
SELECT curr_acct.current_balance FROM caseload_current_accounts_fn(:userId) curr_acct WHERE account_code = :acct AND caseload_id = :caseloadId
}
GET_PRODUCTION_AND_PAYEE_FLAG {
SELECT coalesce (tno.cheque_production_flag, 'N') cheque_production_flag,  coalesce (tno.cheque_payee_type, 'N') cheque_payee_type FROM transaction_types tt, transaction_operations tno
WHERE tt.txn_type = :txnType AND tt.txn_type = tno.txn_type AND tno.module_name = 'OTDAGJTR' AND tt.caseload_type = :caseloadType
AND tno.caseload_id = :caseloadId AND txn_operation_seq = 1
}
DEFAULT_CORP_PERSON {
SELECT coalesce (payee_person_id, 0) payee_person_id, coalesce (payee_corporate_id, 0) payee_corporate_id FROM transaction_payees WHERE default_payee_flag = 'Y' AND txn_type = :txnType
}
PR_GET_OFFSET_ACCOUNTS {
SELECT txnop.dr_account_code, txnop.cr_account_code FROM transaction_operations txnop WHERE txnop.module_name = 'OTDAGJTR' AND txnop.txn_type = :txnType AND txnop.txn_operation_seq > 1
 AND (EXISTS (select 1 from account_codes ac where ac.account_code = txnop.dr_account_code and ac.posting_status_flag = 'Y' and ac.caseload_type 
 = (select caseload_type from caseloads where caseload_id = :caseloadId)) or txnop.dr_account_code is null) AND (EXISTS
 (select 1 from account_codes ac where ac.account_code = txnop.cr_account_code and ac.posting_status_flag = 'Y' and ac.caseload_type 
 = (select caseload_type from caseloads where caseload_id = :caseloadId)) or txnop.cr_account_code is null) AND txnop.caseload_id = :caseloadId
}
GEN_TRUST_TRANS_PR {
SELECT NEXTVAL('#SEQ') NEXT_SEQ FROM DUAL 
} 

 OMS_OWNER_TRUST_INSERT_INTO_CHEQUE_DATA {
 CALL OMS_OWNER.TRUST.INSERT_INTO_CHEQUE_DATA(:P_CSLD_ID, :P_TRANS_NUMBER, :P_TRANS_AMOUNT, :P_CHEQUE_FLAG, :P_START_TXN_ID, :P_END_TXN_ID, :P_PERS_PAYEE_ID, :P_CORP_PAYEE_ID, :P_PAYEE_NAME, :P_OFFENDER_PAYEE, :P_SINGLE_ENTRY, :P_BANK_ACT_CODE, :P_MODULE_NAME, :P_TRANS_TYPE)
 }
 OMS_OWNER_TRUST_GJ_REOPEN_CLOSED_PERIOD {
 CALL OMS_OWNER.TRUST_GJ.REOPEN_CLOSED_PERIOD(:P_CASELOAD_ID, :P_TXN_DATE)
 }