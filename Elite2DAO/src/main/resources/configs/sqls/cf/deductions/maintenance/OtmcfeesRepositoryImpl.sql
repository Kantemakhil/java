
OTMCFEES_FIND_CGFKCSLDDPPAYEECORPORATEI {
 	SELECT CORP.CORPORATE_ID  PAYEE_CORPORATE_ID  /* CG$FK */        ,CORP.CORPORATE_NAME  DSP_CORPORATE_NAME FROM (SELECT CRP.CORPORATE_ID , CRP.CORPORATE_NAME        FROM CORPORATES CRP , CORPORATE_TYPES CTP       WHERE CRP.CORPORATE_ID = CTP.CORPORATE_ID        AND CTP.CORPORATE_TYPE NOT IN ('VENDOR' ,'PROGRAM' )       UNION       SELECT CORPORATE_ID ,CORPORATE_NAME       FROM CORPORATES CRP2       WHERE NOT EXISTS ( SELECT 1 FROM CORPORATE_TYPES CTP2 WHERE CRP2.CORPORATE_ID = CTP2.CORPORATE_ID  )                      ) CORP
}

OTMCFEES_FIND_CGFKTRANFDRECEIPTDEDUCTION {
 	SELECT DED_TYPE2.DEDUCTION_TYPE  CODE,DED_TYPE2.DEDUCTION_DESC  DESCRIPTION FROM   DEDUCTION_TYPES DED_TYPE2
 	WHERE   DED_TYPE2.DEDUCTION_CATEGORY IN ('FXOB' , 'CROB' ) AND CASELOAD_CODE IN ('BOTH' , :caseLoadType) 
 	AND ((ACTIVE_FLAG ='Y' AND EXPIRY_DATE IS NULL ))
}

OTMCFEES_FIND_CGFKCSLDDPDEDUCTIONTYPE {
-- 	SELECT DED_TYPE.DEDUCTION_TYPE  CODE  ,DED_TYPE.DEDUCTION_DESC  DESCRIPTION FROM   DEDUCTION_TYPES DED_TYPE WHERE   DED_TYPE.DEDUCTION_CATEGORY = 'CTF' AND DED_TYPE.CASELOAD_CODE IN  ('BOTH' ,:caseLoadType ) AND ((DED_TYPE.ACTIVE_FLAG = 'Y' AND EXPIRY_DATE IS NULL )) ORDER BY  DED_TYPE.DEDUCTION_TYPE ASC

SELECT
    ded_type.deduction_type   code,
    ded_type.deduction_desc   description
FROM
    deduction_types ded_type
WHERE
    ded_type.deduction_category = 'CTF'
    AND ded_type.caseload_code IN (
        'COMM',
        :caseLoadType
    )
    AND ( ( ded_type.active_flag = 'Y'
            AND expiry_date IS NULL ) )
ORDER BY
    ded_type.deduction_type ASC
}

OTMCFEES_FIND_CGFKCSLDDPACCOUNTCODE {
 	SELECT AC_CODE.ACCOUNT_CODE,AC_CODE.ACCOUNT_NAME  DESCRIPTION FROM   ACCOUNT_CODES AC_CODE WHERE   EXISTS  ( SELECT 1 FROM  ACCOUNT_CODES AC_CODE1 ,     CASELOAD_DEDUCTION_PROFILES CA   WHERE CA.ACCOUNT_CODE = AC_CODE1.ACCOUNT_CODE  AND AC_CODE.CASELOAD_TYPE = :caseLoadType )  AND POSTING_STATUS_FLAG = 'Y'  AND SUB_ACCOUNT_TYPE IS NULL
}

OTMCFEES_CSLDDP_FIND_CASELOAD_DEDUCTION_PROFILES {
SELECT delay_recapture, active_flag, caseload_id, deduction_type, effective_date, fifo_flag, fo_al_all_offender_flag, percentage, internal_priority_no, external_priority_no, to_char(account_code) nbtAccountCode, co_limit_amount, co_credit_when_indigent_flag, max_monthly_amount, max_total_amount, expiry_date, payee_person_id, payee_corporate_id, modify_user_id, modify_date, list_seq, flat_rate, minimum_trust_balance, indigent_mandatory_flag, comm_condition_type, comm_condition_code, max_recursive_amount, create_datetime, create_user_id, modify_datetime, category_type, seal_flag 
FROM caseload_deduction_profiles where 
}
OTMCFEES_CSLDDP_INSERT_CASELOAD_DEDUCTION_PROFILES {
--	INSERT INTO CASELOAD_DEDUCTION_PROFILES(DELAY_RECAPTURE ,ACTIVE_FLAG ,CASELOAD_ID ,DEDUCTION_TYPE ,EFFECTIVE_DATE ,FIFO_FLAG ,FO_AL_ALL_OFFENDER_FLAG ,PERCENTAGE ,INTERNAL_PRIORITY_NO ,EXTERNAL_PRIORITY_NO ,ACCOUNT_CODE ,CO_LIMIT_AMOUNT ,CO_CREDIT_WHEN_INDIGENT_FLAG ,MAX_MONTHLY_AMOUNT ,MAX_TOTAL_AMOUNT ,EXPIRY_DATE ,PAYEE_PERSON_ID ,PAYEE_CORPORATE_ID ,MODIFY_USER_ID ,MODIFY_DATE ,LIST_SEQ ,FLAT_RATE ,MINIMUM_TRUST_BALANCE ,INDIGENT_MANDATORY_FLAG ,COMM_CONDITION_TYPE ,COMM_CONDITION_CODE ,MAX_RECURSIVE_AMOUNT ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,CATEGORY_TYPE ,SEAL_FLAG ) VALUES(:delayRecapture ,:activeFlag ,:caseloadId ,:deductionType ,:effectiveDate ,:fifoFlag ,:foAlAllOffenderFlag ,:percentage ,:internalPriorityNo ,:externalPriorityNo ,:accountCode ,:coLimitAmount ,:coCreditWhenIndigentFlag ,:maxMonthlyAmount ,:maxTotalAmount ,:expiryDate ,:payeePersonId ,:payeeCorporateId ,:modifyUserId ,:modifyDate ,:listSeq ,:flatRate ,:minimumTrustBalance ,:indigentMandatoryFlag ,:commConditionType ,:commConditionCode ,:maxRecursiveAmount ,:createDatetime ,:createUserId ,:modifyDatetime ,:categoryType ,:sealFlag )
	 insert into CASELOAD_DEDUCTION_PROFILES(DELAY_RECAPTURE , ACTIVE_FLAG , CASELOAD_ID , DEDUCTION_TYPE , EFFECTIVE_DATE , FIFO_FLAG , 
	 FO_AL_ALL_OFFENDER_FLAG , PERCENTAGE , INTERNAL_PRIORITY_NO , EXTERNAL_PRIORITY_NO , ACCOUNT_CODE , CO_LIMIT_AMOUNT , CO_CREDIT_WHEN_INDIGENT_FLAG
	 , MAX_MONTHLY_AMOUNT , MAX_TOTAL_AMOUNT , EXPIRY_DATE , PAYEE_PERSON_ID , PAYEE_CORPORATE_ID , MODIFY_DATE , LIST_SEQ , FLAT_RATE , 
	 MINIMUM_TRUST_BALANCE , INDIGENT_MANDATORY_FLAG , COMM_CONDITION_TYPE , COMM_CONDITION_CODE , MAX_RECURSIVE_AMOUNT , CREATE_DATETIME , 
	 CREATE_USER_ID , MODIFY_DATETIME , CATEGORY_TYPE , SEAL_FLAG ) values(:delayRecapture , :activeFlag , :caseloadId , :deductionType , :effectiveDate
	 , :fifoFlag , :foAlAllOffenderFlag , :percentage , :internalPriorityNo , :externalPriorityNo , :accountCode , :coLimitAmount , 
	 :coCreditWhenIndigentFlag , :maxMonthlyAmount , :maxTotalAmount , :expiryDate , :payeePersonId , :payeeCorporateId , :modifyDate ,
	 :listSeq , :flatRate , :minimumTrustBalance , :indigentMandatoryFlag , :commConditionType , :commConditionCode , :maxRecursiveAmount ,
	 current_timestamp , :createUserId , current_timestamp , :categoryType , :sealFlag )
}

OTMCFEES_CSLDDP_UPDATE_CASELOAD_DEDUCTION_PROFILES {
--	UPDATE CASELOAD_DEDUCTION_PROFILES set DELAY_RECAPTURE  = :delayRecapture ,ACTIVE_FLAG  = :activeFlag ,CASELOAD_ID  = :caseloadId ,DEDUCTION_TYPE  = :deductionType ,EFFECTIVE_DATE  = :effectiveDate ,FIFO_FLAG  = :fifoFlag ,FO_AL_ALL_OFFENDER_FLAG  = :foAlAllOffenderFlag ,PERCENTAGE  = :percentage ,INTERNAL_PRIORITY_NO  = :internalPriorityNo ,EXTERNAL_PRIORITY_NO  = :externalPriorityNo ,ACCOUNT_CODE  = :accountCode ,CO_LIMIT_AMOUNT  = :coLimitAmount ,CO_CREDIT_WHEN_INDIGENT_FLAG  = :coCreditWhenIndigentFlag ,MAX_MONTHLY_AMOUNT  = :maxMonthlyAmount ,MAX_TOTAL_AMOUNT  = :maxTotalAmount ,EXPIRY_DATE  = :expiryDate ,PAYEE_PERSON_ID  = :payeePersonId ,PAYEE_CORPORATE_ID  = :payeeCorporateId ,MODIFY_USER_ID  = :modifyUserId ,MODIFY_DATE  = :modifyDate ,LIST_SEQ  = :listSeq ,FLAT_RATE  = :flatRate ,MINIMUM_TRUST_BALANCE  = :minimumTrustBalance ,INDIGENT_MANDATORY_FLAG  = :indigentMandatoryFlag ,COMM_CONDITION_TYPE  = :commConditionType ,COMM_CONDITION_CODE  = :commConditionCode ,MAX_RECURSIVE_AMOUNT  = :maxRecursiveAmount ,CREATE_DATETIME  = :createDatetime ,CREATE_USER_ID  = :createUserId ,MODIFY_DATETIME  = :modifyDatetime ,CATEGORY_TYPE  = :categoryType ,SEAL_FLAG  = :sealFlag  where CASELOAD_ID=:caseloadId AND DEDUCTION_TYPE=:deductionType
	update CASELOAD_DEDUCTION_PROFILES set DELAY_RECAPTURE = :delayRecapture , ACTIVE_FLAG = :activeFlag , CASELOAD_ID = :caseloadId ,
	DEDUCTION_TYPE = :deductionType , EFFECTIVE_DATE = :effectiveDate , FIFO_FLAG = :fifoFlag , FO_AL_ALL_OFFENDER_FLAG = :foAlAllOffenderFlag , 
	PERCENTAGE = :percentage , INTERNAL_PRIORITY_NO = :internalPriorityNo , EXTERNAL_PRIORITY_NO = :externalPriorityNo , ACCOUNT_CODE = :accountCode , 
	CO_LIMIT_AMOUNT = :coLimitAmount , CO_CREDIT_WHEN_INDIGENT_FLAG = :coCreditWhenIndigentFlag , MAX_MONTHLY_AMOUNT = :maxMonthlyAmount ,
	MAX_TOTAL_AMOUNT = :maxTotalAmount , EXPIRY_DATE = :expiryDate , PAYEE_PERSON_ID = :payeePersonId , PAYEE_CORPORATE_ID = :payeeCorporateId , 
	MODIFY_USER_ID = :modifyUserId , MODIFY_DATE = :modifyDate , LIST_SEQ = :listSeq , FLAT_RATE = :flatRate ,
	MINIMUM_TRUST_BALANCE = :minimumTrustBalance , INDIGENT_MANDATORY_FLAG = :indigentMandatoryFlag , 
	COMM_CONDITION_TYPE = :commConditionType , COMM_CONDITION_CODE = :commConditionCode , MAX_RECURSIVE_AMOUNT = :maxRecursiveAmount ,
	MODIFY_DATETIME = current_timestamp , CATEGORY_TYPE = :categoryType , SEAL_FLAG = :sealFlag where CASELOAD_ID =:caseloadId and DEDUCTION_TYPE =:deductionType
}

OTMCFEES_CSLDDP_DELETE_CASELOAD_DEDUCTION_PROFILES { 
	DELETE FROM CASELOAD_DEDUCTION_PROFILES  where CASELOAD_ID=:caseloadId AND DEDUCTION_TYPE=:deductionType
}

OTMCFEES_TRANFD_FIND_TRANSACTION_FEE_DETAILS {
-- 	SELECT CASELOAD_ID ,DEDUCTION_TYPE ,RECEIPT_DEDUCTION_TYPE ,MODIFY_USER_ID ,MODIFY_DATE ,LIST_SEQ ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG,ROWIDTOCHAR(ROWID) ROW_ID   FROM TRANSACTION_FEE_DETAILS  where CASELOAD_ID=:caseloadId AND DEDUCTION_TYPE=:deductionType
 	SELECT CASELOAD_ID ,DEDUCTION_TYPE ,RECEIPT_DEDUCTION_TYPE ,MODIFY_USER_ID ,MODIFY_DATE ,LIST_SEQ ,
 	CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG, ROW_ID   
 	FROM TRANSACTION_FEE_DETAILS  where CASELOAD_ID=:caseloadId AND DEDUCTION_TYPE=:deductionType
}
OTMCFEES_TRANFD_INSERT_TRANSACTION_FEE_DETAILS {
--	INSERT INTO TRANSACTION_FEE_DETAILS(CASELOAD_ID ,DEDUCTION_TYPE ,RECEIPT_DEDUCTION_TYPE ,MODIFY_USER_ID ,MODIFY_DATE ,LIST_SEQ ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG ) VALUES(:caseloadId ,:deductionType ,:receiptDeductionType ,:modifyUserId ,:modifyDate ,:listSeq ,:createDatetime ,:createUserId ,:modifyDatetime ,:sealFlag )
	insert into TRANSACTION_FEE_DETAILS(CASELOAD_ID , DEDUCTION_TYPE , RECEIPT_DEDUCTION_TYPE , MODIFY_DATE , LIST_SEQ , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , SEAL_FLAG ) values(:caseloadId , :deductionType , :receiptDeductionType , :modifyDate , :listSeq , current_timestamp , :createUserId , current_timestamp , :sealFlag )
}

OTMCFEES_TRANFD_UPDATE_TRANSACTION_FEE_DETAILS {
--	UPDATE TRANSACTION_FEE_DETAILS set CASELOAD_ID  = :caseloadId ,DEDUCTION_TYPE  = :deductionType ,RECEIPT_DEDUCTION_TYPE  = :receiptDeductionType ,MODIFY_USER_ID  = :modifyUserId ,MODIFY_DATE  = :modifyDate ,LIST_SEQ  = :listSeq ,CREATE_DATETIME  = :createDatetime ,CREATE_USER_ID  = :createUserId ,MODIFY_DATETIME  = :modifyDatetime ,SEAL_FLAG  = :sealFlag  where ROWID = :rowId
	update TRANSACTION_FEE_DETAILS set CASELOAD_ID = :caseloadId , DEDUCTION_TYPE = :deductionType , RECEIPT_DEDUCTION_TYPE = :receiptDeductionType , MODIFY_USER_ID = :modifyUserId , MODIFY_DATE = :modifyDate , LIST_SEQ = :listSeq , MODIFY_DATETIME = current_timestamp , SEAL_FLAG = :sealFlag where ROW_ID = :rowId
}

OTMCFEES_TRANFD_DELETE_TRANSACTION_FEE_DETAILS { 
	DELETE FROM TRANSACTION_FEE_DETAILS where ROW_ID = :rowId
}

OTMCFEES_TIERTFA_FIND_TIERED_TRANSACTION_FEE_AMOUNTS {
-- 	SELECT CASELOAD_ID ,DEDUCTION_TYPE ,FROM_AMOUNT ,TO_AMOUNT ,PERCENTAGE ,FEE_AMOUNT ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG,ROWIDTOCHAR(ROWID) ROW_ID   FROM TIERED_TRANSACTION_FEE_AMOUNTS  where CASELOAD_ID=:caseloadId AND DEDUCTION_TYPE=:deductionType
 	SELECT CASELOAD_ID ,DEDUCTION_TYPE ,FROM_AMOUNT ,TO_AMOUNT ,PERCENTAGE ,FEE_AMOUNT ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME 
 	,MODIFY_USER_ID ,SEAL_FLAG, ROW_ID   FROM TIERED_TRANSACTION_FEE_AMOUNTS  where CASELOAD_ID=:caseloadId AND DEDUCTION_TYPE=:deductionType

}
OTMCFEES_TIERTFA_INSERT_TIERED_TRANSACTION_FEE_AMOUNTS {
--	INSERT INTO TIERED_TRANSACTION_FEE_AMOUNTS(CASELOAD_ID ,DEDUCTION_TYPE ,FROM_AMOUNT ,TO_AMOUNT ,PERCENTAGE ,FEE_AMOUNT ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG ) VALUES(:caseloadId ,:deductionType ,:fromAmount ,:toAmount ,:percentage ,:feeAmount ,:createDatetime ,:createUserId ,:modifyDatetime ,:modifyUserId ,:sealFlag )
	insert into TIERED_TRANSACTION_FEE_AMOUNTS(CASELOAD_ID , DEDUCTION_TYPE , FROM_AMOUNT , TO_AMOUNT , PERCENTAGE , FEE_AMOUNT , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , SEAL_FLAG ) values(:caseloadId , :deductionType , :fromAmount , :toAmount , :percentage , :feeAmount , current_timestamp , :createUserId , current_timestamp , :sealFlag )
}

OTMCFEES_TIERTFA_UPDATE_TIERED_TRANSACTION_FEE_AMOUNTS {
--	UPDATE TIERED_TRANSACTION_FEE_AMOUNTS set CASELOAD_ID  = :caseloadId ,DEDUCTION_TYPE  = :deductionType ,FROM_AMOUNT  = :fromAmount ,TO_AMOUNT  = :toAmount ,PERCENTAGE  = :percentage ,FEE_AMOUNT  = :feeAmount ,CREATE_DATETIME  = :createDatetime ,CREATE_USER_ID  = :createUserId ,MODIFY_DATETIME  = :modifyDatetime ,MODIFY_USER_ID  = :modifyUserId ,SEAL_FLAG  = :sealFlag  where ROWID = :rowId
	update TIERED_TRANSACTION_FEE_AMOUNTS set CASELOAD_ID = :caseloadId , DEDUCTION_TYPE = :deductionType , FROM_AMOUNT = :fromAmount , TO_AMOUNT = :toAmount , PERCENTAGE = :percentage , FEE_AMOUNT = :feeAmount , MODIFY_DATETIME = current_timestamp , MODIFY_USER_ID = :modifyUserId , SEAL_FLAG = :sealFlag where ROW_ID = :rowId
}

OTMCFEES_TIERTFA_DELETE_TIERED_TRANSACTION_FEE_AMOUNTS { 
	DELETE FROM TIERED_TRANSACTION_FEE_AMOUNTS where ROW_ID = :rowId
}


OTMCFEES_CGFKCHK_CSLD_DP_DEDPROF_CORP {
	SELECT CORP.CORPORATE_NAME FROM   CORPORATES CORP WHERE  CORP.CORPORATE_ID = :payeeCorporateId
}

OTMCFEES_CGFKCHK_CSLD_DP_DEDPROF_AC_CO_ {
	SELECT AC_CODE.ACCOUNT_NAME FROM   ACCOUNT_CODES AC_CODE WHERE  AC_CODE.ACCOUNT_CODE = :ACCOUNTCODE AND     EXISTS ( SELECT 1 FROM  ACCOUNT_CODES AC_CODE1, CASELOAD_DEDUCTION_PROFILES CA WHERE CA.ACCOUNT_CODE = AC_CODE1.ACCOUNT_CODE AND AC_CODE.CASELOAD_TYPE = :CASELOADTYPE) AND POSTING_STATUS_FLAG = 'Y' AND SUB_ACCOUNT_TYPE IS NULL
}

OTMCFEES_CGFKCHK_CSLD_DP_DEDPROF_DEDTY_ {
	SELECT DED_TYPE.ACTIVE_FLAG ,DED_TYPE.CASELOAD_CODE ,DED_TYPE.DEDUCTION_CATEGORY ,DED_TYPE.DEDUCTION_DESC FROM   DEDUCTION_TYPES DED_TYPE WHERE  DED_TYPE.DEDUCTION_TYPE = :DEDUCTIONTYPE AND     DED_TYPE.DEDUCTION_CATEGORY = 'CTF' AND DED_TYPE.CASELOAD_CODE IN ('BOTH',:CASELOADTYPE) AND ((DED_TYPE.ACTIVE_FLAG = 'Y' AND EXPIRY_DATE IS NULL) OR :MODE = 'QUERY')
}

OTMCFEES_CGWHEN_NEW_FORM_INSTANCE_ {
	SELECT  current_timestamp , upper(user) FROM DUAL
}

OTMCFEES_CGFKCHK_TRAN_FD_TRAN_FD_DED_T_ {
	SELECT DED_TYPE2.DEDUCTION_DESC ,DED_TYPE2.DEDUCTION_CATEGORY FROM   DEDUCTION_TYPES DED_TYPE2 WHERE  DED_TYPE2.DEDUCTION_TYPE = :RECEIPTDEDUCTIONTYPE AND     DED_TYPE2.DEDUCTION_CATEGORY IN ('FXOB', 'CROB') AND CASELOAD_CODE IN ('BOTH', :CASELOADTYPE) AND ((ACTIVE_FLAG ='Y' AND EXPIRY_DATE IS NULL) OR :MODE = 'QUERY')
}
OTMSFEES_GET_EXTERNAL_PRIORITY_NUMBER{
--SELECT NVL(MAX(EXTERNAL_PRIORITY_NO),0)+1 FROM CASELOAD_DEDUCTION_PROFILES WHERE CASELOAD_ID = :caseloadId
SELECT COALESCE(MAX(EXTERNAL_PRIORITY_NO),0)+1 FROM CASELOAD_DEDUCTION_PROFILES WHERE CASELOAD_ID = :caseloadId

}
OTMCFEES_GET_OVERLAP_COUNT{
SELECT count(0) FROM TIERED_TRANSACTION_FEE_AMOUNTS WHERE caseload_id = :caseloadId AND deduction_type = :deductionType AND ((:pFlag = 'F' AND :fromAmount BETWEEN FROM_AMOUNT AND TO_AMOUNT AND (TO_AMOUNT != :toAmount OR :toAmount IS NULL)) OR (:pFlag = 'T' AND (:toAmount BETWEEN FROM_AMOUNT AND TO_AMOUNT OR (FROM_AMOUNT BETWEEN :fromAmount AND :toAmount ) OR (TO_AMOUNT BETWEEN :fromAmount AND :toAmount )) AND FROM_AMOUNT != :fromAmount) )
}