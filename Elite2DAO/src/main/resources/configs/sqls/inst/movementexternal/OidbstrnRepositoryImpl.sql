
OIDBSTRN_FIND_RGREASON {
 	SELECT  MR.MOVEMENT_REASON_CODE CODE ,  MR.DESCRIPTION DESCRIPTION ,
CASE WHEN MR.MOVEMENT_REASON_CODE != 'OJ' THEN 1 ELSE 0 END LIST_SEQ
FROM  MOVEMENT_REASONS MR  WHERE  MR.MOVEMENT_TYPE = 'TRN' AND  MR.ACTIVE_FLAG = 'Y' AND   (( MR.EXPIRY_DATE IS NULL  ) OR ( '' = 'ENTER-QUERY'  ) )  ORDER BY  MR.LIST_SEQ ASC  ,MR.DESCRIPTION ASC , MR.MOVEMENT_REASON_CODE
}

OIDBSTRN_FIND_RGAGYLOC {
 	SELECT   DESCRIPTION , AL.AGY_LOC_ID, AL.AGY_LOC_ID CODE FROM     AGENCY_LOCATIONS AL WHERE           AGENCY_LOCATION_TYPE = 'INST' AND     (          ( ACTIVE_FLAG = 'Y' AND DEACTIVATION_DATE IS NULL  ) OR '' = 'ENTER-QUERY' ) AND      AL.AGY_LOC_ID IN (SELECT CA.AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS CA  WHERE CA.CASELOAD_ID = :CASELOADID ) AND AL.AGY_LOC_ID NOT IN ('TRN' , 'OUT' ) ORDER BY LIST_SEQ ,DESCRIPTION ,AGY_LOC_ID
}

OIDBSTRN_FIND_RGALLAGYLOC {
 	SELECT   DESCRIPTION , AL.AGY_LOC_ID, AL.AGY_LOC_ID CODE  FROM     AGENCY_LOCATIONS AL WHERE           AGENCY_LOCATION_TYPE = 'INST' AND     ((ACTIVE_FLAG = 'Y' AND DEACTIVATION_DATE IS NULL  ) OR '' = 'ENTER-QUERY' ) ORDER BY LIST_SEQ ,DESCRIPTION ,AGY_LOC_ID
}

OIDBSTRN_FIND_RGESCORT {
 	SELECT REF_CODE.DESCRIPTION        ,REF_CODE.CODE FROM   REFERENCE_CODES REF_CODE WHERE   DOMAIN           = 'ESCORT'   AND ((ACTIVE_FLAG     = 'Y'     AND EXPIRED_DATE  IS NULL ) OR '' = 'ENTER-QUERY' ) ORDER BY LIST_SEQ ,DESCRIPTION ,CODE
}

OIDBSTRN_FIND_RGCANCELREASON {
 	SELECT REF_CODE.DESCRIPTION        ,REF_CODE.CODE FROM   REFERENCE_CODES REF_CODE WHERE   DOMAIN           = 'TRN_CNCL_RSN'   AND ((ACTIVE_FLAG     = 'Y'     AND EXPIRED_DATE  IS NULL ) OR '' = 'ENTER-QUERY' ) ORDER BY LIST_SEQ ,DESCRIPTION ,CODE
}

OIDBSTRN_OFFALLSCH_FIND_V_OFFENDER_ALL_SCHEDULES {
 	SELECT EVENT_ID ,OFFENDER_BOOK_ID ,IN_OUT_STATUS ,BOOKING_NO ,BOOKING_ACTIVE_FLAG ,OFFENDER_ID ,OFFENDER_ID_DISPLAY ,OFFENDER_LAST_NAME ,OFFENDER_FIRST_NAME ,EVENT_DATE ,START_TIME ,END_TIME ,EVENT_CLASS ,EVENT_TYPE ,EVENT_TYPE_DESC ,EVENT_SUB_TYPE ,EVENT_SUB_TYPE_DESC ,ACTIVE_FLAG ,EVENT_STATUS ,EVENT_STATUS_DESC ,EVENT_OUTCOME ,EVENT_OUTCOME_DESC ,BUSY_DATE_FLAG ,OUTCOME_REASON_CODE ,REFERENCE_ID ,APPLICATION_DATE ,APPLICATION_TIME ,RETURN_DATE ,RETURN_TIME ,COMMENT_TEXT ,DETAILS ,AGY_LOC_ID ,AGY_LOC_DESC ,LIVING_UNIT_ID ,LIVING_UNIT_DESC ,LU_LEVEL_1_CODE ,LU_LEVEL_2_CODE ,LU_LEVEL_3_CODE ,LU_LEVEL_4_CODE ,AGENCY_IML_ID ,AGENCY_IML_DESC ,AGENCY_IML_LEVEL_1_CODE ,AGENCY_IML_LEVEL_2_CODE ,AGENCY_IML_LEVEL_3_CODE ,TO_AGY_LOC_ID ,TO_AGY_LOC_DESC ,TO_LOC ,TO_LOC_DESC ,ESCORT_CODE ,ESCORT_DESC ,DIRECTION_CODE ,SCHEDULE_MOVEMENT_TIME ,FROM_CITY_CODE ,FROM_CITY_NAME ,TO_CITY_CODE ,TO_CITY_NAME ,TO_INTERNAL_LOCATION_ID ,TO_INTERNAL_LOCATION_DESC ,TO_INT_LOC_LEVEL_1_CODE ,TO_INT_LOC_LEVEL_2_CODE ,TO_INT_LOC_LEVEL_3_CODE ,TO_INT_LOC_USER_DESC ,CREDITED_HOURS ,ENGAGEMENT_CODE ,UNDERSTANDING_CODE ,PIECE_WORK ,IN_TIME ,OUT_TIME ,PERFORMANCE_CODE ,TRANSPORT_CODE ,SICK_NOTE_EXPIRY_DATE ,SICK_NOTE_RECEIVED_DATE ,UNEXCUSED_ABSENCE_FLAG ,UNPAID_WORK_ACTION ,UNPAID_WORK_BEHAVIOUR ,AGREED_TRAVEL_HOUR ,CHECK_BOX_1 ,CHECK_BOX_2 ,HIDDEN_COMMENT_TEXT ,IN_CHARGE_STAFF_ID ,IN_CHARGE_STAFF_NAME ,OFF_PRGREF_ID ,CONTACT_PERSON_NAME ,TO_ADDRESS_OWNER_CLASS ,TO_ADDRESS_ID ,UNPAID_WORK_SUPERVISOR ,TA_ID ,RECORD_SOURCE ,CHECK_SUM ,PROV_STATE_CODE ,PROV_STATE_DESC ,SCHEDULED_TRIP_ID   FROM V_OFFENDER_ALL_SCHEDULES   WHERE event_class='EXT_MOV' and event_type= 'TRN' AND v_offender_all_schedules.event_status IN ('SCH','PEN')  
}
OIDBSTRN_OFFALLSCH_INSERT_V_OFFENDER_ALL_SCHEDULES {
	INSERT INTO V_OFFENDER_ALL_SCHEDULES(EVENT_ID ,OFFENDER_BOOK_ID ,IN_OUT_STATUS ,BOOKING_NO ,BOOKING_ACTIVE_FLAG ,OFFENDER_ID ,OFFENDER_ID_DISPLAY ,OFFENDER_LAST_NAME ,OFFENDER_FIRST_NAME ,EVENT_DATE ,START_TIME ,END_TIME ,EVENT_CLASS ,EVENT_TYPE ,EVENT_TYPE_DESC ,EVENT_SUB_TYPE ,EVENT_SUB_TYPE_DESC ,ACTIVE_FLAG ,EVENT_STATUS ,EVENT_STATUS_DESC ,EVENT_OUTCOME ,EVENT_OUTCOME_DESC ,BUSY_DATE_FLAG ,OUTCOME_REASON_CODE ,REFERENCE_ID ,APPLICATION_DATE ,APPLICATION_TIME ,RETURN_DATE ,RETURN_TIME ,COMMENT_TEXT ,DETAILS ,AGY_LOC_ID ,AGY_LOC_DESC ,LIVING_UNIT_ID ,LIVING_UNIT_DESC ,LU_LEVEL_1_CODE ,LU_LEVEL_2_CODE ,LU_LEVEL_3_CODE ,LU_LEVEL_4_CODE ,AGENCY_IML_ID ,AGENCY_IML_DESC ,AGENCY_IML_LEVEL_1_CODE ,AGENCY_IML_LEVEL_2_CODE ,AGENCY_IML_LEVEL_3_CODE ,TO_AGY_LOC_ID ,TO_AGY_LOC_DESC ,TO_LOC ,TO_LOC_DESC ,ESCORT_CODE ,ESCORT_DESC ,DIRECTION_CODE ,SCHEDULE_MOVEMENT_TIME ,FROM_CITY_CODE ,FROM_CITY_NAME ,TO_CITY_CODE ,TO_CITY_NAME ,TO_INTERNAL_LOCATION_ID ,TO_INTERNAL_LOCATION_DESC ,TO_INT_LOC_LEVEL_1_CODE ,TO_INT_LOC_LEVEL_2_CODE ,TO_INT_LOC_LEVEL_3_CODE ,TO_INT_LOC_USER_DESC ,CREDITED_HOURS ,ENGAGEMENT_CODE ,UNDERSTANDING_CODE ,PIECE_WORK ,IN_TIME ,OUT_TIME ,PERFORMANCE_CODE ,TRANSPORT_CODE ,SICK_NOTE_EXPIRY_DATE ,SICK_NOTE_RECEIVED_DATE ,UNEXCUSED_ABSENCE_FLAG ,UNPAID_WORK_ACTION ,UNPAID_WORK_BEHAVIOUR ,AGREED_TRAVEL_HOUR ,CHECK_BOX_1 ,CHECK_BOX_2 ,HIDDEN_COMMENT_TEXT ,IN_CHARGE_STAFF_ID ,IN_CHARGE_STAFF_NAME ,OFF_PRGREF_ID ,CONTACT_PERSON_NAME ,TO_ADDRESS_OWNER_CLASS ,TO_ADDRESS_ID ,UNPAID_WORK_SUPERVISOR ,TA_ID ,RECORD_SOURCE ,CHECK_SUM ,PROV_STATE_CODE ,PROV_STATE_DESC ,SCHEDULED_TRIP_ID ) VALUES(:eventId ,:offenderBookId ,:inOutStatus ,:bookingNo ,:bookingActiveFlag ,:offenderId ,:offenderIdDisplay ,:offenderLastName ,:offenderFirstName ,:eventDate ,:startTime ,:endTime ,:eventClass ,:eventType ,:eventTypeDesc ,:eventSubType ,:eventSubTypeDesc ,:activeFlag ,:eventStatus ,:eventStatusDesc ,:eventOutcome ,:eventOutcomeDesc ,:busyDateFlag ,:outcomeReasonCode ,:referenceId ,:applicationDate ,:applicationTime ,:returnDate ,:returnTime ,:commentText ,:details ,:agyLocId ,:agyLocDesc ,:livingUnitId ,:livingUnitDesc ,:luLevel1Code ,:luLevel2Code ,:luLevel3Code ,:luLevel4Code ,:agencyImlId ,:agencyImlDesc ,:agencyImlLevel1Code ,:agencyImlLevel2Code ,:agencyImlLevel3Code ,:toAgyLocId ,:toAgyLocDesc ,:toLoc ,:toLocDesc ,:escortCode ,:escortDesc ,:directionCode ,:scheduleMovementTime ,:fromCityCode ,:fromCityName ,:toCityCode ,:toCityName ,:toInternalLocationId ,:toInternalLocationDesc ,:toIntLocLevel1Code ,:toIntLocLevel2Code ,:toIntLocLevel3Code ,:toIntLocUserDesc ,:creditedHours ,:engagementCode ,:understandingCode ,:pieceWork ,:inTime ,:outTime ,:performanceCode ,:transportCode ,:sickNoteExpiryDate ,:sickNoteReceivedDate ,:unexcusedAbsenceFlag ,:unpaidWorkAction ,:unpaidWorkBehaviour ,:agreedTravelHour ,:checkBox1 ,:checkBox2 ,:hiddenCommentText ,:inChargeStaffId ,:inChargeStaffName ,:offPrgrefId ,:contactPersonName ,:toAddressOwnerClass ,:toAddressId ,:unpaidWorkSupervisor ,:taId ,:recordSource ,:checkSum ,:provStateCode ,:provStateDesc ,:scheduledTripId )
}

OIDBSTRN_OFFALLSCH_UPDATE_V_OFFENDER_ALL_SCHEDULES {
	UPDATE V_OFFENDER_ALL_SCHEDULES set EVENT_ID  = :eventId ,OFFENDER_BOOK_ID  = :offenderBookId ,IN_OUT_STATUS  = :inOutStatus ,BOOKING_NO  = :bookingNo ,BOOKING_ACTIVE_FLAG  = :bookingActiveFlag ,OFFENDER_ID  = :offenderId ,OFFENDER_ID_DISPLAY  = :offenderIdDisplay ,OFFENDER_LAST_NAME  = :offenderLastName ,OFFENDER_FIRST_NAME  = :offenderFirstName ,EVENT_DATE  = :eventDate ,START_TIME  = :startTime ,END_TIME  = :endTime ,EVENT_CLASS  = :eventClass ,EVENT_TYPE  = :eventType ,EVENT_TYPE_DESC  = :eventTypeDesc ,EVENT_SUB_TYPE  = :eventSubType ,EVENT_SUB_TYPE_DESC  = :eventSubTypeDesc ,ACTIVE_FLAG  = :activeFlag ,EVENT_STATUS  = :eventStatus ,EVENT_STATUS_DESC  = :eventStatusDesc ,EVENT_OUTCOME  = :eventOutcome ,EVENT_OUTCOME_DESC  = :eventOutcomeDesc ,BUSY_DATE_FLAG  = :busyDateFlag ,OUTCOME_REASON_CODE  = :outcomeReasonCode ,REFERENCE_ID  = :referenceId ,APPLICATION_DATE  = :applicationDate ,APPLICATION_TIME  = :applicationTime ,RETURN_DATE  = :returnDate ,RETURN_TIME  = :returnTime ,COMMENT_TEXT  = :commentText ,DETAILS  = :details ,AGY_LOC_ID  = :agyLocId ,AGY_LOC_DESC  = :agyLocDesc ,LIVING_UNIT_ID  = :livingUnitId ,LIVING_UNIT_DESC  = :livingUnitDesc ,LU_LEVEL_1_CODE  = :luLevel1Code ,LU_LEVEL_2_CODE  = :luLevel2Code ,LU_LEVEL_3_CODE  = :luLevel3Code ,LU_LEVEL_4_CODE  = :luLevel4Code ,AGENCY_IML_ID  = :agencyImlId ,AGENCY_IML_DESC  = :agencyImlDesc ,AGENCY_IML_LEVEL_1_CODE  = :agencyImlLevel1Code ,AGENCY_IML_LEVEL_2_CODE  = :agencyImlLevel2Code ,AGENCY_IML_LEVEL_3_CODE  = :agencyImlLevel3Code ,TO_AGY_LOC_ID  = :toAgyLocId ,TO_AGY_LOC_DESC  = :toAgyLocDesc ,TO_LOC  = :toLoc ,TO_LOC_DESC  = :toLocDesc ,ESCORT_CODE  = :escortCode ,ESCORT_DESC  = :escortDesc ,DIRECTION_CODE  = :directionCode ,SCHEDULE_MOVEMENT_TIME  = :scheduleMovementTime ,FROM_CITY_CODE  = :fromCityCode ,FROM_CITY_NAME  = :fromCityName ,TO_CITY_CODE  = :toCityCode ,TO_CITY_NAME  = :toCityName ,TO_INTERNAL_LOCATION_ID  = :toInternalLocationId ,TO_INTERNAL_LOCATION_DESC  = :toInternalLocationDesc ,TO_INT_LOC_LEVEL_1_CODE  = :toIntLocLevel1Code ,TO_INT_LOC_LEVEL_2_CODE  = :toIntLocLevel2Code ,TO_INT_LOC_LEVEL_3_CODE  = :toIntLocLevel3Code ,TO_INT_LOC_USER_DESC  = :toIntLocUserDesc ,CREDITED_HOURS  = :creditedHours ,ENGAGEMENT_CODE  = :engagementCode ,UNDERSTANDING_CODE  = :understandingCode ,PIECE_WORK  = :pieceWork ,IN_TIME  = :inTime ,OUT_TIME  = :outTime ,PERFORMANCE_CODE  = :performanceCode ,TRANSPORT_CODE  = :transportCode ,SICK_NOTE_EXPIRY_DATE  = :sickNoteExpiryDate ,SICK_NOTE_RECEIVED_DATE  = :sickNoteReceivedDate ,UNEXCUSED_ABSENCE_FLAG  = :unexcusedAbsenceFlag ,UNPAID_WORK_ACTION  = :unpaidWorkAction ,UNPAID_WORK_BEHAVIOUR  = :unpaidWorkBehaviour ,AGREED_TRAVEL_HOUR  = :agreedTravelHour ,CHECK_BOX_1  = :checkBox1 ,CHECK_BOX_2  = :checkBox2 ,HIDDEN_COMMENT_TEXT  = :hiddenCommentText ,IN_CHARGE_STAFF_ID  = :inChargeStaffId ,IN_CHARGE_STAFF_NAME  = :inChargeStaffName ,OFF_PRGREF_ID  = :offPrgrefId ,CONTACT_PERSON_NAME  = :contactPersonName ,TO_ADDRESS_OWNER_CLASS  = :toAddressOwnerClass ,TO_ADDRESS_ID  = :toAddressId ,UNPAID_WORK_SUPERVISOR  = :unpaidWorkSupervisor ,TA_ID  = :taId ,RECORD_SOURCE  = :recordSource ,CHECK_SUM  = :checkSum ,PROV_STATE_CODE  = :provStateCode ,PROV_STATE_DESC  = :provStateDesc ,SCHEDULED_TRIP_ID  = :scheduledTripId 
}

OIDBSTRN_TAG_SCHEDULE_CREATE_SCHEDULE {
	INSERT INTO OFFENDER_IND_SCHEDULES 
	(event_id,offender_book_id,event_date,start_time,end_time,event_class,event_type,event_sub_type,event_status,comment_text,hidden_comment_text,application_date,application_time,parent_event_id,agy_loc_id,to_agy_loc_id,to_internal_location_id,from_city,to_city,crs_sch_id,order_id,sentence_seq,outcome_reason_code,judge_name,check_box_1,check_box_2,in_charge_staff_id,credited_hours,report_in_date,piece_work,engagement_code,understanding_code,details,credited_work_hour,agreed_travel_hour,unpaid_work_supervisor,unpaid_work_behaviour,sick_note_received_date,sick_note_expiry_date,court_event_result,unexcused_absence_flag,escort_code,confirm_flag,direction_code,to_city_code,from_city_code,off_prgref_id,in_time,out_time,performance_code,temp_abs_sch_id,reference_id,transport_code,contact_person_name,to_address_owner_class,to_address_id,return_date,return_time,prov_state_code,create_user_id,modify_datetime,create_datetime)
	VALUES (NEXTVAL('EVENT_ID'),:offenderBookId,:eventDate,:startTime,:endTime,:eventClass,:eventType,:eventSubType,:eventStatus,:commentText,:hiddenCommentText,:applicationDate,:applicationTime,:parentEventId,:agyLocId,:toAgyLocId,:toInternalLocationId,:fromCity,:toCity,:crsSchId,:orderId,:sentenceSeq,:outcomeReasonCode,:judgeName,:checkBox1,:checkBox2,:inChargeStaffId,:creditedHours,:reportInDate,:pieceWork,:engagementCode,:understandingCode,:details,:creditedWorkHour,:agreedTravelHour,:unpaidWorkSupervisor,:unpaidWorkBehaviour,:sickNoteReceivedDate,:sickNoteExpiryDate,:courtEventResult,:unexcusedAbsenceFlag,:escortCode,:confirmFlag,:directionCode,:toCityCode,:fromCityCode,:offPrgrefId,:inTime,:outTime,:performanceCode,:tempAbsSchId,:referenceId,:transportCode,:contactPersonName,:toAddressOwnerClass,:toAddressId,:returnDate,:returnTime,:provStateCode,:createUserId,null,CURRENT_TIMESTAMP)
}

OIDBSTRN_TAG_SCHEDULE_UPDATE_SCHEDULE {
	 UPDATE OFFENDER_IND_SCHEDULES SET EVENT_DATE = :eventDate,START_TIME = :startTime, EVENT_STATUS = :eventStatus,TO_AGY_LOC_ID=:toAgyLocId,
	 OUTCOME_REASON_CODE = :outcomeReasonCode, PROV_STATE_CODE = :provStateCode, ESCORT_CODE = :escortCode, EVENT_SUB_TYPE=:eventSubType,
	 COMMENT_TEXT = :commentText ,modify_datetime =CURRENT_TIMESTAMP,modify_user_id=:modifyUserId WHERE EVENT_ID = :eventId
}

OIDBSTRN_DUPLICATE_EXISTS {
	
           SELECT count(1) RESULT
           FROM v_offender_all_schedules ns
          WHERE ns.offender_id_display = :offenderIdDisplay
            AND ns.event_status = :eventStatus
            AND ns.event_class = :eventClass
            AND ns.event_type = :eventType
            AND ns.event_date = (:eventDate)
            AND To_CHAR(START_TIME,'HH24:MI') = :startTime
            AND ns.event_id != coalesce (:eventID, 0)
}
OIDBSTRN_TAG_SCHEDULE_CHECK_SCHEDULE_CONFLICT {
	SELECT TAG_SCHEDULE_CHECK_SCHEDULE_CONFLICT(:offenderBookId, (:eventDate))  FROM dual
}

