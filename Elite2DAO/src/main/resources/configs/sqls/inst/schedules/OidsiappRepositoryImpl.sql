OIDSIAPP_FIND_RGINTERNALMOVELOCATIONS {
select case B.AGY_LOC_ID when :AGYLOCID then 0 else 1 end seq, C.DESCRIPTION description, C.USER_DESC code, to_char(C.INTERNAL_LOCATION_ID) LOCCODE from INT_LOC_USAGE_LOCATIONS A , INTERNAL_LOCATION_USAGES B , AGENCY_INTERNAL_LOCATIONS C where A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID and B.INTERNAL_LOCATION_USAGE = 'APP' and A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID and ((C.ACTIVE_FLAG = 'Y' and coalesce (C.DEACTIVATE_DATE::timestamp, '2020-12-12')= '2020-12-12' ) or (:MODE = 'ENTER-QUERY' ) ) and not exists ( select 1 from INT_LOC_USAGE_LOCATIONS where PARENT_USAGE_LOCATION_ID = A.USAGE_LOCATION_ID ) and C.INTERNAL_LOCATION_CODE <> 'RTU' order by A.LIST_SEQ , C.DESCRIPTION
}

OIDSIAPP_FIND_RGSCHINTERNALSCHEDULE {
select
	DESCRIPTION ,
	INTERNAL_SCHEDULE_RSN_CODE CODE,
	LIST_SEQ
from
	INTERNAL_SCHEDULE_REASONS
where
	INTERNAL_SCHEDULE_TYPE = 'APP'
	and ( ( ACTIVE_FLAG = 'Y'
		and coalesce(EXPIRY_DATE,'05-12-2022')='05-12-2022'))
order by
	LIST_SEQ ,
	DESCRIPTION
}

OIDSIAPP_OFFSCH_FIND_V_OFFENDER_ALL_SCHEDULES {
SELECT EVENT_ID , OFFENDER_BOOK_ID , IN_OUT_STATUS , BOOKING_NO , BOOKING_ACTIVE_FLAG , OFFENDER_ID , OFFENDER_ID_DISPLAY , OFFENDER_LAST_NAME , OFFENDER_FIRST_NAME , EVENT_DATE , START_TIME , END_TIME , EVENT_CLASS , EVENT_TYPE , EVENT_TYPE_DESC , EVENT_SUB_TYPE , EVENT_SUB_TYPE_DESC , ACTIVE_FLAG , EVENT_STATUS , EVENT_STATUS_DESC , EVENT_OUTCOME , EVENT_OUTCOME_DESC , BUSY_DATE_FLAG , OUTCOME_REASON_CODE , REFERENCE_ID , APPLICATION_DATE , APPLICATION_TIME , RETURN_DATE , RETURN_TIME , COMMENT_TEXT , DETAILS , AGY_LOC_ID , AGY_LOC_DESC , LIVING_UNIT_ID , LIVING_UNIT_DESC , LU_LEVEL_1_CODE , LU_LEVEL_2_CODE , LU_LEVEL_3_CODE , LU_LEVEL_4_CODE , AGENCY_IML_ID , AGENCY_IML_DESC , AGENCY_IML_LEVEL_1_CODE , AGENCY_IML_LEVEL_2_CODE , AGENCY_IML_LEVEL_3_CODE , TO_AGY_LOC_ID , TO_AGY_LOC_DESC , TO_LOC , TO_LOC_DESC , ESCORT_CODE , ESCORT_DESC , DIRECTION_CODE , SCHEDULE_MOVEMENT_TIME , FROM_CITY_CODE , FROM_CITY_NAME , TO_CITY_CODE , TO_CITY_NAME , TO_INTERNAL_LOCATION_ID , TO_INTERNAL_LOCATION_DESC , to_int_loc_user_desc AS TO_INT_LOC_LEVEL_1_CODE, TO_INT_LOC_LEVEL_2_CODE , TO_INT_LOC_LEVEL_3_CODE , TO_INT_LOC_USER_DESC , CREDITED_HOURS , ENGAGEMENT_CODE , UNDERSTANDING_CODE , PIECE_WORK , IN_TIME , OUT_TIME , PERFORMANCE_CODE , TRANSPORT_CODE , SICK_NOTE_EXPIRY_DATE , SICK_NOTE_RECEIVED_DATE , UNEXCUSED_ABSENCE_FLAG , UNPAID_WORK_ACTION , UNPAID_WORK_BEHAVIOUR , AGREED_TRAVEL_HOUR , CHECK_BOX_1 , CHECK_BOX_2 , HIDDEN_COMMENT_TEXT , IN_CHARGE_STAFF_ID , IN_CHARGE_STAFF_NAME , OFF_PRGREF_ID , CONTACT_PERSON_NAME , TO_ADDRESS_OWNER_CLASS , TO_ADDRESS_ID , UNPAID_WORK_SUPERVISOR , TA_ID , RECORD_SOURCE , CHECK_SUM , PROV_STATE_CODE , PROV_STATE_DESC , SCHEDULED_TRIP_ID FROM V_OFFENDER_ALL_SCHEDULES vois 
}
OIDSIAPP_OFFSCH_INSERT_V_OFFENDER_ALL_SCHEDULES {
	INSERT INTO V_OFFENDER_ALL_SCHEDULES(EVENT_ID ,OFFENDER_BOOK_ID ,IN_OUT_STATUS ,BOOKING_NO ,BOOKING_ACTIVE_FLAG ,OFFENDER_ID ,OFFENDER_ID_DISPLAY ,OFFENDER_LAST_NAME ,OFFENDER_FIRST_NAME ,EVENT_DATE ,START_TIME ,END_TIME ,EVENT_CLASS ,EVENT_TYPE ,EVENT_TYPE_DESC ,EVENT_SUB_TYPE ,EVENT_SUB_TYPE_DESC ,ACTIVE_FLAG ,EVENT_STATUS ,EVENT_STATUS_DESC ,EVENT_OUTCOME ,EVENT_OUTCOME_DESC ,BUSY_DATE_FLAG ,OUTCOME_REASON_CODE ,REFERENCE_ID ,APPLICATION_DATE ,APPLICATION_TIME ,RETURN_DATE ,RETURN_TIME ,COMMENT_TEXT ,DETAILS ,AGY_LOC_ID ,AGY_LOC_DESC ,LIVING_UNIT_ID ,LIVING_UNIT_DESC ,LU_LEVEL_1_CODE ,LU_LEVEL_2_CODE ,LU_LEVEL_3_CODE ,LU_LEVEL_4_CODE ,AGENCY_IML_ID ,AGENCY_IML_DESC ,AGENCY_IML_LEVEL_1_CODE ,AGENCY_IML_LEVEL_2_CODE ,AGENCY_IML_LEVEL_3_CODE ,TO_AGY_LOC_ID ,TO_AGY_LOC_DESC ,TO_LOC ,TO_LOC_DESC ,ESCORT_CODE ,ESCORT_DESC ,DIRECTION_CODE ,SCHEDULE_MOVEMENT_TIME ,FROM_CITY_CODE ,FROM_CITY_NAME ,TO_CITY_CODE ,TO_CITY_NAME ,TO_INTERNAL_LOCATION_ID ,TO_INTERNAL_LOCATION_DESC ,TO_INT_LOC_LEVEL_1_CODE ,TO_INT_LOC_LEVEL_2_CODE ,TO_INT_LOC_LEVEL_3_CODE ,TO_INT_LOC_USER_DESC ,CREDITED_HOURS ,ENGAGEMENT_CODE ,UNDERSTANDING_CODE ,PIECE_WORK ,IN_TIME ,OUT_TIME ,PERFORMANCE_CODE ,TRANSPORT_CODE ,SICK_NOTE_EXPIRY_DATE ,SICK_NOTE_RECEIVED_DATE ,UNEXCUSED_ABSENCE_FLAG ,UNPAID_WORK_ACTION ,UNPAID_WORK_BEHAVIOUR ,AGREED_TRAVEL_HOUR ,CHECK_BOX_1 ,CHECK_BOX_2 ,HIDDEN_COMMENT_TEXT ,IN_CHARGE_STAFF_ID ,IN_CHARGE_STAFF_NAME ,OFF_PRGREF_ID ,CONTACT_PERSON_NAME ,TO_ADDRESS_OWNER_CLASS ,TO_ADDRESS_ID ,UNPAID_WORK_SUPERVISOR ,TA_ID ,RECORD_SOURCE ,CHECK_SUM ,PROV_STATE_CODE ,PROV_STATE_DESC ,SCHEDULED_TRIP_ID ) VALUES(:eventId ,:offenderBookId ,:inOutStatus ,:bookingNo ,:bookingActiveFlag ,:offenderId ,:offenderIdDisplay ,:offenderLastName ,:offenderFirstName ,:eventDate ,:startTime ,:endTime ,:eventClass ,:eventType ,:eventTypeDesc ,:eventSubType ,:eventSubTypeDesc ,:activeFlag ,:eventStatus ,:eventStatusDesc ,:eventOutcome ,:eventOutcomeDesc ,:busyDateFlag ,:outcomeReasonCode ,:referenceId ,:applicationDate ,:applicationTime ,:returnDate ,:returnTime ,:commentText ,:details ,:agyLocId ,:agyLocDesc ,:livingUnitId ,:livingUnitDesc ,:luLevel1Code ,:luLevel2Code ,:luLevel3Code ,:luLevel4Code ,:agencyImlId ,:agencyImlDesc ,:agencyImlLevel1Code ,:agencyImlLevel2Code ,:agencyImlLevel3Code ,:toAgyLocId ,:toAgyLocDesc ,:toLoc ,:toLocDesc ,:escortCode ,:escortDesc ,:directionCode ,:scheduleMovementTime ,:fromCityCode ,:fromCityName ,:toCityCode ,:toCityName ,:toInternalLocationId ,:toInternalLocationDesc ,:toIntLocLevel1Code ,:toIntLocLevel2Code ,:toIntLocLevel3Code ,:toIntLocUserDesc ,:creditedHours ,:engagementCode ,:understandingCode ,:pieceWork ,:inTime ,:outTime ,:performanceCode ,:transportCode ,:sickNoteExpiryDate ,:sickNoteReceivedDate ,:unexcusedAbsenceFlag ,:unpaidWorkAction ,:unpaidWorkBehaviour ,:agreedTravelHour ,:checkBox1 ,:checkBox2 ,:hiddenCommentText ,:inChargeStaffId ,:inChargeStaffName ,:offPrgrefId ,:contactPersonName ,:toAddressOwnerClass ,:toAddressId ,:unpaidWorkSupervisor ,:taId ,:recordSource ,:checkSum ,:provStateCode ,:provStateDesc ,:scheduledTripId )
}

OIDSIAPP_OFFSCH_UPDATE_V_OFFENDER_ALL_SCHEDULES {
	UPDATE V_OFFENDER_ALL_SCHEDULES set EVENT_ID  = :eventId ,OFFENDER_BOOK_ID  = :offenderBookId ,IN_OUT_STATUS  = :inOutStatus ,BOOKING_NO  = :bookingNo ,BOOKING_ACTIVE_FLAG  = :bookingActiveFlag ,OFFENDER_ID  = :offenderId ,OFFENDER_ID_DISPLAY  = :offenderIdDisplay ,OFFENDER_LAST_NAME  = :offenderLastName ,OFFENDER_FIRST_NAME  = :offenderFirstName ,EVENT_DATE  = :eventDate ,START_TIME  = :startTime ,END_TIME  = :endTime ,EVENT_CLASS  = :eventClass ,EVENT_TYPE  = :eventType ,EVENT_TYPE_DESC  = :eventTypeDesc ,EVENT_SUB_TYPE  = :eventSubType ,EVENT_SUB_TYPE_DESC  = :eventSubTypeDesc ,ACTIVE_FLAG  = :activeFlag ,EVENT_STATUS  = :eventStatus ,EVENT_STATUS_DESC  = :eventStatusDesc ,EVENT_OUTCOME  = :eventOutcome ,EVENT_OUTCOME_DESC  = :eventOutcomeDesc ,BUSY_DATE_FLAG  = :busyDateFlag ,OUTCOME_REASON_CODE  = :outcomeReasonCode ,REFERENCE_ID  = :referenceId ,APPLICATION_DATE  = :applicationDate ,APPLICATION_TIME  = :applicationTime ,RETURN_DATE  = :returnDate ,RETURN_TIME  = :returnTime ,COMMENT_TEXT  = :commentText ,DETAILS  = :details ,AGY_LOC_ID  = :agyLocId ,AGY_LOC_DESC  = :agyLocDesc ,LIVING_UNIT_ID  = :livingUnitId ,LIVING_UNIT_DESC  = :livingUnitDesc ,LU_LEVEL_1_CODE  = :luLevel1Code ,LU_LEVEL_2_CODE  = :luLevel2Code ,LU_LEVEL_3_CODE  = :luLevel3Code ,LU_LEVEL_4_CODE  = :luLevel4Code ,AGENCY_IML_ID  = :agencyImlId ,AGENCY_IML_DESC  = :agencyImlDesc ,AGENCY_IML_LEVEL_1_CODE  = :agencyImlLevel1Code ,AGENCY_IML_LEVEL_2_CODE  = :agencyImlLevel2Code ,AGENCY_IML_LEVEL_3_CODE  = :agencyImlLevel3Code ,TO_AGY_LOC_ID  = :toAgyLocId ,TO_AGY_LOC_DESC  = :toAgyLocDesc ,TO_LOC  = :toLoc ,TO_LOC_DESC  = :toLocDesc ,ESCORT_CODE  = :escortCode ,ESCORT_DESC  = :escortDesc ,DIRECTION_CODE  = :directionCode ,SCHEDULE_MOVEMENT_TIME  = :scheduleMovementTime ,FROM_CITY_CODE  = :fromCityCode ,FROM_CITY_NAME  = :fromCityName ,TO_CITY_CODE  = :toCityCode ,TO_CITY_NAME  = :toCityName ,TO_INTERNAL_LOCATION_ID  = :toInternalLocationId ,TO_INTERNAL_LOCATION_DESC  = :toInternalLocationDesc ,TO_INT_LOC_LEVEL_1_CODE  = :toIntLocLevel1Code ,TO_INT_LOC_LEVEL_2_CODE  = :toIntLocLevel2Code ,TO_INT_LOC_LEVEL_3_CODE  = :toIntLocLevel3Code ,TO_INT_LOC_USER_DESC  = :toIntLocUserDesc ,CREDITED_HOURS  = :creditedHours ,ENGAGEMENT_CODE  = :engagementCode ,UNDERSTANDING_CODE  = :understandingCode ,PIECE_WORK  = :pieceWork ,IN_TIME  = :inTime ,OUT_TIME  = :outTime ,PERFORMANCE_CODE  = :performanceCode ,TRANSPORT_CODE  = :transportCode ,SICK_NOTE_EXPIRY_DATE  = :sickNoteExpiryDate ,SICK_NOTE_RECEIVED_DATE  = :sickNoteReceivedDate ,UNEXCUSED_ABSENCE_FLAG  = :unexcusedAbsenceFlag ,UNPAID_WORK_ACTION  = :unpaidWorkAction ,UNPAID_WORK_BEHAVIOUR  = :unpaidWorkBehaviour ,AGREED_TRAVEL_HOUR  = :agreedTravelHour ,CHECK_BOX_1  = :checkBox1 ,CHECK_BOX_2  = :checkBox2 ,HIDDEN_COMMENT_TEXT  = :hiddenCommentText ,IN_CHARGE_STAFF_ID  = :inChargeStaffId ,IN_CHARGE_STAFF_NAME  = :inChargeStaffName ,OFF_PRGREF_ID  = :offPrgrefId ,CONTACT_PERSON_NAME  = :contactPersonName ,TO_ADDRESS_OWNER_CLASS  = :toAddressOwnerClass ,TO_ADDRESS_ID  = :toAddressId ,UNPAID_WORK_SUPERVISOR  = :unpaidWorkSupervisor ,TA_ID  = :taId ,RECORD_SOURCE  = :recordSource ,CHECK_SUM  = :checkSum ,PROV_STATE_CODE  = :provStateCode ,PROV_STATE_DESC  = :provStateDesc ,SCHEDULED_TRIP_ID  = :scheduledTripId where  EVENT_ID  = :eventId
}

OIDSIAPP_OFFSCH_DELETE_V_OFFENDER_ALL_SCHEDULES { 
	DELETE FROM V_OFFENDER_ALL_SCHEDULES where  EVENT_ID  = :eventId 
}


OIDSIAPP_OFF_BKG_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM V_OFFENDER_ALL_SCHEDULES V WHERE V.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OIDSIAPP_CGRICHK_OFFENDER_SCHEDULES_ {
	SELECT  '1' FROM    OFFENDER_SCHEDULE_PERSONS OFF_SPE WHERE   OFF_SPE.SCHEDULE_ID = :P_SCHEDULE_ID
}

OIDSIAPP_CHECK_NA_ {
	SELECT OFFENDER_ID FROM V_HEADER_BLOCK_FN(:USERID) V_HEADER_BLOCK WHERE OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID
}

OIDSIAPP_CHECK_SCHEDULE_CONFLICT {
select
	count(*)
from
	V_OFFENDER_ALL_SCHEDULES_2
where
	OFFENDER_BOOK_ID = :offenderbookid
	and EVENT_STATUS = 'SCH'
	and :EVENT_DATE::timestamp >= EVENT_DATE 
	and :EVENT_DATE::timestamp <= COALESCE(RETURN_DATE, EVENT_DATE)
}

OIDSIAPP_OFF_SCH_PREINSERT_QUERY{
	SELECT NEXTVAL('EVENT_ID') FROM DUAL
}

OIDSIAPP_SCH_INSERT_OFFENDER_IND_SCHEDULES {
INSERT INTO OFFENDER_IND_SCHEDULES(EVENT_ID, OFFENDER_BOOK_ID, EVENT_DATE, START_TIME, END_TIME, EVENT_CLASS, EVENT_TYPE, EVENT_SUB_TYPE, EVENT_STATUS, COMMENT_TEXT, HIDDEN_COMMENT_TEXT, APPLICATION_DATE, PARENT_EVENT_ID, AGY_LOC_ID, TO_AGY_LOC_ID, TO_INTERNAL_LOCATION_ID, FROM_CITY, TO_CITY, CRS_SCH_ID, ORDER_ID, SENTENCE_SEQ, OUTCOME_REASON_CODE, JUDGE_NAME, CHECK_BOX_1, CHECK_BOX_2, CREDITED_HOURS, REPORT_IN_DATE, PIECE_WORK, ENGAGEMENT_CODE, UNDERSTANDING_CODE, DETAILS, CREDITED_WORK_HOUR, AGREED_TRAVEL_HOUR, UNPAID_WORK_SUPERVISOR, UNPAID_WORK_BEHAVIOUR, UNPAID_WORK_ACTION, SICK_NOTE_RECEIVED_DATE, SICK_NOTE_EXPIRY_DATE, COURT_EVENT_RESULT, UNEXCUSED_ABSENCE_FLAG, CREATE_USER_ID, CREATE_DATETIME, ESCORT_CODE, CONFIRM_FLAG, DIRECTION_CODE, TO_CITY_CODE, FROM_CITY_CODE, OFF_PRGREF_ID, IN_TIME, OUT_TIME, PERFORMANCE_CODE, TEMP_ABS_SCH_ID, TRANSPORT_CODE, APPLICATION_TIME, CONTACT_PERSON_NAME, TO_ADDRESS_OWNER_CLASS,  RETURN_DATE, RETURN_TIME, TO_CORPORATE_ID, TA_ID, EVENT_OUTCOME, PROV_STATE_CODE, SEAL_FLAG,MODIFY_USER_ID, MODIFY_DATETIME)
VALUES (:eventId,:offenderBookId,:eventDate,:startTime,:endTime,:eventClass,:eventType,:eventSubType,:eventStatus,:commentText,:hiddenCommentText,:applicationDate,:parentEventId,:agyLocId,:toAgyLocId,:toInternalLocationId, :fromCity,:toCity,:crsSchId,:orderId,:sentenceSeq,:outcomeReasonCode,:judgeName,:checkBox1,:checkBox2,:creditedHours,:reportInDate,:pieceWork,:engagementCode,:understandingCode,:details,:creditedWorkHour,:agreedTravelHour,:unpaidWorkSupervisor,:unpaidWorkBehaviour,:unpaidWorkAction,:sickNoteReceivedDate,:sickNoteExpiryDate,:courtEventResult,:unexcusedAbsenceFlag,:createUserId,current_timestamp,:escortCode,:confirmFlag,:directionCode,:toCityCode,:fromCityCode,:offPrgrefId,:inTime,:outTime,:performanceCode,:tempAbsSchId,:transportCode,:applicationTime,:contactPersonName,:toAddressOwnerClass,:returnDate,:returnTime,:toCorporateId,:taId,:eventOutcome,:provStateCode,:sealFlag, null, null)
}

OIDSIAPP_SCH_UPDATE_V_OFFENDER_ALL_SCHEDULES_2 {
UPDATE V_OFFENDER_ALL_SCHEDULES_2 SET EVENT_DATE = :eventDate ,START_TIME = :startTime,  TO_INTERNAL_LOCATION_ID= :toInternalLocationId, EVENT_SUB_TYPE = :eventSubType , COMMENT_TEXT = :commentText WHERE EVENT_ID  = :eventId
}

OIDSIAPP_SCH_DELETE_V_OFFENDER_ALL_SCHEDULES_2 {     
DELETE FROM V_OFFENDER_ALL_SCHEDULES_2 WHERE EVENT_ID = :eventId
}
OIDSIAPP_SCH_INTERNAL_LOCATION_ID {
select INTERNAL_LOCATION_ID from AGENCY_INTERNAL_LOCATIONS where INTERNAL_LOCATION_CODE = :internalLocationCode and AGY_LOC_ID = :agyLocId
}

OIDSIAPP_GET_LOV_DESCRIPTION {
SELECT
    description
FROM
    reference_codes
WHERE
        domain = 'INT_SCH_RSN'
    AND active_flag = 'Y'
    AND CODE = :CODE
}    
    
OIDSIAPP_SCH_UPDATE_QUERY{
select * from OFFENDER_IND_SCHEDULES where event_id =:eventId
}

OIDSIAPP_CHECK_NONASSOCOATION_SCHEDULE{
SELECT * FROM OFFENDER_IND_SCHEDULES WHERE OFFENDER_BOOK_ID = :offenderBookID AND EVENT_DATE = :eventDate::timestamp and  to_internal_location_id =:toInternalLocationId and event_status = 'SCH'
}

GET_INTERNAL_LOCATION_ID{
select C.INTERNAL_LOCATION_ID locationId from INT_LOC_USAGE_LOCATIONS A , INTERNAL_LOCATION_USAGES B , AGENCY_INTERNAL_LOCATIONS C where A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID and B.INTERNAL_LOCATION_USAGE = 'APP' and A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID and c.agy_loc_id = :agyLocId and c.user_desc = :userDesc limit 1
}