
OIDRELEA_FIND_CGFKOFFEMMOVEMENTREASONCO {
 SELECT MOVE_RSN.MOVEMENT_REASON_CODE MOVEMENT_REASON_CODE /* CG$FK */  ,MOVE_RSN.MOVEMENT_TYPE MOVEMENT_TYPE   ,MOVE_RSN.DESCRIPTION DSP_DESCRIPTION   ,MOVE_RSN.OPEN_CONTACT_FLAG DSP_OPEN_CONTACT_FLAG   ,MOVE_RSN.CLOSE_CONTACT_FLAG DSP_CLOSE_CONTACT_FLAG   ,MOVE_RSN.ACTIVE_FLAG DSP_ACTIVE_FLAG   ,MOVE_RSN.LIST_SEQ    ,MOVE_RSN.EXPIRY_DATE DSP_EXPIRY_DATE   ,MOVE_RSN.CREATE_USER_ID DSP_CREATE_USER_ID  FROM MOVEMENT_REASONS MOVE_RSN  WHERE MOVEMENT_TYPE = 'REL'  AND ACTIVE_FLAG = 'Y'  AND EXPIRY_DATE IS NULL  ORDER BY MOVE_RSN.MOVEMENT_REASON_CODE
}
OIDRELEA_FIND_RGMOVEMENTREASONCODE {
 SELECT MOVEMENT_REASON_CODE CODE , DESCRIPTION, ACTIVE_FLAG    FROM MOVEMENT_REASONS    WHERE MOVEMENT_TYPE = 'REL'      AND ACTIVE_FLAG = 'Y' ORDER BY LIST_SEQ
}
OIDRELEA_OFFEM_FIND_OFFENDER_EXTERNAL_MOVEMENTS {
 SELECT OFFENDER_BOOK_ID ,MOVEMENT_SEQ ,MOVEMENT_DATE ,MOVEMENT_TIME ,INTERNAL_SCHEDULE_TYPE ,INTERNAL_SCHEDULE_REASON_CODE ,MOVEMENT_TYPE ,MOVEMENT_REASON_CODE ,DIRECTION_CODE ,ARREST_AGENCY_LOC_ID ,TO_PROV_STAT_CODE ,ESCORT_CODE ,FROM_AGY_LOC_ID ,TO_AGY_LOC_ID ,ACTIVE_FLAG ,ESCORT_TEXT ,COMMENT_TEXT ,REPORTING_DATE ,TO_CITY ,FROM_CITY ,REPORTING_TIME ,EVENT_ID ,PARENT_EVENT_ID ,TO_COUNTRY_CODE ,OJ_LOCATION_CODE ,APPLICATION_DATE ,APPLICATION_TIME ,TO_ADDRESS_ID ,FROM_ADDRESS_ID ,SEAL_FLAG ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID   FROM OFFENDER_EXTERNAL_MOVEMENTS  
}

OIDRELEA_OFFEM_INSERT_OFFENDER_EXTERNAL_MOVEMENTS {
insert into OFFENDER_EXTERNAL_MOVEMENTS(OFFENDER_BOOK_ID , MOVEMENT_SEQ , MOVEMENT_DATE , MOVEMENT_TIME , INTERNAL_SCHEDULE_TYPE , INTERNAL_SCHEDULE_REASON_CODE , MOVEMENT_TYPE , MOVEMENT_REASON_CODE , DIRECTION_CODE , ARREST_AGENCY_LOC_ID , TO_PROV_STAT_CODE , ESCORT_CODE , FROM_AGY_LOC_ID , TO_AGY_LOC_ID , ACTIVE_FLAG , ESCORT_TEXT , COMMENT_TEXT , REPORTING_DATE , TO_CITY , FROM_CITY , REPORTING_TIME , EVENT_ID , PARENT_EVENT_ID , TO_COUNTRY_CODE , OJ_LOCATION_CODE , APPLICATION_DATE , APPLICATION_TIME , TO_ADDRESS_ID , FROM_ADDRESS_ID , SEAL_FLAG , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME ) values(:offenderBookId , :movementSeq , :movementDate , :movementTime , :internalScheduleType , :internalScheduleReasonCode , :movementType , :movementReasonCode , :directionCode , :arrestAgencyLocId , :toProvStatCode , :escortCode , :fromAgyLocId , :toAgyLocId , :activeFlag , :escortText , :commentText , :reportingDate , :toCity , :fromCity , :reportingTime , :eventId , :parentEventId , :toCountryCode , :ojLocationCode , :applicationDate , :applicationTime , :toAddressId , :fromAddressId , :sealFlag , current_timestamp, :createUserId , null ) 
}

OIDRELEA_SYSPFL_FIND_SYSTEM_PROFILES {
 SELECT PROFILE_TYPE ,PROFILE_CODE ,DESCRIPTION ,PROFILE_VALUE ,PROFILE_VALUE_2 ,MODIFY_USER_ID ,OLD_TABLE_NAME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG   FROM SYSTEM_PROFILES 
}


OIDRELEA_OFF_EM_PREINSERT_C {
 SELECT COALESCE (MAX (MOVEMENT_SEQ), 0) + 1 FROM OFFENDER_EXTERNAL_MOVEMENTS WHERE OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID

}

	OIDRELEA_CGFKCHK_OFF_EM_OFF_EM_REF_MOV_C {
 SELECT  '1' FROM   REFERENCE_CODES WHERE  CODE = :CODE
}

	OIDRELEA_CGFKCHK_OFF_EM_OFF_EM_MOVE_RS_C {
 SELECT  '1' FROM   MOVEMENT_REASONS WHERE  MOVEMENT_REASON_CODE = :MOVEMENTREASONCODE
}

	OIDRELEA_CGFKCHK_OFF_EM_OFF_EM_MOVE_C {
 SELECT MOVE_RSN.DESCRIPTION ,MOVE_RSN.OPEN_CONTACT_FLAG ,MOVE_RSN.CLOSE_CONTACT_FLAG ,MOVE_RSN.ACTIVE_FLAG ,MOVE_RSN.LIST_SEQ ,MOVE_RSN.UPDATE_ALLOWED_FLAG ,MOVE_RSN.EXPIRY_DATE ,MOVE_RSN.CREATE_USER_ID FROM   MOVEMENT_REASONS MOVE_RSN WHERE  MOVE_RSN.MOVEMENT_TYPE = :MOVEMENTTYPE AND    MOVE_RSN.MOVEMENT_REASON_CODE = :MOVEMENTREASONCODE 
}

	OIDRELEA_CGWHEN_NEW_FORM_INSTANCE_C {
 SELECT  SYSDATE, USER FROM    SYS.DUAL
}

	OIDRELEA_CALL_TO_SHOW_FINGERPRINT {
 SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE='CLIENT' AND PROFILE_CODE='FINGER_URL'
}
OIDRELEA_OFFEM_UPDATE_OFFENDER_EXTERNAL_MOVEMENTS {
UPDATE OFFENDER_EXTERNAL_MOVEMENTS SET ACTIVE_FLAG= 'N' , modify_user_id =:modifyUserId, modify_datetime = current_timestamp where OFFENDER_BOOK_ID = :offenderBookId
}

OIDRELEA_OFFEM_UPDATE_OFFENDER_BOOKINGS{
UPDATE OFFENDER_BOOKINGS SET ACTIVE_FLAG=:activeFlag,IN_OUT_STATUS=:inOutStatus,STATUS_REASON=:statusReason,AGY_LOC_ID=:AgyLocId, modify_user_id = :modifyUserId,modify_datetime = current_timestamp, living_unit_id = :livingUnitId WHERE OFFENDER_BOOK_ID=:offenderBookId
}

OIDRELEA_UPDATE_OFFENDER_BOOKINGS {
UPDATE OFFENDER_BOOKINGS SET active_flag = 'N', in_out_status = 'OUT', agy_loc_id = 'OUT', living_unit_id = null, agency_iml_id = null, STATUS_REASON=:statusReason, modify_user_id = :modifyUserId,modify_datetime = current_timestamp WHERE OFFENDER_BOOK_ID=:offenderBookId
}
OIDRELEA_ESCAPE_CURSOR {
   SELECT MV.ESC_RECAP_FLAG FROM MOVEMENT_REASONS MV WHERE MV.MOVEMENT_REASON_CODE = :MOVEMENT_REASON_CODE  limit 1

     }
OIDRELEA_INSERT_ESCAPE {
 insert into OFFENDER_ESCAPES (OFFENDER_BOOK_ID, ESCAPE_ID, ESCAPE_DATE, ESCAPE_TIME, ESCAPE_COMMENT_TEXT, ADJUST_SENTENCE_FLAG, IN_COMPANY_FLAG, ESCAPE_MOVEMENT_REASON, ESCAPE_AGY_LOC_ID, CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME) values ( :offenderBookId, NEXTVAL('escape_id'), :escapeDate, :escapeTime, :escapeCommentText, :adjustSentenceFlag, :inCompanyFlag, :escapeMovementReason, :escapeAgyLocId, current_timestamp , :createUserId , null ) 
 }
 OIDRELEA_MOVEMENTDATE_COMPARISON {
   SELECT max(MOVEMENT_DATE) MOVEMENT_DATE, max(MOVEMENT_TIME) MOVEMENT_TIME FROM OFFENDER_EXTERNAL_MOVEMENTS WHERE OFFENDER_BOOK_ID = :offenderBookId
 }
 OIDRELEA_POST_QUERY {
 SELECT INTAKE_AGY_LOC_ID
        FROM OFFENDER_BOOKINGS
       WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID
 }
 OIDRELEA_POST_QUERY_UPDATE {
UPDATE offender_bookings
         SET booking_status = 'C',
         booking_end_date = date_trunc('D',:movementDate::timestamp),
          modify_user_id =:modifyUserId,
         modify_datetime = current_timestamp
       WHERE offender_book_id = :offenderBookId
}
OIDRELEA_GET_PROFILE_VALUE {
 SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE='CLIENT' AND PROFILE_CODE='PS_TERMINATE'
}
OIDRELEA_GET_CLOSE_CONTACT_FLAG {
SELECT MOVE_RSN.CLOSE_CONTACT_FLAG
      FROM   MOVEMENT_REASONS MOVE_RSN
      WHERE  MOVE_RSN.MOVEMENT_REASON_CODE = :MOVEMENTREASONCODE
      AND     movement_type = 'REL'
}
OIDRELEA_GETTING_OLD_DATA{
select * from OFFENDER_BOOKINGS where offender_book_id =:offenderBokkId
}
OIDRELEA_BED_ASSIGNMENT_HISTORIES_QUERY {
select
	*
from
	BED_ASSIGNMENT_HISTORIES
where
	offender_book_id = :offenderBookId
order by
create_datetime desc
limit 1
}

OIDRELEA_GETTING_OFFENDER_EXTERNAL_MOVEMENTS_RECORD{
select * from OFFENDER_EXTERNAL_MOVEMENTS where offender_book_id=:offenderbookId  and MOVEMENT_SEQ=:movementSeq

}
OIDRELEA_BED_ASSIGNMENT_HISTORIES {
 UPDATE BED_ASSIGNMENT_HISTORIES
         SET ASSIGNMENT_END_TIME = :assignmentEndTime,
             ASSIGNMENT_END_DATE = :assignmentEndDate
       WHERE OFFENDER_BOOK_ID = :offenderBookId AND BED_ASSIGN_SEQ = :bedAssignSeq
}

OIDRELEA_GET_CUSTODY_STATUS {
	select status_code from legal_custody_statuses where release_flag = 'Y'
}


OIDRELEA_SAVE_CUSTODY_BOOKINGS{
	insert into oms_owner.offender_legal_adjustments (offender_order_adjust_id, adjust_code, offender_book_id, object_id, object_type, adjust_date, adjust_days, adjust_from_date, adjust_to_date, comment_text, create_datetime, create_user_id, seal_flag, rd_months, rd_weeks, rd_days, rd_years) values(nextval('offender_order_adjust_id_seq'), :adjustCode, :offenderBookId, :objectId, :objectType, :adjustDate, :adjustDays, :adjustFromDate, :adjustToDate, :commentText, current_timestamp, :createUserId, :sealFlag, :rdMonths, :rdWeeks, :rdDays,:rdYears)
}

OIDRELEA_FETCH_ESCAPE_ADJUSTMENTS{
select value from legal_settings ls where code='RRTIEA'
}


OIDCUSTAD_RETRIEVE_ESCAPE_VALUES{
select count(1) from offender_legal_adjustments ola where offender_book_id =:offenderBookId and adjust_code ='ESCP'
}

OIDRELEA_GET_OFFENDER_RELEASE_SCHEDULE {
select * from offender_release_details where offender_book_id=:offenderBookId;
}

OIDRELEA_GET_COMMENT_TEXT
{
select coalesce (( select comment_text from OFFENDER_RELEASE_DETAILS where offender_book_id = :offenderBookId), (select comment_text from offender_external_movements where offender_book_id = :offenderBookId and movement_seq = (select max(movement_seq) from offender_external_movements where offender_book_id = :offenderBookId)))}