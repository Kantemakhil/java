
OCIINTRR_GET_INATKE_REVIEW_DATA {
--  SELECT * FROM OFF_INTAKE_REVIEW_QUEUE where ACCEPTED_FLAG = 'N' and ACCEPTED_DATE IS NULL
 SELECT A.*, B.LAST_NAME ,B.FIRST_NAME ,B.MIDDLE_NAME ,B.AGY_LOC_ID ,B.BIRTH_DATE, B.OFFENDER_ID_DISPLAY,B.OFFENDER_ID,
B.BOOKING_NO FROM ( SELECT
OI.QUEUE_DATETIME,
OI.AGY_LOC_ID_FROM,
OI.AGY_LOC_ID_TO,
OI.INTAKE_REASON,
OI.INTAKE_DATE,
OI.OFFENDER_BOOK_ID,
(SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'SUP_STATUS' AND CODE = OI.SUP_STATUS ) as SUP_STATUS,
CASE WHEN (SELECT count(*) FROM REFERENCE_CODES WHERE DOMAIN = 'SUP_STATUS' AND CODE = OI.SUP_STATUS AND PARENT_CODE = 'B') > 0 THEN 'Y' ELSE 'N' END  BILLABLE_FLAG,
OI.SUP_STATUS_DATETIME,
OI.ACCEPTED_FLAG,
OI.ACCEPTED_DATE,
OI.CREATE_DATETIME,
OI.CREATE_USER_ID,
OI.MODIFY_DATETIME,
OI.MODIFY_USER_ID,
OI.SEAL_FLAG
FROM OFF_INTAKE_REVIEW_QUEUE OI WHERE 
 ACCEPTED_FLAG = 'N' AND ACCEPTED_DATE IS NULL)
A LEFT JOIN 
(SELECT V.OFFENDER_ID_DISPLAY , V.OFFENDER_ID  ,V.LAST_NAME ,V.FIRST_NAME  ,V.OFFENDER_BOOK_ID,
V.MIDDLE_NAME ,tag_header_get_prison_location(v.intake_agy_loc_id,v.living_unit_id,v.agency_iml_id) AGY_LOC_ID ,V.BIRTH_DATE,V.BOOKING_NO FROM V_HEADER_BLOCK_FN(:USERID) V , OFF_INTAKE_REVIEW_QUEUE OII
	WHERE  v.OFFENDER_BOOK_ID = OII.OFFENDER_BOOK_ID AND    v.booking_end_date is null)
B ON   A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID
}
OCIINTRR_INTAKEREVIEW_UPDATE_QUERY {
UPDATE OFF_INTAKE_REVIEW_QUEUE SET ACCEPTED_DATE = current_timestamp ,ACCEPTED_FLAG = 'Y',modify_datetime = current_timestamp,modify_user_id = :modifyUserId
WHERE OFFENDER_BOOK_ID = :offenderBookId  AND QUEUE_DATETIME= :queuedDate
}
