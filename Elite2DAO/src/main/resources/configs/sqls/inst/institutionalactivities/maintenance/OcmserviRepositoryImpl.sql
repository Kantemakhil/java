
OCMSERVI_FIND_RGPSCATEGORY {
 	SELECT REF_CODE.DESCRIPTION  ,REF_CODE.CODE FROM   REFERENCE_CODES REF_CODE WHERE   DOMAIN = 'PS_CATEGORY' AND ( ( ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL  ) OR ( ::MODE = 'ENTER-QUERY' )  ) AND CODE <> 'MED_SCHED'   -- ADDED BY NEERAJ ORDER BY LIST_SEQ , DESCRIPTION ,CODE
}

OCMSERVI_FIND_RGFUNCTIONTYPE {
 	SELECT  DESCRIPTION          ,CODE FROM REFERENCE_CODES WHERE DOMAIN = 'FUNCTION' AND (ACTIVE_FLAG = 'Y' OR :MODE = 'ENTER-QUERY' ) ORDER BY LIST_SEQ ,DESCRIPTION ,CODE
}

OCMSERVI_PRGSRV_FIND_PROGRAM_SERVICES {
 	SELECT  * FROM PROGRAM_SERVICES  
}
OCMSERVI_PRGSRV_INSERT_PROGRAM_SERVICES {
insert into PROGRAM_SERVICES (PROGRAM_ID, PROGRAM_CATEGORY, PROGRAM_CODE, DESCRIPTION, ACTIVE_FLAG, EXPIRY_DATE, COMMENT_TEXT, PROGRAM_CLASS, PARENT_PROGRAM_ID, CONTACT_METHOD, NO_OF_SESSIONS, NO_OF_ALLOWABLE_RESTARTS, NO_OF_ALLOWABLE_ABSENCES, CAPACITY, SESSION_LENGTH, COMPLETION_FLAG, MODULE_FLAG, MODULE_TYPE, BREAK_ALLOWED_FLAG, START_FLAG, NO_OF_WEEKLY_SESSIONS, PROGRAM_STATUS, LIST_SEQ, PHASE_TYPE, START_DATE, END_DATE, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, FUNCTION_TYPE, SEAL_FLAG) values(:programId, :programCategory, :programCode, :description, :activeFlag, :expiryDate, :commentText, 'PRG', :parentProgramId, :contactMethod, :noOfSessions, :noOfAllowableRestarts, :noOfAllowableAbsences, :capacity, :sessionLength, :completionFlag, :moduleFlag, :moduleType, :breakAllowedFlag, 'N', :noOfWeeklySessions, :programStatus, :listSeq, :phaseType, :startDate, :endDate, CURRENT_TIMESTAMP , :createUserId , null , :functionType, :sealFlag)
}

OCMSERVI_PRGSRV_UPDATE_PROGRAM_SERVICES {
 update PROGRAM_SERVICES set DESCRIPTION = :description, FUNCTION_TYPE = :functionType, ACTIVE_FLAG =:activeFlag, EXPIRY_DATE =:expiryDate, COMMENT_TEXT = :commentText, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where PROGRAM_ID = :programId 
}

OCMSERVI_PRGSRV_DELETE_PROGRAM_SERVICES { 
	DELETE FROM PROGRAM_SERVICES where PROGRAM_ID = :programId
}

OCMSERVI_CONSTRAINT_VALIDATIONS {
 SELECT TABLE_NAME
        FROM ALL_CONS_COLUMNS
       WHERE CONSTRAINT_NAME = :P_CONSTRAINT_NAME
}
