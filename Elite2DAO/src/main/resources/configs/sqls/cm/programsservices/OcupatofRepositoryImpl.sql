
OCUPATOF_FIND_RGATTENDANCES {
SELECT
    RC.DESCRIPTION,
    EMO.OUTCOME_CODE CODE
FROM
    EVENT_MEASURE_OUTCOMES   EMO,
    EVENT_MEASURES           EM,
    REFERENCE_CODES          RC
WHERE
    EM.EVENT_TYPE = 'ACP'
    AND EM.EVENT_SUB_TYPE = 'PROG_SESS'
    AND EMO.EVENT_MEASURE_ID = EM.EVENT_MEASURE_ID
    AND EM.ACTIVE_FLAG = 'Y'
    AND EMO.ACTIVE_FLAG = 'Y'
    AND RC.CODE = EMO.OUTCOME_CODE
    AND RC.DOMAIN = 'OUTCOMES'
    AND RC.ACTIVE_FLAG = 'Y'
ORDER BY
    EMO.LIST_SEQ,
    RC.DESCRIPTION
    }

OCUPATOF_FIND_RGATTENDANCYVIEW {
	SELECT DESCRIPTION  ,CODE FROM   REFERENCE_CODES  WHERE   DOMAIN = 'PS_ATT_VIEW' AND  ACTIVE_FLAG = 'Y'  ORDER BY LIST_SEQ , DESCRIPTION ,CODE
}

OCUPATOF_FIND_RGENGAGEMENT {
 	SELECT DESCRIPTION  ,CODE FROM   REFERENCE_CODES  WHERE   DOMAIN = 'PS_ENGAGE' AND  ACTIVE_FLAG = 'Y'  ORDER BY LIST_SEQ , DESCRIPTION ,CODE}

OCUPATOF_FIND_RGUNDERSTANDING {
 	SELECT DESCRIPTION  ,CODE FROM   REFERENCE_CODES  WHERE   DOMAIN = 'PS_UNDER' AND  ACTIVE_FLAG = 'Y'   ORDER BY LIST_SEQ , DESCRIPTION ,CODE
}

OCUPATOF_OFFCRSATT_FIND_OFFENDER_COURSE_ATTENDANCES {
 	 SELECT  *
 	 ,CASE WHEN V.EVENT_ID IS NOT NULL  THEN (SELECT PAY_FLAG FROM OFFENDER_COURSE_ATTENDANCES WHERE EVENT_ID = V.EVENT_ID) ELSE 'N' END PAY_FLAG
,CASE WHEN V.EVENT_ID IS NOT NULL  THEN (SELECT PAY_BATCH_ID FROM OFFENDER_COURSE_ATTENDANCES WHERE EVENT_ID = V.EVENT_ID) ELSE NULL END PAY_BATCH_ID
FROM V_OFFENDER_COURSE_EVENTS V 
}

OCUPATOF_OFF_CRS_ATT_POSTQUERY{
	SELECT  DISTINCT MODULE_INSTANCE_DESC FROM  V_ACP_SCHEDULES WHERE  MODULE_INSTANCE_ID =:CRS_ACTY_ID
}

OCUPATOF_OFF_CRS_MODULE_DESCRIPTION {
SELECT DESCRIPTION FROM COURSE_ACTIVITIES WHERE crs_acty_id = :p_crs_acty_id
}

OCUPATOF_OFF_CRS_CATCH_UP_FLAG_DATA {
 SELECT case  when CATCH_UP_CRS_SCH_ID  is null then 'N' else 'Y' end as CATCH_UP_CRS_SCH_ID
           FROM COURSE_SCHEDULES
          WHERE CRS_SCH_ID = :P_CRS_SCH_ID
}

OCUPATOF_UPDATE_V_OFF_CRSE_EVENTS{
UPDATE V_OFFENDER_COURSE_EVENTS
	       SET EVENT_OUTCOME 	   = :eventOutcome,
	       	   COMMENT_TEXT        = :commentText
	     WHERE OFF_PRGREF_ID       = :offPrgrefId
	       AND CRS_ACTY_ID 	   	   = :crsActyId
	       AND CRS_SCH_ID          = :crsSchId
}
GET_OLD_REC_FOR_UPDATE{
select * from OFFENDER_COURSE_ATTENDANCES where event_id = :p_event_id
}