
OIMOFFEN_FIND_CGFKOFNSEVERITYRANKING {
 	SELECT REF_CODE.CODE  CODE       ,REF_CODE.DESCRIPTION  DESCRIPTION FROM   REFERENCE_CODES REF_CODE WHERE   DOMAIN = 'SEVERE_RANK'  AND ACTIVE_FLAG = 'Y'  AND EXPIRED_DATE  IS NULL ORDER BY REF_CODE.LIST_SEQ ,REF_CODE.CODE ,REF_CODE.DESCRIPTION}

OIMOFFEN_FIND_CGFKALWOTOFFENCETYPE {
 	SELECT REF_CODE1.CODE  OFFENCE_TYPE        ,REF_CODE1.DESCRIPTION  DESCRIPTION FROM   REFERENCE_CODES REF_CODE1 WHERE   DOMAIN = 'OFFENCE_TYPE'     AND (      (ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL )       OR '' = 'ENTER-QUERY'      ) ORDER BY REF_CODE1.LIST_SEQ ,REF_CODE1.CODE ,REF_CODE1.DESCRIPTION
}

OIMOFFEN_FIND_OFFINDLOV {
 	SELECT REF_CODE.CODE ,         REF_CODE.DESCRIPTION   FROM REFERENCE_CODES REF_CODE  WHERE DOMAIN = 'OFFENCE_IND'    AND (         (ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL )         OR '' = 'ENTER-QUERY'          )  ORDER BY REF_CODE.LIST_SEQ , REF_CODE.CODE ,REF_CODE.DESCRIPTION
}

OIMOFFEN_FIND_OFNHOOFFSUBCL {
 	SELECT REF_CODE.CODE ,         REF_CODE.DESCRIPTION   FROM REFERENCE_CODES REF_CODE  WHERE DOMAIN = 'HO_OFF_SUBCL'    AND ACTIVE_FLAG = 'Y'    AND EXPIRED_DATE IS NULL  ORDER BY REF_CODE.LIST_SEQ , REF_CODE.CODE
}

OIMOFFEN_FIND_STATSTATUTESCODE {
 	SELECT STAT.STATUTE_CODE CODE,       STAT.DESCRIPTION   FROM STATUTES STAT  WHERE ACTIVE_FLAG = 'Y'    AND EXPIRY_DATE IS NULL  ORDER BY STAT.LIST_SEQ , STAT.STATUTE_CODE
 	}
OIMOFFEN_FIND_RGHOCODE {
 	SELECT HO_CODE CODE ,        DESCRIPTION   FROM HO_CODES   WHERE ACTIVE_FLAG = 'Y'   AND EXPIRY_DATE IS NULL  ORDER BY HO_CODE
}

OIMOFFEN_STAT_FIND_STATUTES {
 	SELECT STATUTE_CODE ,DESCRIPTION ,LEGISLATING_BODY_CODE ,ACTIVE_FLAG ,LIST_SEQ ,UPDATE_ALLOWED_FLAG ,EXPIRY_DATE ,MODIFY_USER_ID ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG   FROM STATUTES  
}
OIMOFFEN_OFN_FIND_OFFENCES {
 	SELECT OFFENCE_ID, OFFENCE_CODE ,STATUTE_CODE ,DESCRIPTION ,OLD_STATUTE_CODE ,SEVERITY_RANKING ,DEFAULT_OFFENCE_TYPE ,MAX_SENTENCE_LENGTH ,SENTENCE_UNIT_CODE ,OFFENCE_GROUP ,UPDATE_ALLOWED_FLAG ,REPEALED_DATE ,ACTIVE_FLAG ,LIST_SEQ ,EXPIRY_DATE ,CHECK_BOX1 ,CHECK_BOX2 ,CHECK_BOX3 ,OFFENSE_DEGREE ,MAX_GOOD_TIME_PERC ,CREATE_DATE ,HO_CODE ,SEAL_FLAG ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID   FROM OFFENCES where  STATUTE_CODE=:STATUTECODE order by offence_code
}
OIMOFFEN_OFN_INSERT_OFFENCES {
 insert into OFFENCES(OFFENCE_ID, OFFENCE_CODE , STATUTE_CODE , DESCRIPTION , OLD_STATUTE_CODE , SEVERITY_RANKING , DEFAULT_OFFENCE_TYPE , MAX_SENTENCE_LENGTH , SENTENCE_UNIT_CODE , OFFENCE_GROUP , UPDATE_ALLOWED_FLAG , REPEALED_DATE , ACTIVE_FLAG , LIST_SEQ , EXPIRY_DATE , CHECK_BOX1 , CHECK_BOX2 , CHECK_BOX3 , OFFENSE_DEGREE , MAX_GOOD_TIME_PERC , CREATE_DATE , HO_CODE , SEAL_FLAG , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME ) values(nextval('offence_id_seq'), :offenceCode , :statuteCode , :description , :oldStatuteCode , :severityRanking , :defaultOffenceType , :maxSentenceLength , :sentenceUnitCode , :offenceGroup , :updateAllowedFlag , :repealedDate , :activeFlag , :listSeq , :expiryDate , :checkBox1 , :checkBox2 , :checkBox3 , :offenseDegree , :maxGoodTimePerc , :createDate , :hoCode , :sealFlag , CURRENT_TIMESTAMP , :createUserId , NULL) 
}

OIMOFFEN_OFN_UPDATE_OFFENCES {
 update OFFENCES set OFFENCE_CODE = :offenceCode , STATUTE_CODE = :statuteCode , DESCRIPTION = :description , OLD_STATUTE_CODE = :oldStatuteCode , SEVERITY_RANKING = :severityRanking , DEFAULT_OFFENCE_TYPE = :defaultOffenceType , MAX_SENTENCE_LENGTH = :maxSentenceLength , SENTENCE_UNIT_CODE = :sentenceUnitCode , OFFENCE_GROUP = :offenceGroup , UPDATE_ALLOWED_FLAG = :updateAllowedFlag , REPEALED_DATE = :repealedDate , ACTIVE_FLAG = :activeFlag , LIST_SEQ = :listSeq , EXPIRY_DATE = :expiryDate , CHECK_BOX1 = :checkBox1 , CHECK_BOX2 = :checkBox2 , CHECK_BOX3 = :checkBox3 , OFFENSE_DEGREE = :offenseDegree , MAX_GOOD_TIME_PERC = :maxGoodTimePerc , CREATE_DATE = :createDate , HO_CODE = :hoCode , SEAL_FLAG = :sealFlag , MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID = :modifyUserId where STATUTE_CODE =:statuteCode and OFFENCE_CODE = :offenceCode and OFFENCE_ID = :offenceId
}

OIMOFFEN_OFN_DELETE_OFFENCES { 
	DELETE FROM OFFENCES where  STATUTE_CODE=:statuteCode  and OFFENCE_CODE  = :offenceCode and OFFENCE_ID = :offenceId
}

OIMOFFEN_ALWOT_FIND_ALLOWABLE_OFFENCE_TYPES {
SELECT OFFENCE_ID,OFFENCE_TYPE ,RECOMMENDED_BAIL_AMOUNT ,BAIL_ALLOWED_FLAG ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM ALLOWABLE_OFFENCE_TYPES
}
OIMOFFEN_ALWOT_INSERT_ALLOWABLE_OFFENCE_TYPES {
 insert into ALLOWABLE_OFFENCE_TYPES(OFFENCE_ID, OFFENCE_TYPE , RECOMMENDED_BAIL_AMOUNT , BAIL_ALLOWED_FLAG , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , SEAL_FLAG ) values(:offenceId, :offenceType , :recommendedBailAmount , :bailAllowedFlag , CURRENT_TIMESTAMP , :createUserId , NULL , :sealFlag ) 
}

OIMOFFEN_ALWOT_UPDATE_ALLOWABLE_OFFENCE_TYPES {
 update ALLOWABLE_OFFENCE_TYPES set OFFENCE_TYPE = :offenceType , RECOMMENDED_BAIL_AMOUNT = :recommendedBailAmount , BAIL_ALLOWED_FLAG = :bailAllowedFlag , MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID = :modifyUserId , SEAL_FLAG = :sealFlag where OFFENCE_TYPE = :offenceType and OFFENCE_ID = :offenceId 
}

OIMOFFEN_ALWOT_DELETE_ALLOWABLE_OFFENCE_TYPES { 
	DELETE FROM ALLOWABLE_OFFENCE_TYPES where  OFFENCE_TYPE  = :offenceType and OFFENCE_ID = :offenceId
}

OIMOFFEN_OFFIND_FIND_OFFENCE_INDICATORS {
SELECT OFFENCE_INDICATOR_ID ,OFFENCE_ID, INDICATOR_CODE ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG, (select description from reference_codes rc where code = INDICATOR_CODE and "domain" ='OFFENCE_IND') as INDICATOR_CODE_DESCRIPTION FROM OFFENCE_INDICATORS where OFFENCE_ID = :OFFENCEID 
}

OIMOFFEN_OFFIND_INSERT_OFFENCE_INDICATORS {
 insert into OFFENCE_INDICATORS(OFFENCE_INDICATOR_ID , OFFENCE_ID, INDICATOR_CODE , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , SEAL_FLAG ) values(:offenceIndicatorId , :offenceId, :indicatorCode , CURRENT_TIMESTAMP , :createUserId , NULL , :sealFlag ) 
}

OIMOFFEN_OFFIND_UPDATE_OFFENCE_INDICATORS {
 update OFFENCE_INDICATORS set OFFENCE_INDICATOR_ID = :offenceIndicatorId , INDICATOR_CODE = :indicatorCode , MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID = :modifyUserId , SEAL_FLAG = :sealFlag where OFFENCE_INDICATOR_ID = :offenceIndicatorId and  OFFENCE_ID = :offenceId
}

OIMOFFEN_OFFIND_DELETE_OFFENCE_INDICATORS { 
	DELETE FROM OFFENCE_INDICATORS where  OFFENCE_INDICATOR_ID  = :offenceIndicatorId  and OFFENCE_ID = :offenceId
}


OIMOFFEN_STAT_ONCHECKDELETEMASTER_OFFENCES {
	SELECT count(*) FROM OFFENCES O WHERE O.STATUTE_CODE = :STATUTECODE
}

OIMOFFEN_OFN_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM ALLOWABLE_OFFENCE_TYPES A WHERE  OFFENCE_ID = :OFFENCEID
}

OIMOFFEN_OFN_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENCE_INDICATORS O WHERE  OFFENCE_ID = :OFFENCEID
}

OIMOFFEN_OFN_ONCHECKDELETEMASTER_OFFENDER_CHARGES {
SELECT COUNT(*) FROM OFFENDER_CHARGES WHERE offence_code = :OFFENCECODE AND statute_code = :STATUTECODE
}

OIMOFFEN_OIMOFFEN_PREINSERT_ {
	 SELECT 'X' FROM OFFENCES WHERE STATUTE_CODE = :STATUTECODE AND  OFFENCE_CODE = :OFFENCECODE AND OFFENCE_ID = :OFFENCEID
}

OIMOFFEN_OIMOFFEN_PREINSERT_ {
 SELECT 'X' FROM ALLOWABLE_OFFENCE_TYPES WHERE    OFFENCE_TYPE = :OFFENCETYPE and OFFENCE_ID = :OFFENCEID
}

OIMOFFEN_OIMOFFEN_PREINSERT_ {
	 SELECT 'X' FROM OFFENCE_INDICATORS WHERE INDICATOR_CODE = :INDICATORCODE and OFFENCE_ID = :OFFENCEID
}

OIMOFFEN_INS_IND_ID {
	SELECT nextval('OFFENCE_INDICATOR_ID') 
}
OIMOFFEN_OIMOFFEN_POSTQUERY{
 SELECT description FROM REFERENCE_CODES WHERE code = :PCODE AND domain = 'LEGISL_BODY'
  }
  
GET_OFFENCE_DATA_ON_STATUTE {
select CODE, DESCRIPTION, ACT, LEGISLATIVE_BODY,ACTIVE_FLAG from ( select OFF.OFFENCE_CODE CODE, OFF.DESCRIPTION DESCRIPTION , STAT.LEGISLATIVE_BODY , STAT.DESCRIPTION ACT, STAT.STATUTE_CODE STATUTE_CODE,STAT.ACTIVE_FLAG from ( select OFFENCE_ID, OFFENCE_CODE, STATUTE_CODE, DESCRIPTION from OFFENCES )off, ( select STATUTE_CODE, LEGISLATIVE_BODY, DESCRIPTION,ACTIVE_FLAG from ( select STATUTE_CODE, DESCRIPTION, LEGISLATING_BODY_CODE,ACTIVE_FLAG from STATUTES) SS, ( select CODE, DESCRIPTION LEGISLATIVE_BODY from REFERENCE_CODES where domain = 'LEGISL_BODY') ref where SS.LEGISLATING_BODY_CODE = REF.CODE )STAT where STAT.STATUTE_CODE = OFF.STATUTE_CODE)a where STATUTE_CODE = :STATUTECODE
}
GET_OFFENCE_DATA_LIST{ 
select CODE, DESCRIPTION, ACT, LEGISLATIVE_BODY, STATUTE_CODE, HO_CODE, SEVERITY_RANKING, OFFENCE_ID, ACTIVE_FLAG from ( select OFF.OFFENCE_CODE CODE, OFF.DESCRIPTION DESCRIPTION , STAT.LEGISLATIVE_BODY , STAT.DESCRIPTION ACT, STAT.STATUTE_CODE STATUTE_CODE, OFF.HO_CODE, off.SEVERITY_RANKING, off.OFFENCE_ID, STAT.ACTIVE_FLAG from ( select OFFENCE_CODE, STATUTE_CODE, DESCRIPTION, HO_CODE, SEVERITY_RANKING, OFFENCE_ID from OFFENCES )off, ( select STATUTE_CODE, LEGISLATIVE_BODY, DESCRIPTION, ACTIVE_FLAG from ( select STATUTE_CODE, DESCRIPTION, LEGISLATING_BODY_CODE, ACTIVE_FLAG from STATUTES) SS, ( select CODE, DESCRIPTION LEGISLATIVE_BODY from REFERENCE_CODES where domain = 'LEGISL_BODY') ref where SS.LEGISLATING_BODY_CODE = REF.CODE )STAT where STAT.STATUTE_CODE = OFF.STATUTE_CODE) a
}
OIMOFFEN_CHK_FOR_DEPENDENT_CHARGES {
select 'Y' from ( select jsonb_array_elements(encode(form_info_json, 'escape')::jsonb)->>'offenceId' as offenceId from ocdchgsu_data ) charges where charges.offenceId = :offenceId::text  limit 1
}