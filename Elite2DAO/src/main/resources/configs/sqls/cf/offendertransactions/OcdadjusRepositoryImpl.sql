
OCDADJUS_OFF_FEE_BILL_TRN_DATA {
-- SELECT OFP.CASELOAD_ID CASELOAD_ID,OFP.FEE_CODE FEECODE,OFP.OFFENDER_FEE_ID,OFBT.* FROM OFF_FEE_BILLS OFB,OFF_FEE_ACCOUNT_PROFILE OFP,OFF_FEE_BILL_TRANSACTIONS OFBT WHERE 
--OFBT.BILL_ID=OFB.BILL_ID AND OFP.OFFENDER_FEE_ID=OFB.OFFENDER_FEE_ID AND OFP.OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID AND OFBT.BILL_STATUS != 'PAID' order by OFBT.bill_txn_datetime desc
SELECT
  OFP.CASELOAD_ID CASELOAD_ID, OFP.FEE_CODE FEECODE, OFP.OFFENDER_FEE_ID,OFP.FEE_ACT_STATUS,
  OFBT.BILL_ID, OFBT.BILL_TXN_NO, OFBT.BILL_TXN_DATETIME,OFB.BILL_GENERATE_AMOUNT,
  OFBT.BILL_TXN_STAFF_ID, OFBT.BILL_TXN_USER, OFBT.BILL_TXN_TYPE, OFB.BILL_DATE BILL_GENERATE_DATETIME,
  OFBT.BILL_TXN_AMOUNT,
-- ((select BILL_TXN_AMOUNT from OFF_FEE_BILL_TRANSACTIONS where BILL_ID = OFBT.BILL_ID and BILL_TXN_NO = OFBT.BILL_TXN_NO -1)- OFBT.BILL_TXN_AMOUNT ) as ADJUSTMENTAMOUNT,
  OFBT.TRUST_TXN_ID, OFBT.TRUST_TXN_ENTRY_SEQ, OFBT.OFF_ADJ_CANC_RSN,
  OFBT.OFF_ADJ_SUB_RSN, OFBT.OFF_ADJ_TXN_ID, OFBT.OFF_ADJ_REV_RSN,
  OFBT.BILL_STATUS, OFBT.BILL_AGING_START_DATE, OFBT.BILL_AGING_END_DATE,
  OFBT.BILL_TXN_COMMENT, OFBT.ORIGINAL_BILL_ID, OFBT.ORIGINAL_BILL_TXN_NO,
  OFBT.ORIGINAL_OFF_ADJ_TXN_ID, OFBT.TXN_STATEMENT_GENERATED_FLAG,
  OFBT.BILLING_STATEMENT_ID, OFBT.CREATE_DATETIME, OFBT.CREATE_USER_ID,
  OFBT.MODIFY_DATETIME, OFBT.MODIFY_USER_ID, OFBT.SEAL_FLAG,
    ( select DESCRIPTION from caseloads where caseload_type = 'COMM' and trust_accounts_flag = 'Y' and caseload_id = OFP.CASELOAD_ID) as CASELOADDESC,
(select deduction_desc from deduction_types where DEDUCTION_CATEGORY = 'FEE' and deduction_type = OFP.FEE_CODE) as FEECODEDESC
FROM
  OFF_FEE_BILLS OFB, OFF_FEE_ACCOUNT_PROFILE OFP, OFF_FEE_BILL_TRANSACTIONS OFBT
WHERE
  OFBT.BILL_ID=OFB.BILL_ID AND
  OFP.OFFENDER_FEE_ID=OFB.OFFENDER_FEE_ID AND
  OFP.OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID AND  
  ofbt.bill_txn_no IN (SELECT MAX(bill_txn_no) FROM OFF_FEE_BILL_TRANSACTIONS WHERE BILL_ID=OFB.BILL_ID ) 
  AND
  OFBT.BILL_STATUS != 'PAID' and OFBT.BILL_TXN_AMOUNT > 0  
order by
  OFBT.bill_id, OFBT.bill_txn_datetime desc


 }
 
 OCDADJUS_GET_ADJUST_TYPE_DATA {
 SELECT TXN_TYPE CODE, DESCRIPTION  FROM TRANSACTION_TYPES  WHERE  TXN_USAGE = (SELECT CODE FROM REFERENCE_CODES WHERE DOMAIN = 'AC_TXN_USG' AND CODE = 'A')
 }
 
 OCDADJUS_OFF_BILL_TRN_INSERT_QUERY {
  INSERT INTO OFF_FEE_BILL_TRANSACTIONS (BILL_ID,BILL_TXN_NO,BILL_TXN_DATETIME,BILL_TXN_STAFF_ID,BILL_TXN_USER,
BILL_TXN_TYPE,BILL_TXN_AMOUNT,TRUST_TXN_ID,TRUST_TXN_ENTRY_SEQ,OFF_ADJ_CANC_RSN,OFF_ADJ_SUB_RSN,OFF_ADJ_TXN_ID,OFF_ADJ_REV_RSN,
BILL_STATUS,BILL_AGING_START_DATE,BILL_AGING_END_DATE,BILL_TXN_COMMENT,ORIGINAL_BILL_ID,ORIGINAL_BILL_TXN_NO,
ORIGINAL_OFF_ADJ_TXN_ID,TXN_STATEMENT_GENERATED_FLAG,BILLING_STATEMENT_ID,CREATE_DATETIME,CREATE_USER_ID,MODIFY_DATETIME,MODIFY_USER_ID,SEAL_FLAG)
values(:billId,:billTxnNo,sysdate(),:billTxnStaffId,:billTxnUser,
:billTxnType,:billTxnAmount,:trustTxnId,:trustTxnEntrySeq,:offAdjCancRsn,:offAdjSubRsn,:offAdjTxnId,:offAdjRevRsn,
:billStatus,:billAgingStartDate,:billAgingEndDate,:billTxnComment,:originalBillId,:originalBillTxnNo,
:originalOffAdjTxnId,:txnStatementGeneratedFlag,:billingStatementId,:createDatetime,:createUserId,:modifyDatetime,:modifyUserId,:sealFlag)
 
 }
 OCDADJUS_OFF_FEE_BILLS_TRANSACTIONS_PRE_INSERT {
 select coalesce(max(BILL_TXN_NO),0)+1 from OFF_FEE_BILL_TRANSACTIONS where BILL_ID = :BILL_ID
 }
 OCDADJUS_GET_SYS_PFL_VALUE {
 SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_CODE = 'BILL_END_DAY'
 }
 OCDADJUS_GET_CASEPLAN_ID {
 SELECT  CASE_PLAN_ID FROM CASE_PLANS WHERE OFFENDER_BOOK_ID =:OFFENDERBOOKID AND CASE_PLAN_STATUS = 'ACTIVE' AND END_DATE IS NULL
 }
 OCDADJUS_UPDATE_OFF_FEE_BILLS {
 UPDATE OFF_FEE_BILLS SET STATEMENT_GENERATED_FLAG = 'Y',BILLING_STATEMENT_ID=:billingStatementId,BILL_STATEMENT_DATE=trunc(:statementGenerateDatetime),
BILL_AR_DUE_DATE=date_trunc('day',:statementGenerateDatetime)+30,BILL_LDPP_START_DATE =date_trunc('day',:statementGenerateDatetime)+31,BILL_LDPP_END_DATE=date_trunc('day',:statementGenerateDatetime)+30 WHERE BILL_ID = :billId
 }
 OCDADJUS_UPDATE_OFF_FEE_BILL_TRANSACTIONS {
 UPDATE OFF_FEE_BILL_TRANSACTIONS SET TXN_STATEMENT_GENERATED_FLAG = 'Y',BILLING_STATEMENT_ID=:billingStatementId,BILL_AGING_START_DATE=date_trunc('day', :billingCycleStartDate),
BILL_AGING_END_DATE=date_trunc('day', :billingCycleEndDate) WHERE BILL_ID = :billId  and BILL_TXN_NO=:billTxnNo;

 }
 OCDADJUS_OFF_BILL_STMT_INSERT_QUERY {
 INSERT INTO OFF_BILLING_STATEMENTS (BILLING_STATEMENT_ID,CASELOAD_ID,ROOT_OFFENDER_ID,BILLING_CYCLE_START_DATE,BILLING_CYCLE_END_DATE,
STATEMENT_GENERATE_DATETIME,STATEMENT_GENERATE_STAFF_ID,STATEMENT_GENERATE_USER,BEGINING_BALANCE_AMOUNT,PAYMENTS_CREDITS_AMOUNT,
BILLINGS_AMOUNT,ENDING_BALANCE_AMOUNT,OFFENDER_BOOK_ID,CASE_PLAN_ID)
VALUES (:billingStatementId,:caseloadId,:rootOffenderId,date_trunc('day',:billingCycleStartDate),date_trunc('day',:billingCycleEndDate),
date_trunc('day',:statementGenerateDatetime),:statementGenerateStaffId,:statementGenerateUser,:beginingBalanceAmount,:paymentsCreditsAmount,
:billingsAmount,:endingBalanceAmount,:offenderBookId,:casePlanId)
}
OCDADJUS_OFF_BILL_STMT_PRE_INSERT_QUERY {
 SELECT nextval('BILLING_STATEMENT_ID') FROM DUAL;
}

OCDADJSU_ADJUST_TRANSACTION_PREINSERT {
SELECT nextval('OFF_ADJ_TXN_ID') FROM DUAL
}

OCDADJSU_POST_EXECUTEQUERY {
select coalesce(ABS(sum(BILLAMOUNT-PAYCRAMT)),0) OWINGAMOUNT from(
select coalesce(SUM(ADJUSTAMOUNT),0)+coalesce(SUM(PAIDAMOUNT),0)-(abs(coalesce(SUM(PAYMENTREVAMOUNT),0)+coalesce(SUM(ADJUSTREVAMOUNT),0))) PAYCRAMT
,SUM(BILLAMOUNT)+coalesce(SUM(BI),0)-abs(coalesce(SUM(BD),0)) BILLAMOUNT
FROM(
SELECT BID BILL_ID,BILL_TXN_AMOUNT,BILL_TXN_TYPE,
case when BILL_TXN_TYPE = 'CBILL' then BILL_TXN_AMOUNT else null end BILLAMOUNT,
case when OFF_ADJ_TXN_ID IS NOT NULL and ORIGINAL_OFF_ADJ_TXN_ID is null then BILL_TXN_AMOUNT else null end ADJUSTAMOUNT,
case when ORIGINAL_OFF_ADJ_TXN_ID IS NOT NULL then BILL_TXN_AMOUNT else null end ADJUSTREVAMOUNT,
case when TRUST_TXN_ID IS NOT NULL and ORIGINAL_BILL_ID IS NULL then BILL_TXN_AMOUNT else null end PAIDAMOUNT,
case when TRUST_TXN_ID IS NOT NULL and ORIGINAL_BILL_ID IS NOT NULL then BILL_TXN_AMOUNT else null end PAYMENTREVAMOUNT,
(SELECT ABS(BILL_TXN_AMOUNT) FROM OFF_FEE_BILL_TRANSACTIONS OBT WHERE BILL_ID =BID AND BILL_TXN_NO =BTXN AND
EXISTS(SELECT 1 FROM TRANSACTION_TYPES WHERE TXN_TYPE=OBT.BILL_TXN_TYPE AND TXN_USAGE=(SELECT CODE FROM REFERENCE_CODES WHERE DOMAIN='AC_TXN_USG' AND CODE='BI'))) AS BI,
(SELECT ABS(BILL_TXN_AMOUNT) FROM OFF_FEE_BILL_TRANSACTIONS OBT WHERE BILL_ID =BID AND BILL_TXN_NO =BTXN AND
EXISTS(SELECT 1 FROM TRANSACTION_TYPES WHERE TXN_TYPE=OBT.BILL_TXN_TYPE AND TXN_USAGE=(SELECT CODE FROM REFERENCE_CODES WHERE DOMAIN='AC_TXN_USG' AND CODE='BD'))) AS BD
FROM(
SELECT bill_txn_datetime, BILL_ID BID,BILL_TXN_AMOUNT, BILL_TXN_NO BTXN,BILL_TXN_TYPE,OFF_ADJ_TXN_ID,ORIGINAL_OFF_ADJ_TXN_ID,TRUST_TXN_ID,ORIGINAL_BILL_ID FROM OFF_FEE_BILL_TRANSACTIONS WHERE
BILL_ID :: text =:bill_id :: text
) as a
) as b) as c
}
