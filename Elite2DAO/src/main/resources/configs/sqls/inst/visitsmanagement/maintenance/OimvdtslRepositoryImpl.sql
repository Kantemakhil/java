
OIMVDTSL_FIND_RGAGYVISITDAYS {
 	SELECT DESCRIPTION ,           CODE       FROM REFERENCE_CODES      WHERE DOMAIN = 'WEEK_DAY'       AND (ACTIVE_FLAG = 'Y'        OR ''  = 'ENTER-QUERY' )  ORDER BY LIST_SEQ ,            DESCRIPTION , CODE
}

OIMVDTSL_FIND_RGAGYINTLOC {
 	SELECT  AGY_LOC.DESCRIPTION ,  AGY_LOC.AGY_LOC_ID CODE, AGY_LOC.ACTIVE_FLAG   FROM AGENCY_LOCATIONS AGY_LOC  WHERE AGENCY_LOCATION_TYPE = 'INST'    AND AGY_LOC_ID IN (SELECT AGY_LOC_ID                         FROM CASELOAD_AGENCY_LOCATIONS                        WHERE CASELOAD_ID =  (SELECT WORKING_CASELOAD_ID FROM STAFF_MEMBERS WHERE USER_ID = :userId) )    AND AGY_LOC_ID NOT IN ('OUT' , 'TRN' )    AND (ACTIVE_FLAG = 'Y' OR '' = 'ENTER-QUERY' ) ORDER BY LIST_SEQ ,           DESCRIPTION ,           AGY_LOC_ID
}

OIMVDTSL_FIND_RGAGYVISITSLOTS {
SELECT
A.DESCRIPTION,
A.INTERNAL_LOCATION_ID ,
A.ACTIVE_FLAG
FROM
AGENCY_INTERNAL_LOCATIONS A,
INTERNAL_LOCATION_USAGES B,
INT_LOC_USAGE_LOCATIONS C
WHERE
A.AGY_LOC_ID IN (
SELECT
CA.AGY_LOC_ID
FROM
CASELOAD_AGENCY_LOCATIONS CA
WHERE
CA.CASELOAD_ID = :CASELOAD_ID
AND CA.AGY_LOC_ID = A.AGY_LOC_ID
)
AND A.AGY_LOC_ID = :AGYLOCID
AND B.INTERNAL_LOCATION_USAGE = 'VISIT'
AND B.INTERNAL_LOCATION_USAGE_ID = C.INTERNAL_LOCATION_USAGE_ID
AND C.INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID
ORDER BY
A.LIST_SEQ,
A.DESCRIPTION,
A.INTERNAL_LOCATION_ID

}

OIMVDTSL_FIND_RGWEEKDAY {
 	SELECT WEEK_DAY  FROM AGENCY_VISIT_DAYS WHERE AGY_LOC_ID = ::AGYLOCID
}

OIMVDTSL_AGYVISITDAYS_FIND_AGENCY_VISIT_DAYS {
 	SELECT AGY_LOC_ID ,WEEK_DAY ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM AGENCY_VISIT_DAYS 
}
OIMVDTSL_AGYVISITDAYS_INSERT_AGENCY_VISIT_DAYS {
 insert into AGENCY_VISIT_DAYS(AGY_LOC_ID , WEEK_DAY , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , SEAL_FLAG ) values(:agyLocId , :weekDay , CURRENT_TIMESTAMP , :createUserId , null , :sealFlag ) 
}

OIMVDTSL_AGYVISITDAYS_UPDATE_AGENCY_VISIT_DAYS {
	update agency_visit_days set agy_loc_id =:agylocid, week_day =:weekday, modify_datetime =CURRENT_TIMESTAMP, modify_user_id =:modifyUserid, seal_flag =:sealflag where agy_loc_id =:agylocid and week_day =:weekday
}

OIMVDTSL_AGYVISITDAYS_DELETE_AGENCY_VISIT_DAYS { 
	DELETE FROM AGENCY_VISIT_DAYS where agy_loc_id =:agyLocId and week_day =:weekDay
}

OIMVDTSL_AGYVISITTIMES_FIND_AGENCY_VISIT_TIMES {
 	SELECT agy_loc_id, week_day, time_slot_seq, start_time, end_time, create_datetime, create_user_id, modify_datetime, modify_user_id, seal_flag, active_flag, expiry_date, row_id FROM agency_visit_times
}
OIMVDTSL_AGYVISITTIMES_INSERT_AGENCY_VISIT_TIMES {
 insert into AGENCY_VISIT_TIMES(AGY_LOC_ID , WEEK_DAY , TIME_SLOT_SEQ , START_TIME , END_TIME , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , SEAL_FLAG , ACTIVE_FLAG , EXPIRY_DATE ) values(:agyLocId , :weekDay , :timeSlotSeq , to_timestamp('01/01/1901 ' || TO_CHAR(:startTime ::time, 'HH24:MI'), 'DD/MM/YYYY HH24:MI') , to_timestamp('01/01/1901 ' || TO_CHAR(:endTime ::time, 'HH24:MI'), 'DD/MM/YYYY HH24:MI') , CURRENT_TIMESTAMP , :createUserId , null , :sealFlag , :activeFlag , :expiryDate ) 
}

OIMVDTSL_AGYVISITTIMES_UPDATE_AGENCY_VISIT_TIMES {
	update AGENCY_VISIT_TIMES set START_TIME = to_timestamp('01/01/1901 ' || TO_CHAR(:startTime ::time, 'HH24:MI'), 'DD/MM/YYYY HH24:MI') , END_TIME = to_timestamp('01/01/1901 ' || TO_CHAR(:endTime ::time, 'HH24:MI'), 'DD/MM/YYYY HH24:MI') , MODIFY_DATETIME = CURRENT_TIMESTAMP, MODIFY_USER_ID = :modifyUserId , SEAL_FLAG = :sealFlag , ACTIVE_FLAG = :activeFlag , EXPIRY_DATE = :expiryDate, TIME_SLOT_SEQ = :timeSlotSeq where AGY_LOC_ID = :agyLocId and  WEEK_DAY = :weekDay AND ROW_ID = :rowId
}

OIMVDTSL_AGYVISITTIMES_DELETE_AGENCY_VISIT_TIMES { 
	DELETE FROM AGENCY_VISIT_TIMES where agy_loc_id =:agyLocId and week_day =:weekDay and time_slot_seq =:timeSlotSeq
}

OIMVDTSL_AGYVISITSLOTS_FIND_AGENCY_VISIT_SLOTS {
 	SELECT agency_visit_slot_id, agy_loc_id, week_day, time_slot_seq, internal_location_id, max_groups, max_adults, create_datetime, create_user_id, modify_datetime, modify_user_id, seal_flag FROM agency_visit_slots
}

OIMVDTSL_AGYVISITSLOTS_INSERT_AGENCY_VISIT_SLOTS {
insert into AGENCY_VISIT_SLOTS(AGENCY_VISIT_SLOT_ID , AGY_LOC_ID , WEEK_DAY , TIME_SLOT_SEQ , INTERNAL_LOCATION_ID , MAX_GROUPS , MAX_ADULTS , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , SEAL_FLAG ) values(:agencyVisitSlotId , :agyLocId , :weekDay , :timeSlotSeq , :internalLocationId , :maxGroups , :maxAdults , CURRENT_TIMESTAMP , :createUserId , null , :sealFlag )
}

OIMVDTSL_AGYVISITSLOTS_UPDATE_AGENCY_VISIT_SLOTS {
	 update AGENCY_VISIT_SLOTS set AGENCY_VISIT_SLOT_ID = :agencyVisitSlotId , AGY_LOC_ID = :agyLocId , WEEK_DAY = :weekDay , TIME_SLOT_SEQ = :timeSlotSeq , INTERNAL_LOCATION_ID = :internalLocationId , MAX_GROUPS = :maxGroups , MAX_ADULTS = :maxAdults , MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID = :modifyUserId , SEAL_FLAG = :sealFlag where AGENCY_VISIT_SLOT_ID = :agencyVisitSlotId
}

OIMVDTSL_AGYVISITSLOTS_DELETE_AGENCY_VISIT_SLOTS { 
	DELETE FROM AGENCY_VISIT_SLOTS WHERE AGENCY_VISIT_SLOT_ID  = :agencyVisitSlotId
}


OIMVDTSL_AGY_VISIT_DAYS_ONCHECKDELETEMASTER {
	SELECT count(*) FROM AGENCY_VISIT_TIMES A WHERE A.AGY_LOC_ID = :AGYLOCID AND A.WEEK_DAY = :WEEKDAY
}

OIMVDTSL_AGY_VISIT_TIMES_ONCHECKDELETEMASTER {
	SELECT count(*) FROM AGENCY_VISIT_SLOTS A WHERE A.AGY_LOC_ID = :AGYLOCID AND A.WEEK_DAY = :WEEKDAY AND A.TIME_SLOT_SEQ = :TIMESLOTSEQ
}

OIMVDTSL_AGY_VISIT_TIMES_CHECKBOXCHANGE{
SELECT 'Y' FROM offender_visits ov, agency_visit_slots avs WHERE ov.visit_status = 'SCH' AND ov.visit_date >= date_TRUNC('D',SYSDATE()) AND ov.agency_visit_slot_id = avs.agency_visit_slot_id AND avs.agy_loc_id = :AGYLOCID AND avs.week_day = :WEEKDAY AND avs.time_slot_seq = :TIMESLOTSEQ
}
OIMVDTSL_CONSTRAINT_VALIDATIONS{
SELECT AC1.TABLE_NAME FROM ALL_CONSTRAINTS AC1, ALL_CONSTRAINTS AC2 WHERE AC1.CONSTRAINT_NAME = :CONSTRAINTNAME AND AC2.TABLE_NAME = 'AGENCY_VISIT_SLOTS' AND AC1.CONSTRAINT_TYPE = 'R' AND AC2.CONSTRAINT_NAME = AC1.R_CONSTRAINT_NAME AND AC2.OWNER = AC1.R_OWNER AND AC2.CONSTRAINT_TYPE IN ('P', 'U')
}
OIMVDTSL_CONSTRAINT_VALIDATIONS_TIMES{
SELECT AC1.TABLE_NAME FROM ALL_CONSTRAINTS AC1, ALL_CONSTRAINTS AC2 WHERE AC1.CONSTRAINT_NAME = :CONSTRAINTNAME AND AC2.TABLE_NAME = 'AGENCY_VISIT_TIMES' AND AC1.CONSTRAINT_TYPE = 'R' AND AC2.CONSTRAINT_NAME = AC1.R_CONSTRAINT_NAME AND AC2.OWNER = AC1.R_OWNER AND AC2.CONSTRAINT_TYPE IN ('P', 'U')
}

