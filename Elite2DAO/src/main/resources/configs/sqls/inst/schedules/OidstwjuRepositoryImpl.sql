
OIDSTWJU_FIND_RGESCORT {
 SELECT CODE ,DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'ESCORT' AND ((ACTIVE_FLAG = 'Y' AND coalesce (EXPIRED_DATE,'2020-10-10') = '2020-10-10' ) OR :MODE = 'ENTER-QUERY' ) ORDER BY LIST_SEQ ,DESCRIPTION
}

OIDSTWJU_FIND_RGAGENCYLOCATION {
 	SELECT AGENCY_LOCATIONS.DESCRIPTION DESCRIPTION  ,AGENCY_LOCATIONS.AGY_LOC_ID AGY_LOC_ID   FROM AGENCY_LOCATIONS AGENCY_LOCATIONS  WHERE AGENCY_LOCATION_TYPE  =  'INST' AND AGENCY_LOCATIONS.AGY_LOC_ID <> :AGYLOCID AND AGENCY_LOCATIONS.AGY_LOC_ID NOT IN ('OUT' , 'TRN' ) AND coalesce (AGENCY_LOCATIONS.DEACTIVATION_DATE,'2020-01-01') ='2020-01-01'  ORDER BY DESCRIPTION ,AGY_LOC_ID ASC
}

OIDSTWJU_FIND_RGMOVEREASON {
 	SELECT MOVE_RSN.DESCRIPTION DESCRIPTION , MOVE_RSN.MOVEMENT_REASON_CODE REASON_CODE FROM MOVEMENT_REASONS MOVE_RSN  WHERE MOVE_RSN.MOVEMENT_TYPE = 'TRN' AND ACTIVE_FLAG = 'Y' AND MOVE_RSN.MOVEMENT_REASON_CODE != 'OJ' AND coalesce (EXPIRY_DATE,'2020-01-01') = '2020-01-01' ORDER BY MOVE_RSN.LIST_SEQ ASC  ,MOVE_RSN.DESCRIPTION ASC
}

OIDSTWJU_FIND_RGSTATUS {
 	SELECT DESCRIPTION          ,CODE FROM   REFERENCE_CODES WHERE DOMAIN = 'TRN_SCH_STS'    AND ((ACTIVE_FLAG = 'Y' AND coalesce (EXPIRED_DATE,'2020-01-01')  = '2020-01-01')      OR :MODE = 'ENTER-QUERY' ) ORDER BY  LIST_SEQ ASC , DESCRIPTION ASC
}

OIDSTWJU_FIND_RGPRIORITY {
 	SELECT DESCRIPTION        ,CODE  FROM REFERENCE_CODES WHERE DOMAIN = 'TRN_PRIORITY'    AND ((ACTIVE_FLAG = 'Y' AND coalesce (EXPIRED_DATE,'2020-01-01')  = '2020-01-01' )      OR :MODE = 'ENTER-QUERY' ) ORDER BY LIST_SEQ ASC ,DESCRIPTION asc
}

OIDSTWJU_FIND_RGCANCELREASON {
 	SELECT DESCRIPTION         ,CODE FROM REFERENCE_CODES WHERE DOMAIN = 'TRN_CNCL_RSN'    AND ((ACTIVE_FLAG = 'Y' AND coalesce (EXPIRED_DATE,'2020-01-01')  = '2020-01-01' )      OR :MODE = 'ENTER-QUERY' ) ORDER BY  LIST_SEQ ASC ,DESCRIPTION ASC
}

OIDSTWJU_FIND_RGAPPROVEDBY {
 	SELECT last_name||', '||first_name description         ,LAST_NAME ,   FIRST_NAME         ,MIDDLE_NAME        ,STAFF_ID code, STAFF_ID FROM STAFF_MEMBERS  WHERE STAFF_ID IN (SELECT STAFF_ID FROM STAFF_ACCESSIBLE_CASELOADS  WHERE CASELOAD_ID = :CASELOADID )   AND SUSPENDED_FLAG ='N' AND coalesce (TERMINATION_DATE,'2020-01-01') = '2020-01-01' ORDER BY LAST_NAME ASC ,FIRST_NAME ASC
}

OIDSTWJU_OFFSCH_FIND_V_OFFENDER_ALL_SCHEDULES {
 	SELECT EVENT_ID ,OFFENDER_BOOK_ID ,IN_OUT_STATUS ,BOOKING_NO ,BOOKING_ACTIVE_FLAG ,OFFENDER_ID ,OFFENDER_ID_DISPLAY ,OFFENDER_LAST_NAME ,OFFENDER_FIRST_NAME ,EVENT_DATE ,START_TIME ,END_TIME ,EVENT_CLASS ,EVENT_TYPE ,EVENT_TYPE_DESC ,EVENT_SUB_TYPE ,EVENT_SUB_TYPE_DESC ,ACTIVE_FLAG ,EVENT_STATUS ,EVENT_STATUS_DESC ,EVENT_OUTCOME ,EVENT_OUTCOME_DESC ,BUSY_DATE_FLAG ,OUTCOME_REASON_CODE ,REFERENCE_ID ,APPLICATION_DATE ,APPLICATION_TIME ,RETURN_DATE ,RETURN_TIME ,COMMENT_TEXT ,DETAILS ,AGY_LOC_ID ,AGY_LOC_DESC ,LIVING_UNIT_ID ,LIVING_UNIT_DESC ,LU_LEVEL_1_CODE ,LU_LEVEL_2_CODE ,LU_LEVEL_3_CODE ,LU_LEVEL_4_CODE ,AGENCY_IML_ID ,AGENCY_IML_DESC ,AGENCY_IML_LEVEL_1_CODE ,AGENCY_IML_LEVEL_2_CODE ,AGENCY_IML_LEVEL_3_CODE ,TO_AGY_LOC_ID ,TO_AGY_LOC_DESC ,TO_LOC ,TO_LOC_DESC ,ESCORT_CODE ,ESCORT_DESC ,DIRECTION_CODE ,SCHEDULE_MOVEMENT_TIME ,FROM_CITY_CODE ,FROM_CITY_NAME ,TO_CITY_CODE ,TO_CITY_NAME ,TO_INTERNAL_LOCATION_ID ,TO_INTERNAL_LOCATION_DESC ,TO_INT_LOC_LEVEL_1_CODE ,TO_INT_LOC_LEVEL_2_CODE ,TO_INT_LOC_LEVEL_3_CODE ,TO_INT_LOC_USER_DESC ,CREDITED_HOURS ,ENGAGEMENT_CODE ,UNDERSTANDING_CODE ,PIECE_WORK ,IN_TIME ,OUT_TIME ,PERFORMANCE_CODE ,TRANSPORT_CODE ,SICK_NOTE_EXPIRY_DATE ,SICK_NOTE_RECEIVED_DATE ,UNEXCUSED_ABSENCE_FLAG ,UNPAID_WORK_ACTION ,UNPAID_WORK_BEHAVIOUR ,AGREED_TRAVEL_HOUR ,CHECK_BOX_1 ,CHECK_BOX_2 ,HIDDEN_COMMENT_TEXT ,IN_CHARGE_STAFF_ID ,IN_CHARGE_STAFF_NAME ,OFF_PRGREF_ID ,CONTACT_PERSON_NAME ,TO_ADDRESS_OWNER_CLASS ,TO_ADDRESS_ID ,UNPAID_WORK_SUPERVISOR ,TA_ID ,RECORD_SOURCE ,CHECK_SUM ,PROV_STATE_CODE ,PROV_STATE_DESC ,SCHEDULED_TRIP_ID   FROM V_OFFENDER_ALL_SCHEDULES /*  where  */
}
OIDSTWJU_OFFSCH_INSERT_V_OFFENDER_ALL_SCHEDULES {
	INSERT INTO V_OFFENDER_ALL_SCHEDULES(EVENT_ID ,OFFENDER_BOOK_ID ,IN_OUT_STATUS ,BOOKING_NO ,BOOKING_ACTIVE_FLAG ,OFFENDER_ID ,OFFENDER_ID_DISPLAY ,OFFENDER_LAST_NAME ,OFFENDER_FIRST_NAME ,EVENT_DATE ,START_TIME ,END_TIME ,EVENT_CLASS ,EVENT_TYPE ,EVENT_TYPE_DESC ,EVENT_SUB_TYPE ,EVENT_SUB_TYPE_DESC ,ACTIVE_FLAG ,EVENT_STATUS ,EVENT_STATUS_DESC ,EVENT_OUTCOME ,EVENT_OUTCOME_DESC ,BUSY_DATE_FLAG ,OUTCOME_REASON_CODE ,REFERENCE_ID ,APPLICATION_DATE ,APPLICATION_TIME ,RETURN_DATE ,RETURN_TIME ,COMMENT_TEXT ,DETAILS ,AGY_LOC_ID ,AGY_LOC_DESC ,LIVING_UNIT_ID ,LIVING_UNIT_DESC ,LU_LEVEL_1_CODE ,LU_LEVEL_2_CODE ,LU_LEVEL_3_CODE ,LU_LEVEL_4_CODE ,AGENCY_IML_ID ,AGENCY_IML_DESC ,AGENCY_IML_LEVEL_1_CODE ,AGENCY_IML_LEVEL_2_CODE ,AGENCY_IML_LEVEL_3_CODE ,TO_AGY_LOC_ID ,TO_AGY_LOC_DESC ,TO_LOC ,TO_LOC_DESC ,ESCORT_CODE ,ESCORT_DESC ,DIRECTION_CODE ,SCHEDULE_MOVEMENT_TIME ,FROM_CITY_CODE ,FROM_CITY_NAME ,TO_CITY_CODE ,TO_CITY_NAME ,TO_INTERNAL_LOCATION_ID ,TO_INTERNAL_LOCATION_DESC ,TO_INT_LOC_LEVEL_1_CODE ,TO_INT_LOC_LEVEL_2_CODE ,TO_INT_LOC_LEVEL_3_CODE ,TO_INT_LOC_USER_DESC ,CREDITED_HOURS ,ENGAGEMENT_CODE ,UNDERSTANDING_CODE ,PIECE_WORK ,IN_TIME ,OUT_TIME ,PERFORMANCE_CODE ,TRANSPORT_CODE ,SICK_NOTE_EXPIRY_DATE ,SICK_NOTE_RECEIVED_DATE ,UNEXCUSED_ABSENCE_FLAG ,UNPAID_WORK_ACTION ,UNPAID_WORK_BEHAVIOUR ,AGREED_TRAVEL_HOUR ,CHECK_BOX_1 ,CHECK_BOX_2 ,HIDDEN_COMMENT_TEXT ,IN_CHARGE_STAFF_ID ,IN_CHARGE_STAFF_NAME ,OFF_PRGREF_ID ,CONTACT_PERSON_NAME ,TO_ADDRESS_OWNER_CLASS ,TO_ADDRESS_ID ,UNPAID_WORK_SUPERVISOR ,TA_ID ,RECORD_SOURCE ,CHECK_SUM ,PROV_STATE_CODE ,PROV_STATE_DESC ,SCHEDULED_TRIP_ID ) VALUES(:eventId ,:offenderBookId ,:inOutStatus ,:bookingNo ,:bookingActiveFlag ,:offenderId ,:offenderIdDisplay ,:offenderLastName ,:offenderFirstName ,:eventDate ,:startTime ,:endTime ,:eventClass ,:eventType ,:eventTypeDesc ,:eventSubType ,:eventSubTypeDesc ,:activeFlag ,:eventStatus ,:eventStatusDesc ,:eventOutcome ,:eventOutcomeDesc ,:busyDateFlag ,:outcomeReasonCode ,:referenceId ,:applicationDate ,:applicationTime ,:returnDate ,:returnTime ,:commentText ,:details ,:agyLocId ,:agyLocDesc ,:livingUnitId ,:livingUnitDesc ,:luLevel1Code ,:luLevel2Code ,:luLevel3Code ,:luLevel4Code ,:agencyImlId ,:agencyImlDesc ,:agencyImlLevel1Code ,:agencyImlLevel2Code ,:agencyImlLevel3Code ,:toAgyLocId ,:toAgyLocDesc ,:toLoc ,:toLocDesc ,:escortCode ,:escortDesc ,:directionCode ,:scheduleMovementTime ,:fromCityCode ,:fromCityName ,:toCityCode ,:toCityName ,:toInternalLocationId ,:toInternalLocationDesc ,:toIntLocLevel1Code ,:toIntLocLevel2Code ,:toIntLocLevel3Code ,:toIntLocUserDesc ,:creditedHours ,:engagementCode ,:understandingCode ,:pieceWork ,:inTime ,:outTime ,:performanceCode ,:transportCode ,:sickNoteExpiryDate ,:sickNoteReceivedDate ,:unexcusedAbsenceFlag ,:unpaidWorkAction ,:unpaidWorkBehaviour ,:agreedTravelHour ,:checkBox1 ,:checkBox2 ,:hiddenCommentText ,:inChargeStaffId ,:inChargeStaffName ,:offPrgrefId ,:contactPersonName ,:toAddressOwnerClass ,:toAddressId ,:unpaidWorkSupervisor ,:taId ,:recordSource ,:checkSum ,:provStateCode ,:provStateDesc ,:scheduledTripId )
}

OIDSTWJU_OFFSCH_UPDATE_V_OFFENDER_ALL_SCHEDULES {
	UPDATE V_OFFENDER_ALL_SCHEDULES set EVENT_ID  = :eventId ,OFFENDER_BOOK_ID  = :offenderBookId ,IN_OUT_STATUS  = :inOutStatus ,BOOKING_NO  = :bookingNo ,BOOKING_ACTIVE_FLAG  = :bookingActiveFlag ,OFFENDER_ID  = :offenderId ,OFFENDER_ID_DISPLAY  = :offenderIdDisplay ,OFFENDER_LAST_NAME  = :offenderLastName ,OFFENDER_FIRST_NAME  = :offenderFirstName ,EVENT_DATE  = :eventDate ,START_TIME  = :startTime ,END_TIME  = :endTime ,EVENT_CLASS  = :eventClass ,EVENT_TYPE  = :eventType ,EVENT_TYPE_DESC  = :eventTypeDesc ,EVENT_SUB_TYPE  = :eventSubType ,EVENT_SUB_TYPE_DESC  = :eventSubTypeDesc ,ACTIVE_FLAG  = :activeFlag ,EVENT_STATUS  = :eventStatus ,EVENT_STATUS_DESC  = :eventStatusDesc ,EVENT_OUTCOME  = :eventOutcome ,EVENT_OUTCOME_DESC  = :eventOutcomeDesc ,BUSY_DATE_FLAG  = :busyDateFlag ,OUTCOME_REASON_CODE  = :outcomeReasonCode ,REFERENCE_ID  = :referenceId ,APPLICATION_DATE  = :applicationDate ,APPLICATION_TIME  = :applicationTime ,RETURN_DATE  = :returnDate ,RETURN_TIME  = :returnTime ,COMMENT_TEXT  = :commentText ,DETAILS  = :details ,AGY_LOC_ID  = :agyLocId ,AGY_LOC_DESC  = :agyLocDesc ,LIVING_UNIT_ID  = :livingUnitId ,LIVING_UNIT_DESC  = :livingUnitDesc ,LU_LEVEL_1_CODE  = :luLevel1Code ,LU_LEVEL_2_CODE  = :luLevel2Code ,LU_LEVEL_3_CODE  = :luLevel3Code ,LU_LEVEL_4_CODE  = :luLevel4Code ,AGENCY_IML_ID  = :agencyImlId ,AGENCY_IML_DESC  = :agencyImlDesc ,AGENCY_IML_LEVEL_1_CODE  = :agencyImlLevel1Code ,AGENCY_IML_LEVEL_2_CODE  = :agencyImlLevel2Code ,AGENCY_IML_LEVEL_3_CODE  = :agencyImlLevel3Code ,TO_AGY_LOC_ID  = :toAgyLocId ,TO_AGY_LOC_DESC  = :toAgyLocDesc ,TO_LOC  = :toLoc ,TO_LOC_DESC  = :toLocDesc ,ESCORT_CODE  = :escortCode ,ESCORT_DESC  = :escortDesc ,DIRECTION_CODE  = :directionCode ,SCHEDULE_MOVEMENT_TIME  = :scheduleMovementTime ,FROM_CITY_CODE  = :fromCityCode ,FROM_CITY_NAME  = :fromCityName ,TO_CITY_CODE  = :toCityCode ,TO_CITY_NAME  = :toCityName ,TO_INTERNAL_LOCATION_ID  = :toInternalLocationId ,TO_INTERNAL_LOCATION_DESC  = :toInternalLocationDesc ,TO_INT_LOC_LEVEL_1_CODE  = :toIntLocLevel1Code ,TO_INT_LOC_LEVEL_2_CODE  = :toIntLocLevel2Code ,TO_INT_LOC_LEVEL_3_CODE  = :toIntLocLevel3Code ,TO_INT_LOC_USER_DESC  = :toIntLocUserDesc ,CREDITED_HOURS  = :creditedHours ,ENGAGEMENT_CODE  = :engagementCode ,UNDERSTANDING_CODE  = :understandingCode ,PIECE_WORK  = :pieceWork ,IN_TIME  = :inTime ,OUT_TIME  = :outTime ,PERFORMANCE_CODE  = :performanceCode ,TRANSPORT_CODE  = :transportCode ,SICK_NOTE_EXPIRY_DATE  = :sickNoteExpiryDate ,SICK_NOTE_RECEIVED_DATE  = :sickNoteReceivedDate ,UNEXCUSED_ABSENCE_FLAG  = :unexcusedAbsenceFlag ,UNPAID_WORK_ACTION  = :unpaidWorkAction ,UNPAID_WORK_BEHAVIOUR  = :unpaidWorkBehaviour ,AGREED_TRAVEL_HOUR  = :agreedTravelHour ,CHECK_BOX_1  = :checkBox1 ,CHECK_BOX_2  = :checkBox2 ,HIDDEN_COMMENT_TEXT  = :hiddenCommentText ,IN_CHARGE_STAFF_ID  = :inChargeStaffId ,IN_CHARGE_STAFF_NAME  = :inChargeStaffName ,OFF_PRGREF_ID  = :offPrgrefId ,CONTACT_PERSON_NAME  = :contactPersonName ,TO_ADDRESS_OWNER_CLASS  = :toAddressOwnerClass ,TO_ADDRESS_ID  = :toAddressId ,UNPAID_WORK_SUPERVISOR  = :unpaidWorkSupervisor ,TA_ID  = :taId ,RECORD_SOURCE  = :recordSource ,CHECK_SUM  = :checkSum ,PROV_STATE_CODE  = :provStateCode ,PROV_STATE_DESC  = :provStateDesc ,SCHEDULED_TRIP_ID  = :scheduledTripId where EVENT_ID = :eventId
}

OIDSTWJU_OFFSCH_DELETE_V_OFFENDER_ALL_SCHEDULES { 
	DELETE FROM V_OFFENDER_ALL_SCHEDULES  where EVENT_ID  = :eventId 
}

OIDSTWJU_OFFSWL_FIND_OFFENDER_IND_SCH_WAIT_LISTS {
 	SELECT EVENT_ID ,REQUEST_DATE ,WAIT_LIST_STATUS ,STATUS_DATE ,TRANSFER_PRIORITY ,APPROVED_FLAG ,APPROVED_STAFF_ID ,OUTCOME_REASON_CODE ,COMMENT_TEXT_1 ,COMMENT_TEXT_2 ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM OFFENDER_IND_SCH_WAIT_LISTS  where  EVENT_ID = :eventId
}
OIDSTWJU_OFFSWL_INSERT_OFFENDER_IND_SCH_WAIT_LISTS {
	INSERT INTO OFFENDER_IND_SCH_WAIT_LISTS(EVENT_ID ,REQUEST_DATE ,WAIT_LIST_STATUS ,STATUS_DATE ,TRANSFER_PRIORITY ,APPROVED_FLAG ,APPROVED_STAFF_ID ,OUTCOME_REASON_CODE ,COMMENT_TEXT_1 ,COMMENT_TEXT_2 ,CREATE_DATETIME ,CREATE_USER_ID  ,SEAL_FLAG, MODIFY_USER_ID, MODIFY_DATETIME
	) VALUES(:eventId ,:requestDate ,:waitListStatus ,:statusDate ,:transferPriority ,:approvedFlag ,:approvedStaffId ,:outcomeReasonCode ,:commentText1 ,:commentText2 ,current_timestamp ,:createUserId,:sealFlag, null, null)
}

OIDSTWJU_OFFSWL_UPDATE_OFFENDER_IND_SCH_WAIT_LISTS {
	UPDATE OFFENDER_IND_SCH_WAIT_LISTS set EVENT_ID  = :eventId ,REQUEST_DATE  = :requestDate ,WAIT_LIST_STATUS  = :waitListStatus ,STATUS_DATE  = :statusDate ,TRANSFER_PRIORITY  = :transferPriority ,APPROVED_FLAG  = :approvedFlag ,APPROVED_STAFF_ID  = :approvedStaffId ,OUTCOME_REASON_CODE  = :outcomeReasonCode ,COMMENT_TEXT_1  = :commentText1 ,COMMENT_TEXT_2  = :commentText2  ,MODIFY_DATETIME  = current_timestamp ,MODIFY_USER_ID  = :modifyUserId ,SEAL_FLAG  = :sealFlag    where EVENT_ID  = :eventId         
}

OIDSTWJU_OFFSWL_DELETE_OFFENDER_IND_SCH_WAIT_LISTS { 
	DELETE FROM OFFENDER_IND_SCH_WAIT_LISTS  where EVENT_ID  = :eventId
}


OIDSTWJU_OFF_BKG_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_IND_SCHEDULES O WHERE O.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OIDSTWJU_OFF_SCH_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_IND_SCH_WAIT_LISTS O WHERE O.EVENT_ID = :EVENTID
}

OIDSTWJU_GET_PROFILE_VALUE_2_ {
	SELECT PROFILE_VALUE_2 FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = P_PROFILE_TYPE AND PROFILE_CODE = :P_PROFILE_CODE
}

OIDSTWJU_SHOW_APPROVED_DETAILS_ {
	SELECT STAFF_ID,LAST_NAME, FIRST_NAME FROM STAFF_MEMBERS WHERE STAFF_ID = :P_STAFF_ID
}

OIDSTWJU_GET_PARENT_CODE_ {
	SELECT PARENT_CODE FROM REFERENCE_CODES WHERE DOMAIN      = 'TRN_SCH_STS' AND CODE        = :WAITLISTSTATUS AND ACTIVE_FLAG = 'Y'
}

OIDSTWJU_OFF_SCH_PREINSERT {
	SELECT nextval('EVENT_ID') FROM DUAL
}

OIDSTWJU_GET_CURRENT_DATE {
	SELECT current_timestamp FROM DUAL
}

OIDSTWJU_SCH_INSERT_OFFENDER_IND_SCHEDULES {
INSERT INTO OFFENDER_IND_SCHEDULES(EVENT_ID, OFFENDER_BOOK_ID, EVENT_DATE, START_TIME, END_TIME, EVENT_CLASS, EVENT_TYPE, EVENT_SUB_TYPE, EVENT_STATUS, COMMENT_TEXT, HIDDEN_COMMENT_TEXT, APPLICATION_DATE, PARENT_EVENT_ID, AGY_LOC_ID, TO_AGY_LOC_ID, FROM_CITY, TO_CITY, CRS_SCH_ID, ORDER_ID, SENTENCE_SEQ, OUTCOME_REASON_CODE, JUDGE_NAME, CHECK_BOX_1, CHECK_BOX_2, CREDITED_HOURS, REPORT_IN_DATE, PIECE_WORK, ENGAGEMENT_CODE, UNDERSTANDING_CODE, DETAILS, CREDITED_WORK_HOUR, AGREED_TRAVEL_HOUR, UNPAID_WORK_SUPERVISOR, UNPAID_WORK_BEHAVIOUR, UNPAID_WORK_ACTION, SICK_NOTE_RECEIVED_DATE, SICK_NOTE_EXPIRY_DATE, COURT_EVENT_RESULT, UNEXCUSED_ABSENCE_FLAG, CREATE_USER_ID, CREATE_DATETIME, ESCORT_CODE, CONFIRM_FLAG, DIRECTION_CODE, TO_CITY_CODE, FROM_CITY_CODE, OFF_PRGREF_ID, IN_TIME, OUT_TIME, PERFORMANCE_CODE, TEMP_ABS_SCH_ID, TRANSPORT_CODE, APPLICATION_TIME, CONTACT_PERSON_NAME, TO_ADDRESS_OWNER_CLASS,  RETURN_DATE, RETURN_TIME, TO_CORPORATE_ID, TA_ID, EVENT_OUTCOME, PROV_STATE_CODE, SEAL_FLAG, MODIFY_USER_ID, MODIFY_DATETIME)
VALUES (:eventId,:offenderBookId,:eventDate,:startTime,:endTime,:eventClass,:eventType,:eventSubType,:eventStatus,:commentText,:hiddenCommentText,:applicationDate,:parentEventId,:agyLocId,:toAgyLocId,:fromCity,:toCity,:crsSchId,:orderId,:sentenceSeq,:outcomeReasonCode,:judgeName,:checkBox1,:checkBox2,:creditedHours,:reportInDate,:pieceWork,:engagementCode,:understandingCode,:details,:creditedWorkHour,:agreedTravelHour,:unpaidWorkSupervisor,:unpaidWorkBehaviour,:unpaidWorkAction,:sickNoteReceivedDate,:sickNoteExpiryDate,:courtEventResult,:unexcusedAbsenceFlag,:createUserId,current_timestamp,:escortCode,:confirmFlag,:directionCode,:toCityCode,:fromCityCode,:offPrgrefId,:inTime,:outTime,:performanceCode,:tempAbsSchId,:transportCode,:applicationTime,:contactPersonName,:toAddressOwnerClass,:returnDate,:returnTime,:toCorporateId,:taId,:eventOutcome,:provStateCode,:sealFlag, null, null)
}

OIDSTWJU_SCH_SELECT_V_OFFENDER_ALL_SCHEDULES_2 {
	SELECT * FROM V_OFFENDER_ALL_SCHEDULES_2 WHERE EVENT_ID  = :EVENTID

}

OIDSTWJU_SCH_UPDATE_V_OFFENDER_ALL_SCHEDULES_2 {
UPDATE V_OFFENDER_ALL_SCHEDULES_2 SET EVENT_DATE = :eventDate ,START_TIME = :startTime, AGY_LOC_ID= :agyLocId, TO_AGY_LOC_ID = :toAgyLocId, ESCORT_CODE = :escortCode , COMMENT_TEXT = :commentText , HIDDEN_COMMENT_TEXT = :hiddenCommentText , EVENT_STATUS = :eventStatus WHERE EVENT_ID  = :eventId
}
 
OIDSTWJU_SCH_UPDATE_V_OFFENDER_ALL_SCHEDULES_2_WITOUT_EVENTID {
UPDATE OFFENDER_IND_SCHEDULES SET EVENT_DATE = :eventDate ,START_TIME = :startTime, AGY_LOC_ID= :agyLocId, TO_AGY_LOC_ID = :toAgyLocId, ESCORT_CODE = :escortCode , COMMENT_TEXT = :commentText , HIDDEN_COMMENT_TEXT = :hiddenCommentText , EVENT_STATUS = :eventStatus WHERE OFFENDER_BOOK_ID = :offenderBookId AND EVENT_TYPE = eventType AND REFERENCE_ID = :referenceId
}
 
OIDSTWJU_SCH_DELETE_V_OFFENDER_ALL_SCHEDULES _2 {     
DELETE FROM V_OFFENDER_ALL_SCHEDULES_2 WHERE EVENT_ID = :eventId
}

OIDSTWJU_SCH_DELETE_V_OFFENDER_ALL_SCHEDULES _2_WITHOUT_EVENTID {     
DELETE FROM V_OFFENDER_ALL_SCHEDULES_2      WHERE OFFENDER_BOOK_ID = :offenderBookId AND EVENT_TYPE = :eventType  AND REFERENCE_ID = :referenceId
}

OIDSTWJU_OFFSCH_UPDATE_V_OFFENDER_ALL_SCHEDULES_STATUS {
UPDATE V_OFFENDER_ALL_SCHEDULES_2 set EVENT_ID  = :eventId  , EVENT_STATUS  = :eventStatus  WHERE EVENT_ID = :eventId
}

OIDSTWJU_CHECK_SCHEDULE_CONFLICT {
select
	count(*)
from
	V_OFFENDER_ALL_SCHEDULES_2
where
	OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID
	and EVENT_STATUS = 'SCH'
	and :EVENT_DATE::timestamp >= EVENT_DATE 
	and :EVENT_DATE::timestamp <= COALESCE(RETURN_DATE, EVENT_DATE)
}	

OIDSTWJU_CHK_CLASSIFICATION {
SELECT REVIEW_SUP_LEVEL_TYPE  FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID  AND ASSESSMENT_SEQ = ( SELECT MAX ( ASSESSMENT_SEQ ) FROM OFFENDER_ASSESSMENTS  WHERE OFFENDER_BOOK_ID =  :OFFENDER_BOOK_ID   AND REVIEW_SUP_LEVEL_TYPE IS NOT NULL )
}
	
OIDSTWJU_CHK_CLASSIFICATION_AGENCY_INTERNAL_LOCATIONS {
SELECT 'Y' FROM AGENCY_INTERNAL_LOCATIONS  WHERE SECURITY_LEVEL_CODE = :securityLevelCode  AND AGY_LOC_ID = :agyLocId
}

OIDSTWJU_CHK_CLASSIFICATION_AGENCY_INTERNAL_LOCATIONS_SECURITY_CODE {
SELECT 'Y' FROM AGENCY_INTERNAL_LOCATIONS  WHERE coalesce (SECURITY_LEVEL_CODE,'') != ''  AND AGY_LOC_ID = :agyLocId
}

OIDSTWJU_SCH_FIND_DEL_NOTIFICATION {
SELECT NOTI_SEQ, NOTI_MOVE_SEQ  FROM OFFENDER_PEND_NOTIFICATIONS OPN
}

OIDSTWJU_SCH_DEL_NOTIFICATION {
DELETE OFFENDER_NOT_COMPLETIONS WHERE STATUS <> 'COMPLETED' AND NOTI_SEQ = :notiSeq AND NOTI_MOVE_SEQ = :notiMovSeq AND OFFENDER_BOOK_ID = :offenderBookId
}

OIDSTWJU_UPDATE_SCH_DEL_NOTIFICATION {
UPDATE OFFENDER_NOT_COMPLETIONS  SET STATUS = 'CANCEL'   WHERE STATUS <> 'COMPLETED'  AND NOTI_SEQ = :notiSeq   AND NOTI_MOVE_SEQ = :notiMoveSeq  AND OFFENDER_BOOK_ID = :offenderBookId

}

 OIDSTWJU_CHK_NONASSOCIATIONS {
	SELECT *  FROM OFFENDER_NON_ASSOCIATIONS ona
	where ona.offender_book_id=:offenderBookId and ona.NS_OFFENDER_ID in 
	(SELECT  nad.NS_OFFENDER_ID FROM OFFENDER_NA_DETAILS nad 
	where  nad.offender_book_id=:offenderBookId and 
	current_date < coalesce(nad.ns_expiry_date, current_date +1)  and current_date >= nad.ns_effective_date)
 }
 
 OIDSTWJU_CHECK_SCHEDULE_CONFLICTS{
 select
	*
from
	V_OFFENDER_ALL_SCHEDULES
where
	OFFENDER_BOOK_ID = :offenderBookID
	and EVENT_DATE = :eventDate::timestamp 
	and event_status = 'SCH'
	and EVENT_CLASS = 'EXT_MOV'
	and EVENT_TYPE = 'TRN'
	order by EVENT_DATE desc 
	
	}
	
	OIDSTWJU_CHECK_SCHEDULE_CONFLICTS_SAME_FACILITY{
	select
	*
from
	V_OFFENDER_ALL_SCHEDULES
where
	OFFENDER_BOOK_ID = :offenderBookID
	and EVENT_DATE = :eventDate::timestamp 
	and event_status = 'SCH'
	and EVENT_CLASS = 'EXT_MOV'
	and EVENT_TYPE = 'TRN'
	and ( (agy_loc_id !=:agyLocId and  TO_AGY_LOC_ID=:toAgyLocId )or (agy_loc_id =:agyLocId and (TO_AGY_LOC_ID !=:toAgyLocId or TO_AGY_LOC_ID =:toAgyLocId) ))
	order by EVENT_DATE desc 
	}
	
	NONASSOCIATIONS_GET_NONASSOCIATION_OFFENDERS_SAME_LOCATION{ 
            select
	OFFNA.*
from
	(
	select
		ONA.*,
		(
		select
			AGY_LOC_ID
		from
			v_header_block vhb
		where
			offender_book_id = ona.ns_offender_book_id ) as agy_loc_id
	from
		OFFENDER_NON_ASSOCIATIONS ona
	where
		ona.offender_book_id =:offenderBookId
		and ona.NS_OFFENDER_ID in 
	(
		select
			nad.NS_OFFENDER_ID
		from
			OFFENDER_NA_DETAILS nad
		where
			nad.offender_book_id =:offenderBookId
			and 
	current_date < coalesce(nad.ns_expiry_date, current_date + 1)
				and current_date >= nad.ns_effective_date))as OFFNA,
	v_header_block vhb
where
	vhb.OFFENDER_BOOK_ID =:offenderBookId
	and offna.agy_loc_id = vhb.agy_loc_id
	}








	