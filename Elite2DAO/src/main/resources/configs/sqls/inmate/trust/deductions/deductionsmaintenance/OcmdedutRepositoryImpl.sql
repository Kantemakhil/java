
OCMDEDUT_FIND_CGFKDEDTYPECASELOADCODE {
 --	SELECT REF_CODE2.CODE  CASELOAD_CODE  /* CG$FK */        ,REF_CODE2.DESCRIPTION  DSP_DESCRIPTION FROM   REFERENCE_CODES REF_CODE2 WHERE   DOMAIN = 'CSLD_CODE' AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL
select REF_CODE2.CODE CASELOAD_CODE , REF_CODE2.DESCRIPTION DSP_DESCRIPTION from REFERENCE_CODES REF_CODE2 where domain = 'CSLD_CODE' and ACTIVE_FLAG = 'Y' and coalesce (EXPIRED_DATE::timestamp, '2020-12-12')= '2020-12-12'
}

OCMDEDUT_FIND_CGFKDEDTYPEDEDUCTIONCATEGO {
 	--SELECT REF_CODE.CODE  DEDUCTION_CATEGORY  /* CG$FK */        ,REF_CODE.DESCRIPTION  DSP_DESCRIPTION3 FROM   REFERENCE_CODES REF_CODE WHERE   DOMAIN = 'DEDUCT_CAT' AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ORDER BY LIST_SEQ
select REF_CODE.CODE DEDUCTION_CATEGORY /* CG$FK */ , REF_CODE.DESCRIPTION DSP_DESCRIPTION3 from REFERENCE_CODES REF_CODE where domain = 'DEDUCT_CAT' and ACTIVE_FLAG = 'Y' and coalesce (EXPIRED_DATE::timestamp, '2020-12-12')= '2020-12-12' order by LIST_SEQ
}

OCMDEDUT_FIND_CGFKDEDTYPEFROMBALANCETYP {
 	--SELECT REF_CODE1.CODE  FROM_BALANCE_TYPE  /* CG$FK */        ,REF_CODE1.DESCRIPTION  DSP_DESCRIPTION2 FROM   REFERENCE_CODES REF_CODE1 WHERE   DOMAIN = 'BALANCE_TYPE' AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ORDER BY LIST_SEQ
select REF_CODE1.CODE FROM_BALANCE_TYPE /* CG$FK */ , REF_CODE1.DESCRIPTION DSP_DESCRIPTION2 from REFERENCE_CODES REF_CODE1 where domain = 'BALANCE_TYPE' and ACTIVE_FLAG = 'Y' and coalesce (EXPIRED_DATE::timestamp, '2020-12-12')= '2020-12-12' order by LIST_SEQ
}

OCMDEDUT_FIND_RGPARENTDEDUCTIONTYPE {
 	--SELECT DT.DEDUCTION_TYPE CODE, DT.DEDUCTION_DESC DESCRIPTION FROM DEDUCTION_TYPES DT WHERE DT.DEDUCTION_TYPE != :DEDUCTIONTYPE  AND EXISTS (SELECT 1  FROM DEDUCTION_TYPES DT2  WHERE DT2.DEDUCTION_TYPE = DT.DEDUCTION_TYPE AND PARENT_DEDUCTION_TYPE IS NULL )
select DT.DEDUCTION_TYPE CODE, DT.DEDUCTION_DESC DESCRIPTION from DEDUCTION_TYPES DT where DT.DEDUCTION_TYPE != :DEDUCTIONTYPE and exists ( select 1 from DEDUCTION_TYPES DT2 where DT2.DEDUCTION_TYPE = DT.DEDUCTION_TYPE and coalesce (PARENT_DEDUCTION_TYPE::int,0)=0)
}

OCMDEDUT_DEDTYPE_FIND_DEDUCTION_TYPES {
  SELECT DEDUCTION_TYPE, DEDUCTION_DESC, DEDUCTION_CATEGORY, FROM_BALANCE_TYPE, CASELOAD_RESTRICTED_FLAG, INCREMENT_PAYABLES_FLAG, EXPIRY_DATE, ACTIVE_FLAG, UPDATE_ALLOWED_FLAG, MODIFY_USER_ID, MODIFY_DATE, LIST_SEQ, CLP_FLAG, CASELOAD_CODE, PARENT_DEDUCTION_TYPE, PERCENTAGE_OF_PARENT, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, SEAL_FLAG  FROM DEDUCTION_TYPES
}
OCMDEDUT_DEDTYPE_INSERT_DEDUCTION_TYPES {
--	INSERT INTO DEDUCTION_TYPES(DEDUCTION_TYPE, DEDUCTION_DESC, DEDUCTION_CATEGORY, FROM_BALANCE_TYPE, CASELOAD_RESTRICTED_FLAG, INCREMENT_PAYABLES_FLAG, EXPIRY_DATE, ACTIVE_FLAG, UPDATE_ALLOWED_FLAG, MODIFY_USER_ID, MODIFY_DATE, LIST_SEQ, CLP_FLAG, CASELOAD_CODE, PARENT_DEDUCTION_TYPE, PERCENTAGE_OF_PARENT, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, SEAL_FLAG) VALUES(:deductionType, :deductionDesc, :deductionCategory, :fromBalanceType, :caseloadRestrictedFlag, :incrementPayablesFlag, :expiryDate, :activeFlag, :updateAllowedFlag, :modifyUserId, CURRENT_TIMESTAMP, :listSeq, :clpFlag, :caseloadCode, :parentDeductionType, :percentageOfParent, CURRENT_TIMESTAMP, :createUserId, CURRENT_TIMESTAMP, :sealFlag)
    insert into DEDUCTION_TYPES(DEDUCTION_TYPE, DEDUCTION_DESC, DEDUCTION_CATEGORY, FROM_BALANCE_TYPE, CASELOAD_RESTRICTED_FLAG, INCREMENT_PAYABLES_FLAG, EXPIRY_DATE, ACTIVE_FLAG, UPDATE_ALLOWED_FLAG, MODIFY_DATE, LIST_SEQ, CLP_FLAG, CASELOAD_CODE, PARENT_DEDUCTION_TYPE, PERCENTAGE_OF_PARENT, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, SEAL_FLAG) values(:deductionType, :deductionDesc, :deductionCategory, :fromBalanceType, :caseloadRestrictedFlag, :incrementPayablesFlag, :expiryDate, :activeFlag, :updateAllowedFlag, CURRENT_TIMESTAMP, :listSeq, :clpFlag, :caseloadCode, :parentDeductionType, :percentageOfParent, CURRENT_TIMESTAMP, :createUserId, CURRENT_TIMESTAMP, :sealFlag)
}

OCMDEDUT_DEDTYPE_UPDATE_DEDUCTION_TYPES {
--	UPDATE DEDUCTION_TYPES set DEDUCTION_TYPE = :deductionType, DEDUCTION_DESC = :deductionDesc, DEDUCTION_CATEGORY = :deductionCategory, FROM_BALANCE_TYPE = :fromBalanceType, CASELOAD_RESTRICTED_FLAG = :caseloadRestrictedFlag, INCREMENT_PAYABLES_FLAG = :incrementPayablesFlag, EXPIRY_DATE = :expiryDate, ACTIVE_FLAG = :activeFlag, UPDATE_ALLOWED_FLAG = :updateAllowedFlag, MODIFY_USER_ID = :modifyUserId, MODIFY_DATE = CURRENT_TIMESTAMP, LIST_SEQ = :listSeq, CLP_FLAG = :clpFlag, CASELOAD_CODE = :caseloadCode, PARENT_DEDUCTION_TYPE = :parentDeductionType, PERCENTAGE_OF_PARENT = :percentageOfParent, CREATE_DATETIME = :createDatetime, CREATE_USER_ID = :createUserId, MODIFY_DATETIME = CURRENT_TIMESTAMP, SEAL_FLAG = :sealFlag WHERE DEDUCTION_TYPE = :deductionType
	update DEDUCTION_TYPES set DEDUCTION_TYPE = :deductionType, DEDUCTION_DESC = :deductionDesc, DEDUCTION_CATEGORY = :deductionCategory, FROM_BALANCE_TYPE = :fromBalanceType, CASELOAD_RESTRICTED_FLAG = :caseloadRestrictedFlag, INCREMENT_PAYABLES_FLAG = :incrementPayablesFlag, EXPIRY_DATE = :expiryDate, ACTIVE_FLAG = :activeFlag, UPDATE_ALLOWED_FLAG = :updateAllowedFlag, MODIFY_USER_ID = :modifyUserId, MODIFY_DATE = CURRENT_TIMESTAMP, LIST_SEQ = :listSeq, CLP_FLAG = :clpFlag, CASELOAD_CODE = :caseloadCode, PARENT_DEDUCTION_TYPE = :parentDeductionType, PERCENTAGE_OF_PARENT = :percentageOfParent, MODIFY_DATETIME = CURRENT_TIMESTAMP, SEAL_FLAG = :sealFlag where DEDUCTION_TYPE = :deductionType
}

OCMDEDUT_DEDTYPE_DELETE_DEDUCTION_TYPES { 
	DELETE FROM DEDUCTION_TYPES WHERE DEDUCTION_TYPE = :deductionType
}


OCMDEDUT_CGFKCHK_DED_TYPE_DED_TYPE_REF {
	SELECT REF_CODE2.DESCRIPTION FROM   REFERENCE_CODES REF_CODE2 WHERE  REF_CODE2.CODE = :CASELOADCODE AND     DOMAIN = 'CSLD_CODE' AND ACTIVE_FLAG = 'Y' AND coalesce (EXPIRED_DATE::timestamp, '2020-12-12')= '2020-12-12'
}

OCMDEDUT_CGFKCHK_DED_TYPE_DED_TYPE_BALANCE_TYPE {
	SELECT REF_CODE1.DESCRIPTION FROM   REFERENCE_CODES REF_CODE1 WHERE  REF_CODE1.CODE = :FROMBALANCETYPE AND     DOMAIN = 'BALANCE_TYPE' AND ACTIVE_FLAG = 'Y' AND coalesce (EXPIRED_DATE::timestamp, '2020-12-12')= '2020-12-12' ORDER BY LIST_SEQ
}

OCMDEDUT_CGFKCHK_DED_TYPE_DED_TYPE_DEDUCT_CAT {
	SELECT REF_CODE.DESCRIPTION FROM   REFERENCE_CODES REF_CODE WHERE  REF_CODE.CODE = :DEDUCTIONCATEGORY AND     DOMAIN = 'DEDUCT_CAT' AND ACTIVE_FLAG = 'Y' AND  coalesce (EXPIRED_DATE::timestamp, '2020-12-12')= '2020-12-12' ORDER BY LIST_SEQ
}

OCMDEDUT_CGWHEN_NEW_FORM_INSTANCE_ {
--	SELECT  SYSDATE, USER FROM    SYS.DUAL
SELECT CURRENT_TIMESTAMP,'OMS_OWNER'
}

OCMDEDUT_CGRICHK_DEDUCTION_TYPES_ {
	SELECT  '1' FROM    TRANSACTION_TYPES TXN_TYP WHERE   TXN_TYP.CREDIT_OBLIGATION_TYPE = :P_DEDUCTION_TYPE
}

OCMDEDUT_CGRICHK_DEDUCTION_TYPES_ {
	SELECT  '1' FROM    COMM_TRANSACTION_TYPES CM_TXN_ WHERE   CM_TXN_.CREDIT_OBLIGATION_TYPE = :P_DEDUCTION_TYPE
}

OCMDEDUT_CGRICHK_DEDUCTION_TYPES_ {
	SELECT  '1' FROM    DEDUCTION_LIMIT_TYPES DED_LT_ WHERE   DED_LT_.MAX_DEDUCTION_CODE = :P_DEDUCTION_TYPE
}

OCMDEDUT_CGRICHK_DEDUCTION_TYPES_ {
	SELECT  '1' FROM    OFFENDER_SENT_OBLIGATIONS OFF_ST_ WHERE   OFF_ST_.DEDUCTION_TYPE = :P_DEDUCTION_TYPE
}

OCMDEDUT_CGRICHK_DEDUCTION_TYPES_ {
	SELECT  '1' FROM    OFFENDER_DEDUCTIONS OFF_DED WHERE   OFF_DED.DEDUCTION_TYPE = :P_DEDUCTION_TYPE
}
OCMDEDUT_DED_CODE_VALIDATION {
SELECT 'Y' FROM DEDUCTION_TYPES WHERE DEDUCTION_TYPE = :DEDCODE
}
OCMDEDUT_CASELOAD_DEDUCTION_PROFILES {
	SELECT COUNT(*) FROM CASELOAD_DEDUCTION_PROFILES WHERE   DEDUCTION_TYPE = :DEDCODE
}
OCMDEDUT_TRANSACTION_TYPES {
	SELECT COUNT(*) FROM TRANSACTION_TYPES TXN_TYP WHERE TXN_TYP.CREDIT_OBLIGATION_TYPE = :DEDCODE
}
OCMDEDUT_COMM_TRANSACTION_TYPES {
	SELECT COUNT(*) FROM COMM_TRANSACTION_TYPES CM_TXN_ WHERE CM_TXN_.CREDIT_OBLIGATION_TYPE = :DEDCODE
}
OCMDEDUT_DEDUCTION_LIMIT_TYPES {
	SELECT COUNT(*) FROM DEDUCTION_LIMIT_TYPES DED_LT_ WHERE DED_LT_.MAX_DEDUCTION_CODE = :DEDCODE
}
OCMDEDUT_OFFENDER_SENT_OBLIGATIONS {
	SELECT COUNT(*) FROM OFFENDER_SENT_OBLIGATIONS OFF_ST_ WHERE OFF_ST_.DEDUCTION_TYPE = :DEDCODE
}
OCMDEDUT_OFFENDER_DEDUCTIONS {
	SELECT COUNT(*) FROM OFFENDER_DEDUCTIONS OFF_DED WHERE OFF_DED.DEDUCTION_TYPE = :DEDCODE
}