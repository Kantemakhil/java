CREATE OR REPLACE VIEW oms_owner.v_course_activities
AS SELECT ca.course_class,
    ca.crs_acty_id,
    ca.code AS course_activity_code,
    NULL::bigint AS course_phase_id,
    ps.program_category,
    substr(oms_miscellaneous_getdesccode('PS_CATEGORY'::character varying, ps.program_category)::text, 1, 40) AS program_category_desc,
    ps.program_id,
    ps.description AS program_services_desc,
    NULL::character varying AS phase_desc,
    ca.description AS course_activity_desc,
    ca.caseload_type AS environment,
    substr(oms_miscellaneous_getdesccode('CSLD_CODE'::character varying, ca.caseload_type)::text, 1, 40) AS environment_desc,
    ca.active_flag,
    ca.provider_party_class AS provider_class,
    ca.provider_party_id AS provider_id,
    ca.provider_party_code AS provider_code,
    tag_prg_provider_name(ca.provider_party_class, ca.provider_party_id, ca.provider_party_code) AS provider_name,
    ca.placement_corporate_id,
    corp.corporate_name AS agency_contact,
    ca.schedule_start_date,
    ca.schedule_end_date,
    ca.capacity,
    tag_prg_course_vacancy(ca.crs_acty_id) AS vacancy,
    0 AS pqs_number,
    ca.comment_text,
    ca.services_address_id,
    va.suite_number,
    va.street_information,
    va.city_name AS city,
    va.prov_state_desc AS state,
    va.zip_postal_code AS postal_code,
    va.country,
    va.country_desc,
    ca.provider_party_code AS agy_loc_id,
    al.description AS agy_loc_desc,
    al.area_code,
    al.noms_region_code,
    ca.internal_location_id,
    ail.description AS internal_location_desc
   FROM program_services ps,
    course_activities ca
     LEFT JOIN agency_internal_locations ail ON ca.internal_location_id = ail.internal_location_id
     LEFT JOIN v_addresses va ON ca.services_address_id = va.address_id
     LEFT JOIN corporates corp ON ca.placement_corporate_id = corp.corporate_id
     LEFT JOIN agency_locations al ON ca.provider_party_code::text = al.agy_loc_id::text
  WHERE ps.program_id = ca.program_id AND (ps.program_category::text <> 'WR'::text OR COALESCE(ps.program_category::text, ''::text) = ''::text)
UNION ALL
 SELECT 'CRS_PH'::character varying AS course_class,
    cp.parent_crs_acty_id AS crs_acty_id,
    ca.code AS course_activity_code,
    cp.course_phase_id,
    ps.program_category,
    substr(oms_miscellaneous_getdesccode('PS_CATEGORY'::character varying, ps.program_category)::text, 1, 40) AS program_category_desc,
    ps.program_id,
    ps.description AS program_services_desc,
    ph.description AS phase_desc,
    ca.description AS course_activity_desc,
    ca.caseload_type AS environment,
    substr(oms_miscellaneous_getdesccode('CLOAD_TYPE'::character varying, ca.caseload_type)::text, 1, 40) AS environment_desc,
    cp.active_flag,
    cp.provider_party_class AS provider_class,
    cp.provider_party_id AS provider_id,
    cp.provider_party_code AS provider_code,
    tag_prg_provider_name(cp.provider_party_class, cp.provider_party_id, cp.provider_party_code) AS provider_name,
    cp.placement_corporate_id,
    corp.corporate_name AS agency_contact,
    cp.schedule_start_date,
    cp.schedule_end_date,
    cp.capacity,
    tag_prg_course_vacancy(cp.course_phase_id) AS vacancy,
    0 AS pqs_number,
    cp.comment_text,
    cp.services_address_id,
    va.suite_number,
    va.street_information,
    va.city_name AS city,
    va.prov_state_desc AS state,
    va.zip_postal_code AS postal_code,
    va.country,
    va.country_desc,
    ca.provider_party_code AS agy_loc_id,
    al.description AS agy_loc_desc,
    al.area_code,
    al.noms_region_code,
    ca.internal_location_id,
    ail.description AS internal_location_desc
   FROM program_services ps,
    v_program_phases ph,
    course_activities ca,
    v_course_phases cp
     LEFT JOIN agency_internal_locations ail ON cp.internal_location_id = ail.internal_location_id
     LEFT JOIN v_addresses va ON cp.services_address_id = va.address_id
     LEFT JOIN corporates corp ON cp.placement_corporate_id = corp.corporate_id
     LEFT JOIN agency_locations al ON cp.provider_party_code::text = al.agy_loc_id::text
  WHERE cp.parent_crs_acty_id = ca.crs_acty_id AND cp.program_phase_id = ph.program_phase_id AND ps.program_id = ph.program_id AND (ps.program_category::text <> 'WR'::text OR COALESCE(ps.program_category::text, ''::text) = ''::text)
UNION ALL
 SELECT ca.course_class,
    ca.crs_acty_id,
    ca.code AS course_activity_code,
    NULL::bigint AS course_phase_id,
    ps.program_category,
    substr(oms_miscellaneous_getdesccode('PS_CATEGORY'::character varying, ps.program_category)::text, 1, 40) AS program_category_desc,
    ps.program_id,
    ps.description AS program_services_desc,
    NULL::character varying AS phase_desc,
    ca.description AS course_activity_desc,
    ca.caseload_type AS environment,
    substr(oms_miscellaneous_getdesccode('CSLD_CODE'::character varying, ca.caseload_type)::text, 1, 40) AS environment_desc,
    ca.active_flag,
    ca.provider_party_class AS provider_class,
    ca.provider_party_id AS provider_id,
    ca.provider_party_code AS provider_code,
    tag_prg_provider_name(ca.provider_party_class, ca.provider_party_id, ca.provider_party_code) AS provider_name,
    ca.placement_corporate_id,
    corp.corporate_name AS agency_contact,
    ca.schedule_start_date,
    ca.schedule_end_date,
    ca.capacity,
    tag_prg_course_vacancy(ca.crs_acty_id) AS vacancy,
    0 AS pqs_number,
    ca.comment_text,
    ca.services_address_id,
    va.suite_number,
    va.street_information,
    va.city_name AS city,
    va.prov_state_desc AS state,
    va.zip_postal_code AS postal_code,
    va.country,
    va.country_desc,
    ca.agy_loc_id,
    al.description AS agy_loc_desc,
    al.area_code,
    al.noms_region_code,
    ca.internal_location_id,
    ail.description AS internal_location_desc
   FROM program_services ps,
    course_activities ca
     LEFT JOIN agency_internal_locations ail ON ca.internal_location_id = ail.internal_location_id
     LEFT JOIN v_addresses va ON ca.services_address_id = va.address_id
     LEFT JOIN corporates corp ON ca.placement_corporate_id = corp.corporate_id
     LEFT JOIN agency_locations al ON ca.agy_loc_id::text = al.agy_loc_id::text
  WHERE ps.program_id = ca.program_id AND ps.program_category::text = 'WR'::text
UNION ALL
 SELECT 'CRS_PH'::character varying AS course_class,
    cp.parent_crs_acty_id AS crs_acty_id,
    ca.code AS course_activity_code,
    cp.course_phase_id,
    ps.program_category,
    substr(oms_miscellaneous_getdesccode('PS_CATEGORY'::character varying, ps.program_category)::text, 1, 40) AS program_category_desc,
    ps.program_id,
    ps.description AS program_services_desc,
    ph.description AS phase_desc,
    ca.description AS course_activity_desc,
    ca.caseload_type AS environment,
    substr(oms_miscellaneous_getdesccode('CLOAD_TYPE'::character varying, ca.caseload_type)::text, 1, 40) AS environment_desc,
    cp.active_flag,
    cp.provider_party_class AS provider_class,
    cp.provider_party_id AS provider_id,
    cp.provider_party_code AS provider_code,
    tag_prg_provider_name(cp.provider_party_class, cp.provider_party_id, cp.provider_party_code) AS provider_name,
    cp.placement_corporate_id,
    corp.corporate_name AS agency_contact,
    cp.schedule_start_date,
    cp.schedule_end_date,
    cp.capacity,
    tag_prg_course_vacancy(cp.course_phase_id) AS vacancy,
    0 AS pqs_number,
    cp.comment_text,
    cp.services_address_id,
    va.suite_number,
    va.street_information,
    va.city_name AS city,
    va.prov_state_desc AS state,
    va.zip_postal_code AS postal_code,
    va.country,
    va.country_desc,
    ca.agy_loc_id,
    al.description AS agy_loc_desc,
    al.area_code,
    al.noms_region_code,
    ca.internal_location_id,
    ail.description AS internal_location_desc
   FROM program_services ps,
    v_program_phases ph,
    course_activities ca
     LEFT JOIN agency_locations al ON ca.agy_loc_id::text = al.agy_loc_id::text,
    v_course_phases cp
     LEFT JOIN agency_internal_locations ail ON cp.internal_location_id = ail.internal_location_id
     LEFT JOIN v_addresses va ON cp.services_address_id = va.address_id
     LEFT JOIN corporates corp ON cp.placement_corporate_id = corp.corporate_id
  WHERE cp.parent_crs_acty_id = ca.crs_acty_id AND cp.program_phase_id = ph.program_phase_id AND ps.program_id = ph.program_id AND ps.program_category::text = 'WR'::text;