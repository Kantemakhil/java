L_CHECK_DEAD_JOBS{
         SELECT session_id
           FROM locked_modules
          WHERE module_name = 'OIDCOUNT'
            AND user_id = p_user_id
            AND session_id <> :p_session_id
          ORDER BY session_id
 }
 L_TEMP_OIDCOUNT_CUR{
          SELECT reporting_loc_id
           FROM temp_oidcount
          WHERE session_id =:p_session_id
            AND agy_loc_id <> 'CANCEL'
            AND ROWNUM < 2
 }
 
 L_DEAD_JOB{
          SELECT job code
           FROM all_jobs
          WHERE log_user = user
            AND UPPER (REPLACE (what, ' ', NULL)) LIKE
                   'OIDCOUNT.SET_TEMP_OIDCOUNT(' ||:p_session_id || ',%'
 }
 
 DELETE_TEMP_OIDCOUNT{
 	DELETE FROM temp_oidcount WHERE session_id =:p_session_id
 }
 DELETE_AGENCYLOCATION_COUNTS{
 	DELETE FROM agency_location_counts WHERE reporting_loc_id =:reporting_loc_id
 }
          
 DELETE_AGENCY_COUNTS{
 DELETE FROM agency_counts WHERE reporting_loc_id =:reporting_loc_id
 }
 
 DELETE_LOCKED_MODULES{
       DELETE
        FROM locked_modules
       WHERE module_name = 'OIDCOUNT'
         AND user_id = l_user_id
         AND session_id <> :p_session_id
   }
   
 CANCEL_COUNT{
 insert into TEMP_OIDCOUNT (SESSION_ID, AGY_LOC_ID, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME ) select :P_SESSION_ID, 'CANCEL', :createUserId, CURRENT_TIMESTAMP , CURRENT_TIMESTAMP from DUAL where not exists ( select 1 from TEMP_OIDCOUNT where SESSION_ID = :P_SESSION_ID and AGY_LOC_ID = 'CANCEL')
 }  
 
 SUBMIT_COUNT_JOB_COUNT_EXISTS {
 	SELECT COUNT (*)  FROM TEMP_OIDCOUNT WHERE SESSION_ID = :P_SESSION_ID AND AGY_LOC_ID <> 'CANCEL'
 }
 
 SUBMIT_COUNT_JOB_CANCEL_COUNT{
 insert into TEMP_OIDCOUNT (SESSION_ID, AGY_LOC_ID, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME ) select :P_SESSION_ID, 'CANCEL', :createUserId, CURRENT_TIMESTAMP , CURRENT_TIMESTAMP from DUAL where not exists ( select 1 from TEMP_OIDCOUNT where SESSION_ID = :P_SESSION_ID and AGY_loc_id = 'CANCEL')
 }
 
 SUBMIT_COUNT_JOB_INSERT_TEMP_OIDCOUNT{
 insert into TEMP_OIDCOUNT (SESSION_ID, AGY_SEQ, LIST_SEQ, AGY_LOC_ID, LOCATION_TYPE, LOCATION_DESCRIPTION, LOWEST_LOCATION_ID, COUNT_TYPE_ID, COUNT_TYPE_CODE, REPORTING_LOC_ID, SCHEDULED_TIME, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME ) select :P_SESSION_ID, ARL.AGY_SEQ, ARL.LIST_SEQ, ACT.AGY_LOC_ID, ARL.LOCATION_TYPE, LU.DESCRIPTION LOCATION_DESCRIPTION, DECODE ( ARL.LOCATION3_ID, null, DECODE ( ARL.LOCATION2_ID, null, ARL.LOCATION1_ID, ARL.LOCATION2_ID ), ARL.LOCATION3_ID ) LOWEST_LOCATION_ID, ALC.COUNT_TYPE_ID, ACT.COUNT_TYPE_CODE, ALC.REPORTING_LOC_ID, ACT.SCHEDULED_TIME, :createUserId, CURRENT_TIMESTAMP , CURRENT_TIMESTAMP from AGENCY_LOCATION_COUNTS ALC, AGENCY_REPORTING_LOCS ARL, AGENCY_COUNT_TYPES ACT, AGENCY_COUNTS AC, LOCKED_MODULES LM, ( select 'LIV' UNIT_TYPE, LIVING_UNIT_ID, DESCRIPTION from LIVING_UNITS where AGY_LOC_ID = :P_AGY_LOC_ID union all select 'IML', INTERNAL_LOCATION_ID AGENCY_IML_ID, INTERNAL_LOCATION_DESC DESCRIPTION from V_INT_LOC_SUMMARIES where AGY_LOC_ID = :P_AGY_LOC_ID ) LU where ARL.COUNT_TYPE_ID = :P_COUNT_TYPE_ID and ALC.COUNT_TYPE_ID = :P_COUNT_TYPE_ID and ACT.COUNT_TYPE_ID = :P_COUNT_TYPE_ID and ARL.COUNT_TYPE_ID = ALC.COUNT_TYPE_ID and ARL.COUNT_TYPE_ID = ACT.COUNT_TYPE_ID and ( ( ARL.LOCATION_TYPE <> 'INIT' and ( ( ARL.LOCATION3_ID is not null and ARL.LOCATION3_ID = LU.LIVING_UNIT_ID and LU.UNIT_TYPE = 'LIV') or ( ARL.LOCATION2_ID is not null and ARL.LOCATION2_ID = LU.LIVING_UNIT_ID and LU.UNIT_TYPE = 'LIV' and ARL.LOCATION3_ID is null) or ( ARL.LOCATION1_ID is not null and ARL.LOCATION1_ID = LU.LIVING_UNIT_ID and LU.UNIT_TYPE = 'LIV' and ( ARL.LOCATION2_ID is null and ARL.LOCATION3_ID is null)))) or ( ARL.LOCATION_TYPE = 'INIT' and ARL.LOCATION1_ID = LU.LIVING_UNIT_ID and LU.UNIT_TYPE = 'IML')) and TRUNC (ALC.DATE_SUBMITTED) = TRUNC (LM.LOCKED_DATE) and LM.SESSION_ID = :P_SESSION_ID and LM.MODULE_NAME = 'OIDCOUNT' and ARL.AGY_SEQ = ALC.AGY_SEQ and ACT.ACTIVE_FLAG = 'Y' and ARL.ACTIVE_FLAG = 'Y' and ACT.AGY_LOC_ID = :P_AGY_LOC_ID and ACT.COUNT_TYPE_ID = :P_COUNT_TYPE_ID and AC.REPORTING_LOC_ID = ALC.REPORTING_LOC_ID and AC.COUNT_TYPE_ID = ALC.COUNT_TYPE_ID and AC.OUTCOME is null and AC.COUNT_IN_PROGRESS = 'Y' and ACT.SCHEDULED_TIME = :P_SCHEDULED_TIME and (( ARL.LOCATION_TYPE <> 'INIT' or ( ARL.LOCATION_TYPE = 'INIT' and ( exists ( select 1 from OFFENDER_BOOKINGS OBX where OBX.ACTIVE_FLAG = 'Y' and OBX.AGENCY_IML_ID = DECODE ( ARL.LOCATION3_ID, null, DECODE ( ARL.LOCATION2_ID, null, ARL.LOCATION1_ID, ARL.LOCATION2_ID ), ARL.LOCATION3_ID ) and OBX.AGY_LOC_ID = ACT.AGY_LOC_ID and OBX.IN_OUT_STATUS = 'IN') or exists ( select 1 from SYSTEM_PROFILES where PROFILE_TYPE = 'CLIENT' and PROFILE_CODE = 'ZERO_COUNT' and PROFILE_VALUE = 'Y'))) or exists ( select 1 from SYSTEM_PROFILES where PROFILE_TYPE = 'CLIENT' and PROFILE_CODE = 'ZERO_COUNT' and PROFILE_VALUE = 'Y'))) and (( ARL.LOCATION_TYPE = 'INIT' or ( ARL.LOCATION_TYPE <> 'INIT' and ( exists ( select 1 from OFFENDER_BOOKINGS OBX, LIVING_UNITS LUX where OBX.ACTIVE_FLAG = 'Y' and OBX.AGY_LOC_ID = :P_AGY_LOC_ID and OBX.LIVING_UNIT_ID = LUX.LIVING_UNIT_ID and OBX.AGENCY_IML_ID is null and LUX.AGY_LOC_ID = :P_AGY_LOC_ID and LUX.DESCRIPTION like LU.DESCRIPTION || '%' and OBX.AGY_LOC_ID = ACT.AGY_LOC_ID and OBX.IN_OUT_STATUS = 'IN') or exists ( select 1 from SYSTEM_PROFILES where PROFILE_TYPE = 'CLIENT' and PROFILE_CODE = 'ZERO_COUNT' and PROFILE_VALUE = 'Y'))) or exists ( select 1 from SYSTEM_PROFILES where PROFILE_TYPE = 'CLIENT' and PROFILE_CODE = 'ZERO_COUNT' and PROFILE_VALUE = 'Y')))
                              
  }
  
   SUBMIT_COUNT_JOB_REPORTING_LOC_ID{
   		SELECT REPORTING_LOC_ID FROM TEMP_OIDCOUNT WHERE SESSION_ID = :P_SESSION_ID AND REPORTING_LOC_ID IS NOT NULL AND AGY_LOC_ID <> 'CANCEL' AND ROWNUM < 2
   }
   
   SUBMIT_COUNT_JOB_L_TEMP_COUNT_CUR{
       SELECT ROWID,
                AGY_LOC_ID,
                AGY_SEQ,
                LOCATION_TYPE,
                LOWEST_LOCATION_ID,
                LOCATION_DESCRIPTION,
                ACTUAL_COUNT,
                REPORTED_COUNT,
					 OUT_TOTAL,
                COUNT_TYPE_ID,
                REPORTING_LOC_ID,
								TOTAL_MALE,
								TOTAL_FEMALE,
								TOTAL_OTHER,
								TOTAL_MALE_OUT,
								TOTAL_FEMALE_OUT,
								TOTAL_OTHER_OUT
           FROM TEMP_OIDCOUNT
          WHERE SESSION_ID = :P_SESSION_ID
            AND AGY_LOC_ID <> 'CANCEL'
          ORDER BY LOCATION_TYPE, LIST_SEQ
          
    }
    
    SUBMIT_COUNT_JOB_L_CANCEL_FLAG{
    	 SELECT COUNT (*)
           FROM TEMP_OIDCOUNT
          WHERE SESSION_ID =:P_SESSION_ID
            AND AGY_LOC_ID = 'CANCEL'
    }
    
    SUBMIT_COUNT_JOB_DELETE_TEMP_OIDCOUNT{
    	DELETE FROM TEMP_OIDCOUNT WHERE SESSION_ID = :P_SESSION_ID
    }
    
    SUBMIT_COUNT_JOB_L_TERMINATED_SESSION_FLAG{
    	SELECT COUNT (*)
           FROM LOCKED_MODULES LM
          WHERE LM.SESSION_ID = :P_SESSION_ID
            AND LM.MODULE_NAME = 'OIDCOUNT'
    
    }
    
    SUBMIT_COUNT_JOB_DELETE_AGENCY_LOCATION_COUNTS{
    	DELETE FROM AGENCY_LOCATION_COUNTS WHERE REPORTING_LOC_ID = :L_REPORTING_LOC_ID
    }
    
    SUBMIT_COUNT_JOB_DELETE_AGENCY_COUNTS{
    	DELETE FROM AGENCY_COUNTS WHERE REPORTING_LOC_ID = :L_REPORTING_LOC_ID
    }
    
     SUBMIT_COUNT_JOB_L_COUNT_INIT_CUR{
     	SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS
          WHERE ACTIVE_FLAG = 'Y'
            AND AGY_LOC_ID = :P_AGY_LOC_ID
            AND IN_OUT_STATUS = 'IN'
            AND AGENCY_IML_ID IN (SELECT INTERNAL_LOCATION_ID
                      FROM AGENCY_INTERNAL_LOCATIONS
                     CONNECT BY PRIOR INTERNAL_LOCATION_ID = PARENT_INTERNAL_LOCATION_ID
                     START WITH INTERNAL_LOCATION_ID = :P_LOCATION_ID)
     
     }
     
      SUBMIT_COUNT_JOB_L_COUNT_LIV_UNIT_CUR{
      	 SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS
          WHERE ACTIVE_FLAG = 'Y'
            AND IN_OUT_STATUS = 'IN'
            AND AGENCY_IML_ID IS NULL
            AND AGY_LOC_ID = :P_AGY_LOC_ID
            AND LIVING_UNIT_ID IN
                   (SELECT LIVING_UNIT_ID
                      FROM LIVING_UNITS
                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
      
      }
      
      SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_ACTUAL_COUNT{
     update TEMP_OIDCOUNT set ACTUAL_COUNT = :L_ACTUAL_COUNT, DISCREPANCY_COUNT = REPORTED_COUNT - ACTUAL_COUNT, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID 
      }
      
      
     SUBMIT_COUNT_JOB_L_COUNT_INIT_MALE_CUR {
	      SELECT COUNT (*)
	           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
	          WHERE OB.ACTIVE_FLAG = 'Y'
	            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
	            AND OB.IN_OUT_STATUS = 'IN'
		    AND OB.OFFENDER_ID = OFD.OFFENDER_ID
		    AND OFD.SEX_CODE = 'M'
	            AND AGENCY_IML_ID IN (SELECT INTERNAL_LOCATION_ID
	                      FROM AGENCY_INTERNAL_LOCATIONS
	                     CONNECT BY PRIOR INTERNAL_LOCATION_ID = PARENT_INTERNAL_LOCATION_ID
	                     START WITH INTERNAL_LOCATION_ID = :P_LOCATION_ID)
	   }
	   
	   SUBMIT_COUNT_JOB_L_COUNT_LIV_UNIT_MALE_CUR{
		   SELECT COUNT (*)
	           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
	          WHERE OB.ACTIVE_FLAG = 'Y'
	            AND OB.IN_OUT_STATUS = 'IN'
	            AND OB.AGENCY_IML_ID IS NULL
	            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
	            AND OB.LIVING_UNIT_ID IN
	                   (SELECT LIVING_UNIT_ID
	                      FROM LIVING_UNITS
	                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
	                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
							AND OB.OFFENDER_ID = OFD.OFFENDER_ID
							AND OFD.SEX_CODE = 'M'
						
		}
		
		SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_TOTAL_MALE{
		update TEMP_OIDCOUNT set TOTAL_MALE = :L_TOTAL_MALE, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID
		}
		
		SUBMIT_COUNT_JOB_L_COUNT_INIT_FEMALE_CUR {
			SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
          WHERE OB.ACTIVE_FLAG = 'Y'
            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
            AND OB.IN_OUT_STATUS = 'IN'
	    AND OB.OFFENDER_ID = OFD.OFFENDER_ID
            AND OFD.SEX_CODE = 'F'
            AND AGENCY_IML_ID IN (SELECT INTERNAL_LOCATION_ID
                      FROM AGENCY_INTERNAL_LOCATIONS
                     CONNECT BY PRIOR INTERNAL_LOCATION_ID = PARENT_INTERNAL_LOCATION_ID
                     START WITH INTERNAL_LOCATION_ID = :P_LOCATION_ID)
			
		
		}
		
		SUBMIT_COUNT_JOB_L_COUNT_LIV_UNIT_FEMALE_CUR {
		
			SELECT COUNT (*)
	           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
	          WHERE OB.ACTIVE_FLAG = 'Y'
	            AND OB.IN_OUT_STATUS = 'IN'
	            AND OB.AGENCY_IML_ID IS NULL
	            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
	            AND OB.LIVING_UNIT_ID IN
	                   (SELECT LIVING_UNIT_ID
	                      FROM LIVING_UNITS
	                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
	                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
							AND OB.OFFENDER_ID = OFD.OFFENDER_ID
							AND OFD.SEX_CODE = 'F'
			}
			
		SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_TOTAL_FEMALE {
  update TEMP_OIDCOUNT set TOTAL_FEMALE = :L_TOTAL_FEMALE, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID
         }
         
         SUBMIT_COUNT_JOB_L_COUNT_INIT_OTHER_CUR {
	         
	         SELECT COUNT (*)
	           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
	          WHERE OB.ACTIVE_FLAG = 'Y' 
	            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
	            AND OB.IN_OUT_STATUS = 'IN'
		    AND OB.OFFENDER_ID = OFD.OFFENDER_ID
	            AND OFD.SEX_CODE NOT IN ('M','F')
	            AND AGENCY_IML_ID IN (SELECT INTERNAL_LOCATION_ID
	                      FROM AGENCY_INTERNAL_LOCATIONS
	                     CONNECT BY PRIOR INTERNAL_LOCATION_ID = PARENT_INTERNAL_LOCATION_ID
	                     START WITH INTERNAL_LOCATION_ID = :P_LOCATION_ID)
                     
           }
           
           SUBMIT_COUNT_JOB_L_COUNT_LIV_UNIT_OTHER_CUR {
	           SELECT COUNT (*)
	           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
	          WHERE OB.ACTIVE_FLAG = 'Y'
	            AND OB.IN_OUT_STATUS = 'IN'
	            AND OB.AGENCY_IML_ID IS NULL
	            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
	            AND OB.LIVING_UNIT_ID IN
	                   (SELECT LIVING_UNIT_ID
	                      FROM LIVING_UNITS
	                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
	                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
							AND OB.OFFENDER_ID = OFD.OFFENDER_ID
							AND OFD.SEX_CODE NOT IN ('M','F')
			}
			
			SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_TOTAL_OTHER {
	update TEMP_OIDCOUNT set TOTAL_OTHER = :L_TOTAL_OTHER, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID
			
			}
			
			SUBMIT_COUNT_JOB_L_OUT_INIT_CUR {
				 SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS
          WHERE ACTIVE_FLAG = 'Y'
            AND AGENCY_IML_ID = :P_LOCATION_ID
            AND AGY_LOC_ID = :P_AGY_LOC_ID
            AND IN_OUT_STATUS = 'OUT'
			
			}
			
			SUBMIT_COUNT_JOB_L_OUT_LIV_UNIT_CUR {
				SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS
          WHERE ACTIVE_FLAG = 'Y'
            AND IN_OUT_STATUS = 'OUT'
            AND AGENCY_IML_ID IS NULL
            AND AGY_LOC_ID = :P_AGY_LOC_ID
            AND LIVING_UNIT_ID IN
                   (SELECT LIVING_UNIT_ID
                      FROM LIVING_UNITS
                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
			}
			
			SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_OUT_TOTAL {
   update TEMP_OIDCOUNT set OUT_TOTAL = :L_OUT_TOTAL, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID
			}
			
			SUBMIT_COUNT_JOB_L_TOTAL_MALE_OUT_INIT_CUR {
				SELECT COUNT (*)
          		 FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
          		WHERE OB.ACTIVE_FLAG = 'Y'
            	AND OB.AGENCY_IML_ID = :P_LOCATION_ID
            	AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
            	AND OB.IN_OUT_STATUS = 'OUT'
						AND OB.OFFENDER_ID = OFD.OFFENDER_ID
						AND OFD.SEX_CODE = 'M'
			}
			
			SUBMIT_COUNT_JOB_L_TOTAL_MALE_OUT_LIV_UNIT_CUR {
			
			SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
          WHERE OB.ACTIVE_FLAG = 'Y'
            AND OB.IN_OUT_STATUS = 'OUT'
            AND OB.AGENCY_IML_ID IS NULL
            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
            AND OB.LIVING_UNIT_ID IN
                   (SELECT LIVING_UNIT_ID
                      FROM LIVING_UNITS
                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
						AND OB.OFFENDER_ID = OFD.OFFENDER_ID
						AND OFD.SEX_CODE = 'M'
						
			}
			
			SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_TOTAL_MALE_OUT {
	update TEMP_OIDCOUNT set TOTAL_MALE_OUT = :L_TOTAL_MALE_OUT, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID
			
			}
			
			SUBMIT_COUNT_JOB_L_TOTAL_FEMALE_OUT_INIT_CUR {
			
				SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
          WHERE OB.ACTIVE_FLAG = 'Y'
            AND OB.AGENCY_IML_ID = :P_LOCATION_ID
            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
            AND OB.IN_OUT_STATUS = 'OUT'
						AND OB.OFFENDER_ID = OFD.OFFENDER_ID
						AND OFD.SEX_CODE = 'F'
			
			}
			
			SUBMIT_COUNT_JOB_L_TOT_FEMALE_OUT_LIV_UNIT_CUR {
			
				SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
          WHERE OB.ACTIVE_FLAG = 'Y'
            AND OB.IN_OUT_STATUS = 'OUT'
            AND OB.AGENCY_IML_ID IS NULL
            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
            AND OB.LIVING_UNIT_ID IN
                   (SELECT LIVING_UNIT_ID
                      FROM LIVING_UNITS
                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
						AND OB.OFFENDER_ID = OFD.OFFENDER_ID
						AND OFD.SEX_CODE = 'F'
			
			
			}
			
			SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_TOTAL_FEMALE_OUT{
 update TEMP_OIDCOUNT set TOTAL_FEMALE_OUT = :L_TOTAL_FEMALE_OUT, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID
	         }
	         
	         SUBMIT_COUNT_JOB_L_TOTAL_OTHER_OUT_INIT_CUR {
	         	SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
          WHERE OB.ACTIVE_FLAG = 'Y'
            AND OB.AGENCY_IML_ID = :P_LOCATION_ID
            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
            AND OB.IN_OUT_STATUS = 'OUT'
						AND OB.OFFENDER_ID = OFD.OFFENDER_ID
						AND OFD.SEX_CODE NOT IN ('M','F')
	 
	         }
	         
	
	         SUBMIT_COUNT_JOB_L_TOT_OTHER_OUT_LIV_UNIT_CUR {
	         
	         	SELECT COUNT (*)
           FROM OFFENDER_BOOKINGS OB, OFFENDERS OFD
          WHERE OB.ACTIVE_FLAG = 'Y'
            AND OB.IN_OUT_STATUS = 'OUT'
            AND OB.AGENCY_IML_ID IS NULL
            AND OB.AGY_LOC_ID = :P_AGY_LOC_ID
            AND OB.LIVING_UNIT_ID IN
                   (SELECT LIVING_UNIT_ID
                      FROM LIVING_UNITS
                     CONNECT BY PRIOR LIVING_UNIT_ID = PARENT_LIVING_UNIT_ID
                     START WITH LIVING_UNIT_ID = :P_LOCATION_ID)
						AND OB.OFFENDER_ID = OFD.OFFENDER_ID
						AND OFD.SEX_CODE NOT IN ('M','F')
 
	         }
	         
	         
	         SUBMIT_COUNT_JOB_UPDATE_TEMP_OIDCOUNT_TOTAL_OTHER_OUT {
	 update TEMP_OIDCOUNT set TOTAL_OTHER_OUT = :L_TOTAL_OTHER_OUT, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where ctid = :L_ROWID

	         }
	         
	         SUBMIT_COUNT_JOB_GET_JOB{
	         	SELECT JOB
           FROM ALL_JOBS
          WHERE LOG_USER = USER
            AND UPPER (REPLACE (WHAT, ' ', NULL)) LIKE
                   'OIDCOUNT.SET_TEMP_OIDCOUNT(' || :P_SESSION_ID || ',%'

	         }
INSERT_CANCEL_COUNT{
insert into temp_oidcount (session_id, agy_loc_id, create_user_id, create_datetime) select :session_id, 'CANCEL', :createUserId, current_timestamp from dual where not exists ( select 1 from temp_oidcount where session_id = :session_id and agy_loc_id = 'CANCEL')
}
	         