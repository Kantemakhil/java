
OCDXPROG_FIND_RGAVAILABILITYCODE {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'PS_PRG_AVAIL'
	and (ACTIVE_FLAG = 'Y'
		and EXPIRED_DATE is null )
order by
	LIST_SEQ ,
	DESCRIPTION
}

OCDXPROG_FIND_RGPROGRAM {
 	select
	DESCRIPTION ,
	PROGRAM_ID,
	PROGRAM_CODE CODE
from
	PROGRAM_SERVICES
where
	PROGRAM_CATEGORY = 'PWS'
	and (ACTIVE_FLAG = 'Y'
		and EXPIRY_DATE is null )
order by
	DESCRIPTION
}

OCDXPROG_FIND_RGENDREASON {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'PS_END_RSN'
	and (ACTIVE_FLAG = 'Y'
		and EXPIRED_DATE is null )
order by
	LIST_SEQ ,
	DESCRIPTION
}

OCDXPROG_OFFPRGOBLIGATIONS_FIND_OFFENDER_PRG_OBLIGATIONS_OLD {
	select
	*
from
	OFFENDER_PRG_OBLIGATIONS
where
	OFFENDER_PRG_OBLIGATION_ID =:OFFENDER_PRG_OBLIGATION_ID
}

OCDXPROG_OFFPRGOBLIGATIONS_FIND_OFFENDER_PRG_OBLIGATIONS {
 	select
	OFFENDER_PRG_OBLIGATION_ID,
	OFFENDER_BOOK_ID,
	PROGRAM_ID,
	STATUS,
	OFFENDER_SENT_COND_ACT_ID,
	START_DATE,
	END_DATE,
	EVENT_TYPE,
	EVENT_SUB_TYPE,
	COMMENT_TEXT,
	SENTENCE_SEQ,
	LENGTH,
	LENGTH_UNIT,
	OFFENDER_SENT_CONDITION_ID,
	REFERRAL_DATE,
	STATUS_CHANGE_DATE,
	STATUS_CHANGE_REASON,
	SPECIAL_NEED_FLAG,
	AVAILABILITY_CODE,
	OBLIGATION_SOURCE,
	CREATE_DATETIME,
	CREATE_USER_ID,
	MODIFY_DATETIME,
	MODIFY_USER_ID,
	SEAL_FLAG,
	REFERRAL_PRIORITY,
	DECISION_DATE,
	ORDER_TYPE
from
	OFFENDER_PRG_OBLIGATIONS
where
	OFFENDER_BOOK_ID = :OFFENDERBOOKID
	and PROGRAM_ID in (
	select
		PROGRAM_ID
	from
		PROGRAM_SERVICES
	where
		PROGRAM_CATEGORY = 'PWS')
order by
	case when  STATUS = 'COMP'
		then null
		else '-1'
	end
	,
	REFERRAL_DATE desc
}
OCDXPROG_OFFPRGOBLIGATIONS_INSERT_OFFENDER_PRG_OBLIGATIONS {
	INSERT INTO OFFENDER_PRG_OBLIGATIONS(OFFENDER_PRG_OBLIGATION_ID, OFFENDER_BOOK_ID, PROGRAM_ID, STATUS, OFFENDER_SENT_COND_ACT_ID, START_DATE, END_DATE, EVENT_TYPE, EVENT_SUB_TYPE, COMMENT_TEXT, SENTENCE_SEQ, LENGTH, LENGTH_UNIT, OFFENDER_SENT_CONDITION_ID, REFERRAL_DATE, STATUS_CHANGE_DATE, STATUS_CHANGE_REASON, SPECIAL_NEED_FLAG, AVAILABILITY_CODE, OBLIGATION_SOURCE, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, SEAL_FLAG, REFERRAL_PRIORITY, DECISION_DATE,order_type) values(:offenderPrgObligationId, :offenderBookId, :programId, :status, :offenderSentCondActId, :startDate, :endDate, :eventType, :eventSubType, :commentText, :sentenceSeq, :length, :lengthUnit, :offenderSentConditionId, :referralDate, :statusChangeDate, :statusChangeReason, :specialNeedFlag, :availabilityCode, :obligationSource, current_timestamp, :createUserId, null, :sealFlag, :referralPriority, :decisionDate,:orderType)
}

OCDXPROG_OFFPRGOBLIGATIONS_UPDATE_OFFENDER_PRG_OBLIGATIONS { 
    UPDATE OFFENDER_PRG_OBLIGATIONS set OFFENDER_PRG_OBLIGATION_ID = :offenderPrgObligationId, OFFENDER_BOOK_ID = :offenderBookId, PROGRAM_ID = :programId, STATUS = :status, OFFENDER_SENT_COND_ACT_ID = :offenderSentCondActId, START_DATE = :startDate, END_DATE = :endDate, EVENT_TYPE = :eventType, EVENT_SUB_TYPE = :eventSubType, COMMENT_TEXT = :commentText, SENTENCE_SEQ = :sentenceSeq, LENGTH = :length, OFFENDER_SENT_CONDITION_ID = :offenderSentConditionId, REFERRAL_DATE =:referralDate, STATUS_CHANGE_DATE =:statusChangeDate, STATUS_CHANGE_REASON = :statusChangeReason, SPECIAL_NEED_FLAG = :specialNeedFlag, AVAILABILITY_CODE = :availabilityCode, OBLIGATION_SOURCE = :obligationSource, MODIFY_DATETIME = current_timestamp, MODIFY_USER_ID = :modifyUserId, SEAL_FLAG = :sealFlag, REFERRAL_PRIORITY = :referralPriority, DECISION_DATE = :decisionDate where OFFENDER_PRG_OBLIGATION_ID = :offenderPrgObligationId	
} 

OCDXPROG_OFFPRGOBLIGATIONS_DELETE_OFFENDER_PRG_OBLIGATIONS { 
	DELETE FROM OFFENDER_PRG_OBLIGATIONS  WHERE OFFENDER_PRG_OBLIGATION_ID = :offenderPrgObligationId
}

OCDXPROG_OFFPROGRAMPROFILES_FIND_OFFENDER_PROGRAM_PROFILES {
 	SELECT OFF_PRGREF_ID, OFFENDER_BOOK_ID, PROGRAM_ID, OFFENDER_START_DATE, OFFENDER_PROGRAM_STATUS, CRS_ACTY_ID, REFERRAL_PRIORITY, REFERRAL_DATE, REFERRAL_COMMENT_TEXT, OFFENDER_END_REASON, AGREED_TRAVEL_FARE, AGREED_TRAVEL_HOUR, OFFENDER_END_COMMENT_TEXT, REJECT_DATE, WAITLIST_DECISION_CODE, REFERRAL_STAFF_ID, OFFENDER_END_DATE, CREDIT_WORK_HOURS, CREDIT_OTHER_HOURS, SUSPENDED_FLAG, REJECT_REASON_CODE, AGY_LOC_ID, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, MODIFY_USER_ID, REVIEWED_BY, OFFENDER_SENT_CONDITION_ID, SENTENCE_SEQ, HOLIDAY_FLAG, START_SESSION_NO, PARENT_OFF_PRGREF_ID, OFFENDER_PRG_OBLIGATION_ID, PROGRAM_OFF_PRGREF_ID, PROFILE_CLASS, COMPLETION_DATE, NEEDED_FLAG, COMMENT_TEXT, EARLY_END_REASON, OFFENDER_ID, MEDICAL_RECORD_SEQ, PARAMETER_1, SEAL_FLAG,(select 'Y' from course_activities ca where ca.crs_acty_id = opp.crs_acty_id and services_address_id is not null ) as PLACEMENT_RECORD  FROM OFFENDER_PROGRAM_PROFILES opp  WHERE OFFENDER_PRG_OBLIGATION_ID = :OFFENDERPRGOBLIGATIONID ORDER BY OFFENDER_START_DATE DESC 
}
OCDXPROG_OFFPROGRAMPROFILES_INSERT_OFFENDER_PROGRAM_PROFILES {
  INSERT INTO OFFENDER_PROGRAM_PROFILES(OFF_PRGREF_ID, OFFENDER_BOOK_ID, PROGRAM_ID, OFFENDER_START_DATE, OFFENDER_PROGRAM_STATUS, CRS_ACTY_ID, REFERRAL_PRIORITY, REFERRAL_DATE, REFERRAL_COMMENT_TEXT, OFFENDER_END_REASON, AGREED_TRAVEL_FARE, AGREED_TRAVEL_HOUR, OFFENDER_END_COMMENT_TEXT, REJECT_DATE, WAITLIST_DECISION_CODE, REFERRAL_STAFF_ID, OFFENDER_END_DATE, CREDIT_WORK_HOURS, CREDIT_OTHER_HOURS, SUSPENDED_FLAG, REJECT_REASON_CODE, AGY_LOC_ID, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, REVIEWED_BY, OFFENDER_SENT_CONDITION_ID, SENTENCE_SEQ, HOLIDAY_FLAG, START_SESSION_NO, PARENT_OFF_PRGREF_ID, OFFENDER_PRG_OBLIGATION_ID, PROGRAM_OFF_PRGREF_ID, PROFILE_CLASS, COMPLETION_DATE, NEEDED_FLAG, COMMENT_TEXT, EARLY_END_REASON, OFFENDER_ID, MEDICAL_RECORD_SEQ, PARAMETER_1, SEAL_FLAG) values(:offPrgrefId, :offenderBookId, :programId, :offenderStartDate, :offenderProgramStatus, :crsActyId, :referralPriority, :referralDate, :referralCommentText, :offenderEndReason, :agreedTravelFare, :agreedTravelHour, :offenderEndCommentText, :rejectDate, :waitlistDecisionCode, :referralStaffId, :offenderEndDate, :creditWorkHours, :creditOtherHours, :suspendedFlag, :rejectReasonCode, :agyLocId, current_timestamp, :createUserId, null, :reviewedBy, :offenderSentConditionId, :sentenceSeq, :holidayFlag, :startSessionNo, :parentOffPrgrefId, :offenderPrgObligationId, :programOffPrgrefId, :profileClass, :completionDate, :neededFlag, :commentText, :earlyEndReason, :offenderId, :medicalRecordSeq, :parameter1, :sealFlag)
}

OCDXPROG_OFFPROGRAMPROFILES_UPDATE_OFFENDER_PROGRAM_PROFILES {
UPDATE OFFENDER_PROGRAM_PROFILES set OFFENDER_BOOK_ID = :offenderBookId, PROGRAM_ID = :programId, OFFENDER_START_DATE = :offenderStartDate, OFFENDER_PROGRAM_STATUS = :offenderProgramStatus, CRS_ACTY_ID = :crsActyId, REFERRAL_PRIORITY = :referralPriority, REFERRAL_DATE = :referralDate, REFERRAL_COMMENT_TEXT = :referralCommentText, OFFENDER_END_REASON = :offenderEndReason, AGREED_TRAVEL_FARE = :agreedTravelFare, AGREED_TRAVEL_HOUR = :agreedTravelHour, OFFENDER_END_COMMENT_TEXT = :offenderEndCommentText, REJECT_DATE = :rejectDate, WAITLIST_DECISION_CODE = :waitlistDecisionCode, REFERRAL_STAFF_ID = :referralStaffId, OFFENDER_END_DATE = :offenderEndDate, CREDIT_WORK_HOURS = :creditWorkHours, CREDIT_OTHER_HOURS = :creditOtherHours, SUSPENDED_FLAG = :suspendedFlag, REJECT_REASON_CODE = :rejectReasonCode, AGY_LOC_ID = :agyLocId, MODIFY_DATETIME = current_timestamp, MODIFY_USER_ID = :modifyUserId, REVIEWED_BY = :reviewedBy, OFFENDER_SENT_CONDITION_ID = :offenderSentConditionId, SENTENCE_SEQ = :sentenceSeq, HOLIDAY_FLAG = :holidayFlag, START_SESSION_NO = :startSessionNo, PARENT_OFF_PRGREF_ID = :parentOffPrgrefId, OFFENDER_PRG_OBLIGATION_ID = :offenderPrgObligationId, PROGRAM_OFF_PRGREF_ID = :programOffPrgrefId, PROFILE_CLASS = :profileClass, COMPLETION_DATE = :completionDate, NEEDED_FLAG = :neededFlag, COMMENT_TEXT = :commentText, EARLY_END_REASON = :earlyEndReason, OFFENDER_ID = :offenderId, MEDICAL_RECORD_SEQ = :medicalRecordSeq, PARAMETER_1 = :parameter1, SEAL_FLAG = :sealFlag where OFF_PRGREF_ID = :offPrgrefId
	}


OCDXPROG_OFF_BKG_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_PRG_OBLIGATIONS O WHERE O.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OCDXPROG_OFF_PRG_OBLIGATIONS_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_PROGRAM_PROFILES O WHERE O.OFFENDER_PRG_OBLIGATION_ID = :OFFENDERPRGOBLIGATIONID AND O.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OCDXPROG_OFF_PRG_OBLIGATIONS_WHENNEWRECORDINSTANCE_ {
	select
	case
		when :CASELOAD_TYPE = 'INST' then 'INSTITUTION'
		when :CASELOAD_TYPE = 'COMM' then 'COMMUNITY'
		else :CASELOAD_TYPE
	end from dual;
}

OCDXPROG_OFF_PROGRAM_PROFILES_POSTQUERY {
	SELECT PROVIDER_NAME FROM   V_COURSE_ACTIVITIES WHERE  CRS_ACTY_ID = :CRSACTYID AND    COURSE_CLASS = 'COURSE'
}

OCDXPROG_OFF_PROGRAM_PROFILES_WHENVALIDATERECORD_ {
	SELECT MIN(OFFENDER_START_DATE) FROM OFFENDER_PROGRAM_PROFILES WHERE OFFENDER_BOOK_ID IN (SELECT DISTINCT NS_OFFENDER_BOOK_ID FROM OFFENDER_NA_DETAILS ONA WHERE OFFENDER_BOOK_ID=:OFFENDERBOOKID AND current_timestamp BETWEEN ONA.NS_EFFECTIVE_DATE AND coalesce (ONA.NS_EXPIRY_DATE, TO_DATE('01/01/3000', 'DD/MM/YYYY'))) AND OFFENDER_END_DATE IS NULL AND PROGRAM_ID=:PROGRAMID
}

OCDXPROG_CREATE_FORM_GLOBALS {
	SELECT DESCRIPTION  FROM OMS_MODULES WHERE MODULE_NAME = :V_FORM_NAME
}

OCDXPROG_CALL_OCISCATA_ {
	SELECT PROGRAM_ID FROM   COURSE_ACTIVITIES WHERE  CRS_ACTY_ID = :CRSACTYID
}
OCDXPROG_CASELOAD_TYPE {
	SELECT CASELOAD_TYPE FROM CASELOADS WHERE CASELOAD_ID = :CASELOADID
}
OCDXPROG_OBLIGATION_STATUS {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN='PS_PRG_STAT' and CODE = :STATUS
}

OCDXPROG_OBLIGATION_PROGRAM_ID {
	SELECT * FROM PROGRAM_SERVICES WHERE PROGRAM_ID = :PROGRAMID
}

OCDXPROG_OFFENDER_PRG_OBLIGATION_ID {
	SELECT nextval('OFFENDER_PRG_OBLIGATION_ID')  FROM DUAL
}
OCDXPROG_OBLIGATION_PROGRAM_CODE {
 	SELECT PROGRAM_ID FROM PROGRAM_SERVICES WHERE PROGRAM_CODE = :DESCRIPTION
}
OCDXPROG_OBLIGATION_STATUS_CODE {
	SELECT CODE FROM REFERENCE_CODES WHERE DOMAIN='PS_PRG_STAT' and DESCRIPTION = :STATUS
}
OCDXPROG_OFF_PRGREF_ID {
	SELECT nextval('off_prgref_id')  FROM DUAL
}
OFF_PRG_PROFILE_PROJECT_DESCRIPTION {
    SELECT * FROM COURSE_ACTIVITIES WHERE CRS_ACTY_ID = :CRSACTYID
}
OFFENDER_PROGRAM_PROFILES_EARLY_END_REASON_OFFENDER_END_DATE {
SELECT COUNT(1)
	  FROM   OFFENDER_PROGRAM_PROFILES
	  WHERE  OFFENDER_PRG_OBLIGATION_ID = :OFFENDERPRGOBLIGATIONID
	  AND    OFFENDER_BOOK_ID = :OFFENDERBOOKID
	  AND    EARLY_END_REASON IS NULL
	  AND    OFFENDER_END_DATE IS NULL
}

OFFENDER_PROGRAM_PROFILES_SAME_VALIDATION {
SELECT 'Y'
           FROM OFFENDER_PROGRAM_PROFILES
          WHERE OFFENDER_PRG_OBLIGATION_ID = :OFFENDERPRGOBLIGATIONID
            AND CRS_ACTY_ID = :CRSACTYID
            AND (   NULL IS NULL
                 OR (    NULL IS NOT NULL
                     AND PARENT_OFF_PRGREF_ID = NULL
                    )
                )
            AND OFFENDER_PROGRAM_STATUS = 'ALLOC'
}
CHECK_DELETE_OFFENDER_PRG_OBLIGATIONS {
SELECT count(*) FROM OFFENDER_PRG_OBLIGATION_HTY WHERE OFFENDER_PRG_OBLIGATION_ID=:OFFENDERPRGOBLIGATIONID
}
CHECK_PRIVILEGE_EXISTS {
	SELECT sm.staff_id
           FROM staff_members sm,
                staff_member_roles smr,
                oms_roles om
          WHERE sm.staff_id = smr.staff_id
            AND sm.user_id = USER
            AND smr.role_id = om.role_id
            AND om.role_code = 'PS_SA'
}
UPDATE_OFF_OBLIGATION_STATUS {
	UPDATE offender_prg_obligations
         SET status = 'ALLOC',
             status_change_date = current_timestamp,
             MODIFY_DATETIME = current_timestamp, 
             MODIFY_USER_ID = :modifyUserId
       WHERE offender_prg_obligation_id = :p_offender_prg_obligation_id
}

GET_OLD_REC_OFFENDER_PRG_OBLIGATIONS{
select offender_prg_obligation_id, offender_book_id, program_id , status , offender_sent_cond_act_id, start_date, end_date, event_type, event_sub_type, comment_text, sentence_seq, length, length_unit, offender_sent_condition_id, referral_date, status_change_date, status_change_reason, special_need_flag, availability_code, obligation_source, create_datetime, create_user_id, modify_datetime , modify_user_id, seal_flag, referral_priority, decision_date from offender_prg_obligations where offender_prg_obligation_id = :offenderPrgObligationId
}

OCDXPROG_FIND_RGOFFENDERSENTENCES {
select
		FORM_INFO_JSON as FORM_INFO_JSON_BLOB,
		id ,FORM_IDENTIFIER 
	from
		OCDLEGLO_DATA where SUBSTR(FORM_IDENTIFIER,
		20,
		(INSTR(FORM_IDENTIFIER,
		'"',
		1,
		4)) -(INSTR(FORM_IDENTIFIER,
		'"',
		1,
		3) + 1)) = :OFFENDER_BOOK_ID :: text
}

OCDXPROG_COURT_EXECUTEQUERY {
select
	al.description
from
	agency_locations al
where al.agy_loc_id = :agyLocId
}

OCDXPROG_SENTENCE_EXECUTEQUERY {
	select * from SENTENCE_CALC_TYPES where active_flag = 'Y' and expiry_date is null
}
OCDXPROG_NONASSOCIATION_GROUPS_OFFENDER{
 select count(*) from OFFENDER_STG_AFFILIATIONS osa where osa.active_flag = 'Y' and osa.offender_book_id = :P_OFFENDER_BOOK_ID1 and osa.stg_id in ( select sr.related_stg_id from STG_RELATIONSHIPS sr where active_flag = 'Y' and sr.stg_id in ( select osa1.stg_id from OFFENDER_STG_AFFILIATIONS osa1 where osa1.offender_book_id = :P_OFFENDER_BOOK_ID2 and active_flag = 'Y'))
 }