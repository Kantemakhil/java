GET_OCIMYOFF_MY_OFFENDERS_LIST_DATA_RESULT {
select My_offenders.*, case when ( select count(*) from ORDERS ord where ((coalesce(ord.team_id, '') = '' and ord.staff_member_id = ( select to_char(staff_id) from staff_members sm where user_id =:userId)) or (ord.staff_member_id in ( select to_char(tm.team_member_id) from team_staff_members tm where to_char(ord.team_id) = to_char(tm.team_id) and tm.staff_id = ( select staff_id from staff_members sm where user_id =:userId)))) and ord.order_status in ( select code from reference_codes rc where "domain" = 'REP_REQ_STS' and parent_code = 'ACTIVE') and ord.offender_book_id = My_offenders.offender_book_id) > 0 then 'Y' else 'N' end as court_report_flag, case when ( select count(*) from case_plans cp where case_plan_status = 'ACTIVE' and SAC_STAFF_ID = ( select staff_id from staff_members sm where user_id =:userId) and cp.offender_book_id = My_offenders.offender_book_id) > 0 then 'Y' else 'N' end as case_plan_flag, case when ( select count(*) from offender_proceedings op where ((coalesce(op.team_id , 0) = 0 and op.staff_responsible = ( select staff_id from staff_members sm where user_id =:userId)) or (op.staff_responsible in ( select tm.team_member_id from team_staff_members tm where to_char(op.team_id) = to_char(tm.team_id) and (tm.team_member_id in (select team_member_id from team_staff_members where staff_id=( select staff_id from staff_members sm where user_id =:userId) )) ))) and op.proceeding_status in ( select code from reference_codes rc where "domain" = 'PROCEED_STS' and parent_code = 'ACTIVE') and op.offender_book_id = My_offenders.offender_book_id ) > 0 then 'Y' else 'N' end as court_action_flag, case when ( select count(*) from ( select MAX(CON_TRANSFER_ID) MAX_CON_TRANS_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER group by OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID) B, OFFENDER_COND_TRANSFER A where A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID and A.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID and A.CON_TRANSFER_ID = B.MAX_CON_TRANS_ID and (((coalesce(A.STAFF_ID, 0) != 0 and A.STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) or (coalesce(A.TO_STAFF_ID, 0) != 0 and A.TO_STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) ))) or (( coalesce(A.TEAM_MEMBER_ID, 0) != 0 and exists ( select 'X' from TEAM_STAFF_MEMBERS TM where TEAM_MEMBER_ID = A.TEAM_MEMBER_ID and STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) ) or ( coalesce(A.TO_TEAM_MEMBER_ID, 0) != 0 and exists ( select 'X' from TEAM_STAFF_MEMBERS TM where TEAM_MEMBER_ID = A.TO_TEAM_MEMBER_ID and STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) ) ) ) and A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID and My_offenders.offender_book_id = B.OFFENDER_BOOK_ID ) > 0 then 'Y' else 'N' end as conditions_flag from ( select * from ( select O.OFFENDER_ID , O.LAST_NAME , O.FIRST_NAME , OB.OFFENDER_BOOK_ID, O.OFFENDER_ID_DISPLAY, OB.INTAKE_AGY_LOC_ID, ( select description from agency_locations where agy_loc_id = OB.INTAKE_AGY_LOC_ID) as living_unit_description, OB.COMMUNITY_ACTIVE_FLAG, OB.agy_loc_id, OB.booking_status, OB.booking_no, O.MIDDLE_NAME from OFFENDERS O, OFFENDER_BOOKINGS OB where OB.OFFENDER_ID = O.OFFENDER_ID ) vhb where INTAKE_AGY_LOC_ID in ( select agy_loc_id from caseload_agency_locations cal where caseload_id = :caseLoadId and agy_loc_id not in ('IN', 'OUT')) and booking_status = 'O' and offender_book_id in ( select offender_book_id from ORDERS ord where ((coalesce(ord.team_id, '') = '' and ord.staff_member_id = ( select to_char(staff_id) from staff_members sm where user_id =:userId)) or (ord.staff_member_id in ( select to_char(tm.team_member_id) from team_staff_members tm where to_char(ord.team_id) = to_char(tm.team_id) and tm.staff_id = ( select staff_id from staff_members sm where user_id =:userId)))) and ord.order_status in ( select code from reference_codes rc where "domain" = 'REP_REQ_STS' and parent_code = 'ACTIVE') union select offender_book_id from case_plans where case_plan_status = 'ACTIVE' and SAC_STAFF_ID = ( select staff_id from staff_members sm where user_id =:userId) union select distinct offender_book_id from offender_proceedings op where ((coalesce(op.team_id , 0) = 0 and op.staff_responsible = ( select staff_id from staff_members sm where user_id =:userId)) or (op.staff_responsible in ( select tm.team_member_id from team_staff_members tm where to_char(op.team_id) = to_char(tm.team_id) and (tm.team_member_id in (select team_member_id from team_staff_members where staff_id=( select staff_id from staff_members sm where user_id =:userId) )) ))) and op.proceeding_status in ( select code from reference_codes rc where "domain" = 'PROCEED_STS' and parent_code = 'ACTIVE') union select C.OFFENDER_BOOK_ID from ( select A.OFFENDER_BOOK_ID, A.OFFENDER_SENT_CONDITION_ID from ( select MAX(CON_TRANSFER_ID) MAX_CON_TRANS_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER group by OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID) B, OFFENDER_COND_TRANSFER A where A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID and A.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID and A.CON_TRANSFER_ID = B.MAX_CON_TRANS_ID and (((coalesce(A.STAFF_ID, 0) != 0 and A.STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) or (coalesce(A.TO_STAFF_ID, 0) != 0 and A.TO_STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) ))) or (( coalesce(A.TEAM_MEMBER_ID, 0) != 0 and exists ( select 'X' from TEAM_STAFF_MEMBERS TM where TEAM_MEMBER_ID = A.TEAM_MEMBER_ID and STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) ) or ( coalesce(A.TO_TEAM_MEMBER_ID, 0) != 0 and exists ( select 'X' from TEAM_STAFF_MEMBERS TM where TEAM_MEMBER_ID = A.TO_TEAM_MEMBER_ID and STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) ) ) ) and A.OFFENDER_SENT_CONDITION_ID in ( select OFFENDER_SENT_CONDITION_ID from OFFENDER_SENT_CONDITIONS OSC where CONDITION_STATUS in ( select UPDATE_REASON_CODE from LEGAL_UPDATE_REASONS LUR where LUR.ACTIVE_TYPE = 'A')) ) as C )) as My_offenders}

GET_OCIMYOFF_MY_OFFENDERS_ALLOCATED_CONDITION {
SELECT oc.offender_sent_condition_id, (SELECT description FROM community_conditions WHERE comm_condition_code = oc.comm_condition_code AND comm_condition_type = oc.comm_condition_type and category_type = oc.category_type) AS description, (SELECT description FROM reference_codes rc WHERE "domain" = 'COM_CON_CAT' AND CODE = OC.category_type) AS category_type, Length, length_unit , start_date, expiry_date, (SELECT description FROM legal_update_reasons WHERE update_reason_code = oc.condition_status) AS condition_status, (SELECT description FROM program_services ps WHERE program_id = OC.program_id) AS referral, CASE WHEN comm_condition_type = 'CUST' THEN CONCAT('C_', sentence_seq) WHEN comm_condition_type = 'NCUS' THEN CONCAT('NC_', sentence_seq) WHEN comm_condition_type = 'PAR' THEN CONCAT('P_', sentence_seq) WHEN comm_condition_type = 'BAIL' THEN CONCAT('B_', sentence_seq) END AS order_no FROM OFFENDER_SENT_CONDITIONS OC WHERE oc.offender_sent_condition_id IN ( select A.OFFENDER_SENT_CONDITION_ID from ( select MAX(CON_TRANSFER_ID) MAX_CON_TRANS_ID, OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID from OFFENDER_COND_TRANSFER group by OFFENDER_BOOK_ID, OFFENDER_SENT_CONDITION_ID) B, OFFENDER_COND_TRANSFER A where A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID and A.OFFENDER_SENT_CONDITION_ID = B.OFFENDER_SENT_CONDITION_ID and A.CON_TRANSFER_ID = B.MAX_CON_TRANS_ID and (((coalesce(A.STAFF_ID, 0) != 0 and A.STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) or (coalesce(A.TO_STAFF_ID, 0) != 0 and A.TO_STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) ))) or (( coalesce(A.TEAM_MEMBER_ID, 0) != 0 and exists ( select 'X' from TEAM_STAFF_MEMBERS TM where TEAM_MEMBER_ID = A.TEAM_MEMBER_ID and STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) ) or ( coalesce(A.TO_TEAM_MEMBER_ID, 0) != 0 and exists ( select 'X' from TEAM_STAFF_MEMBERS TM where TEAM_MEMBER_ID = A.TO_TEAM_MEMBER_ID and STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS SM where UPPER(USER_ID) = UPPER(:userId) )) ) ) ) and A.OFFENDER_BOOK_ID = B.OFFENDER_BOOK_ID and B.offender_book_id = :offenderBookId ) AND offender_book_id = :offenderBookId
}
