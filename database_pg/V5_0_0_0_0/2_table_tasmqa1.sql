CREATE TABLE abc_trust_report_tmp (
	module_name varchar(30) NOT NULL,
	account_code integer NOT NULL,
	sub_account_name varchar(40),
	active_balance bigint,
	inactive_count bigint,
	inactive_balance bigint,
	active_count bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE abc_trust_report_tmp_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	account_code bigint,
	active_balance bigint,
	inactive_count bigint,
	inactive_balance bigint,
	active_count bigint
)  TABLESPACE TAG_DATA;

CREATE TABLE accessible_form_tables (
	originating_form varchar(20) NOT NULL,
	destination_form varchar(20) NOT NULL,
	table_name varchar(30) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN accessible_form_tables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN accessible_form_tables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN accessible_form_tables.destination_form IS E' - Column already exists';
COMMENT ON COLUMN accessible_form_tables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN accessible_form_tables.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN accessible_form_tables.originating_form IS E' - Column already exists';

CREATE TABLE account_codes (
	rec_account_code integer,
	account_code integer NOT NULL,
	account_name varchar(40) NOT NULL,
	posting_status_flag varchar(1) NOT NULL DEFAULT 'Y',
	account_type varchar(12),
	sub_account_type varchar(12),
	txn_posting_type varchar(12),
	all_caseload_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	caseload_type varchar(12),
	parent_account_code integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE account_codes IS E'All information encompassed by the chart of accounts for OMS Trust.';
COMMENT ON COLUMN account_codes.account_code IS E'General ledger account code.';
COMMENT ON COLUMN account_codes.account_name IS E'Account Description';
COMMENT ON COLUMN account_codes.account_type IS E'Reference Code [ACCOUNT_TYPE ]';
COMMENT ON COLUMN account_codes.all_caseload_flag IS E'Apply for All Caseload';
COMMENT ON COLUMN account_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN account_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN account_codes.modify_date IS E'Modify Date';
COMMENT ON COLUMN account_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN account_codes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN account_codes.parent_account_code IS E'Parent_code to Account_code';
COMMENT ON COLUMN account_codes.posting_status_flag IS E'Y/N flag indicating if account is a posting account.';
COMMENT ON COLUMN account_codes.sub_account_type IS E'Reference Code ( SUB_AC_TYPE).';
COMMENT ON COLUMN account_codes.txn_posting_type IS E'Reference ( AC_TXN_TYPE ) Account Posting Type';

CREATE TABLE account_periods (
	account_period_id integer NOT NULL,
	account_period_type varchar(12) NOT NULL,
	start_date timestamp,
	end_date timestamp,
	parent_account_period_id integer,
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE account_periods IS E'Maintenance of accounting periods.';
COMMENT ON COLUMN account_periods.account_period_id IS E'Identifier for an accounting period ie. 9601, 9602..';
COMMENT ON COLUMN account_periods.account_period_type IS E'Reference Code [PERIOD_TYPE ] ie. Month, Year';
COMMENT ON COLUMN account_periods.end_date IS E'The end date for the accounting period.';
COMMENT ON COLUMN account_periods.modify_date IS E'Modify Date';
COMMENT ON COLUMN account_periods.parent_account_period_id IS E'Master Account Period';
COMMENT ON COLUMN account_periods.start_date IS E'The start date for the accounting period.';

CREATE TABLE addresses (
	address_id bigint NOT NULL,
	owner_class varchar(12) NOT NULL,
	owner_id bigint,
	owner_seq integer,
	owner_code varchar(12),
	address_type varchar(12),
	city_code varchar(12),
	country_code varchar(12),
	validated_paf_flag varchar(1),
	primary_flag varchar(1) NOT NULL,
	mail_flag varchar(1) NOT NULL,
	capacity integer,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	no_fixed_address_flag varchar(1),
	services_flag varchar(1),
	special_needs_code varchar(12),
	contact_person_name varchar(40),
	business_hour varchar(60),
	start_date timestamp,
	end_date timestamp,
	city_name varchar(40),
	prov_state_code varchar(12),
	street varchar(160),
	zip_postal_code varchar(12),
	suite_number varchar(30),
	street_number varchar(12),
	street_direction varchar(12),
	mail_care_of varchar(40),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE addresses IS E'The table stores all address information of all entities to simplify the data management and system changes.  ';
COMMENT ON COLUMN addresses.address_id IS E'PK of an Address (Oracle Sequenc ADDRESS_ID)';
COMMENT ON COLUMN addresses.address_type IS E'Reference Code (ADDR_TYPE)';
COMMENT ON COLUMN addresses.business_hour IS E'The business hour. eg. 9:00 - 17:00';
COMMENT ON COLUMN addresses.capacity IS E'Capacity of the address';
COMMENT ON COLUMN addresses.city_code IS E'Ref Domain (CITY)';
COMMENT ON COLUMN addresses.city_name IS E'The city name';
COMMENT ON COLUMN addresses.comment_text IS E'The comment text of the address';
COMMENT ON COLUMN addresses.contact_person_name IS E'The name of the contact person';
COMMENT ON COLUMN addresses.country_code IS E'Ref Domain (COUNTRY) The country Code';
COMMENT ON COLUMN addresses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN addresses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN addresses.end_date IS E'The end date';
COMMENT ON COLUMN addresses.mail_flag IS E'? Is this the mailing address';
COMMENT ON COLUMN addresses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN addresses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN addresses.no_fixed_address_flag IS E'? if the address';
COMMENT ON COLUMN addresses.owner_class IS E'Ref Domain (OWNER_CLASS)';
COMMENT ON COLUMN addresses.owner_code IS E'PK code of the Object';
COMMENT ON COLUMN addresses.owner_id IS E'PK ID of the Object';
COMMENT ON COLUMN addresses.owner_seq IS E'PK Seq of the Object';
COMMENT ON COLUMN addresses.primary_flag IS E'? Is this the primary address';
COMMENT ON COLUMN addresses.services_flag IS E'? if the address a services place';
COMMENT ON COLUMN addresses.special_needs_code IS E'reference code(SPECIAL_NEEDS)';
COMMENT ON COLUMN addresses.start_date IS E'The effective start date';
COMMENT ON COLUMN addresses.validated_paf_flag IS E'? verified with PAF file';

CREATE TABLE addresses_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	address_id bigint,
	owner_class varchar(12),
	owner_id bigint,
	owner_seq integer,
	owner_code varchar(12),
	address_type varchar(12),
	city_code varchar(12),
	country_code varchar(12),
	validated_paf_flag varchar(1),
	primary_flag varchar(1),
	mail_flag varchar(1),
	capacity integer,
	comment_text varchar(240),
	create_user_id varchar(32),
	modify_user_id varchar(32),
	no_fixed_address_flag varchar(1),
	services_flag varchar(1),
	special_needs_code varchar(12),
	contact_person_name varchar(40),
	business_hour varchar(60),
	start_date timestamp,
	end_date timestamp,
	city_name varchar(40),
	prov_state_code varchar(12),
	street varchar(160),
	zip_postal_code varchar(12),
	suite_number varchar(30),
	street_number varchar(12),
	street_direction varchar(12),
	mail_care_of varchar(40),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE address_usages (
	address_id bigint NOT NULL,
	address_usage varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN address_usages.active_flag IS E'? Active';
COMMENT ON COLUMN address_usages.address_id IS E'PK to Address';
COMMENT ON COLUMN address_usages.address_usage IS E'Ref Domain (ADDRESS_TYPE) for Offender_address, the parent code = ''OFF''';
COMMENT ON COLUMN address_usages.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN address_usages.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN address_usages.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN address_usages.modify_user_id IS E'The user who modifies the record';

CREATE TABLE adhoc_email (
	email_id bigint NOT NULL,
	offender_book_id bigint,
	work_id bigint,
	email_subject varchar(240) NOT NULL,
	email_body text,
	email_sender varchar(240) NOT NULL,
	email_from varchar(240) NOT NULL,
	to_list NT_EMAIL_ADDRESSES,
	cc_list NT_EMAIL_ADDRESSES,
	bcc_list NT_EMAIL_ADDRESSES,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE adhoc_email IS E'Staging area for adhoc email';
COMMENT ON COLUMN adhoc_email.bcc_list IS E' Nested table of  BCC email recipients';
COMMENT ON COLUMN adhoc_email.cc_list IS E' Nested table of CC email recipients';
COMMENT ON COLUMN adhoc_email.email_body IS E' Email body encoded base64';
COMMENT ON COLUMN adhoc_email.email_from IS E' Email from information, can be the sender email address';
COMMENT ON COLUMN adhoc_email.email_id IS E' Unique identifier of email record';
COMMENT ON COLUMN adhoc_email.email_sender IS E' Sender email address/return address';
COMMENT ON COLUMN adhoc_email.email_subject IS E' Email subject';
COMMENT ON COLUMN adhoc_email.offender_book_id IS E' The system generated identifier for an offender booking';
COMMENT ON COLUMN adhoc_email.to_list IS E' Nested table of TO email recipients';
COMMENT ON COLUMN adhoc_email.work_id IS E' The system generated identifier for a workflow work item.';

CREATE TABLE adhoc_email_recipients (
	email_id bigint,
	internet_address_class varchar(12),
	internet_address varchar(240),
	create_datetime timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_billing_profiles (
	agency_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	billing_type varchar(12) NOT NULL,
	frequency varchar(12) NOT NULL,
	rate decimal(6,2) NOT NULL,
	first_day_rate decimal(6,2),
	last_day_rate decimal(6,2),
	all_offender_flag varchar(1) NOT NULL DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	imprisonment_status varchar(12),
	leave_rate decimal(6,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	delay_days integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN agency_billing_profiles.billing_type IS E'DOMAIN (BILL_TYPE)';
COMMENT ON COLUMN agency_billing_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_billing_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_billing_profiles.delay_days IS E'Allows users to define  the number of days of delay between the definition of the offender imprisonment status and the start of billing.
';
COMMENT ON COLUMN agency_billing_profiles.frequency IS E'DOMAIN ( BILL_FREQUENCY)';
COMMENT ON COLUMN agency_billing_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_billing_profiles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE agency_clothing_bundles (
	agy_loc_id varchar(6) NOT NULL,
	issue_reason_code varchar(12) NOT NULL,
	clothing_type varchar(12) NOT NULL,
	quantity bigint NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE agency_clothing_bundles IS E'The Default clothing bundles issued to an offender.';
COMMENT ON COLUMN agency_clothing_bundles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_clothing_bundles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_clothing_bundles.issue_reason_code IS E'Enter the Reason for the issue ( Domain "CLOTH_IS_RSN" )';
COMMENT ON COLUMN agency_clothing_bundles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_clothing_bundles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE agency_counts (
	reporting_loc_id bigint NOT NULL,
	count_type_id bigint NOT NULL,
	initiated_date timestamp NOT NULL,
	completion_date timestamp,
	total_actual integer,
	total_reported integer,
	conducted_by_userid varchar(32),
	outcome varchar(12),
	recount_rsn_code varchar(12),
	discrep_rsn_code varchar(12),
	rsn_code_userid varchar(32),
	rsn_code_datetime timestamp,
	comment_text varchar(240),
	parent_reporting_loc_id bigint,
	count_in_progress varchar(1) DEFAULT 'N',
	out_total integer,
	total_male integer,
	total_female integer,
	total_other integer,
	total_male_out integer,
	total_female_out integer,
	total_other_out integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_count_types (
	count_type_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	count_type_code varchar(12) NOT NULL,
	scheduled_time varchar(5) NOT NULL DEFAULT 'NA',
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE agency_incidents (
	reported_staff_id integer NOT NULL,
	agency_incident_id bigint NOT NULL,
	incident_date timestamp NOT NULL,
	internal_location_id bigint NOT NULL,
	incident_time timestamp NOT NULL,
	incident_type varchar(12) NOT NULL,
	incident_status varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	lock_flag varchar(1) NOT NULL DEFAULT 'N',
	incident_details varchar(4000),
	report_date timestamp NOT NULL,
	report_time timestamp NOT NULL,
	agy_loc_id varchar(6),
	level_code varchar(14),
	log_no varchar(16),
	incident_text text,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE agency_incidents IS E'Agency location incident';
COMMENT ON COLUMN agency_incidents.agency_incident_id IS E'Agency incident ID NOMIS Log number';
COMMENT ON COLUMN agency_incidents.agy_loc_id IS E'FK to agency locations';
COMMENT ON COLUMN agency_incidents.create_datetime IS E'The user who creates the record';
COMMENT ON COLUMN agency_incidents.create_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_incidents.incident_date IS E'Incident Date';
COMMENT ON COLUMN agency_incidents.incident_details IS E'The Occurence Details';
COMMENT ON COLUMN agency_incidents.incident_status IS E'Reference Code ( INC_STS )';
COMMENT ON COLUMN agency_incidents.incident_time IS E'Incident Time';
COMMENT ON COLUMN agency_incidents.incident_type IS E'Reference Code ( INC_TYPE )';
COMMENT ON COLUMN agency_incidents.internal_location_id IS E'Incident Place';
COMMENT ON COLUMN agency_incidents.lock_flag IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_incidents.modify_datetime IS E'record locked to prevent data changed';
COMMENT ON COLUMN agency_incidents.modify_user_id IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_incidents.report_date IS E'The report date of the incident';
COMMENT ON COLUMN agency_incidents.report_time IS E'The report time of the incident';
COMMENT ON COLUMN agency_incidents.reported_staff_id IS E'The staff who report the incident';

CREATE TABLE agency_incident_asso_tostg (
	agency_incident_id bigint NOT NULL,
	seq_no integer NOT NULL,
	stg_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_incident_charges (
	agency_incident_id bigint NOT NULL,
	charge_seq integer NOT NULL,
	party_seq integer NOT NULL,
	oic_charge_id varchar(13),
	finding_code varchar(12),
	guilty_evidence_text varchar(400),
	report_text varchar(400),
	evidence_dispose_text varchar(400),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	lids_charge_number integer,
	charged_oic_offence_id bigint NOT NULL,
	result_oic_offence_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agency_incident_charges IS E'The incident and associated charges and findings';
COMMENT ON COLUMN agency_incident_charges.agency_incident_id IS E'FK to Agency Incidents';
COMMENT ON COLUMN agency_incident_charges.charge_seq IS E'Charge seq as part of the PK';
COMMENT ON COLUMN agency_incident_charges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_incident_charges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_incident_charges.evidence_dispose_text IS E'What was done with the evidence?';
COMMENT ON COLUMN agency_incident_charges.finding_code IS E'Reference Code ( FINDING ) ie. Guilty, Not Guilty, Dismissed.';
COMMENT ON COLUMN agency_incident_charges.guilty_evidence_text IS E'Evidence relating to the charge.';
COMMENT ON COLUMN agency_incident_charges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_incident_charges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_incident_charges.oic_charge_id IS E'The ID for OIC charges';
COMMENT ON COLUMN agency_incident_charges.party_seq IS E'FK to Agency Incident Parties';
COMMENT ON COLUMN agency_incident_charges.report_text IS E'The notice of report details';

CREATE TABLE agency_incident_decisions (
	agency_incident_id bigint NOT NULL,
	decision_seq integer NOT NULL DEFAULT 1,
	decision_type varchar(12),
	decision_staff_id integer,
	decision_date timestamp,
	decision_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN agency_incident_decisions.agency_incident_id IS E'Agency incident ID';
COMMENT ON COLUMN agency_incident_decisions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_incident_decisions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_incident_decisions.decision_date IS E'Decision Date';
COMMENT ON COLUMN agency_incident_decisions.decision_seq IS E' - Retrofitted';
COMMENT ON COLUMN agency_incident_decisions.decision_staff_id IS E'Decsion Staff';
COMMENT ON COLUMN agency_incident_decisions.decision_time IS E'Decision Time';
COMMENT ON COLUMN agency_incident_decisions.decision_type IS E'Reference Code ( INC_DECISION )';
COMMENT ON COLUMN agency_incident_decisions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_incident_decisions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE agency_incident_parties (
	agency_incident_id bigint NOT NULL,
	party_seq integer NOT NULL DEFAULT 1,
	incident_role varchar(12) NOT NULL,
	offender_book_id bigint,
	staff_id integer,
	person_id bigint,
	disposition_type varchar(12),
	disposition_date timestamp,
	oic_incident_id bigint,
	comment_text varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	action_code varchar(12),
	party_added_date timestamp NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	rep_complet_flag varchar(1) DEFAULT 'N'
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agency_incident_parties IS E'- Retrofitted';
COMMENT ON COLUMN agency_incident_parties.action_code IS E'Reference Code (INC_DECISION)';
COMMENT ON COLUMN agency_incident_parties.agency_incident_id IS E'Incident ID';
COMMENT ON COLUMN agency_incident_parties.comment_text IS E'The general comment text';
COMMENT ON COLUMN agency_incident_parties.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_incident_parties.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_incident_parties.disposition_date IS E'The date of the disposition decision';
COMMENT ON COLUMN agency_incident_parties.disposition_type IS E'Reference Code (INC_DECISION)';
COMMENT ON COLUMN agency_incident_parties.incident_role IS E'Reference Code ( INC_ROLE )';
COMMENT ON COLUMN agency_incident_parties.modify_datetime IS E'Record Modification Timestamp';
COMMENT ON COLUMN agency_incident_parties.modify_user_id IS E'Modification User';
COMMENT ON COLUMN agency_incident_parties.offender_book_id IS E'Offender booking id';
COMMENT ON COLUMN agency_incident_parties.oic_incident_id IS E'The Adjudication No';
COMMENT ON COLUMN agency_incident_parties.party_seq IS E'Sequence';
COMMENT ON COLUMN agency_incident_parties.person_id IS E'Person';
COMMENT ON COLUMN agency_incident_parties.rep_complet_flag IS E'flag used by supervisor to indicate the staff member''s report is complet.';
COMMENT ON COLUMN agency_incident_parties.staff_id IS E'Staff';

CREATE TABLE agency_incident_repairs (
	agency_incident_id bigint NOT NULL,
	repair_seq integer NOT NULL DEFAULT 1,
	repair_type varchar(12) NOT NULL,
	comment_text varchar(4000),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	repair_cost decimal(12,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE agency_incident_repairs IS E'The repair details, including the cost,  of the agency incidents.';
COMMENT ON COLUMN agency_incident_repairs.agency_incident_id IS E'Agency incident ID';
COMMENT ON COLUMN agency_incident_repairs.comment_text IS E'The user who creates the record';
COMMENT ON COLUMN agency_incident_repairs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_incident_repairs.create_user_id IS E'The dollar cost of the repair';
COMMENT ON COLUMN agency_incident_repairs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_incident_repairs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_incident_repairs.repair_cost IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_incident_repairs.repair_seq IS E'The repair seq as part of the PK';
COMMENT ON COLUMN agency_incident_repairs.repair_type IS E'Reference Code (REPAIR)';

CREATE TABLE agency_incident_types (
	agency_incident_id bigint NOT NULL,
	type_code varchar(12) NOT NULL,
	sub_type_code varchar(12) NOT NULL,
	primary_incident varchar(1) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_internal_locations (
	internal_location_id bigint NOT NULL,
	internal_location_code varchar(40) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	internal_location_type varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	security_level_code varchar(12),
	capacity integer,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	parent_internal_location_id bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	cna_no bigint,
	certified_flag varchar(1) NOT NULL DEFAULT 'N',
	deactivate_date timestamp,
	reactivate_date timestamp,
	deactivate_reason_code varchar(12),
	comment_text varchar(240),
	user_desc varchar(40),
	aca_cap_rating integer,
	unit_type varchar(12),
	operation_capacity integer,
	no_of_occupant bigint DEFAULT 0,
	tracking_flag varchar(1) NOT NULL DEFAULT 'N',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agency_internal_locations IS E'A internal location within institution.  It could be a building, a cell or TV room of an institution.  ';
COMMENT ON COLUMN agency_internal_locations.aca_cap_rating IS E'The Cellular Normal Accommodation that the cell is designed for.';
COMMENT ON COLUMN agency_internal_locations.active_flag IS E' Location may be active or inactive.';
COMMENT ON COLUMN agency_internal_locations.agy_loc_id IS E'The short code for an internal location.';
COMMENT ON COLUMN agency_internal_locations.capacity IS E'The actual number of beds created for a specific location.';
COMMENT ON COLUMN agency_internal_locations.certified_flag IS E'if the capacity certified by officers ?';
COMMENT ON COLUMN agency_internal_locations.cna_no IS E'The total number of sub internal location';
COMMENT ON COLUMN agency_internal_locations.comment_text IS E'The general comments';
COMMENT ON COLUMN agency_internal_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_internal_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_internal_locations.deactivate_date IS E'the usage de-activated date of the internal location';
COMMENT ON COLUMN agency_internal_locations.deactivate_reason_code IS E'The reason for deactivation. Reference code(DEACT_RSN)';
COMMENT ON COLUMN agency_internal_locations.description IS E'The long description code of the internal location code.';
COMMENT ON COLUMN agency_internal_locations.internal_location_code IS E'The unique identifier of the Internal Location.  PK';
COMMENT ON COLUMN agency_internal_locations.internal_location_id IS E'The location residing within an agency location which the internal location is in.  FK to Agency Locations';
COMMENT ON COLUMN agency_internal_locations.internal_location_type IS E'The internal location type ie. Cell Block, Tier, Cell, Bed. Reference Code ( INT_LOC )';
COMMENT ON COLUMN agency_internal_locations.list_seq IS E'The default sorting order for display';
COMMENT ON COLUMN agency_internal_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_internal_locations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_internal_locations.no_of_occupant IS E'No of occupant in the location (Living_units). ';
COMMENT ON COLUMN agency_internal_locations.operation_capacity IS E'The operation capacity of the unit';
COMMENT ON COLUMN agency_internal_locations.parent_internal_location_id IS E'Refers back to higher level in living unit designations.';
COMMENT ON COLUMN agency_internal_locations.reactivate_date IS E'the proposed re-activated date of the usage';
COMMENT ON COLUMN agency_internal_locations.security_level_code IS E'The security level of Internal Location : Reference Code ( SECURITY_LVL )';
COMMENT ON COLUMN agency_internal_locations.unit_type IS E'The internal location unit type.';
COMMENT ON COLUMN agency_internal_locations.user_desc IS E'The user defined description';

CREATE TABLE agency_internal_locations_bak (
	internal_location_id bigint NOT NULL,
	internal_location_code varchar(40) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	internal_location_type varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	security_level_code varchar(12),
	capacity integer,
	create_user_id varchar(32) NOT NULL,
	parent_internal_location_id bigint,
	active_flag varchar(1) NOT NULL,
	list_seq integer,
	create_datetime timestamp NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	cna_no bigint,
	certified_flag varchar(1) NOT NULL,
	deactivate_date timestamp,
	reactivate_date timestamp,
	deactivate_reason_code varchar(12),
	comment_text varchar(240),
	user_desc varchar(40),
	aca_cap_rating integer,
	unit_type varchar(12),
	operation_capacity integer,
	no_of_occupant bigint,
	tracking_flag varchar(1) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_internal_loc_hotspot (
	internal_loc_hotspot_id numeric(20) NOT NULL,
	internal_location_id numeric(20) NOT NULL,
	x_coordinate bigint,
	y_coordinate bigint,
	floor_plan_id numeric(20),
	floor_plan_next_id numeric(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_internal_loc_hotspotba (
	internal_loc_hotspot_id numeric(20) NOT NULL,
	internal_location_id numeric(20) NOT NULL,
	x_coordinate bigint,
	y_coordinate bigint,
	floor_plan_id numeric(20),
	floor_plan_next_id numeric(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_locations (
	agy_loc_id varchar(6) NOT NULL,
	description varchar(40) NOT NULL,
	agency_location_type varchar(12),
	district_code varchar(12),
	abbreviation varchar(12),
	deactivation_date timestamp,
	contact_name varchar(40),
	print_queue varchar(240),
	jurisdiction_code varchar(12),
	bail_office_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	housing_lev_1_code varchar(12),
	housing_lev_2_code varchar(12),
	housing_lev_3_code varchar(12),
	housing_lev_4_code varchar(12),
	property_lev_1_code varchar(12),
	property_lev_2_code varchar(12),
	property_lev_3_code varchar(12),
	last_booking_no bigint,
	commissary_privilege varchar(12),
	business_hours varchar(40),
	address_type varchar(12),
	active_flag varchar(1),
	disability_access_code varchar(12),
	intake_flag varchar(1),
	sub_area_code varchar(12),
	area_code varchar(12),
	noms_region_code varchar(12),
	geographic_region_code varchar(12),
	justice_area_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	long_description varchar(3000),
	labcorp_client_id varchar(50),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE agency_locations IS E'A location that administers Offender Cases on a Day
 to Day basis.';
COMMENT ON COLUMN agency_locations.abbreviation IS E' The abbreviation for the agency location.';
COMMENT ON COLUMN agency_locations.agency_location_type IS E'Refrence Code [ AGY_LOC_TYPE ]';
COMMENT ON COLUMN agency_locations.agy_loc_id IS E' The location residing within an agency.';
COMMENT ON COLUMN agency_locations.area_code IS E'Reference Code(AREA) ';
COMMENT ON COLUMN agency_locations.bail_office_flag IS E' - Column already exists';
COMMENT ON COLUMN agency_locations.contact_name IS E' Contact person at agency location.';
COMMENT ON COLUMN agency_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_locations.deactivation_date IS E'The date on which this location is no longer used.';
COMMENT ON COLUMN agency_locations.description IS E' Description of the agency location.';
COMMENT ON COLUMN agency_locations.district_code IS E'Reference Code [ DISTRICT ]';
COMMENT ON COLUMN agency_locations.geographic_region_code IS E'Reference Code(GEO_REG) ';
COMMENT ON COLUMN agency_locations.housing_lev_1_code IS E'Reference Code (LIVING_UNIT)';
COMMENT ON COLUMN agency_locations.housing_lev_2_code IS E'Reference Code (LIVING_UNIT)';
COMMENT ON COLUMN agency_locations.housing_lev_3_code IS E'Reference Code (LIVING_UNIT)';
COMMENT ON COLUMN agency_locations.housing_lev_4_code IS E'Reference Code (LIVING_UNIT)';
COMMENT ON COLUMN agency_locations.jurisdiction_code IS E'Reference Code [ JURISDICTION ]';
COMMENT ON COLUMN agency_locations.justice_area_code IS E'Reference Code(JUSTICE_AREA) ';
COMMENT ON COLUMN agency_locations.labcorp_client_id IS E'Site Id given to the agency by the laboratory';
COMMENT ON COLUMN agency_locations.last_booking_no IS E'The last booking number generated for the agency location.';
COMMENT ON COLUMN agency_locations.list_seq IS E' List seqence number for information entered.';
COMMENT ON COLUMN agency_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_locations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_locations.noms_region_code IS E'Reference Code(NOMIS_REG) ';
COMMENT ON COLUMN agency_locations.print_queue IS E' - Column already exists';
COMMENT ON COLUMN agency_locations.property_lev_1_code IS E'Reference Code ( PPTY_STG )';
COMMENT ON COLUMN agency_locations.property_lev_2_code IS E'Reference Code ( PPTY_STG )';
COMMENT ON COLUMN agency_locations.property_lev_3_code IS E'Reference Code ( PPTY_STG )';
COMMENT ON COLUMN agency_locations.sub_area_code IS E'Reference Code(SUB_area) ';

CREATE TABLE agency_locations_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	agy_loc_id varchar(6),
	description varchar(40),
	agency_location_type varchar(12),
	district_code varchar(12),
	abbreviation varchar(12),
	deactivation_date timestamp,
	contact_name varchar(40),
	print_queue varchar(240),
	jurisdiction_code varchar(12),
	bail_office_flag varchar(1),
	list_seq integer,
	housing_lev_1_code varchar(12),
	housing_lev_2_code varchar(12),
	housing_lev_3_code varchar(12),
	housing_lev_4_code varchar(12),
	property_lev_1_code varchar(12),
	property_lev_2_code varchar(12),
	property_lev_3_code varchar(12),
	last_booking_no bigint,
	commissary_privilege varchar(12),
	business_hours varchar(40),
	address_type varchar(12),
	active_flag varchar(1),
	disability_access_code varchar(12),
	intake_flag varchar(1),
	sub_area_code varchar(12),
	area_code varchar(12),
	noms_region_code varchar(12),
	geographic_region_code varchar(12),
	justice_area_code varchar(12),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_user_id varchar(32),
	long_description varchar(3000),
	labcorp_client_id varchar(50),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_location_amendments (
	agy_loc_amend_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	field varchar(32) NOT NULL,
	original_value varchar(3000),
	new_value varchar(3000),
	amend_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	amend_user varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN agency_location_amendments.agy_loc_amend_id IS E'PK of the agency location amendments';
COMMENT ON COLUMN agency_location_amendments.agy_loc_id IS E'FK to Agency Locations';
COMMENT ON COLUMN agency_location_amendments.amend_datetime IS E'The timestamp of the amendment';
COMMENT ON COLUMN agency_location_amendments.amend_user IS E'The user who perform the amendment';
COMMENT ON COLUMN agency_location_amendments.field IS E'The field name of agency location table';
COMMENT ON COLUMN agency_location_amendments.new_value IS E'the new value of the field';
COMMENT ON COLUMN agency_location_amendments.original_value IS E'the original value of the field';

CREATE TABLE agency_location_authorities (
	agy_loc_id varchar(6) NOT NULL,
	local_authority_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN agency_location_authorities.agy_loc_id IS E'FK to Agency location';
COMMENT ON COLUMN agency_location_authorities.local_authority_code IS E'Reference Code(LOC_AUTH)';

CREATE TABLE agency_location_counts (
	reporting_loc_id bigint NOT NULL,
	count_type_id bigint NOT NULL,
	agy_seq integer NOT NULL,
	date_submitted timestamp NOT NULL,
	actual_count integer,
	reported_count integer,
	conducted_by_userid varchar(32),
	entered_by_userid varchar(32),
	conducted_datetime timestamp,
	recount_rsn_code varchar(12),
	discrep_rsn_code varchar(12),
	rsn_code_userid varchar(32),
	rsn_code_datetime timestamp,
	rcnt_conducted_by varchar(32),
	rcnt_datetime timestamp,
	rcnt_in_progress_flag varchar(1) NOT NULL DEFAULT 'N',
	recount_total integer,
	comment_text varchar(240),
	verified_user_id varchar(32),
	verified_datetime timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_reporting_locs (
	count_type_id bigint NOT NULL,
	agy_seq integer NOT NULL,
	location_type varchar(12) NOT NULL,
	location1_id bigint NOT NULL,
	location2_id bigint,
	location3_id bigint,
	list_seq smallint,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_segment_lengths (
	from_agy_loc_id varchar(6) NOT NULL,
	to_agy_loc_id varchar(6) NOT NULL,
	segment_length bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_shift_logs (
	staff_id integer NOT NULL,
	shift_log_seq bigint NOT NULL DEFAULT 1,
	log_date timestamp NOT NULL,
	log_time timestamp NOT NULL,
	agy_activity_code varchar(12) NOT NULL,
	internal_location_id2 bigint,
	internal_location_id bigint NOT NULL,
	internal_location_id3 bigint,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	lock_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1),
	observation_text text
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE agency_shift_logs IS E'- Retrofitted';
COMMENT ON COLUMN agency_shift_logs.agy_activity_code IS E'Reference Code (AGY_ACTIVITY )';
COMMENT ON COLUMN agency_shift_logs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_shift_logs.internal_location_id IS E'The location of the activity';
COMMENT ON COLUMN agency_shift_logs.internal_location_id2 IS E'The location of the activity';
COMMENT ON COLUMN agency_shift_logs.internal_location_id3 IS E'The location of the activity';
COMMENT ON COLUMN agency_shift_logs.lock_flag IS E'Observation';
COMMENT ON COLUMN agency_shift_logs.log_date IS E'Date of the log';
COMMENT ON COLUMN agency_shift_logs.log_time IS E'Time of the log';
COMMENT ON COLUMN agency_shift_logs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_shift_logs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_shift_logs.shift_log_seq IS E'Shift log sequence';
COMMENT ON COLUMN agency_shift_logs.staff_id IS E'System generated number associated with user account';

CREATE TABLE agency_significant_incidents (
	agency_incident_id bigint NOT NULL,
	significance_type varchar(12) NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	seal_flag varchar(1),
	entry_date timestamp NOT NULL
)  TABLESPACE TAG_DATA;

CREATE TABLE agency_visit_days (
	agy_loc_id varchar(6) NOT NULL,
	week_day varchar(3) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agency_visit_days IS E'The available vist days for agency (Prisons)';
COMMENT ON COLUMN agency_visit_days.agy_loc_id IS E'The ID of prison';
COMMENT ON COLUMN agency_visit_days.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_visit_days.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_visit_days.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_visit_days.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_visit_days.week_day IS E'The week day for visit';

CREATE TABLE agency_visit_slots (
	agency_visit_slot_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	week_day varchar(3) NOT NULL,
	time_slot_seq varchar(12) NOT NULL,
	internal_location_id bigint NOT NULL,
	max_groups integer,
	max_adults integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agency_visit_slots IS E'The agnecy visit slots : Week Day, Time Slot and Internal Locations';
COMMENT ON COLUMN agency_visit_slots.agency_visit_slot_id IS E'The prison ID';
COMMENT ON COLUMN agency_visit_slots.agy_loc_id IS E'The week day';
COMMENT ON COLUMN agency_visit_slots.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_visit_slots.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_visit_slots.internal_location_id IS E'The ID of the internal Location';
COMMENT ON COLUMN agency_visit_slots.max_adults IS E'Max Number of adults';
COMMENT ON COLUMN agency_visit_slots.max_groups IS E'Max number of groups';
COMMENT ON COLUMN agency_visit_slots.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_visit_slots.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_visit_slots.time_slot_seq IS E'The time slot seq number';
COMMENT ON COLUMN agency_visit_slots.week_day IS E'The ID of the prison visit slot';

CREATE TABLE agency_visit_times (
	agy_loc_id varchar(6) NOT NULL,
	week_day varchar(3) NOT NULL,
	time_slot_seq varchar(12) NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agency_visit_times IS E'The agency visit daily time slots';
COMMENT ON COLUMN agency_visit_times.agy_loc_id IS E'The ID of the prison';
COMMENT ON COLUMN agency_visit_times.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_visit_times.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_visit_times.end_time IS E'The End time of the time slot';
COMMENT ON COLUMN agency_visit_times.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_visit_times.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agency_visit_times.start_time IS E'The Start time of the time slot';
COMMENT ON COLUMN agency_visit_times.time_slot_seq IS E'The time slot seq for the day';
COMMENT ON COLUMN agency_visit_times.week_day IS E'The week day of visit';

CREATE TABLE agency_zip_codes (
	zip_code varchar(32),
	agy_zip_seq integer NOT NULL DEFAULT 1,
	agy_loc_id varchar(6) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN agency_zip_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agency_zip_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agency_zip_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agency_zip_codes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE agy_inc_investigations (
	agy_inc_investigation_id bigint NOT NULL,
	agency_incident_id bigint NOT NULL,
	investigator_id integer NOT NULL,
	assigned_date timestamp NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	party_seq integer NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agy_inc_investigations IS E'The investigation of the agency incident';
COMMENT ON COLUMN agy_inc_investigations.agency_incident_id IS E'FK to agency incidents';
COMMENT ON COLUMN agy_inc_investigations.agy_inc_investigation_id IS E'PK of the investigation';
COMMENT ON COLUMN agy_inc_investigations.assigned_date IS E'The assignment date';
COMMENT ON COLUMN agy_inc_investigations.comment_text IS E'The comments';
COMMENT ON COLUMN agy_inc_investigations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agy_inc_investigations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agy_inc_investigations.investigator_id IS E'FK to Staff Members who performs the investigations';
COMMENT ON COLUMN agy_inc_investigations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agy_inc_investigations.modify_user_id IS E'The user who modifies the record';

CREATE TABLE agy_inc_inv_statements (
	agy_ii_statement_id bigint NOT NULL,
	agy_inc_investigation_id bigint NOT NULL,
	statement_type varchar(12) NOT NULL,
	name_of_statement_taker varchar(60),
	date_of_statement_taken timestamp NOT NULL,
	statement_detail varchar(4000) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agy_inc_inv_statements IS E'The statements details of the incident investigations';
COMMENT ON COLUMN agy_inc_inv_statements.agy_ii_statement_id IS E'The PK of the investigation statements';
COMMENT ON COLUMN agy_inc_inv_statements.agy_inc_investigation_id IS E'FK to agency incident investigations';
COMMENT ON COLUMN agy_inc_inv_statements.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agy_inc_inv_statements.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agy_inc_inv_statements.date_of_statement_taken IS E'The date the statements was taken';
COMMENT ON COLUMN agy_inc_inv_statements.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agy_inc_inv_statements.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agy_inc_inv_statements.name_of_statement_taker IS E'Name of the person who takes the statement';
COMMENT ON COLUMN agy_inc_inv_statements.statement_detail IS E'The details';
COMMENT ON COLUMN agy_inc_inv_statements.statement_type IS E'Referece Code(OIC_STMT_TYP)';

CREATE TABLE agy_int_loc_amendments (
	agy_int_loc_amendment_id bigint NOT NULL,
	internal_location_id bigint NOT NULL,
	amend_date timestamp NOT NULL,
	column_name varchar(30),
	old_value varchar(240),
	new_value varchar(240),
	deactivate_reason_code varchar(12),
	int_loc_profile_code varchar(12),
	action_code varchar(12),
	amend_user_id varchar(30) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agy_int_loc_amendments IS E'The change log of agency internal locations details';
COMMENT ON COLUMN agy_int_loc_amendments.action_code IS E'Reference Code(CHG_ACT)';
COMMENT ON COLUMN agy_int_loc_amendments.agy_int_loc_amendment_id IS E'The PK of the change log';
COMMENT ON COLUMN agy_int_loc_amendments.amend_date IS E'The change date';
COMMENT ON COLUMN agy_int_loc_amendments.amend_user_id IS E'The user who make the change';
COMMENT ON COLUMN agy_int_loc_amendments.column_name IS E'The column name of the change';
COMMENT ON COLUMN agy_int_loc_amendments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agy_int_loc_amendments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agy_int_loc_amendments.deactivate_reason_code IS E'reference code(LIV_UN_RSN)';
COMMENT ON COLUMN agy_int_loc_amendments.int_loc_profile_code IS E'IL_Code Based on IL_Profile';
COMMENT ON COLUMN agy_int_loc_amendments.internal_location_id IS E'FK to Agency Internal Locations';
COMMENT ON COLUMN agy_int_loc_amendments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agy_int_loc_amendments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agy_int_loc_amendments.new_value IS E'The new value';
COMMENT ON COLUMN agy_int_loc_amendments.old_value IS E'The original value';

CREATE TABLE agy_int_loc_profiles (
	internal_location_id bigint NOT NULL,
	int_loc_profile_type varchar(12) NOT NULL,
	int_loc_profile_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agy_int_loc_profiles IS E'The Profile of Agency Internal Locations. For NOMIS project, the profile type includes 1.  HOU_SANI_FIT    : House Sanitation and Fittings
2.  HOU_UNIT_ATT   :Unit Attributes
3.  HOU_USED_FOR  :Unsed For
4.  NON_ASSO_TYP   :Non Association Type
5.  SUP_LVL_TYPE     :Security (Supervision Level)';
COMMENT ON COLUMN agy_int_loc_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agy_int_loc_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agy_int_loc_profiles.int_loc_profile_code IS E'Based codes in on IL_Profile Reference Domain';
COMMENT ON COLUMN agy_int_loc_profiles.int_loc_profile_type IS E'The kind of profile is about, such as Security, Fittings or Non-Association Type. Reference Code(IL_PROF)';
COMMENT ON COLUMN agy_int_loc_profiles.internal_location_id IS E'The unique identifier of the Intenal Location.  FK to Agency Internal Locations';
COMMENT ON COLUMN agy_int_loc_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agy_int_loc_profiles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE agy_loc_establishments (
	agy_loc_id varchar(6) NOT NULL,
	establishment_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agy_loc_establishments IS E'The agency location establishments ';
COMMENT ON COLUMN agy_loc_establishments.agy_loc_id IS E'FK to Agency Location';
COMMENT ON COLUMN agy_loc_establishments.establishment_type IS E'Reference Code (AGY_EST_TYPE)';

CREATE TABLE agy_loc_feed_details (
	agy_loc_id varchar(6) NOT NULL,
	feed_agy_loc_id varchar(6) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE agy_loc_team_functions (
	agy_loc_team_function_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	function_type varchar(12) NOT NULL,
	team_id bigint NOT NULL,
	overwritten_flag varchar(1) NOT NULL DEFAULT 'N',
	effective_date timestamp NOT NULL,
	expiry_date timestamp,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agy_loc_team_functions IS E'The function team assignment for agency location';
COMMENT ON COLUMN agy_loc_team_functions.active_flag IS E'?If the assignment active';
COMMENT ON COLUMN agy_loc_team_functions.agy_loc_id IS E'The ID of the agency location';
COMMENT ON COLUMN agy_loc_team_functions.agy_loc_team_function_id IS E'The ID of the agency location team functions';
COMMENT ON COLUMN agy_loc_team_functions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN agy_loc_team_functions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN agy_loc_team_functions.effective_date IS E'The effective date of the assignment';
COMMENT ON COLUMN agy_loc_team_functions.expiry_date IS E'The expriy date of the assignment';
COMMENT ON COLUMN agy_loc_team_functions.function_type IS E'The function.  Reference Codes(FUNCTION)';
COMMENT ON COLUMN agy_loc_team_functions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN agy_loc_team_functions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN agy_loc_team_functions.overwritten_flag IS E'? If the newly assignment team overwrite existing function assignment';
COMMENT ON COLUMN agy_loc_team_functions.team_id IS E'The ID of the team';

CREATE TABLE agy_prisoner_pay_profiles (
	agy_loc_id varchar(6) NOT NULL,
	auto_pay_flag varchar(1) NOT NULL DEFAULT 'N',
	schedule_start_date timestamp,
	pay_frequency smallint,
	weekly_absence_limit smallint,
	min_half_day_rate decimal(11,3),
	max_half_day_rate decimal(11,3),
	max_piece_work_rate decimal(11,3),
	max_bonus_rate decimal(11,3),
	backdate_days smallint,
	default_pay_band_code varchar(12),
	start_date timestamp NOT NULL,
	end_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE agy_prisoner_pay_profiles IS E'Prisoner pay profiles either estate wide or for an agency location';
COMMENT ON COLUMN agy_prisoner_pay_profiles.agy_loc_id IS E'The associated agency location';
COMMENT ON COLUMN agy_prisoner_pay_profiles.auto_pay_flag IS E'Auto payment flag, if set means the pay is automatic';
COMMENT ON COLUMN agy_prisoner_pay_profiles.backdate_days IS E'The number of back that can be included in a payment run';
COMMENT ON COLUMN agy_prisoner_pay_profiles.max_bonus_rate IS E'The maximum bonus pay';
COMMENT ON COLUMN agy_prisoner_pay_profiles.max_half_day_rate IS E'The maximum rate for a half day';
COMMENT ON COLUMN agy_prisoner_pay_profiles.max_piece_work_rate IS E'The maximum piece work pay';
COMMENT ON COLUMN agy_prisoner_pay_profiles.min_half_day_rate IS E'The minimum rate for a half day';
COMMENT ON COLUMN agy_prisoner_pay_profiles.pay_frequency IS E'Pay frequecny required 1-28 in days';
COMMENT ON COLUMN agy_prisoner_pay_profiles.schedule_start_date IS E'The start date from which the schedule starts';
COMMENT ON COLUMN agy_prisoner_pay_profiles.weekly_absence_limit IS E'The limit beyond which the offender wont get paid';

CREATE TABLE allowable_offence_types (
	offence_code varchar(25) NOT NULL,
	statute_code varchar(12) NOT NULL,
	offence_type varchar(12) NOT NULL,
	recommended_bail_amount decimal(10,2),
	bail_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE allowable_offence_types IS E'- Retrofitted';
COMMENT ON COLUMN allowable_offence_types.bail_allowed_flag IS E' - Column already exists';
COMMENT ON COLUMN allowable_offence_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN allowable_offence_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN allowable_offence_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN allowable_offence_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN allowable_offence_types.offence_code IS E' - Column already exists';
COMMENT ON COLUMN allowable_offence_types.offence_type IS E'Reference Code : [ OFFENCE_TYPE ]';
COMMENT ON COLUMN allowable_offence_types.recommended_bail_amount IS E' - Column already exists';
COMMENT ON COLUMN allowable_offence_types.statute_code IS E' - Column already exists';

CREATE TABLE allowable_orders (
	agency_location_type varchar(12) NOT NULL,
	order_type varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32) DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE allowable_orders IS E'- Retrofitted';
COMMENT ON COLUMN allowable_orders.active_flag IS E' - Column already exists';
COMMENT ON COLUMN allowable_orders.agency_location_type IS E'Refrence Code [AGY_LOC_TYPE]';
COMMENT ON COLUMN allowable_orders.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN allowable_orders.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN allowable_orders.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN allowable_orders.list_seq IS E' - Column already exists';
COMMENT ON COLUMN allowable_orders.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN allowable_orders.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN allowable_orders.order_type IS E' - Column already exists';
COMMENT ON COLUMN allowable_orders.update_allowed_flag IS E' - Column already exists';

CREATE TABLE an_audit (
	action_type varchar(1),
	agy_loc_id varchar(6),
	offender_id_display varchar(10),
	booking_no varchar(14),
	first_name varchar(35),
	last_name varchar(35),
	middle_name varchar(35),
	suffix varchar(12),
	birth_date timestamp,
	offender_id bigint,
	modified_date timestamp,
	offender_book_id bigint,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE api_off_obs_staging (
	log_id bigint NOT NULL,
	offender_book_id bigint,
	observation_type varchar(12),
	obs_period_id bigint,
	frequency bigint,
	status_code varchar(12),
	modify_datetime timestamp,
	log_message varchar(3000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE application_logs (
	application_log_id bigint NOT NULL,
	job_control_id bigint,
	interface_id bigint,
	log_message varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE application_logs IS E'The detailed log of application jobs';
COMMENT ON COLUMN application_logs.application_log_id IS E'The ID of the application log';
COMMENT ON COLUMN application_logs.interface_id IS E'The ID of the interface';
COMMENT ON COLUMN application_logs.job_control_id IS E'The ID of the job control';
COMMENT ON COLUMN application_logs.log_message IS E'The log message';

CREATE TABLE areas (
	area_class varchar(12) NOT NULL,
	area_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	parent_area_code varchar(12),
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	area_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE areas IS E'The NOMIS areas, including regions and areas';
COMMENT ON COLUMN areas.active_flag IS E'?if the record actively used';
COMMENT ON COLUMN areas.area_class IS E'The area class (REGION;AREA;SUB_AREA). Reference_Code(AREA_CLASS)';
COMMENT ON COLUMN areas.area_code IS E'The area code';
COMMENT ON COLUMN areas.area_type IS E'The area usage based on the agency location Type.  Reference_Code(AREA_TYPE)';
COMMENT ON COLUMN areas.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN areas.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN areas.description IS E'Description';
COMMENT ON COLUMN areas.expiry_date IS E'expiry date of the ara';
COMMENT ON COLUMN areas.list_seq IS E'The listing order';
COMMENT ON COLUMN areas.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN areas.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN areas.parent_area_code IS E'The parent of the area code';

CREATE TABLE arrests (
	arrest_id bigint NOT NULL,
	case_id bigint,
	staff_id integer,
	offender_book_id bigint,
	control_arrest_agy_loc_id varchar(6),
	order_id bigint,
	arrest_date timestamp,
	arrest_time timestamp,
	blood_alcohol_content decimal(4,3),
	arrest_location_text varchar(40),
	enforcement_agy_loc_id varchar(6),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE arrests IS E'- Retrofitted';
COMMENT ON COLUMN arrests.arrest_date IS E' - Column already exists';
COMMENT ON COLUMN arrests.arrest_id IS E' - Column already exists';
COMMENT ON COLUMN arrests.arrest_location_text IS E' - Column already exists';
COMMENT ON COLUMN arrests.arrest_time IS E' - Column already exists';
COMMENT ON COLUMN arrests.blood_alcohol_content IS E' - Column already exists';
COMMENT ON COLUMN arrests.case_id IS E' - Column already exists';
COMMENT ON COLUMN arrests.comment_text IS E' - Column already exists';
COMMENT ON COLUMN arrests.control_arrest_agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN arrests.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN arrests.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN arrests.enforcement_agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN arrests.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN arrests.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN arrests.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN arrests.order_id IS E' - Column already exists';
COMMENT ON COLUMN arrests.staff_id IS E' - Column already exists';

CREATE TABLE assessed_offender_needs (
	assessment_id bigint NOT NULL,
	off_ass_need_id bigint NOT NULL,
	assessed_need_code varchar(12) NOT NULL,
	objective varchar(240) NOT NULL,
	target_date timestamp,
	active_flag varchar(1) DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN assessed_offender_needs.active_flag IS E'Status of the offender assessment need';
COMMENT ON COLUMN assessed_offender_needs.assessed_need_code IS E'The CODE for the offender assessment need';
COMMENT ON COLUMN assessed_offender_needs.assessment_id IS E' The ID of assessment table';
COMMENT ON COLUMN assessed_offender_needs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessed_offender_needs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessed_offender_needs.expiry_date IS E'EXPIRY date of the offender assessment need';
COMMENT ON COLUMN assessed_offender_needs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessed_offender_needs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessed_offender_needs.objective IS E'Goal related to mitigation of this Risk/Need';
COMMENT ON COLUMN assessed_offender_needs.off_ass_need_id IS E'Standard Number ID';
COMMENT ON COLUMN assessed_offender_needs.target_date IS E'Start date of the offender assessment need';

CREATE TABLE assessed_treatment_protocols (
	off_ass_need_id bigint NOT NULL,
	treatment_id bigint NOT NULL,
	casework_type varchar(12) NOT NULL,
	program_id bigint,
	max_score smallint,
	min_score smallint NOT NULL,
	referral_flag varchar(1) DEFAULT 'N',
	active_flag varchar(1) DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN assessed_treatment_protocols.active_flag IS E'Status of current assessed treatment protocols';
COMMENT ON COLUMN assessed_treatment_protocols.casework_type IS E'The casework type for assessed treatment protocols';
COMMENT ON COLUMN assessed_treatment_protocols.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessed_treatment_protocols.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessed_treatment_protocols.expiry_date IS E'Expiry date of assessed treatment protocols';
COMMENT ON COLUMN assessed_treatment_protocols.max_score IS E'Maximum score of assessed treatment protocols';
COMMENT ON COLUMN assessed_treatment_protocols.min_score IS E'Minimum score of assessed treatment protocols';
COMMENT ON COLUMN assessed_treatment_protocols.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessed_treatment_protocols.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessed_treatment_protocols.off_ass_need_id IS E'Foreign key';
COMMENT ON COLUMN assessed_treatment_protocols.program_id IS E'Program for assessed treatment protocols ';
COMMENT ON COLUMN assessed_treatment_protocols.referral_flag IS E'Referral for assessed treatment protocols';
COMMENT ON COLUMN assessed_treatment_protocols.treatment_id IS E'Primary key';

CREATE TABLE assessments (
	assessment_id bigint NOT NULL,
	assessment_class varchar(12) NOT NULL,
	parent_assessment_id bigint,
	assessment_code varchar(20) NOT NULL,
	description varchar(300) NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	effective_date timestamp,
	expiry_date timestamp,
	score decimal(6,2),
	mutual_exclusive_flag varchar(1) DEFAULT 'Y',
	determine_sup_level_flag varchar(1) DEFAULT 'Y',
	require_evaluation_flag varchar(1) DEFAULT 'Y',
	require_approval_flag varchar(1) DEFAULT 'Y',
	review_cycle_days smallint,
	caseload_type varchar(12),
	review_flag varchar(1),
	assess_comment varchar(240),
	high_value decimal(5,2),
	low_value decimal(5,2),
	search_criteria_flag varchar(1),
	overrideable_flag varchar(1),
	assessment_type varchar(12),
	calculate_total_flag varchar(1),
	measure varchar(12),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	cell_sharing_alert_flag varchar(1) DEFAULT 'N',
	total_percent decimal(6,2),
	screen_code varchar(40),
	schedule_complete_days smallint,
	sect_score_include_flag varchar(1) DEFAULT 'Y',
	sect_score_override_flag varchar(1) DEFAULT 'N',
	medical_flag varchar(1) DEFAULT 'N',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE assessments IS E'Template for performing offender assessments.';
COMMENT ON COLUMN assessments.active_flag IS E'If the code active ?';
COMMENT ON COLUMN assessments.assessment_class IS E'Reference Code [ ASSESS_CLS ] : Assessment Class Such as (Category, Sections ...)';
COMMENT ON COLUMN assessments.assessment_code IS E'Assessment Code for different parts of assessment ie.  Type, Section, Category, Indicator.';
COMMENT ON COLUMN assessments.assessment_id IS E'System generated identifier for an assessment.';
COMMENT ON COLUMN assessments.assessment_type IS E'Type - question, exculusive, inclusive or rank type - Reference Code[ASSESS_TYPE]';
COMMENT ON COLUMN assessments.calculate_total_flag IS E'Drives the display of columns in Assessments Screen.';
COMMENT ON COLUMN assessments.create_date IS E'Populates with sysdate while creating a new record';
COMMENT ON COLUMN assessments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessments.description IS E'Description of assessment code.';
COMMENT ON COLUMN assessments.determine_sup_level_flag IS E'The assessment type determines offender security level.';
COMMENT ON COLUMN assessments.effective_date IS E'Effective date for assessment type.';
COMMENT ON COLUMN assessments.expiry_date IS E'Deactivation date for a code.';
COMMENT ON COLUMN assessments.list_seq IS E'Listing Order ( 0 imply Default Value )';
COMMENT ON COLUMN assessments.measure IS E'Populates with measure code if the question is Rank Type';
COMMENT ON COLUMN assessments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessments.mutual_exclusive_flag IS E' Mutually exclusive flag.';
COMMENT ON COLUMN assessments.parent_assessment_id IS E' Pointer back to parent in hierarchy - ie. Type, Section,Category,Indicator';
COMMENT ON COLUMN assessments.require_approval_flag IS E'Approval required before recommended security level can be recorded.';
COMMENT ON COLUMN assessments.require_evaluation_flag IS E'Flag indicating evaluation is required.';
COMMENT ON COLUMN assessments.review_cycle_days IS E'Indicates number of days until next scheduled review.';
COMMENT ON COLUMN assessments.score IS E'This calculated score will determine the offender"s security level.';
COMMENT ON COLUMN assessments.update_allowed_flag IS E'If the code allowed to changed ( It is for controlling the code)';

CREATE TABLE assessment_fields (
	module_name varchar(20) NOT NULL,
	table_name varchar(30) NOT NULL,
	column_name varchar(30) NOT NULL,
	field_label varchar(60) NOT NULL,
	lov_available_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE assessment_fields IS E'Table to store the tables and columns on particular modulesthat will be used to create assessment search criteria.';
COMMENT ON COLUMN assessment_fields.column_name IS E'The database column name for the field';
COMMENT ON COLUMN assessment_fields.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessment_fields.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessment_fields.field_label IS E'The Field Label';
COMMENT ON COLUMN assessment_fields.lov_available_flag IS E'Will a list of values be available on the assessmnets screen for this';
COMMENT ON COLUMN assessment_fields.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessment_fields.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessment_fields.module_name IS E'The name of the module to which the field belongs';
COMMENT ON COLUMN assessment_fields.table_name IS E'The database table for the column';

CREATE TABLE assessment_field_values (
	ass_fdv_id bigint NOT NULL,
	assessment_id bigint NOT NULL,
	module_name varchar(20) NOT NULL,
	table_name varchar(30) NOT NULL,
	column_name varchar(30) NOT NULL,
	field_value varchar(20) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE assessment_field_values IS E'Table to store values held particular tables/column defined by assessment search criteria.';
COMMENT ON COLUMN assessment_field_values.ass_fdv_id IS E'Primary Key - oracle sequence ass_fdv_id';
COMMENT ON COLUMN assessment_field_values.assessment_id IS E'System generated identifier for an assessment.';
COMMENT ON COLUMN assessment_field_values.column_name IS E'The database column name for the field';
COMMENT ON COLUMN assessment_field_values.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessment_field_values.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessment_field_values.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessment_field_values.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessment_field_values.module_name IS E'The name of the module to which the field belongs';
COMMENT ON COLUMN assessment_field_values.table_name IS E'The database table for the column';

CREATE TABLE assessment_measure_questions (
	assessment_id bigint NOT NULL,
	measure_id bigint NOT NULL,
	question_id bigint NOT NULL,
	question_code varchar(20) NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE assessment_measure_questions IS E'This table is used for Assessment Measure Questions Screen';
COMMENT ON COLUMN assessment_measure_questions.active_flag IS E'Defines a active assessment';
COMMENT ON COLUMN assessment_measure_questions.assessment_id IS E'Populates assessment_id from Measure Questions Screen';
COMMENT ON COLUMN assessment_measure_questions.create_date IS E'Populates with sysdate while creating a new record';
COMMENT ON COLUMN assessment_measure_questions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessment_measure_questions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessment_measure_questions.expiry_date IS E'Populates with system date when assessment is inactivated';
COMMENT ON COLUMN assessment_measure_questions.list_seq IS E'Populates from Measure Questions Screens for Sort';
COMMENT ON COLUMN assessment_measure_questions.measure_id IS E'Populates measure_id from Measure Questions Screen';
COMMENT ON COLUMN assessment_measure_questions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessment_measure_questions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessment_measure_questions.question_code IS E'Populates Measure Question Code From Measure Questions Screen';
COMMENT ON COLUMN assessment_measure_questions.question_id IS E'Populates question_id from Measure Questions Screen';
COMMENT ON COLUMN assessment_measure_questions.update_allowed_flag IS E'Populates from Measure Questions Screen';

CREATE TABLE assessment_results (
	assessment_id bigint NOT NULL,
	supervision_level_type varchar(12) NOT NULL,
	list_seq integer,
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	cell_sharing_alert_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE assessment_results IS E'The standard guideline for assessment type against supervision level.';
COMMENT ON COLUMN assessment_results.active_flag IS E'Setting active flag to "N" will remove it from list of values displays.';
COMMENT ON COLUMN assessment_results.assessment_id IS E'System generated part of primary key.';
COMMENT ON COLUMN assessment_results.cell_sharing_alert_flag IS E'?If the result control the cell sharing';
COMMENT ON COLUMN assessment_results.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessment_results.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessment_results.expiry_date IS E'Deactivation date on code. System date is input when Active flag is set to "N".';
COMMENT ON COLUMN assessment_results.list_seq IS E'Listing Order';
COMMENT ON COLUMN assessment_results.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessment_results.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessment_results.supervision_level_type IS E'Reference Code ( SUP_LVL_TYPE )';
COMMENT ON COLUMN assessment_results.update_allowed_flag IS E'Setting flag to "N" will protect value from update.';

CREATE TABLE assessment_summaries (
	offender_book_id bigint NOT NULL,
	case_plan_id bigint NOT NULL,
	assessment_seq bigint NOT NULL,
	category varchar(12) NOT NULL,
	summary varchar(4000) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN assessment_summaries.assessment_seq IS E'Sequence within caseplan';
COMMENT ON COLUMN assessment_summaries.case_plan_id IS E'The seq of the caseplan';
COMMENT ON COLUMN assessment_summaries.category IS E'Category of the Assessment - domain CASEPLAN_ASS';
COMMENT ON COLUMN assessment_summaries.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessment_summaries.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessment_summaries.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessment_summaries.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessment_summaries.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN assessment_summaries.summary IS E'Comment Text';

CREATE TABLE assessment_supervisions (
	assessment_id bigint NOT NULL,
	supervision_level_type varchar(12) NOT NULL,
	list_seq integer,
	mini_score decimal(6,2) NOT NULL,
	max_score decimal(6,2) NOT NULL,
	effective_date timestamp NOT NULL,
	expiry_date timestamp,
	modify_user_id varchar(32),
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE assessment_supervisions IS E'The standard guideline for assessment type against supervision level.';
COMMENT ON COLUMN assessment_supervisions.active_flag IS E'Setting active flag to "N" will remove it from list of values displays.';
COMMENT ON COLUMN assessment_supervisions.assessment_id IS E'System generated part of primary key.';
COMMENT ON COLUMN assessment_supervisions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assessment_supervisions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assessment_supervisions.effective_date IS E'Effective date for assessment type.';
COMMENT ON COLUMN assessment_supervisions.expiry_date IS E'Deactivation date on code. System date is input when Active flag is set to "N".';
COMMENT ON COLUMN assessment_supervisions.list_seq IS E'Listing Order';
COMMENT ON COLUMN assessment_supervisions.max_score IS E'Maximum score for a security level.';
COMMENT ON COLUMN assessment_supervisions.mini_score IS E'Minimum score for a security level.';
COMMENT ON COLUMN assessment_supervisions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assessment_supervisions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assessment_supervisions.supervision_level_type IS E'Reference Code ( SUP_LVL_TYPE )';
COMMENT ON COLUMN assessment_supervisions.update_allowed_flag IS E'Setting flag to "N" will protect value from update.';

CREATE TABLE assess_section_notifications (
	assessment_id bigint NOT NULL,
	score_seq integer NOT NULL,
	score_type varchar(12) NOT NULL,
	min_score smallint NOT NULL,
	max_score smallint NOT NULL,
	next_section_flag varchar(1) NOT NULL DEFAULT 'Y',
	next_assessment_id bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	message_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE asset_locations (
	asset_location_id bigint NOT NULL,
	location_type varchar(12) NOT NULL,
	asset_location_code varchar(40) NOT NULL,
	description varchar(80) NOT NULL,
	list_seq numeric(38) NOT NULL DEFAULT 99,
	parent_asset_location_id bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN asset_locations.asset_location_code IS E'Location Code';
COMMENT ON COLUMN asset_locations.asset_location_id IS E'Asset Location ID';
COMMENT ON COLUMN asset_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN asset_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN asset_locations.description IS E'Long Description of the location';
COMMENT ON COLUMN asset_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN asset_locations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN asset_locations.parent_asset_location_id IS E'Parent Asset Location ID';

CREATE TABLE asset_location_assignments (
	asset_location_assignment_id bigint NOT NULL,
	asset_id bigint NOT NULL,
	asset_location_id bigint NOT NULL,
	from_date timestamp NOT NULL,
	to_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN asset_location_assignments.asset_id IS E'Oracle Sequence Asset ID - Retrofitted';
COMMENT ON COLUMN asset_location_assignments.asset_location_id IS E'Asset Location ID';
COMMENT ON COLUMN asset_location_assignments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN asset_location_assignments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN asset_location_assignments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN asset_location_assignments.modify_user_id IS E'The user who modifies the record';

CREATE TABLE assignments (
	assignment_id bigint NOT NULL,
	to_staff_id integer NOT NULL,
	from_staff_id integer,
	assignment_type varchar(12) NOT NULL,
	offender_book_id bigint NOT NULL,
	assign_staff_id integer NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	updated_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	comment_text varchar(240),
	assignment_date timestamp NOT NULL,
	closure_date timestamp,
	assignment_time timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE assignments IS E'- Retrofitted';
COMMENT ON COLUMN assignments.active_flag IS E' - Column already exists';
COMMENT ON COLUMN assignments.assign_staff_id IS E' - Column already exists';
COMMENT ON COLUMN assignments.assignment_date IS E' - Column already exists';
COMMENT ON COLUMN assignments.assignment_id IS E' - Column already exists';
COMMENT ON COLUMN assignments.assignment_type IS E'Refrence Code [ ASGMT_TYPE ] : Assignment Type';
COMMENT ON COLUMN assignments.closure_date IS E' - Column already exists';
COMMENT ON COLUMN assignments.comment_text IS E' - Column already exists';
COMMENT ON COLUMN assignments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assignments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assignments.from_staff_id IS E' - Column already exists';
COMMENT ON COLUMN assignments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assignments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assignments.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN assignments.to_staff_id IS E' - Column already exists';
COMMENT ON COLUMN assignments.updated_allowed_flag IS E' - Column already exists';

CREATE TABLE assignment_transfers (
	asstra_id bigint NOT NULL,
	offass_id bigint NOT NULL,
	from_date_from timestamp,
	position_from varchar(12),
	role_from varchar(12),
	sac_staff_id_from integer,
	cal_agy_loc_id_from varchar(6),
	agy_loc_id varchar(6) NOT NULL,
	agy_loc_id_to varchar(6) NOT NULL,
	transfer_date_to timestamp,
	transfer_date timestamp NOT NULL,
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	from_date timestamp,
	position varchar(12),
	role varchar(12),
	sac_staff_id integer,
	cal_agy_loc_id varchar(6),
	status_from varchar(12),
	status_to varchar(12),
	offender_book_id bigint,
	sentence_seq integer,
	offender_book_id_request bigint,
	charge_seq smallint,
	request_seq smallint,
	component varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN assignment_transfers.agy_loc_id IS E' The location residing within an agency.';
COMMENT ON COLUMN assignment_transfers.agy_loc_id_to IS E' The location residing within an agency.';
COMMENT ON COLUMN assignment_transfers.asstra_id IS E'Standard Number ID';
COMMENT ON COLUMN assignment_transfers.cal_agy_loc_id IS E' The location residing within an agency.';
COMMENT ON COLUMN assignment_transfers.cal_agy_loc_id_from IS E' The location residing within an agency.';
COMMENT ON COLUMN assignment_transfers.charge_seq IS E'The short sequence for making up Primary Key';
COMMENT ON COLUMN assignment_transfers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN assignment_transfers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN assignment_transfers.creation_user IS E'Database User Account Name';
COMMENT ON COLUMN assignment_transfers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN assignment_transfers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN assignment_transfers.offass_id IS E'Foreign jey to the work assignments table';
COMMENT ON COLUMN assignment_transfers.offender_book_id IS E'Standard Number ID';
COMMENT ON COLUMN assignment_transfers.offender_book_id_request IS E'Standard Number ID';
COMMENT ON COLUMN assignment_transfers.position IS E'Standard Reference Code';
COMMENT ON COLUMN assignment_transfers.position_from IS E'Standard Reference Code';
COMMENT ON COLUMN assignment_transfers.request_seq IS E'The short sequence for making up Primary Key';
COMMENT ON COLUMN assignment_transfers.role IS E'Standard Reference Code';
COMMENT ON COLUMN assignment_transfers.role_from IS E'Standard Reference Code';
COMMENT ON COLUMN assignment_transfers.sac_staff_id IS E'System generated number associated with user account';
COMMENT ON COLUMN assignment_transfers.sac_staff_id_from IS E'System generated number associated with user account';
COMMENT ON COLUMN assignment_transfers.sentence_seq IS E'The short sequence for making up Primary Key';
COMMENT ON COLUMN assignment_transfers.status_from IS E'Standard Reference Code';
COMMENT ON COLUMN assignment_transfers.status_to IS E'Standard Reference Code';
COMMENT ON COLUMN assignment_transfers.transfer_date_to IS E'Date the transfer was completed. ie assgined to an officer ornon-officer status.';

CREATE TABLE automatic_case_notes (
	case_note_seq integer NOT NULL,
	table_name varchar(100),
	action varchar(32),
	description varchar(2000),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	cas_not_type varchar(12),
	reason varchar(12),
	trigger_event varchar(60),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN automatic_case_notes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN automatic_case_notes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN automatic_case_notes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN automatic_case_notes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE auto_recon_worktab_tmp (
	bank_txn_id bigint,
	bank_type_code smallint,
	bank_cheque_number_flag varchar(1),
	bank_txn_type_desc varchar(240),
	bank_txn_post_usage varchar(12),
	bank_account_number varchar(25),
	bank_txn_date timestamp,
	bank_txn_amount decimal(11,2),
	bank_customer_ref_num varchar(255),
	bank_file_ref_id bigint,
	txn_id bigint,
	txn_entry_seq integer,
	gl_entry_seq integer,
	txn_entry_date timestamp,
	txn_type varchar(6),
	txn_post_usage varchar(12),
	txn_entry_amount decimal(11,2),
	txn_entry_desc varchar(240),
	caseload_id varchar(6),
	account_code integer,
	bank_statement_date timestamp,
	matched_flag varchar(1),
	adjustment_amount decimal(11,2),
	record_type varchar(1),
	bank_txn_type varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE available_clothing_sizes (
	clothing_type varchar(12) NOT NULL,
	clothing_size varchar(12) NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN available_clothing_sizes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN available_clothing_sizes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN available_clothing_sizes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN available_clothing_sizes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE bail_bond_profiles (
	id bigint NOT NULL,
	corporate_id bigint,
	contact_last_name varchar(60),
	contact_first_name varchar(60),
	position varchar(60),
	phone bigint,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN bail_bond_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bail_bond_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bail_bond_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bail_bond_profiles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE bail_details (
	order_id bigint NOT NULL,
	bail_seq bigint NOT NULL,
	bail_type varchar(12) NOT NULL,
	offender_book_id bigint,
	charge_seq integer DEFAULT 1,
	bail_amount decimal(11,2),
	bail_status varchar(12),
	next_review_date timestamp,
	last_review_date timestamp,
	report_print_date timestamp,
	receipt_reference_text varchar(20),
	bail_date timestamp,
	bail_time timestamp,
	comment_text varchar(240),
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	corporate_id bigint,
	post_person_text varchar(40),
	bail_bond_profile_id bigint,
	person_id bigint,
	bail_user_id varchar(32),
	appeal_bail_charge_flag varchar(1),
	bail_action varchar(12),
	bail_posted_date timestamp,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_userid varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN bail_details.bail_amount IS E'Bail amount.';
COMMENT ON COLUMN bail_details.bail_seq IS E'Sequence number for bail.';
COMMENT ON COLUMN bail_details.bail_status IS E'Reference Code ( BAIL_STS )';
COMMENT ON COLUMN bail_details.bail_type IS E'Reference Code ( BAIL_TYPE )';
COMMENT ON COLUMN bail_details.charge_seq IS E'Sequence number for a charge.';
COMMENT ON COLUMN bail_details.comment_text IS E'Bail comment.';
COMMENT ON COLUMN bail_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bail_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bail_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bail_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN bail_details.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN bail_details.order_id IS E'Sequence number for an order.';
COMMENT ON COLUMN bail_details.post_person_text IS E'The staff who post the bail';
COMMENT ON COLUMN bail_details.receipt_reference_text IS E'Receipt Reference Number';
COMMENT ON COLUMN bail_details.report_print_date IS E'Report printed date.';

CREATE TABLE bail_detail_charges (
	bail_det_chg_id bigint NOT NULL,
	order_id bigint NOT NULL,
	bail_seq bigint NOT NULL DEFAULT 1,
	offender_book_id bigint NOT NULL,
	charge_seq integer NOT NULL DEFAULT 1,
	bail_charge_flag varchar(1) DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN bail_detail_charges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bail_detail_charges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bail_detail_charges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bail_detail_charges.modify_user_id IS E'The user who modifies the record';

CREATE TABLE bail_statuses (
	order_id bigint NOT NULL,
	bail_seq bigint NOT NULL,
	bail_status varchar(12) NOT NULL,
	receipt_reference_text varchar(20),
	comment_text varchar(240),
	post_person_text varchar(40),
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN bail_statuses.bail_seq IS E'Sequence number for bail.';
COMMENT ON COLUMN bail_statuses.bail_status IS E'Reference Code ( BAIL_STS )';
COMMENT ON COLUMN bail_statuses.comment_text IS E'Bail comment.';
COMMENT ON COLUMN bail_statuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bail_statuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bail_statuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bail_statuses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN bail_statuses.order_id IS E'Sequence number for an order.';
COMMENT ON COLUMN bail_statuses.post_person_text IS E'The staff who post the bail';
COMMENT ON COLUMN bail_statuses.receipt_reference_text IS E'Receipt Reference Number';

CREATE TABLE bank_accounts_maintenances (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	client_id varchar(32),
	originator_id varchar(20),
	bk_account_desc varchar(40),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE bank_cheque_beneficiaries (
	cheque_txn_id bigint NOT NULL,
	cheque_amount decimal(11,2) NOT NULL,
	person_id bigint,
	corporate_id bigint,
	txn_id bigint,
	offender_id bigint,
	amount decimal(11,2) NOT NULL,
	offender_deduction_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN bank_cheque_beneficiaries.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bank_cheque_beneficiaries.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bank_cheque_beneficiaries.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bank_cheque_beneficiaries.modify_user_id IS E'The user who modifies the record';

CREATE TABLE bank_cheque_books (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	cheque_book_seq bigint NOT NULL DEFAULT 99,
	account_number varchar(25) NOT NULL,
	first_check_number integer NOT NULL,
	last_check_number integer NOT NULL,
	next_check_number integer,
	txn_entry_date timestamp,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE bank_cheque_books IS E'Maintains cheque printing data for each bank account within a caseload.';
COMMENT ON COLUMN bank_cheque_books.account_code IS E'General ledger account code.';
COMMENT ON COLUMN bank_cheque_books.account_number IS E'Bank account number assigned to this account.';
COMMENT ON COLUMN bank_cheque_books.caseload_id IS E'Unique identifier for a caseload.';
COMMENT ON COLUMN bank_cheque_books.cheque_book_seq IS E'Unique identifier for a cheque book.';
COMMENT ON COLUMN bank_cheque_books.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bank_cheque_books.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bank_cheque_books.first_check_number IS E'First cheque number in series.';
COMMENT ON COLUMN bank_cheque_books.last_check_number IS E'Last cheque number in series.';
COMMENT ON COLUMN bank_cheque_books.modify_date IS E'Modify Date';
COMMENT ON COLUMN bank_cheque_books.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bank_cheque_books.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN bank_cheque_books.next_check_number IS E'Next cheque available in series.';
COMMENT ON COLUMN bank_cheque_books.txn_entry_date IS E'Transaction entry date.';

CREATE TABLE bank_cheque_data (
	txn_id bigint NOT NULL,
	bank_account_code integer NOT NULL,
	caseload_id varchar(6) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	start_txn_id bigint,
	end_txn_id bigint,
	txn_entry_amount decimal(11,2) NOT NULL,
	payee_person_id bigint,
	payee_corporate_id bigint,
	payee_name_text varchar(60),
	offender_id bigint,
	single_entry_flag varchar(1) DEFAULT 'N',
	cheque_flag varchar(1) DEFAULT 'N',
	cheque_date timestamp NOT NULL,
	txn_entry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN bank_cheque_data.bank_account_code IS E'General ledger account code.';
COMMENT ON COLUMN bank_cheque_data.caseload_id IS E'Identifier for a caseload.';
COMMENT ON COLUMN bank_cheque_data.cheque_date IS E'Modify Date';
COMMENT ON COLUMN bank_cheque_data.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bank_cheque_data.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bank_cheque_data.modify_date IS E'Modify Date';
COMMENT ON COLUMN bank_cheque_data.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bank_cheque_data.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN bank_cheque_data.txn_entry_date IS E'Modify Date';

CREATE TABLE bank_cheque_registers (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	cheque_number integer NOT NULL,
	cheque_status varchar(12),
	transaction_date timestamp,
	start_txn_id bigint,
	txn_id bigint,
	end_txn_id bigint,
	origin_type varchar(12),
	reason_text varchar(40),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	cheque_paid_date timestamp,
	rcnl_clr varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE bank_cheque_registers IS E'The detail of the cheque register.';
COMMENT ON COLUMN bank_cheque_registers.account_code IS E'General ledger account code.';
COMMENT ON COLUMN bank_cheque_registers.caseload_id IS E'Identifier for a caseload.';
COMMENT ON COLUMN bank_cheque_registers.cheque_status IS E'Reference Code [ CHQUE_STS ] ie. Printed, Printing, Void, Unknown..';
COMMENT ON COLUMN bank_cheque_registers.create_date IS E'Modify Date';
COMMENT ON COLUMN bank_cheque_registers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bank_cheque_registers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bank_cheque_registers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bank_cheque_registers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN bank_cheque_registers.origin_type IS E'Reference Code [ CHEQ ORIGIN ]';
COMMENT ON COLUMN bank_cheque_registers.transaction_date IS E'The date of check printing.';

CREATE TABLE bank_clear_reconciles_tmp (
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL,
	gl_entry_seq integer NOT NULL,
	txn_entry_date timestamp,
	txn_post_usage varchar(12) NOT NULL,
	reference_no_type varchar(12),
	reference_no bigint,
	description varchar(240),
	txn_entry_amount decimal(11,2) NOT NULL,
	caseload_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN bank_clear_reconciles_tmp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bank_clear_reconciles_tmp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bank_clear_reconciles_tmp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bank_clear_reconciles_tmp.modify_user_id IS E'The user who modifies the record';

CREATE TABLE bank_recon_audits (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	bank_statement_date timestamp NOT NULL,
	bank_statement_status varchar(12),
	bank_balance decimal(11,2),
	adjustment_gl_number integer,
	adjustment_comment varchar(240),
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	list_seq integer DEFAULT 99,
	amnt_less_adj decimal(11,2),
	amnt_plus_adj decimal(11,2),
	amnt_less_comment varchar(240),
	amnt_plus_comment varchar(240),
	seal_flag varchar(1),
	recon_id bigint,
	gl_open_bal decimal(11,2),
	bank_cleared_amount decimal(11,2),
	bank_cleared_count bigint,
	book_cleared_amount decimal(11,2),
	book_cleared_count bigint,
	bank_unposted_amount decimal(11,2),
	bank_unposted_count bigint,
	book_outstanding_amount decimal(11,2),
	book_outstanding_count bigint,
	adj_book_bal decimal(11,2),
	clearing_discrepancy decimal(11,2),
	closing_book_balance decimal(11,2),
	closing_bank_balance decimal(11,2),
	balance_discrepancy decimal(11,2),
	recon_user_id varchar(32),
	recon_datetime timestamp,
	status varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE bank_recon_audits IS E'Information relating to the bank reconciliation process.';
COMMENT ON COLUMN bank_recon_audits.account_code IS E'General ledger account code.';
COMMENT ON COLUMN bank_recon_audits.bank_balance IS E'Bank statement balance.';
COMMENT ON COLUMN bank_recon_audits.bank_statement_date IS E'Bank statement date.';
COMMENT ON COLUMN bank_recon_audits.bank_statement_status IS E'Reference Code [BNK_STAT_STS ]';
COMMENT ON COLUMN bank_recon_audits.caseload_id IS E'Identifier for a caseload.';
COMMENT ON COLUMN bank_recon_audits.create_date IS E'Modify Date';

CREATE TABLE bank_recon_audit_details (
	recon_id bigint NOT NULL,
	gl_txn_id bigint,
	txn_entry_seq bigint,
	bank_txn_id bigint,
	amount decimal(12,2) NOT NULL,
	status varchar(1) NOT NULL,
	gl_entry_seq integer,
	txn_post_usage varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	txn_reversed_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE bank_transaction_codes (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	bank_transaction_code smallint NOT NULL,
	bank_txn_description varchar(40),
	post_usage varchar(2) NOT NULL,
	cheque_number_flag varchar(1) NOT NULL,
	txn_mapped_flag varchar(1) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE bank_txn_code_mappings (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	bank_transaction_code smallint NOT NULL,
	txn_type varchar(6) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE barcode_identifiers (
	identifier_type varchar(12) NOT NULL,
	identifier_id bigint NOT NULL,
	identifier_seq integer NOT NULL,
	barcode integer NOT NULL,
	pin_no varchar(9) NOT NULL,
	active_flag varchar(1) NOT NULL,
	activation_date timestamp NOT NULL,
	deactivation_date timestamp,
	in_session_flag varchar(1),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE batch_offenders_tmp (
	report_batch_id bigint NOT NULL,
	module_name varchar(12) NOT NULL,
	offender_id bigint NOT NULL,
	last_name varchar(35),
	first_name varchar(35),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE bed_assignment_histories (
	offender_book_id bigint NOT NULL,
	bed_assign_seq integer NOT NULL,
	living_unit_id bigint NOT NULL,
	assignment_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	assignment_time timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	assignment_reason varchar(12),
	assignment_end_date timestamp,
	assignment_end_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE bed_assignment_histories IS E'The Offender Bed Assignment History';
COMMENT ON COLUMN bed_assignment_histories.assignment_date IS E'The date the location was assigned to the offender.';
COMMENT ON COLUMN bed_assignment_histories.bed_assign_seq IS E'A sequence number forming part of primary key.';
COMMENT ON COLUMN bed_assignment_histories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN bed_assignment_histories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN bed_assignment_histories.living_unit_id IS E'The bed assignment for an offender. This may encompass up to four levels.';
COMMENT ON COLUMN bed_assignment_histories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN bed_assignment_histories.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN bed_assignment_histories.offender_book_id IS E'The system generated identifier for an offender booking.';

CREATE TABLE beneficiary_transactions (
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL,
	gl_entry_seq integer NOT NULL,
	ben_entry_seq integer NOT NULL,
	offender_deduction_id bigint NOT NULL,
	account_code integer NOT NULL,
	person_id bigint,
	corporate_id bigint,
	txn_post_usage varchar(12) NOT NULL,
	txn_entry_date timestamp NOT NULL,
	txn_entry_time timestamp NOT NULL,
	txn_entry_amount decimal(11,2) NOT NULL,
	caseload_id varchar(12) NOT NULL,
	txn_type varchar(12) NOT NULL,
	txn_entry_desc varchar(240) NOT NULL,
	check_cleared_date timestamp,
	rev_txn_flag varchar(1) DEFAULT 'N',
	rev_txn_id bigint,
	rev_txn_entry_seq integer,
	rev_gl_entry_seq integer,
	rev_ben_entry_seq integer,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	unknown_ben_id bigint,
	beneficiary_cleared_flag varchar(1),
	receipt_txn_type varchar(6) NOT NULL,
	beneficiary_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
) ;
COMMENT ON COLUMN beneficiary_transactions.beneficiary_id IS E'foreign key enabled to offender_beneficiaries.beneficiary_id for future constraint checking';
COMMENT ON COLUMN beneficiary_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN beneficiary_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN beneficiary_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN beneficiary_transactions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE bio_event_logs (
	date_taken timestamp NOT NULL,
	station_ip varchar(64),
	operator varchar(32) NOT NULL DEFAULT 'USER',
	subject_id bigint NOT NULL,
	outcome varchar(12) NOT NULL,
	match_score integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_BIOMETRIC;
COMMENT ON TABLE bio_event_logs IS E'BIOMETRIC VERIFICATION LOGS';

CREATE TABLE bio_fp_samples (
	subject_id bigint NOT NULL,
	scan_id bigint NOT NULL,
	position bigint NOT NULL DEFAULT 0,
	sample_data bytea,
	sample_score integer DEFAULT 0,
	sample_format varchar(6),
	mrs_flag varchar(1) DEFAULT 'N',
	nrecord bytea,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_BIOMETRIC;
COMMENT ON TABLE bio_fp_samples IS E'BIOMETRIC DATA SAMPLES WITH MASTER RECORD MEMBERSHIP FLAG';

CREATE TABLE bio_scans (
	subject_id bigint NOT NULL,
	scan_id bigint NOT NULL,
	station_ip varchar(64),
	scan_date timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	reason varchar(128),
	operator varchar(32) NOT NULL DEFAULT 'USER',
	scan_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_BIOMETRIC;
COMMENT ON TABLE bio_scans IS E'BIOMETRIC DATA CAPTURING EVENTS';

CREATE TABLE bio_subjects (
	subject_id bigint NOT NULL,
	gender varchar(1) NOT NULL DEFAULT 'U',
	alert_flag varchar(6),
	ntemplate bytea,
	cluster_hash bigint NOT NULL DEFAULT 0,
	root_offender_id bigint,
	person_id bigint,
	consent_given varchar(1),
	ntemplate_update timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_BIOMETRIC;
COMMENT ON TABLE bio_subjects IS E'SUBJECTS TO BIOMETRIC DATA CAPTURING';

CREATE TABLE booklet_measures (
	booklet_measure_id bigint NOT NULL,
	assmnt_booklet_id bigint NOT NULL,
	assessment_id bigint NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE booklet_measures IS E'The table stores which Assessment booklets are assigned to an Offender.';
COMMENT ON COLUMN booklet_measures.active_flag IS E'Determines wether the Booklet Measure is active of not';
COMMENT ON COLUMN booklet_measures.assessment_id IS E'Associated Assessment';
COMMENT ON COLUMN booklet_measures.assmnt_booklet_id IS E'Associated Assessment Booklet';
COMMENT ON COLUMN booklet_measures.booklet_measure_id IS E'Primary key field of the table';
COMMENT ON COLUMN booklet_measures.expiry_date IS E'The date the the Booklet Measure will expiry';
COMMENT ON COLUMN booklet_measures.list_seq IS E'The Sequence in which the record will be displayed';

CREATE TABLE btest (
	pkg text
)  TABLESPACE TAG_DATA;

CREATE TABLE caseloads (
	caseload_id varchar(6) NOT NULL,
	description varchar(40) NOT NULL,
	caseload_type varchar(12) NOT NULL,
	list_seq integer,
	trust_accounts_flag varchar(1) NOT NULL DEFAULT 'Y',
	access_property_flag varchar(1),
	trust_caseload_id varchar(6),
	payroll_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	deactivation_date timestamp,
	commissary_flag varchar(1) NOT NULL DEFAULT 'N',
	payroll_trust_caseload varchar(6),
	commissary_trust_caseload varchar(6),
	trust_commissary_caseload varchar(6),
	community_trust_caseload varchar(6),
	mdt_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	billing_flag varchar(1) NOT NULL DEFAULT 'N',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseloads IS E'The gruping of one or more agency locations.';
COMMENT ON COLUMN caseloads.billing_flag IS E'Caseload is a BOS Caseload.';
COMMENT ON COLUMN caseloads.caseload_id IS E'An identifing code for a caseload';
COMMENT ON COLUMN caseloads.caseload_type IS E'Refrence Code [ CSLD_TYPE ] : Type of Caseload - ie Institution, Office etc.';
COMMENT ON COLUMN caseloads.commissary_flag IS E'Caseload is a Commissary Caseload.';
COMMENT ON COLUMN caseloads.commissary_trust_caseload IS E'Central Trust Caseload for Commissary. Multiple Commissary, Single Trust.';
COMMENT ON COLUMN caseloads.community_trust_caseload IS E'Link between a non-financial community caseload to a financial admin caseload';
COMMENT ON COLUMN caseloads.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseloads.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseloads.description IS E'The description of the Caseload ID';
COMMENT ON COLUMN caseloads.list_seq IS E'Controls the order in which caseload information will appear on a list of values.';
COMMENT ON COLUMN caseloads.mdt_flag IS E'Mandatory Drug Testing Flag';
COMMENT ON COLUMN caseloads.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseloads.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseloads.payroll_trust_caseload IS E'Central Trust Caseload for Payroll. Multiple Payroll, Single Trust.';
COMMENT ON COLUMN caseloads.trust_accounts_flag IS E'Indicates this institutional caseload has trust accounting capabilities.';
COMMENT ON COLUMN caseloads.trust_commissary_caseload IS E'Central Commissary Caseload for Trust. Multiple Trust, One Commissary.';

CREATE TABLE caseload_account_codes (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_account_codes IS E'Filter allowing for specification of caseloads which account codes pertain to.';
COMMENT ON COLUMN caseload_account_codes.account_code IS E' Account code which is being applied to specific caseloads.';
COMMENT ON COLUMN caseload_account_codes.caseload_id IS E' Caseloads using account code (if not all).';
COMMENT ON COLUMN caseload_account_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_account_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_account_codes.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_account_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_account_codes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE caseload_account_codes_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	caseload_id varchar(6),
	account_code integer,
	modify_user_id varchar(32),
	modify_date timestamp,
	list_seq smallint DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;

CREATE TABLE caseload_account_periods (
	caseload_id varchar(6) NOT NULL,
	account_period_id integer NOT NULL,
	account_period_status varchar(12),
	closing_user_id varchar(32),
	closing_date timestamp,
	reopen_txn_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_account_periods IS E'Maintains the status of accounting periods for caseloads.';
COMMENT ON COLUMN caseload_account_periods.account_period_id IS E' Identifier for an accounting period ie. Month, Year.';
COMMENT ON COLUMN caseload_account_periods.account_period_status IS E'Reference Code [ AC_PRD_STS ]';
COMMENT ON COLUMN caseload_account_periods.caseload_id IS E' The identifier for a trust accounting caseload.';
COMMENT ON COLUMN caseload_account_periods.closing_date IS E'The date the accounting period was closed.';
COMMENT ON COLUMN caseload_account_periods.closing_user_id IS E' The userid of the person closing the accounting period.';
COMMENT ON COLUMN caseload_account_periods.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_account_periods.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_account_periods.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_account_periods.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_account_periods.reopen_txn_id IS E'The transaction number associated with the transaction reopening the accounting period.';

CREATE TABLE caseload_account_summaries (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	open_balance decimal(11,2),
	close_balance decimal(11,2),
	period_txn_amount decimal(11,2) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE caseload_account_summaries IS E'Maintains the history of general ledger account balances.';
COMMENT ON COLUMN caseload_account_summaries.account_code IS E' General ledger account code.';
COMMENT ON COLUMN caseload_account_summaries.account_period_id IS E'Identifier for an accounting period - month or year.';
COMMENT ON COLUMN caseload_account_summaries.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_account_summaries.close_balance IS E'Closing balance for the accounting period.';
COMMENT ON COLUMN caseload_account_summaries.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_account_summaries.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_account_summaries.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_account_summaries.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_account_summaries.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_account_summaries.open_balance IS E' Opening balance for the accounting period.';

CREATE TABLE caseload_adm_alert_profiles (
	caseload_id varchar(6) NOT NULL,
	alert_type varchar(12) NOT NULL,
	alert_code varchar(12) NOT NULL,
	message_number bigint NOT NULL,
	appln_code varchar(12) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN caseload_adm_alert_profiles.alert_code IS E'Domain = "ALERT_CODE".   The system will be required to look at past bookings to see if this alert exists or not.  If exists, then the  message will pop up.  If there are no alerts selected then the user shold not be able to select an msg.';
COMMENT ON COLUMN caseload_adm_alert_profiles.alert_type IS E'Domain = "ALERT".  The set up of the alert and the associated message will allow the user to define what system message should pop up when attempting to book the offender into the system.';
COMMENT ON COLUMN caseload_adm_alert_profiles.appln_code IS E'Come from System_Messages Appln_Code. Should be "OMS" for this case.';
COMMENT ON COLUMN caseload_adm_alert_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_adm_alert_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_adm_alert_profiles.message_number IS E'LOV from System_Messages table with Appln_Code = "OMS".';
COMMENT ON COLUMN caseload_adm_alert_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_adm_alert_profiles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE caseload_adm_other_profiles (
	caseload_id varchar(6) NOT NULL,
	young_offender_age smallint,
	message_number bigint,
	appln_code varchar(12),
	trust_account_flag varchar(1) NOT NULL DEFAULT 'Y',
	living_unit_id bigint,
	agy_loc_id varchar(6) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN caseload_adm_other_profiles.agy_loc_id IS E'LOV from Agency_Locations for that current Caseload.  The Default To Code field will allow the user to select from a LOV for Agency Locations.  When populated this code will be the default "To" location on the admission screen.';
COMMENT ON COLUMN caseload_adm_other_profiles.appln_code IS E'Come from System_Messages Appln_Code.  Should be "OMS" for this case.';
COMMENT ON COLUMN caseload_adm_other_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_adm_other_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_adm_other_profiles.living_unit_id IS E'The Default Bed Location field will allow the user to select from the Available Beds form (OMUAVBED), a default bed location for the offender upon admission to the institution.';
COMMENT ON COLUMN caseload_adm_other_profiles.message_number IS E'LOV from System_Messages table with Appln_Code = "OMS".';
COMMENT ON COLUMN caseload_adm_other_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_adm_other_profiles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_adm_other_profiles.trust_account_flag IS E'The Trust Account flag will allow the user to mask or unmask the Cash on Arrival block.';
COMMENT ON COLUMN caseload_adm_other_profiles.young_offender_age IS E'The user will be required to enter the age in which determines a young offender.  If a young offender, someone of the age or younger in this field, is being booked in, the system will display an alert pop up message from system messages.';

CREATE TABLE caseload_agency_locations (
	caseload_id varchar(6) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_agency_locations IS E'The Association among Caseload and Agency Locations';
COMMENT ON COLUMN caseload_agency_locations.agy_loc_id IS E'The location residing within an agency.';
COMMENT ON COLUMN caseload_agency_locations.caseload_id IS E' An identifying code for a caseload.';
COMMENT ON COLUMN caseload_agency_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_agency_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_agency_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_agency_locations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_agency_locations.update_allowed_flag IS E' Defines whether users can update at agency location within caseload.';

CREATE TABLE caseload_comm_tax_rate (
	caseload_id varchar(6) NOT NULL,
	comm_tax_type varchar(12) NOT NULL,
	comm_tax_code varchar(12) NOT NULL,
	comm_tax_description varchar(60),
	comm_tax_rate decimal(4,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN caseload_comm_tax_rate.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_comm_tax_rate.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_comm_tax_rate.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_comm_tax_rate.modify_user_id IS E'The user who modifies the record';

CREATE TABLE caseload_current_accounts_bak (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	current_balance decimal(11,2) NOT NULL,
	bank_account_type varchar(12),
	bank_account_number varchar(25),
	account_party_type varchar(12),
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	routing_number integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE caseload_current_accounts_bak IS E'Maintains the detail of each general ledger account.';
COMMENT ON COLUMN caseload_current_accounts_bak.account_code IS E'General ledger account code.';
COMMENT ON COLUMN caseload_current_accounts_bak.account_party_type IS E'Reference Code ( PARTY_TYPE )';
COMMENT ON COLUMN caseload_current_accounts_bak.account_period_id IS E'Pointing to the current accounting period.';
COMMENT ON COLUMN caseload_current_accounts_bak.bank_account_number IS E'The number assigned to the account by the bank.';
COMMENT ON COLUMN caseload_current_accounts_bak.bank_account_type IS E'Reference Code (BANK_AC_TYPE )';
COMMENT ON COLUMN caseload_current_accounts_bak.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_current_accounts_bak.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_current_accounts_bak.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_current_accounts_bak.current_balance IS E'The current balance in the general ledger account.';
COMMENT ON COLUMN caseload_current_accounts_bak.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_current_accounts_bak.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_current_accounts_bak.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_current_accounts_bak.payee_corporate_id IS E'System generated identifier for a corporation.';
COMMENT ON COLUMN caseload_current_accounts_bak.payee_person_id IS E'System generated identifier for a person.';

CREATE TABLE caseload_current_accounts_base (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	current_balance decimal(11,2) NOT NULL,
	bank_account_type varchar(12),
	bank_account_number varchar(25),
	account_party_type varchar(12),
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	routing_number integer,
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE caseload_current_accounts_base IS E'Maintains the detail of each general ledger account.';
COMMENT ON COLUMN caseload_current_accounts_base.account_code IS E'General ledger account code.';
COMMENT ON COLUMN caseload_current_accounts_base.account_party_type IS E'Reference Code ( PARTY_TYPE )';
COMMENT ON COLUMN caseload_current_accounts_base.bank_account_number IS E'The number assigned to the account by the bank.';
COMMENT ON COLUMN caseload_current_accounts_base.bank_account_type IS E'Reference Code (BANK_AC_TYPE )';
COMMENT ON COLUMN caseload_current_accounts_base.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_current_accounts_base.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_current_accounts_base.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_current_accounts_base.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_current_accounts_base.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_current_accounts_base.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_current_accounts_base.payee_corporate_id IS E'System generated identifier for a corporation.';
COMMENT ON COLUMN caseload_current_accounts_base.payee_person_id IS E'System generated identifier for a person.';
COMMENT ON COLUMN caseload_current_accounts_base.routing_number IS E'routing number is the bank banch identify.';

CREATE TABLE caseload_current_accounts_txns (
	caseload_current_account_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	current_balance decimal(11,2) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq smallint DEFAULT 99,
	consolidation_date timestamp,
	txn_id bigint,
	txn_entry_seq integer,
	gl_entry_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE caseload_current_accounts_txns IS E'Maintains the detail of each general ledger account.';
COMMENT ON COLUMN caseload_current_accounts_txns.account_code IS E'General ledger account code.';
COMMENT ON COLUMN caseload_current_accounts_txns.account_period_id IS E'Pointing to the current accounting period.';
COMMENT ON COLUMN caseload_current_accounts_txns.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_current_accounts_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_current_accounts_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_current_accounts_txns.current_balance IS E'The current balance in the general ledger account.';
COMMENT ON COLUMN caseload_current_accounts_txns.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_current_accounts_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_current_accounts_txns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE caseload_deduction_details (
	caseload_id varchar(6) NOT NULL,
	deduction_type varchar(6) NOT NULL,
	receipt_txn_type varchar(6) NOT NULL,
	percentage decimal(5,2),
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	flat_rate decimal(11,2),
	minimum_trust_balance_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE caseload_deduction_details IS E'Details the percentage deduction against receipt types for each deduction type.';
COMMENT ON COLUMN caseload_deduction_details.caseload_id IS E'Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_deduction_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_deduction_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_deduction_details.deduction_type IS E' The type of deduction.';
COMMENT ON COLUMN caseload_deduction_details.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_deduction_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_deduction_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_deduction_details.receipt_txn_type IS E' Deductions are appled against specific receipt transaction types.';

CREATE TABLE caseload_deduction_profiles (
	delay_recapture smallint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	caseload_id varchar(6) NOT NULL,
	deduction_type varchar(6) NOT NULL,
	effective_date timestamp NOT NULL,
	fifo_flag varchar(1) NOT NULL DEFAULT 'Y',
	fo_al_all_offender_flag varchar(1) NOT NULL DEFAULT 'N',
	percentage decimal(5,2) NOT NULL,
	internal_priority_no smallint NOT NULL,
	external_priority_no smallint NOT NULL,
	account_code integer NOT NULL,
	co_limit_amount decimal(11,2),
	co_credit_when_indigent_flag varchar(1) DEFAULT 'Y',
	max_monthly_amount decimal(11,2),
	max_total_amount decimal(11,2),
	expiry_date timestamp,
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	flat_rate decimal(11,2),
	minimum_trust_balance decimal(11,2),
	indigent_mandatory_flag varchar(1),
	comm_condition_type varchar(12),
	comm_condition_code varchar(12),
	max_recursive_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	category_type varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_deduction_profiles IS E'Caseload specific profiles for deductions.';
COMMENT ON COLUMN caseload_deduction_profiles.account_code IS E'Account code deducted funds are credited to.';
COMMENT ON COLUMN caseload_deduction_profiles.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_deduction_profiles.co_limit_amount IS E' Credit obligation limit.';
COMMENT ON COLUMN caseload_deduction_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_deduction_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_deduction_profiles.deduction_type IS E' Deduction type code.';
COMMENT ON COLUMN caseload_deduction_profiles.effective_date IS E'Deduction profile effective date.';
COMMENT ON COLUMN caseload_deduction_profiles.expiry_date IS E' Expiry of deduction profile.';
COMMENT ON COLUMN caseload_deduction_profiles.fifo_flag IS E'First in/First out flag on deductions.';
COMMENT ON COLUMN caseload_deduction_profiles.internal_priority_no IS E'Internal priority.';
COMMENT ON COLUMN caseload_deduction_profiles.max_monthly_amount IS E' Maximum monthly deduction.';
COMMENT ON COLUMN caseload_deduction_profiles.max_total_amount IS E' Maximum total deduction.';
COMMENT ON COLUMN caseload_deduction_profiles.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_deduction_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_deduction_profiles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_deduction_profiles.payee_corporate_id IS E' Corporate payee Id.';
COMMENT ON COLUMN caseload_deduction_profiles.payee_person_id IS E' Id for a payee person.';
COMMENT ON COLUMN caseload_deduction_profiles.percentage IS E'Deduction percentage.';

CREATE TABLE caseload_ded_beneficiaries (
	caseload_ded_beneficiary_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	deduction_type varchar(6) NOT NULL,
	person_id bigint,
	corporate_id bigint,
	priority smallint NOT NULL,
	amount decimal(11,2) NOT NULL,
	percent smallint NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN caseload_ded_beneficiaries.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_ded_beneficiaries.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_ded_beneficiaries.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_ded_beneficiaries.modify_user_id IS E'The user who modifies the record';

CREATE TABLE caseload_financials (
	caseload_id varchar(6) NOT NULL,
	transfer_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_financials IS E'The financial system setup data';
COMMENT ON COLUMN caseload_financials.caseload_id IS E'The Caseload ID';
COMMENT ON COLUMN caseload_financials.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_financials.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_financials.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_financials.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_financials.transfer_date IS E'The date of last manual money transfer';

CREATE TABLE caseload_format_printers (
	caseload_id varchar(6) NOT NULL,
	print_format_code varchar(12) NOT NULL,
	default_printer_id varchar(12) NOT NULL,
	print_resource_id varchar(12),
	print_resource_file varchar(60),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_format_printers IS E'This table tells which printer used as a default printer for a particular caseload for a particular format';
COMMENT ON COLUMN caseload_format_printers.caseload_id IS E'An identifing code for a caseload';
COMMENT ON COLUMN caseload_format_printers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_format_printers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_format_printers.default_printer_id IS E'Maintains printer idenfication ie. hp4, hp3p,qms..';
COMMENT ON COLUMN caseload_format_printers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_format_printers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_format_printers.print_format_code IS E'Refrence Code [ PRINT_FORMAT ]';

CREATE TABLE caseload_grp_hol_compens (
	caseload_id varchar(6) NOT NULL,
	work_group_id varchar(6) NOT NULL,
	holiday_event_id bigint NOT NULL,
	compensation_code varchar(12) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_grp_hol_compens IS E'Created from Entity HOLIDAY EXCEPTION GROUP by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN caseload_grp_hol_compens.caseload_id IS E'Caseload';
COMMENT ON COLUMN caseload_grp_hol_compens.compensation_code IS E'Reference Code ( COMPENSATION )';
COMMENT ON COLUMN caseload_grp_hol_compens.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_grp_hol_compens.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_grp_hol_compens.holiday_event_id IS E'The event ID of the holidy';
COMMENT ON COLUMN caseload_grp_hol_compens.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_grp_hol_compens.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_grp_hol_compens.work_group_id IS E'Caseload work group';

CREATE TABLE caseload_limits (
	caseload_id varchar(6) NOT NULL,
	limit_type varchar(12) NOT NULL,
	period_type varchar(12) NOT NULL,
	limit_amount decimal(11,2),
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_limits IS E'Specifies default offender financial limits of various types for a caseload.';
COMMENT ON COLUMN caseload_limits.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_limits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_limits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_limits.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_limits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_limits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE caseload_payment_profiles (
	caseload_payment_profile_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	txn_type varchar(12) NOT NULL,
	payment_mode varchar(12) NOT NULL,
	advance_amount decimal(11,2),
	payment_amount decimal(11,2),
	week_day varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	record_user_id varchar(30) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE caseload_payment_profiles IS E'The caseload payment schedules';
COMMENT ON COLUMN caseload_payment_profiles.active_flag IS E'?If the payment active';
COMMENT ON COLUMN caseload_payment_profiles.advance_amount IS E'The amount of advance payment';
COMMENT ON COLUMN caseload_payment_profiles.caseload_id IS E'The ID of the caseload';
COMMENT ON COLUMN caseload_payment_profiles.expiry_date IS E'Expiry date of the payment schedules';
COMMENT ON COLUMN caseload_payment_profiles.payment_amount IS E'The amount of payment';
COMMENT ON COLUMN caseload_payment_profiles.payment_mode IS E'(Advance|Schedule)';
COMMENT ON COLUMN caseload_payment_profiles.record_user_id IS E'User who inputs the records';
COMMENT ON COLUMN caseload_payment_profiles.txn_type IS E'The transaction type';
COMMENT ON COLUMN caseload_payment_profiles.week_day IS E'The Week Day of the payment.  Reference Code(Week_DAY)';

CREATE TABLE caseload_printers (
	caseload_id varchar(6) NOT NULL,
	printer_id varchar(12) NOT NULL,
	default_format_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_printers IS E'Maintains default printers for each type of printing job within caseload.';
COMMENT ON COLUMN caseload_printers.caseload_id IS E' Identifier for a caseload.';
COMMENT ON COLUMN caseload_printers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_printers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_printers.default_format_code IS E'Refrence Code [ PRINT_FORMAT ]';
COMMENT ON COLUMN caseload_printers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_printers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_printers.printer_id IS E' Printer identifier.';

CREATE TABLE caseload_sequence_numbers (
	caseload_id varchar(6) NOT NULL,
	sequence_name varchar(20) NOT NULL,
	max_number bigint NOT NULL,
	min_number bigint NOT NULL,
	current_number bigint NOT NULL,
	prefix_code varchar(12),
	effective_date timestamp NOT NULL,
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN caseload_sequence_numbers.caseload_id IS E' Caseload';
COMMENT ON COLUMN caseload_sequence_numbers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_sequence_numbers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_sequence_numbers.current_number IS E'The last number used';
COMMENT ON COLUMN caseload_sequence_numbers.effective_date IS E'The date which the code is Effective';
COMMENT ON COLUMN caseload_sequence_numbers.max_number IS E'Maximum Number';
COMMENT ON COLUMN caseload_sequence_numbers.min_number IS E'Minimum Number';
COMMENT ON COLUMN caseload_sequence_numbers.modify_date IS E'The modified date of the record';
COMMENT ON COLUMN caseload_sequence_numbers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_sequence_numbers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_sequence_numbers.prefix_code IS E'Prefix';
COMMENT ON COLUMN caseload_sequence_numbers.sequence_name IS E'Reference Code ( CSLD_SEQ ) Name of the Sequence';

CREATE TABLE caseload_transaction_types (
	caseload_id varchar(6) NOT NULL,
	txn_type varchar(6) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_transaction_types IS E'Allows for specified transaction types to appear only for designated caseloads.';
COMMENT ON COLUMN caseload_transaction_types.caseload_id IS E'Unique identifier for a caseload.';
COMMENT ON COLUMN caseload_transaction_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_transaction_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_transaction_types.modify_date IS E'Modify Date';
COMMENT ON COLUMN caseload_transaction_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_transaction_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_transaction_types.txn_type IS E'A trust transaction type which is being designated for specific caseloads.';

CREATE TABLE caseload_transaction_types_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	caseload_id varchar(6),
	txn_type varchar(6),
	modify_user_id varchar(32),
	modify_date timestamp,
	list_seq smallint DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;
COMMENT ON TABLE caseload_transaction_types_jn IS E'Journal table for caseload_transaction_types';

CREATE TABLE caseload_works (
	caseload_id varchar(6) NOT NULL,
	work_code varchar(6) NOT NULL,
	description varchar(60) NOT NULL,
	work_type varchar(12) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	pay_range_code varchar(12) NOT NULL,
	unit_code varchar(12) NOT NULL,
	work_group_id varchar(6),
	max_assigned_no integer,
	max_pay_range_code varchar(12) NOT NULL,
	escalation_days integer,
	active_flag varchar(1),
	expiry_date timestamp,
	supervisor varchar(40),
	credit_unit decimal(11,2),
	frequency varchar(12),
	monthly smallint,
	weekly varchar(12),
	bi_weekly varchar(12),
	twice_monthly_1 smallint,
	twice_monthly_2 smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_works IS E'Created from Entity WORK ASSIGNMENT by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN caseload_works.bi_weekly IS E'Domain = "PS_WEEKDAYS".  The day of the week (MON, TUE, WED, etc) that payroll processes if Frequency is BI-WEEKLY.';
COMMENT ON COLUMN caseload_works.caseload_id IS E' - Retrofitted';
COMMENT ON COLUMN caseload_works.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_works.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_works.description IS E' - Retrofitted';
COMMENT ON COLUMN caseload_works.frequency IS E'Domain = "CF_FREQ".  Frequency of the pay period of the work assignments.';
COMMENT ON COLUMN caseload_works.max_assigned_no IS E' - Retrofitted';
COMMENT ON COLUMN caseload_works.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_works.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_works.monthly IS E'The date that payroll processes if Frequency is MONTHLY.';
COMMENT ON COLUMN caseload_works.pay_range_code IS E' - Retrofitted';
COMMENT ON COLUMN caseload_works.twice_monthly_1 IS E'1st Date for  payroll that processes Twice Monthly.';
COMMENT ON COLUMN caseload_works.twice_monthly_2 IS E'2nd  Date for  payroll that processes Twice Monthly.';
COMMENT ON COLUMN caseload_works.unit_code IS E' - Retrofitted';
COMMENT ON COLUMN caseload_works.weekly IS E'Domain = "PS_WEEKDAYS".  The day of the week (MON, TUE, WED, etc) that payroll processes if Frequency is WEEKLY.';
COMMENT ON COLUMN caseload_works.work_code IS E' - Retrofitted';
COMMENT ON COLUMN caseload_works.work_group_id IS E' - Retrofitted';
COMMENT ON COLUMN caseload_works.work_type IS E'Reference Code ( WORK_TYPE )';

CREATE TABLE caseload_work_cycles (
	caseload_id varchar(6) NOT NULL,
	cycle_start_date timestamp NOT NULL,
	number_of_weeks smallint NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_work_cycles IS E'Created from Entity ASSIGNMENT CYCLE PROFILE by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN caseload_work_cycles.caseload_id IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_cycles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_work_cycles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_work_cycles.cycle_start_date IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_cycles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_work_cycles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_work_cycles.number_of_weeks IS E' - Retrofitted';

CREATE TABLE caseload_work_groups (
	caseload_id varchar(6) NOT NULL,
	work_group_id varchar(6) NOT NULL,
	description varchar(50) NOT NULL,
	modify_user_id varchar(32),
	expiry_date timestamp,
	update_allowed_flag varchar(1) DEFAULT 'Y',
	list_seq integer DEFAULT 1,
	active_flag varchar(1) DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_work_groups IS E'Created from Entity WORK GROUP by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN caseload_work_groups.active_flag IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_groups.caseload_id IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_groups.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_work_groups.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_work_groups.description IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_groups.expiry_date IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_groups.list_seq IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_groups.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_work_groups.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_work_groups.update_allowed_flag IS E' - Retrofitted';
COMMENT ON COLUMN caseload_work_groups.work_group_id IS E' - Retrofitted';

CREATE TABLE caseload_work_schedules (
	caseload_id varchar(6) NOT NULL,
	work_code varchar(6) NOT NULL,
	week_no smallint NOT NULL,
	day_code varchar(12) NOT NULL,
	number_of_units decimal(9,2) NOT NULL,
	compensation_code varchar(12) NOT NULL,
	performance_code varchar(12) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	start_time timestamp NOT NULL,
	end_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE caseload_work_schedules IS E'Created from Entity WORK ASSIGNMENT SCHEDULE by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN caseload_work_schedules.caseload_id IS E'Caseload';
COMMENT ON COLUMN caseload_work_schedules.compensation_code IS E'Reference Code ( COMPENSATION )';
COMMENT ON COLUMN caseload_work_schedules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN caseload_work_schedules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN caseload_work_schedules.day_code IS E'Day';
COMMENT ON COLUMN caseload_work_schedules.end_time IS E'End Time';
COMMENT ON COLUMN caseload_work_schedules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN caseload_work_schedules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN caseload_work_schedules.number_of_units IS E'Number of units';
COMMENT ON COLUMN caseload_work_schedules.performance_code IS E'Reference Code ( PERFORMANCE )';
COMMENT ON COLUMN caseload_work_schedules.start_time IS E'Start Time';
COMMENT ON COLUMN caseload_work_schedules.week_no IS E'Week no';
COMMENT ON COLUMN caseload_work_schedules.work_code IS E'Work code';

CREATE TABLE casework_steps (
	offender_book_id bigint NOT NULL,
	case_plan_id bigint NOT NULL,
	detail_seq bigint NOT NULL,
	casework_seq bigint NOT NULL,
	planned_step varchar(12) NOT NULL,
	cas_ste_comment varchar(2000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	start_date timestamp,
	target_date timestamp,
	completion_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE casework_steps IS E'- Retrofitted';
COMMENT ON COLUMN casework_steps.cas_ste_comment IS E'Comment Text - Retrofitted';
COMMENT ON COLUMN casework_steps.case_plan_id IS E'Standard Number ID - Retrofitted';
COMMENT ON COLUMN casework_steps.casework_seq IS E'Standard Number ID - Retrofitted';
COMMENT ON COLUMN casework_steps.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN casework_steps.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN casework_steps.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN casework_steps.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN casework_steps.offender_book_id IS E' The system generated identifier for an offender booking. - Retrofitted';
COMMENT ON COLUMN casework_steps.planned_step IS E'Planned Step - domain CASEPLAN_STP - Retrofitted';

CREATE TABLE case_associated_persons (
	offender_book_id bigint NOT NULL,
	case_id bigint NOT NULL,
	person_id bigint NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	case_involvement varchar(12),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN case_associated_persons.case_id IS E'A unique identification for each case.';
COMMENT ON COLUMN case_associated_persons.case_involvement IS E'Type of case involvement by the person.';
COMMENT ON COLUMN case_associated_persons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN case_associated_persons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN case_associated_persons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN case_associated_persons.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN case_associated_persons.offender_book_id IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN case_associated_persons.person_id IS E'A unique identification for each person.';

CREATE TABLE case_notes (
	offender_book_id bigint NOT NULL,
	note_seq bigint NOT NULL,
	staff_id integer NOT NULL,
	note_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	cas_not_type varchar(12) NOT NULL,
	reason varchar(12) NOT NULL,
	text varchar(4000),
	contact_date timestamp,
	check_box1 varchar(1),
	check_box2 varchar(1),
	check_box3 varchar(1),
	check_box4 varchar(1),
	check_box5 varchar(1),
	amendment_flag varchar(1),
	note_time timestamp,
	schedule_id bigint,
	contact_end_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE case_notes IS E'- Retrofitted';
COMMENT ON COLUMN case_notes.cas_not_type IS E'Standard Reference Code - domain CASENOTE_TYP - Retrofitted';
COMMENT ON COLUMN case_notes.contact_end_date IS E'Track the amount of time an agent spends in various activities..';
COMMENT ON COLUMN case_notes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN case_notes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN case_notes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN case_notes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN case_notes.note_date IS E'Date the note was created - Retrofitted';
COMMENT ON COLUMN case_notes.note_seq IS E'Standard Number ID - Retrofitted';
COMMENT ON COLUMN case_notes.note_time IS E'Time Portion of the Note Date - Retrofitted';
COMMENT ON COLUMN case_notes.offender_book_id IS E' The system generated identifier for an offender booking. - Retrofitted';
COMMENT ON COLUMN case_notes.reason IS E'Standard Reference Code - domain CASENOTE_RSN - Retrofitted';
COMMENT ON COLUMN case_notes.schedule_id IS E'Request by S1 for Westchester.This is added so that instead of creating new records (database trigger), we may update this same record.';
COMMENT ON COLUMN case_notes.staff_id IS E'System generated number associated with user account - Retrofitted';
COMMENT ON COLUMN case_notes.text IS E'Comment Text - Retrofitted';

CREATE TABLE case_note_text (
	casenote_type varchar(12) NOT NULL,
	casenote_reason varchar(12) NOT NULL,
	description varchar(2000) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE case_note_text IS E'Maintain case note text';
COMMENT ON COLUMN case_note_text.casenote_reason IS E'Reference_codes CASENOTE_RSN';
COMMENT ON COLUMN case_note_text.casenote_type IS E'Reference_codes CASENOTE_TYP';
COMMENT ON COLUMN case_note_text.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN case_note_text.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN case_note_text.description IS E'Pre_defined text';
COMMENT ON COLUMN case_note_text.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN case_note_text.modify_user_id IS E'The user who modifies the record';

CREATE TABLE case_ord_chg_sent_statuses (
	status_type varchar(12) NOT NULL,
	status_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	priority_seq smallint NOT NULL,
	status_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_user_id varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	parent_status_type varchar(12),
	parent_status_code varchar(12),
	default_status_flag varchar(1) NOT NULL DEFAULT 'N',
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN case_ord_chg_sent_statuses.default_status_flag IS E'Among all the active type of statuses the user needs to specify which should default.';
COMMENT ON COLUMN case_ord_chg_sent_statuses.priority_seq IS E'To resolve which parent_status_code gets copied to status column';
COMMENT ON COLUMN case_ord_chg_sent_statuses.status_code IS E'DOMAIN = "COCS_STATUS"';
COMMENT ON COLUMN case_ord_chg_sent_statuses.status_type IS E'Type of statuses: CASE, ORDER, CHARGE, or SENTENCE';

CREATE TABLE case_plans (
	offender_book_id bigint NOT NULL,
	case_plan_id bigint NOT NULL,
	from_date timestamp,
	position varchar(12),
	role varchar(12),
	sac_staff_id integer,
	cal_agy_loc_id varchar(6),
	agy_loc_id varchar(6) NOT NULL,
	case_plan_status varchar(12) NOT NULL,
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	end_date timestamp,
	supervision_level varchar(12),
	changes varchar(240),
	next_review_date timestamp,
	start_date timestamp NOT NULL,
	caseload_type varchar(12) DEFAULT 'COMM',
	verified_flag varchar(1) DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	inst_sac_staff_id integer,
	inst_cal_agy_loc_id varchar(6),
	inst_from_date timestamp,
	inst_position varchar(12),
	inst_role varchar(12),
	auto_assess_modify_datetime timestamp,
	auto_condition_modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE case_plans IS E'- Retrofitted';
COMMENT ON COLUMN case_plans.agy_loc_id IS E' The location residing within an agency. - Retrofitted';
COMMENT ON COLUMN case_plans.cal_agy_loc_id IS E'Part of foreign key to staff location roles - Retrofitted';
COMMENT ON COLUMN case_plans.case_plan_id IS E'Case plan number within the booking - Retrofitted';
COMMENT ON COLUMN case_plans.case_plan_status IS E'Standard Reference Code - Retrofitted';
COMMENT ON COLUMN case_plans.caseload_type IS E'Type of Case Plan - INST or COMM';
COMMENT ON COLUMN case_plans.changes IS E'Comment Text - Retrofitted';
COMMENT ON COLUMN case_plans.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN case_plans.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN case_plans.creation_date IS E'Date the caseplan was created - used by I/C indicator - Retrofitted';
COMMENT ON COLUMN case_plans.creation_user IS E'Database User Account Name - Retrofitted';
COMMENT ON COLUMN case_plans.end_date IS E' - Retrofitted';
COMMENT ON COLUMN case_plans.from_date IS E'Part of foreign key to staff location roles - Retrofitted';
COMMENT ON COLUMN case_plans.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN case_plans.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN case_plans.next_review_date IS E'The date of the next review - Retrofitted';
COMMENT ON COLUMN case_plans.offender_book_id IS E' The system generated identifier for an offender booking. - Retrofitted';
COMMENT ON COLUMN case_plans.position IS E'Part of foreign key to staff location roles - Retrofitted';
COMMENT ON COLUMN case_plans.role IS E'Part of foreign key to staff location roles - Retrofitted';
COMMENT ON COLUMN case_plans.sac_staff_id IS E'Part of foreign key to staff location roles - Retrofitted';
COMMENT ON COLUMN case_plans.start_date IS E' - Retrofitted';
COMMENT ON COLUMN case_plans.supervision_level IS E'Standard Reference Code - Retrofitted';
COMMENT ON COLUMN case_plans.verified_flag IS E'check for record that was verified..';

CREATE TABLE case_plan_goals (
	goal_type varchar(12) NOT NULL,
	goal_sub_type varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN case_plan_goals.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN case_plan_goals.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN case_plan_goals.goal_sub_type IS E'REFERENCE CODE DOMAIN IS CASEPLAN_GOT';
COMMENT ON COLUMN case_plan_goals.goal_type IS E'REFERENCE CODE DOMAIN IS CASEPLAN_GOT';
COMMENT ON COLUMN case_plan_goals.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN case_plan_goals.modify_user_id IS E'The user who modifies the record';

CREATE TABLE case_plan_goal_conditions (
	goal_type varchar(12) NOT NULL,
	goal_sub_type varchar(12) NOT NULL,
	comm_condition_type varchar(12) NOT NULL,
	comm_condition_code varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	modify_date_time timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN case_plan_goal_conditions.comm_condition_code IS E'COMMUNITY_CONDITIONS COMM_CONDITON_CODE';
COMMENT ON COLUMN case_plan_goal_conditions.comm_condition_type IS E'REFERENCE_CODES CODE';
COMMENT ON COLUMN case_plan_goal_conditions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN case_plan_goal_conditions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN case_plan_goal_conditions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN case_plan_goal_conditions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE case_review_periods (
	supervision_level varchar(12) NOT NULL,
	review_period smallint NOT NULL DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN case_review_periods.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN case_review_periods.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN case_review_periods.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN case_review_periods.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN case_review_periods.review_period IS E'The short sequence for making up Primary Key';
COMMENT ON COLUMN case_review_periods.supervision_level IS E'Standard Reference Code';

CREATE TABLE cash_transfer_txns (
	transfer_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL,
	txn_post_usage varchar(12) NOT NULL,
	txn_type varchar(6) NOT NULL,
	txn_entry_amount decimal(11,2) NOT NULL,
	txn_entry_date timestamp NOT NULL,
	txn_entry_time timestamp NOT NULL,
	from_user_id varchar(32) NOT NULL,
	to_user_id varchar(32) NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
) ;
COMMENT ON COLUMN cash_transfer_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN cash_transfer_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN cash_transfer_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN cash_transfer_txns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE cash_verifications (
	cash_verification_id bigint NOT NULL,
	user_id varchar(32) NOT NULL,
	supervisor_user_id varchar(32) NOT NULL,
	cash_amount decimal(11,2),
	check_amount decimal(11,2),
	non_cash_amount decimal(11,2),
	verified_datetime timestamp NOT NULL,
	reconciled_flag varchar(1) NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	cash_txn_id bigint,
	cash_txn_entry_seq integer,
	check_txn_id bigint,
	check_txn_entry_seq integer,
	non_cash_txn_id bigint,
	non_cash_txn_entry_seq integer,
	caseload_id varchar(6),
	reconciliation_date timestamp,
	reconciliation_time timestamp,
	reconciled_by varchar(32),
	system_cash_balance decimal(11,2),
	actual_cash_balance decimal(11,2),
	system_check_balance decimal(11,2),
	actual_check_balance decimal(11,2),
	system_noncash_balance decimal(11,2),
	actual_noncash_balance decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN cash_verifications.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN cash_verifications.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN cash_verifications.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN cash_verifications.modify_user_id IS E'The user who modifies the record';

CREATE TABLE ca_audit (
	action_type varchar(1),
	agy_loc_id varchar(6),
	offender_id_display varchar(10),
	booking_no varchar(14),
	case_info_number varchar(13),
	first_name varchar(35),
	last_name varchar(35),
	case_status varchar(12),
	case_id bigint,
	modified_date timestamp,
	offender_book_id bigint,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE ce_audit (
	action_type varchar(1),
	agy_loc_id varchar(6),
	offender_id_display varchar(10),
	booking_no varchar(14),
	case_info_number varchar(13),
	first_name varchar(35),
	last_name varchar(35),
	event_date timestamp,
	event_time timestamp,
	movement_type varchar(12),
	movement_reason_code varchar(12),
	sch_agy_loc_id varchar(12),
	event_id bigint,
	event_status varchar(12),
	case_id bigint,
	modified_date timestamp,
	offender_book_id bigint,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE check_list_categories (
	caseload_id varchar(6) NOT NULL,
	check_list_category varchar(12) NOT NULL,
	list_seq smallint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN check_list_categories.check_list_category IS E'REFERENCE_CODES DOMAIN(CHKL_CAT)';
COMMENT ON COLUMN check_list_categories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN check_list_categories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN check_list_categories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN check_list_categories.modify_user_id IS E'The user who modifies the record';

CREATE TABLE check_list_category_forms (
	caseload_id varchar(6) NOT NULL,
	check_list_category varchar(12) NOT NULL,
	module_name varchar(20) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN check_list_category_forms.check_list_category IS E'REFERENCE_CODES DOMAIN(CHKL_CAT)';
COMMENT ON COLUMN check_list_category_forms.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN check_list_category_forms.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN check_list_category_forms.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN check_list_category_forms.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN check_list_category_forms.module_name IS E' - Column already exists';

CREATE TABLE check_list_table_details (
	check_list_category varchar(12) NOT NULL,
	check_list_code varchar(12) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	table_desc varchar(30) NOT NULL,
	list_seq smallint,
	column_desc varchar(40),
	column_value varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN check_list_table_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN check_list_table_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN check_list_table_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN check_list_table_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE check_list_types (
	check_list_category varchar(12) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	check_list_code varchar(12) NOT NULL,
	user_confirmed_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq smallint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN check_list_types.check_list_code IS E'FROM REFERENCE_CODES DOMAIN(CHK_LIST)';
COMMENT ON COLUMN check_list_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN check_list_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN check_list_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN check_list_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE cheque_printing_temp (
	cheque_temp_id bigint NOT NULL,
	offender_id_1 bigint,
	offender_name_1 varchar(60),
	amount_1 decimal(11,2),
	offender_id_2 bigint,
	offender_name_2 varchar(60),
	amount_2 decimal(11,2),
	seq_number smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ch_audit (
	action_type varchar(1),
	agy_loc_id varchar(6),
	offender_id_display varchar(10),
	booking_no varchar(14),
	offence_code varchar(25),
	initial_counts smallint,
	offence_type varchar(12),
	offender_charge_id bigint,
	charge_status varchar(12),
	description varchar(1000),
	statute_code varchar(12),
	offence_date timestamp,
	offender_book_id bigint,
	modified_date timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE cities (
	state varchar(2),
	city varchar(25),
	population integer,
	white decimal(6,2),
	black decimal(6,2),
	hispanic decimal(6,2),
	asian decimal(6,2),
	other decimal(6,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN cities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN cities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN cities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN cities.modify_user_id IS E'The user who modifies the record';

CREATE TABLE classification_inquiry_tmp (
	session_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	offender_id_display varchar(10),
	booking_no varchar(15),
	offender_name varchar(110),
	location varchar(60),
	current_level varchar(40),
	assessment_type varchar(500),
	schedule_date timestamp,
	assessment_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE clear_account_payables_tmp (
	offender_id bigint,
	offender_id_display varchar(10),
	name varchar(80),
	txn_entry_date timestamp,
	txn_entry_time timestamp,
	offender_deduction_id bigint,
	deduction_type varchar(12),
	txn_entry_amount decimal(11,2),
	payee_person_id bigint,
	payee_corporate_id bigint,
	payee_balance_id bigint NOT NULL,
	txn_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN clear_account_payables_tmp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN clear_account_payables_tmp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN clear_account_payables_tmp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN clear_account_payables_tmp.modify_user_id IS E'The user who modifies the record';

CREATE TABLE client_object_versions (
	object_name varchar(128) NOT NULL,
	object_type varchar(20) NOT NULL,
	object_version varchar(20) NOT NULL,
	modify_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_userid varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE clothes (
	clothes_code varchar(12) NOT NULL,
	list_seq integer NOT NULL,
	clothes_size_code varchar(12),
	clothes_type varchar(12),
	available_quantity integer NOT NULL,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE clothes IS E'- Retrofitted';
COMMENT ON COLUMN clothes.available_quantity IS E' - Column already exists';
COMMENT ON COLUMN clothes.clothes_code IS E' - Column already exists';
COMMENT ON COLUMN clothes.clothes_size_code IS E'Refrence Code [CLOTH_SIZE ]';
COMMENT ON COLUMN clothes.clothes_type IS E'Reference Code [ CLOTH_TYPE ]';
COMMENT ON COLUMN clothes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN clothes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN clothes.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN clothes.list_seq IS E' - Column already exists';
COMMENT ON COLUMN clothes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN clothes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN clothes.update_allowed_flag IS E' - Column already exists';

CREATE TABLE clothing_bundles (
	clothes_bundle_code varchar(12) NOT NULL,
	clothes_type varchar(12) NOT NULL,
	clothes_size varchar(12),
	description varchar(40) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE clothing_bundles IS E'- Retrofitted';
COMMENT ON COLUMN clothing_bundles.clothes_size IS E'Refrence Code  [ CLOTH_SIZE ]';
COMMENT ON COLUMN clothing_bundles.clothes_type IS E'Refrence Code [ CLOTH_TYPE ]';
COMMENT ON COLUMN clothing_bundles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN clothing_bundles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN clothing_bundles.description IS E' - Column already exists';
COMMENT ON COLUMN clothing_bundles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN clothing_bundles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE commissary_audits (
	txn_id bigint NOT NULL,
	module_name varchar(20) NOT NULL,
	sid bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN commissary_audits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN commissary_audits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN commissary_audits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN commissary_audits.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN commissary_audits.sid IS E'This columns is used in offender_transactions_t1 to populate comm_gl_transactions.off_txn_id';

CREATE TABLE committee_meetings (
	committe_meeting_id bigint NOT NULL,
	response_authority_code varchar(12) NOT NULL,
	response_auth_time_id bigint NOT NULL,
	response_date timestamp NOT NULL,
	response_auth_loc_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN committee_meetings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN committee_meetings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN committee_meetings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN committee_meetings.modify_user_id IS E'The user who modifies the record';

CREATE TABLE community_conditions (
	comm_condition_type varchar(12) NOT NULL,
	comm_condition_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	proviso_flag varchar(1) NOT NULL DEFAULT 'N',
	amount_required_flag varchar(1) NOT NULL DEFAULT 'N',
	due_date_required_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'N',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	creation_date timestamp,
	creation_user varchar(32),
	expiry_date timestamp,
	list_seq smallint,
	maximum_amount decimal(11,2),
	condition_unit_type varchar(12),
	condition_text varchar(4000),
	cso_flag varchar(1),
	financial_flag varchar(1),
	substance_flag varchar(1),
	default_flag varchar(1),
	program_flag varchar(1),
	program_units decimal(6,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	program_method varchar(12),
	function_type varchar(12),
	case_plan_flag varchar(1) DEFAULT 'N',
	category_type varchar(12) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE community_conditions IS E'The set up of community condtions';
COMMENT ON COLUMN community_conditions.comm_condition_code IS E'Standard Reference Code';
COMMENT ON COLUMN community_conditions.comm_condition_type IS E'Standard Reference Code';
COMMENT ON COLUMN community_conditions.condition_text IS E'The user who modifies the record';
COMMENT ON COLUMN community_conditions.condition_unit_type IS E'Standard Reference Code';
COMMENT ON COLUMN community_conditions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN community_conditions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN community_conditions.creation_user IS E'Database User Account Name';
COMMENT ON COLUMN community_conditions.description IS E'Short Description';
COMMENT ON COLUMN community_conditions.list_seq IS E'The short sequence for making up Primary Key';
COMMENT ON COLUMN community_conditions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN community_conditions.program_method IS E'The program method for the condition.  Reference Code(PS_CATEGORY)';

CREATE TABLE community_header_statuses (
	status_code varchar(12) NOT NULL,
	description varchar(80) NOT NULL,
	hierarchy_sequence integer,
	list_seq integer DEFAULT 99,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN community_header_statuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN community_header_statuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN community_header_statuses.hierarchy_sequence IS E'For future use.';
COMMENT ON COLUMN community_header_statuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN community_header_statuses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN community_header_statuses.status_code IS E'Header Status Code';

CREATE TABLE community_questionnaires (
	comm_qaire_id bigint NOT NULL,
	questionnaire_type varchar(12) NOT NULL,
	questionnaire_title varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq smallint DEFAULT 99,
	update_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN community_questionnaires.active_flag IS E'Is the Questionnaire Active';
COMMENT ON COLUMN community_questionnaires.comm_qaire_id IS E'Questionnaire Id';
COMMENT ON COLUMN community_questionnaires.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN community_questionnaires.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN community_questionnaires.expiry_date IS E'The date the Questionnaire became inactive';
COMMENT ON COLUMN community_questionnaires.list_seq IS E'The Display Order Sequence';
COMMENT ON COLUMN community_questionnaires.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN community_questionnaires.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN community_questionnaires.questionnaire_title IS E'Questionnaire Title';
COMMENT ON COLUMN community_questionnaires.questionnaire_type IS E'Questionnaire Type - DOMAIN QUEST_TYPE';
COMMENT ON COLUMN community_questionnaires.update_flag IS E'Can the Questionnaire be Updated?';

CREATE TABLE community_questions (
	comm_qn_id bigint NOT NULL,
	com_qn_cat_id bigint NOT NULL,
	question_id varchar(12) NOT NULL,
	question varchar(80) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq smallint DEFAULT 99,
	update_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN community_questions.active_flag IS E'Is the Question Active?';
COMMENT ON COLUMN community_questions.com_qn_cat_id IS E'The Community Question Category Id';
COMMENT ON COLUMN community_questions.comm_qn_id IS E'The Community Question Id';
COMMENT ON COLUMN community_questions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN community_questions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN community_questions.expiry_date IS E'The date the Question Category became inactive';
COMMENT ON COLUMN community_questions.list_seq IS E'The display order sequence';
COMMENT ON COLUMN community_questions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN community_questions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN community_questions.question IS E'The Question';
COMMENT ON COLUMN community_questions.question_id IS E'The displayed question ID';
COMMENT ON COLUMN community_questions.update_flag IS E'Can the Question Category be Updated?';

CREATE TABLE community_question_categories (
	com_qn_cat_id bigint NOT NULL,
	comm_qaire_id bigint NOT NULL,
	quest_category_id varchar(12) NOT NULL,
	quest_category varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq smallint DEFAULT 99,
	update_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN community_question_categories.active_flag IS E'Is the Category Active?';
COMMENT ON COLUMN community_question_categories.com_qn_cat_id IS E'Community Question Category ID';
COMMENT ON COLUMN community_question_categories.comm_qaire_id IS E'Community Questionnaire Id';
COMMENT ON COLUMN community_question_categories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN community_question_categories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN community_question_categories.expiry_date IS E'The date the Question became inactive';
COMMENT ON COLUMN community_question_categories.list_seq IS E'The display order sequence';
COMMENT ON COLUMN community_question_categories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN community_question_categories.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN community_question_categories.quest_category IS E'Question Category Description';
COMMENT ON COLUMN community_question_categories.quest_category_id IS E'The displayed question category  ID';
COMMENT ON COLUMN community_question_categories.update_flag IS E'Can the Question Category be Updated?';

CREATE TABLE comm_account_codes (
	rec_account_code integer,
	account_code integer NOT NULL,
	account_name varchar(40) NOT NULL,
	posting_status_flag varchar(1) NOT NULL DEFAULT 'Y',
	account_type varchar(12),
	sub_account_type varchar(12),
	txn_posting_type varchar(12),
	all_caseload_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE comm_account_codes IS E'All information encompassed by the chart of accounts for OMS Trust.';
COMMENT ON COLUMN comm_account_codes.account_code IS E'General ledger account code.';
COMMENT ON COLUMN comm_account_codes.account_name IS E'Account Description';
COMMENT ON COLUMN comm_account_codes.account_type IS E'Reference Code [ACCOUNT_TYPE ]';
COMMENT ON COLUMN comm_account_codes.all_caseload_flag IS E'Apply for All Caseload';
COMMENT ON COLUMN comm_account_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_account_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_account_codes.modify_date IS E'Modify Date';
COMMENT ON COLUMN comm_account_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_account_codes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_account_codes.posting_status_flag IS E'Y/N flag indicating if account is a posting account.';
COMMENT ON COLUMN comm_account_codes.sub_account_type IS E'Reference Code ( SUB_AC_TYPE).';
COMMENT ON COLUMN comm_account_codes.txn_posting_type IS E'Reference ( AC_TXN_TYPE ) Account Posting Type';

CREATE TABLE comm_bank_cheque_books (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	cheque_book_seq bigint NOT NULL,
	account_number varchar(25) NOT NULL,
	first_check_number integer NOT NULL,
	last_check_number integer NOT NULL,
	next_check_number integer,
	txn_entry_date timestamp,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN comm_bank_cheque_books.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_bank_cheque_books.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_bank_cheque_books.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_bank_cheque_books.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_bank_cheque_data (
	txn_id bigint NOT NULL,
	bank_account_code integer NOT NULL,
	caseload_id varchar(6) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	start_txn_id bigint,
	end_txn_id bigint,
	txn_entry_amount decimal(11,2) NOT NULL,
	payee_person_id bigint,
	payee_corporate_id bigint,
	payee_name_text varchar(60),
	offender_id bigint,
	single_entry_flag varchar(1),
	cheque_flag varchar(1),
	cheque_date timestamp NOT NULL,
	txn_entry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN comm_bank_cheque_data.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_bank_cheque_data.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_bank_cheque_data.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_bank_cheque_data.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_bank_cheque_registers (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	cheque_number integer NOT NULL,
	cheque_status varchar(12),
	transaction_date timestamp,
	start_txn_id bigint,
	txn_id bigint,
	end_txn_id bigint,
	origin_type varchar(12),
	reason_text varchar(40),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL,
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN comm_bank_cheque_registers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_bank_cheque_registers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_bank_cheque_registers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_bank_cheque_registers.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_bank_recon_audits (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	bank_statement_date timestamp NOT NULL,
	bank_statement_status varchar(12),
	bank_balance decimal(11,2),
	adjustment_gl_number integer,
	adjustment_comment varchar(240),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL,
	list_seq integer,
	amnt_less_adj decimal(11,2),
	amnt_plus_adj decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN comm_bank_recon_audits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_bank_recon_audits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_bank_recon_audits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_bank_recon_audits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_caseload_account_codes (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN comm_caseload_account_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_caseload_account_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_caseload_account_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_caseload_account_codes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_caseload_account_periods (
	caseload_id varchar(6) NOT NULL,
	account_period_id integer NOT NULL,
	account_period_status varchar(12),
	closing_user_id varchar(32),
	closing_date timestamp,
	reopen_txn_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE comm_caseload_account_periods IS E'Maintains the status of accounting periods for caseloads.';
COMMENT ON COLUMN comm_caseload_account_periods.account_period_id IS E' Identifier for an accounting period ie. Month, Year.';
COMMENT ON COLUMN comm_caseload_account_periods.account_period_status IS E'Reference Code [ AC_PRD_STS ]';
COMMENT ON COLUMN comm_caseload_account_periods.caseload_id IS E' The identifier for a trust accounting caseload.';
COMMENT ON COLUMN comm_caseload_account_periods.closing_date IS E'The date the accounting period was closed.';
COMMENT ON COLUMN comm_caseload_account_periods.closing_user_id IS E' The userid of the person closing the accounting period.';
COMMENT ON COLUMN comm_caseload_account_periods.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_caseload_account_periods.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_caseload_account_periods.modify_date IS E'Modify Date';
COMMENT ON COLUMN comm_caseload_account_periods.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_caseload_account_periods.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_caseload_account_periods.reopen_txn_id IS E'The transaction number associated with the transaction reopening the accounting period.';

CREATE TABLE comm_caseload_ac_summaries (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	open_balance bigint,
	close_balance bigint,
	period_txn_amount bigint NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE comm_caseload_ac_summaries IS E'Maintains the history of general ledger account balances.';
COMMENT ON COLUMN comm_caseload_ac_summaries.account_code IS E' General ledger account code.';
COMMENT ON COLUMN comm_caseload_ac_summaries.account_period_id IS E'Identifier for an accounting period - month or year.';
COMMENT ON COLUMN comm_caseload_ac_summaries.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN comm_caseload_ac_summaries.close_balance IS E'Closing balance for the accounting period.';
COMMENT ON COLUMN comm_caseload_ac_summaries.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_caseload_ac_summaries.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_caseload_ac_summaries.modify_date IS E'Modify Date';
COMMENT ON COLUMN comm_caseload_ac_summaries.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_caseload_ac_summaries.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_caseload_ac_summaries.open_balance IS E' Opening balance for the accounting period.';

CREATE TABLE comm_category_restrictions (
	cat_res_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	caseload_id varchar(12) NOT NULL,
	stock_item_cat varchar(12) NOT NULL,
	stock_item_id bigint,
	qty_limit bigint,
	reason_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN comm_category_restrictions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_category_restrictions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_category_restrictions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_category_restrictions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_cheque_temp (
	cheque_temp_id bigint,
	po_id_txn_id_1 varchar(20),
	inv_id_payee_1 varchar(40),
	amount_1 decimal(10,2),
	po_id_txn_id_2 varchar(20),
	inv_id_payee_2 varchar(40),
	amount_2 decimal(10,2),
	create_user_id varchar(32) NOT NULL DEFAULT 'User',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;

CREATE TABLE comm_gl_transactions (
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL DEFAULT 99,
	gl_entry_seq integer NOT NULL DEFAULT 99,
	account_period_id integer NOT NULL,
	account_code integer NOT NULL,
	txn_entry_date timestamp NOT NULL,
	txn_type varchar(6) NOT NULL,
	txn_post_usage varchar(12) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint,
	txn_entry_amount bigint NOT NULL,
	txn_entry_desc varchar(240),
	txn_reference_number varchar(12),
	bank_statement_date timestamp,
	recon_clear_flag varchar(1) DEFAULT 'N',
	txn_reversed_flag varchar(1) DEFAULT 'N',
	reversed_txn_id bigint DEFAULT 99,
	reversed_txn_entry_seq integer DEFAULT 99,
	reversed_gl_entry_seq integer DEFAULT 99,
	payee_name_text varchar(60),
	payee_corporate_id bigint,
	payee_person_id bigint,
	stock_item_id bigint,
	sales_order_id bigint,
	shipment_payment_id bigint,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	return_id bigint,
	txn_loc_id varchar(6),
	off_txn_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE comm_gl_transactions IS E'Details surrounding general ledger transactions.';
COMMENT ON COLUMN comm_gl_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_gl_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_gl_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_gl_transactions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_gl_transactions.off_txn_id IS E'Link Commissary GL Txn ID with this Offender Txn ID.';

CREATE TABLE comm_interface_hty (
	caseload_id varchar(6),
	stock_loc_id varchar(6),
	offender_id bigint,
	sale_date timestamp,
	stock_item_code varchar(12),
	quantity integer,
	selling_price decimal(11,2),
	indigent_flag varchar(1),
	quantity_sold integer,
	quantity_discard integer,
	sales_order_id bigint,
	tag varchar(240),
	record_string varchar(240),
	file_name varchar(13),
	processing_date timestamp,
	spendable_limit_flag varchar(1),
	tax_1_amt decimal(11,3),
	tax_2_amt decimal(11,2),
	tax_3_amt decimal(11,2),
	seal_flag varchar(1),
	override_limit bigint,
	session_id bigint,
	trust_caseload_id varchar(6),
	bubble_sheet_no varchar(100),
	text_file varchar(100),
	insert_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE INTERFACE;

CREATE TABLE comm_interface_lock_tmp (
	lock_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE comm_interface_tmp (
	caseload_id varchar(6),
	stock_loc_id varchar(6),
	offender_id bigint,
	sale_date timestamp,
	stock_item_code varchar(13),
	quantity integer,
	selling_price decimal(11,2),
	indigent_flag varchar(1),
	quantity_sold integer,
	quantity_discard integer,
	sales_order_id bigint,
	tag varchar(240),
	record_string varchar(240),
	insert_seq integer,
	spendable_limit_flag varchar(1),
	tax_1_amt decimal(14,5),
	tax_2_amt decimal(14,5),
	tax_3_amt decimal(14,5),
	session_id bigint,
	trust_caseload_id varchar(6),
	bubble_sheet_no varchar(100),
	text_file varchar(100),
	override_limit bigint,
	audit_timestamp timestamp,
	audit_user_id varchar(32),
	audit_module_name varchar(50),
	audit_client_user_id varchar(64),
	audit_client_ip_address varchar(39),
	audit_client_workstation_name varchar(64),
	audit_additional_info varchar(256),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE comm_receipt_maintenances (
	screen_name varchar(20) NOT NULL,
	auto_submit varchar(1) NOT NULL DEFAULT 'Y',
	number_of_copy smallint NOT NULL,
	backgroud varchar(1) NOT NULL,
	report_name varchar(20) NOT NULL,
	overdraft_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN comm_receipt_maintenances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_receipt_maintenances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_receipt_maintenances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_receipt_maintenances.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_report_messages (
	caseload_id varchar(6) NOT NULL,
	report_name varchar(20) NOT NULL,
	message varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE comm_report_messages IS E'- Retrofitted';
COMMENT ON COLUMN comm_report_messages.caseload_id IS E' - Retrofitted';
COMMENT ON COLUMN comm_report_messages.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_report_messages.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_report_messages.message IS E' - Retrofitted';
COMMENT ON COLUMN comm_report_messages.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_report_messages.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_report_messages.report_name IS E' - Retrofitted';

CREATE TABLE comm_transaction_operations (
	module_name varchar(20) NOT NULL,
	txn_type varchar(6) NOT NULL,
	txn_operation_seq integer NOT NULL DEFAULT 99,
	dr_account_code integer,
	cr_account_code integer,
	bank_dr_account_code integer,
	bank_cr_account_code integer,
	invalid_accounts_flag varchar(1) NOT NULL DEFAULT 'Y',
	cheque_production_flag varchar(1) NOT NULL DEFAULT 'Y',
	receipt_production_flag varchar(1) NOT NULL DEFAULT 'Y',
	cheque_payee_type varchar(12),
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	txn_operation_type varchar(12),
	txn_item_code varchar(12),
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer DEFAULT 99,
	tax_number smallint,
	tax_included_flag varchar(1) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE comm_transaction_operations IS E'Specifies the transactions associated with each module as well as posting logic.';
COMMENT ON COLUMN comm_transaction_operations.bank_cr_account_code IS E'Transaction may involve movement of funds between banks.';
COMMENT ON COLUMN comm_transaction_operations.bank_dr_account_code IS E'Transaction may involve movement of funds between banks.';
COMMENT ON COLUMN comm_transaction_operations.caseload_id IS E'centralized commissary modification';
COMMENT ON COLUMN comm_transaction_operations.cheque_payee_type IS E'Reference Code ( PAYEE_TYPE )';
COMMENT ON COLUMN comm_transaction_operations.cheque_production_flag IS E'Flag signalling check production.';
COMMENT ON COLUMN comm_transaction_operations.cr_account_code IS E'Credit for specified transaction.';
COMMENT ON COLUMN comm_transaction_operations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_transaction_operations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_transaction_operations.dr_account_code IS E'Debit account for specified trnsaction.';
COMMENT ON COLUMN comm_transaction_operations.modify_date IS E'Modify Date';
COMMENT ON COLUMN comm_transaction_operations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_transaction_operations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_transaction_operations.module_name IS E'Short name for module.';
COMMENT ON COLUMN comm_transaction_operations.receipt_production_flag IS E'Flag siganlling receipt production for transaction.';
COMMENT ON COLUMN comm_transaction_operations.txn_item_code IS E'Reference Code ( TXN_ITEM )';
COMMENT ON COLUMN comm_transaction_operations.txn_operation_seq IS E'Controls the sequencing of multiple posting transactions.';
COMMENT ON COLUMN comm_transaction_operations.txn_type IS E'Trust accounting transaction type.';
COMMENT ON COLUMN comm_transaction_operations.update_allowed_flag IS E'Update allowed flag.';

CREATE TABLE comm_transaction_types (
	txn_type varchar(6) NOT NULL,
	description varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	txn_usage varchar(12) NOT NULL,
	all_caseload_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	manual_invoice_flag varchar(1) NOT NULL DEFAULT 'Y',
	credit_obligation_type varchar(6),
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE comm_transaction_types IS E'Defines transaction types which feed the majority of data entry screens.';
COMMENT ON COLUMN comm_transaction_types.active_flag IS E'Flag showing whether code is active or inactive.';
COMMENT ON COLUMN comm_transaction_types.all_caseload_flag IS E'Flag indicating whether all caseloads will use transaction type.';
COMMENT ON COLUMN comm_transaction_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_transaction_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_transaction_types.description IS E'Transaction description.';
COMMENT ON COLUMN comm_transaction_types.expiry_date IS E' Date of code expiration.';
COMMENT ON COLUMN comm_transaction_types.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN comm_transaction_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_transaction_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_transaction_types.txn_type IS E'Transaction type';
COMMENT ON COLUMN comm_transaction_types.txn_usage IS E'The usage for the transaction ie. Receipt, Disbursement, Commissary..';
COMMENT ON COLUMN comm_transaction_types.update_allowed_flag IS E' Flag on record protection.';

CREATE TABLE comm_txn_ops_inv_accounts (
	module_name varchar(20) NOT NULL,
	txn_type varchar(6) NOT NULL,
	invalid_account_code integer NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN comm_txn_ops_inv_accounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_txn_ops_inv_accounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_txn_ops_inv_accounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_txn_ops_inv_accounts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_txn_sales_types (
	txn_type varchar(6) NOT NULL,
	person_flag varchar(1) NOT NULL DEFAULT 'N',
	account_code_flag varchar(1) NOT NULL DEFAULT 'N',
	sales_type varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN comm_txn_sales_types.account_code_flag IS E'Account Code';
COMMENT ON COLUMN comm_txn_sales_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_txn_sales_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_txn_sales_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_txn_sales_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN comm_txn_sales_types.person_flag IS E'Person';
COMMENT ON COLUMN comm_txn_sales_types.sales_type IS E'Reference Code [SALES_TYPE]';
COMMENT ON COLUMN comm_txn_sales_types.txn_type IS E'Transaction type';

CREATE TABLE comm_unit_spending_limits (
	caseload_id varchar(6),
	agy_loc_id varchar(6),
	living_unit_1 bigint,
	living_unit_2 bigint,
	living_unit_3 bigint,
	living_unit_4 bigint,
	period_type varchar(12),
	limit_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN comm_unit_spending_limits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_unit_spending_limits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_unit_spending_limits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_unit_spending_limits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_vendor_receipts (
	return_id_seq smallint NOT NULL,
	received_qty integer,
	received_date timestamp,
	stock_id bigint,
	comment_text varchar(240),
	return_id bigint NOT NULL,
	amount bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN comm_vendor_receipts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_vendor_receipts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_vendor_receipts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_vendor_receipts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE comm_vendor_returns (
	return_id bigint NOT NULL,
	vendor_id bigint,
	received_stock_id bigint,
	return_stock_id bigint NOT NULL,
	return_qty integer NOT NULL,
	return_date timestamp NOT NULL,
	received_qty integer,
	received_amount bigint,
	received_date timestamp,
	stock_loc_id varchar(6) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	return_reason varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN comm_vendor_returns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN comm_vendor_returns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN comm_vendor_returns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN comm_vendor_returns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE component_configs (
	comp_id bigint,
	comp_type varchar(10),
	created_by varchar(100),
	modified_by varchar(100),
	create_date timestamp,
	modify_date timestamp,
	comp_config varchar(4000),
	comp_config_def varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE com_bank_recon_audits (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	bank_statement_date timestamp NOT NULL,
	bank_statement_status varchar(12),
	bank_balance decimal(11,2),
	adjustment_gl_number integer,
	adjustment_comment varchar(240),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE com_bank_recon_audits IS E'Information relating to the bank reconciliation process.';
COMMENT ON COLUMN com_bank_recon_audits.account_code IS E'General ledger account code.';
COMMENT ON COLUMN com_bank_recon_audits.bank_balance IS E'Bank statement balance.';
COMMENT ON COLUMN com_bank_recon_audits.bank_statement_date IS E'Bank statement date.';
COMMENT ON COLUMN com_bank_recon_audits.bank_statement_status IS E'Reference Code [BNK_STAT_STS ]';
COMMENT ON COLUMN com_bank_recon_audits.caseload_id IS E'Identifier for a caseload.';
COMMENT ON COLUMN com_bank_recon_audits.create_date IS E'Modify Date';
COMMENT ON COLUMN com_bank_recon_audits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN com_bank_recon_audits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN com_bank_recon_audits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN com_bank_recon_audits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE com_csld_current_accounts_bak (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	current_balance decimal(11,2) NOT NULL,
	bank_account_type varchar(12),
	bank_account_number varchar(25),
	account_party_type varchar(12),
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE com_csld_current_accounts_bak IS E'Maintains the detail of each general ledger account.';
COMMENT ON COLUMN com_csld_current_accounts_bak.account_code IS E'General ledger account code.';
COMMENT ON COLUMN com_csld_current_accounts_bak.account_party_type IS E'Reference Code ( PARTY_TYPE )';
COMMENT ON COLUMN com_csld_current_accounts_bak.account_period_id IS E'Pointing to the current accounting period.';
COMMENT ON COLUMN com_csld_current_accounts_bak.bank_account_number IS E'The number assigned to the account by the bank.';
COMMENT ON COLUMN com_csld_current_accounts_bak.bank_account_type IS E'Reference Code (BANK_AC_TYPE )';
COMMENT ON COLUMN com_csld_current_accounts_bak.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN com_csld_current_accounts_bak.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN com_csld_current_accounts_bak.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN com_csld_current_accounts_bak.current_balance IS E'The current balance in the general ledger account.';
COMMENT ON COLUMN com_csld_current_accounts_bak.modify_date IS E'Modify Date';
COMMENT ON COLUMN com_csld_current_accounts_bak.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN com_csld_current_accounts_bak.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN com_csld_current_accounts_bak.payee_corporate_id IS E'System generated identifier for a corporation.';
COMMENT ON COLUMN com_csld_current_accounts_bak.payee_person_id IS E'System generated identifier for a person.';

CREATE TABLE com_csld_current_accounts_base (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	current_balance decimal(11,2) NOT NULL,
	bank_account_type varchar(12),
	bank_account_number varchar(25),
	account_party_type varchar(12),
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer,
	routing_number integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE com_csld_current_accounts_base IS E'Maintains the detail of each general ledger account.';
COMMENT ON COLUMN com_csld_current_accounts_base.account_code IS E'General ledger account code.';
COMMENT ON COLUMN com_csld_current_accounts_base.account_party_type IS E'Reference Code ( PARTY_TYPE )';
COMMENT ON COLUMN com_csld_current_accounts_base.bank_account_number IS E'The number assigned to the account by the bank.';
COMMENT ON COLUMN com_csld_current_accounts_base.bank_account_type IS E'Reference Code (BANK_AC_TYPE )';
COMMENT ON COLUMN com_csld_current_accounts_base.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN com_csld_current_accounts_base.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN com_csld_current_accounts_base.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN com_csld_current_accounts_base.modify_date IS E'Modify Date';
COMMENT ON COLUMN com_csld_current_accounts_base.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN com_csld_current_accounts_base.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN com_csld_current_accounts_base.payee_corporate_id IS E'System generated identifier for a corporation.';
COMMENT ON COLUMN com_csld_current_accounts_base.payee_person_id IS E'System generated identifier for a person.';
COMMENT ON COLUMN com_csld_current_accounts_base.routing_number IS E'routing number is the bank branch identify.';

CREATE TABLE com_csld_current_accounts_txns (
	com_csld_current_account_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	current_balance numeric(19,6) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq smallint DEFAULT 99,
	consolidation_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE com_csld_current_accounts_txns IS E'Maintains the detail of each general ledger account.';
COMMENT ON COLUMN com_csld_current_accounts_txns.account_code IS E'General ledger account code.';
COMMENT ON COLUMN com_csld_current_accounts_txns.account_period_id IS E'Pointing to the current accounting period.';
COMMENT ON COLUMN com_csld_current_accounts_txns.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN com_csld_current_accounts_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN com_csld_current_accounts_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN com_csld_current_accounts_txns.current_balance IS E'The current balance in the general ledger account.';
COMMENT ON COLUMN com_csld_current_accounts_txns.modify_date IS E'Modify Date';
COMMENT ON COLUMN com_csld_current_accounts_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN com_csld_current_accounts_txns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE conditions (
	condition_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	condition_type varchar(12),
	amount_required_flag varchar(1) NOT NULL,
	due_date_required_flag varchar(1) NOT NULL,
	list_seq integer,
	condition_unit_type varchar(12),
	maximum_amount decimal(10,2),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE conditions IS E'- Retrofitted';
COMMENT ON COLUMN conditions.active_flag IS E' - Column already exists';
COMMENT ON COLUMN conditions.amount_required_flag IS E' - Column already exists';
COMMENT ON COLUMN conditions.condition_code IS E' - Column already exists';
COMMENT ON COLUMN conditions.condition_type IS E' - Column already exists';
COMMENT ON COLUMN conditions.condition_unit_type IS E'Refrence Code [ COND_UNIT ]';
COMMENT ON COLUMN conditions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN conditions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN conditions.description IS E' - Column already exists';
COMMENT ON COLUMN conditions.due_date_required_flag IS E' - Column already exists';
COMMENT ON COLUMN conditions.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN conditions.list_seq IS E' - Column already exists';
COMMENT ON COLUMN conditions.maximum_amount IS E' - Column already exists';
COMMENT ON COLUMN conditions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN conditions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN conditions.update_allowed_flag IS E' - Column already exists';

CREATE TABLE contact_person_types (
	contact_type varchar(12) NOT NULL,
	relationship_type varchar(12) NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE contact_person_types IS E'- Retrofitted';
COMMENT ON COLUMN contact_person_types.active_flag IS E'If the code active ?';
COMMENT ON COLUMN contact_person_types.contact_type IS E'Refrence Code [CONTACTS]. The contact type with offender ie. Emergency, Professional ..';
COMMENT ON COLUMN contact_person_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN contact_person_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN contact_person_types.expiry_date IS E'The date which the code is no longer used';
COMMENT ON COLUMN contact_person_types.list_seq IS E'Listing order of the code (It for controlling the order of listing in LOV).  If the value is "0", then it is taken as the default for this domain';
COMMENT ON COLUMN contact_person_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN contact_person_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN contact_person_types.relationship_type IS E'Refrence Code [ RELATIONSHIP ]. The relationship with offender based upon type.';
COMMENT ON COLUMN contact_person_types.update_allowed_flag IS E'If the code allowed to changed ( It is for controlling the code)';

CREATE TABLE contracts (
	contract_id varchar(6) NOT NULL,
	contractor_corp_id bigint NOT NULL,
	description varchar(40) NOT NULL,
	fiscal_year smallint NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp NOT NULL,
	approval_staff_id integer NOT NULL,
	modified_staff_id integer NOT NULL,
	manager_staff_id integer NOT NULL,
	region_code varchar(12) NOT NULL,
	modified_date timestamp,
	admin_phone_area smallint,
	admin_phone integer,
	admin_phone_ext smallint,
	tendered_flag varchar(1) NOT NULL DEFAULT 'Y',
	last_tender_date timestamp,
	negotiated_flag varchar(1) NOT NULL DEFAULT 'Y',
	updated_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	contract_amount decimal(10,2),
	termination_reason_text varchar(240),
	termination_date timestamp,
	approval_date timestamp,
	advance_amount decimal(10,2),
	replace_contractor_corp_id bigint,
	prev_contractor_corp_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE contracts IS E'- Retrofitted';
COMMENT ON COLUMN contracts.admin_phone IS E' - Column already exists';
COMMENT ON COLUMN contracts.admin_phone_area IS E' - Column already exists';
COMMENT ON COLUMN contracts.admin_phone_ext IS E' - Column already exists';
COMMENT ON COLUMN contracts.advance_amount IS E' - Column already exists';
COMMENT ON COLUMN contracts.approval_date IS E' - Column already exists';
COMMENT ON COLUMN contracts.approval_staff_id IS E' - Column already exists';
COMMENT ON COLUMN contracts.contract_amount IS E' - Column already exists';
COMMENT ON COLUMN contracts.contract_id IS E' - Column already exists';
COMMENT ON COLUMN contracts.contractor_corp_id IS E' - Column already exists';
COMMENT ON COLUMN contracts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN contracts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN contracts.description IS E' - Column already exists';
COMMENT ON COLUMN contracts.end_date IS E' - Column already exists';
COMMENT ON COLUMN contracts.fiscal_year IS E' - Column already exists';
COMMENT ON COLUMN contracts.last_tender_date IS E' - Column already exists';
COMMENT ON COLUMN contracts.manager_staff_id IS E' - Column already exists';
COMMENT ON COLUMN contracts.modified_date IS E' - Column already exists';
COMMENT ON COLUMN contracts.modified_staff_id IS E' - Column already exists';
COMMENT ON COLUMN contracts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN contracts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN contracts.negotiated_flag IS E' - Column already exists';
COMMENT ON COLUMN contracts.prev_contractor_corp_id IS E' - Column already exists';
COMMENT ON COLUMN contracts.region_code IS E'Refrence Code ( REGION )';
COMMENT ON COLUMN contracts.replace_contractor_corp_id IS E' - Column already exists';
COMMENT ON COLUMN contracts.start_date IS E' - Column already exists';
COMMENT ON COLUMN contracts.tendered_flag IS E' - Column already exists';
COMMENT ON COLUMN contracts.termination_date IS E' - Column already exists';
COMMENT ON COLUMN contracts.termination_reason_text IS E' - Column already exists';
COMMENT ON COLUMN contracts.updated_allowed_flag IS E' - Column already exists';

CREATE TABLE copy_tables (
	table_operation_code varchar(12) NOT NULL,
	movement_type varchar(12) NOT NULL,
	movement_reason_code varchar(12) NOT NULL,
	table_name varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	list_seq integer NOT NULL DEFAULT 1,
	parent_table varchar(40),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	col_name varchar(40),
	seq_name varchar(40),
	update_allowed_flag varchar(1) DEFAULT 'Y',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN copy_tables.active_flag IS E'Active flag on movement reasons.';
COMMENT ON COLUMN copy_tables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN copy_tables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN copy_tables.expiry_date IS E'Date code deactivated.';
COMMENT ON COLUMN copy_tables.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN copy_tables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN copy_tables.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN copy_tables.movement_reason_code IS E'Reference Code ( MOVE_RSN ). The reason for the movement.';
COMMENT ON COLUMN copy_tables.movement_type IS E'Reference Code ( MOVE_TYPE )';
COMMENT ON COLUMN copy_tables.table_operation_code IS E'REFERENCE CODE ( TABLE_OPER ) Valid Code are (COP : COPY, DEL : DELETE)';

CREATE TABLE corporates (
	corporate_id bigint NOT NULL,
	corporate_name varchar(40),
	caseload_id varchar(6),
	contact_person_name varchar(40),
	created_date timestamp NOT NULL,
	updated_date timestamp,
	user_id varchar(32),
	comment_text varchar(240),
	start_date timestamp,
	account_term_code varchar(60),
	shipping_term_code varchar(60),
	minimum_purchase_amount decimal(9,2),
	maximum_purchase_amount decimal(9,2),
	memo_text varchar(40),
	suspended_flag varchar(1) NOT NULL,
	suspended_date timestamp,
	fei_number varchar(40),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	tax_no varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE corporates IS E'Corporates. Such as Vendors';
COMMENT ON COLUMN corporates.caseload_id IS E' - Column already exists';
COMMENT ON COLUMN corporates.comment_text IS E' - Column already exists';
COMMENT ON COLUMN corporates.contact_person_name IS E' - Column already exists';
COMMENT ON COLUMN corporates.corporate_id IS E' - Column already exists';
COMMENT ON COLUMN corporates.corporate_name IS E' - Column already exists';
COMMENT ON COLUMN corporates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN corporates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN corporates.created_date IS E' - Column already exists';
COMMENT ON COLUMN corporates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN corporates.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN corporates.updated_date IS E' - Column already exists';
COMMENT ON COLUMN corporates.user_id IS E' - Column already exists';

CREATE TABLE corporate_types (
	corporate_id bigint NOT NULL,
	corporate_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE corporate_types IS E'The table stores the multiple classification of a corporte.  ';
COMMENT ON COLUMN corporate_types.corporate_id IS E'FK to Corporates';
COMMENT ON COLUMN corporate_types.corporate_type IS E'Reference Code(CORP_TYPE)';
COMMENT ON COLUMN corporate_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN corporate_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN corporate_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN corporate_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE course_activities (
	crs_acty_id bigint NOT NULL,
	caseload_id varchar(6),
	agy_loc_id varchar(6),
	description varchar(40),
	capacity smallint DEFAULT 99,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	schedule_start_date timestamp,
	schedule_end_date timestamp,
	caseload_type varchar(12),
	services_address_id bigint,
	program_id bigint NOT NULL,
	parent_crs_acty_id bigint,
	internal_location_id bigint,
	provider_party_class varchar(12),
	provider_party_id bigint,
	provider_party_code varchar(6),
	beneficiary_name varchar(80),
	beneficiary_contact varchar(80),
	list_seq integer,
	placement_corporate_id bigint,
	comment_text varchar(240),
	agency_location_type varchar(12),
	provider_type varchar(12),
	beneficiary_type varchar(12),
	placement_text varchar(240),
	code varchar(20),
	holiday_flag varchar(1) DEFAULT 'Y',
	course_class varchar(12) NOT NULL DEFAULT 'COURSE',
	course_activity_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	iep_level varchar(12),
	no_of_sessions integer,
	session_length integer,
	multi_phase_scheduling_flag varchar(12),
	schedule_notes varchar(240),
	seal_flag varchar(1),
	allow_double_book_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_activities IS E'The course activites details';
COMMENT ON COLUMN course_activities.active_flag IS E'Y/N field to say if the course is active - Retrofitted';
COMMENT ON COLUMN course_activities.agency_location_type IS E'The agency location type';
COMMENT ON COLUMN course_activities.agy_loc_id IS E'The location residing within an agency - link to caseload agency locations - Retrofitted';
COMMENT ON COLUMN course_activities.beneficiary_contact IS E'The contact details of the beneficiary';
COMMENT ON COLUMN course_activities.beneficiary_name IS E'The name of the beneficiary';
COMMENT ON COLUMN course_activities.beneficiary_type IS E'The beneficiary type.  Reference Code(PS_BENEF)';
COMMENT ON COLUMN course_activities.capacity IS E'Number of spaces on the course/activity - Retrofitted';
COMMENT ON COLUMN course_activities.caseload_id IS E'Caseload ID';
COMMENT ON COLUMN course_activities.caseload_type IS E'Reference Code [ CSLD_TYPE ] : Type of Caseload - ie Institution, Office etc.';
COMMENT ON COLUMN course_activities.code IS E'The Course acitivity short code';
COMMENT ON COLUMN course_activities.comment_text IS E'The general comment text';
COMMENT ON COLUMN course_activities.course_activity_type IS E'The course activity type.  Reference Code(PS_CRS_TYPE)';
COMMENT ON COLUMN course_activities.course_class IS E'The class of the course/activity';
COMMENT ON COLUMN course_activities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_activities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_activities.crs_acty_id IS E'Course Aactivity ID';
COMMENT ON COLUMN course_activities.description IS E'Description of the Course/Activity - Retrofitted';
COMMENT ON COLUMN course_activities.expiry_date IS E'Date the Course/Activity Date became inactive - Retrofitted';
COMMENT ON COLUMN course_activities.holiday_flag IS E'If the course/activity conform to national holidays';
COMMENT ON COLUMN course_activities.internal_location_id IS E'The internal location of agency location';
COMMENT ON COLUMN course_activities.list_seq IS E'The order of the listing';
COMMENT ON COLUMN course_activities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_activities.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN course_activities.multi_phase_scheduling_flag IS E'?Multi-Phase scheduling';
COMMENT ON COLUMN course_activities.no_of_sessions IS E'Number of total sessions';
COMMENT ON COLUMN course_activities.parent_crs_acty_id IS E'The parent of course activity ID';
COMMENT ON COLUMN course_activities.placement_corporate_id IS E'The corporate of the placement';
COMMENT ON COLUMN course_activities.placement_text IS E'The general text of the placement';
COMMENT ON COLUMN course_activities.program_id IS E'The Program ID';
COMMENT ON COLUMN course_activities.provider_party_class IS E'The party class of the provider';
COMMENT ON COLUMN course_activities.provider_party_code IS E'The party code of the provider';
COMMENT ON COLUMN course_activities.provider_party_id IS E'The party id of the provider';
COMMENT ON COLUMN course_activities.provider_type IS E'The Provider Type';
COMMENT ON COLUMN course_activities.schedule_end_date IS E'End Date';
COMMENT ON COLUMN course_activities.schedule_notes IS E'The Note of the course schedule';
COMMENT ON COLUMN course_activities.schedule_start_date IS E'Start Date';
COMMENT ON COLUMN course_activities.services_address_id IS E'The address where the services(course/activity) takes place';
COMMENT ON COLUMN course_activities.session_length IS E'The duration of each session';

CREATE TABLE course_activity_areas (
	crs_acty_id bigint NOT NULL,
	area_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_activity_areas IS E'The areas in which the course actvitiy covers';
COMMENT ON COLUMN course_activity_areas.area_code IS E'The rea code : Based on V_areas';
COMMENT ON COLUMN course_activity_areas.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_activity_areas.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_activity_areas.crs_acty_id IS E'The ID of the program offering';
COMMENT ON COLUMN course_activity_areas.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_activity_areas.modify_user_id IS E'The user who modifies the record';

CREATE TABLE course_activity_parties (
	crs_acty_id bigint NOT NULL,
	party_role varchar(12),
	person_id bigint,
	staff_id bigint,
	registration_text varchar(240),
	contact_text varchar(80),
	crs_acty_party_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	first_name varchar(35),
	last_name varchar(35),
	party_role_text varchar(40),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_activity_parties IS E'The role of involved parties ';
COMMENT ON COLUMN course_activity_parties.contact_text IS E'The details of contact';
COMMENT ON COLUMN course_activity_parties.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_activity_parties.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_activity_parties.crs_acty_id IS E'The course activity ID';
COMMENT ON COLUMN course_activity_parties.crs_acty_party_id IS E'The ID of the course Activity Party';
COMMENT ON COLUMN course_activity_parties.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_activity_parties.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN course_activity_parties.party_role IS E'The Role of the party involved';
COMMENT ON COLUMN course_activity_parties.person_id IS E'The person ID';
COMMENT ON COLUMN course_activity_parties.registration_text IS E'The details of registration';
COMMENT ON COLUMN course_activity_parties.staff_id IS E'The Staff ID';

CREATE TABLE course_activity_profiles (
	crs_acty_id bigint NOT NULL,
	program_profile_type varchar(12) NOT NULL,
	program_profile_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_activity_profiles IS E'The profiles of course activties';
COMMENT ON COLUMN course_activity_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_activity_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_activity_profiles.crs_acty_id IS E'The course activity ID';
COMMENT ON COLUMN course_activity_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_activity_profiles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN course_activity_profiles.program_profile_code IS E'The Porfile code';
COMMENT ON COLUMN course_activity_profiles.program_profile_type IS E'The Profile Type';

CREATE TABLE course_activity_reviews (
	course_activity_review_id bigint NOT NULL,
	review_date timestamp NOT NULL,
	next_review_date timestamp,
	beneficiary_score integer,
	usefulness_score integer,
	empathy_score integer,
	cognitive_score integer,
	employment_score integer,
	comment_text varchar(240),
	review_staff_id bigint,
	crs_acty_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_activity_reviews IS E'The review details of course/activity';
COMMENT ON COLUMN course_activity_reviews.beneficiary_score IS E'The score of beneficiary';
COMMENT ON COLUMN course_activity_reviews.cognitive_score IS E'The score of cognitive';
COMMENT ON COLUMN course_activity_reviews.comment_text IS E'The general comment text';
COMMENT ON COLUMN course_activity_reviews.course_activity_review_id IS E'The ID of the course activity review';
COMMENT ON COLUMN course_activity_reviews.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_activity_reviews.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_activity_reviews.crs_acty_id IS E'The course activity ID';
COMMENT ON COLUMN course_activity_reviews.empathy_score IS E'The score of empathy';
COMMENT ON COLUMN course_activity_reviews.employment_score IS E'The score of employment';
COMMENT ON COLUMN course_activity_reviews.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_activity_reviews.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN course_activity_reviews.next_review_date IS E'The next review date';
COMMENT ON COLUMN course_activity_reviews.review_date IS E'The review date';
COMMENT ON COLUMN course_activity_reviews.review_staff_id IS E'The review staff';
COMMENT ON COLUMN course_activity_reviews.usefulness_score IS E'The score of usefulness';

CREATE TABLE course_schedules (
	crs_sch_id bigint NOT NULL,
	crs_acty_id bigint NOT NULL,
	weekday varchar(12),
	schedule_date timestamp NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp,
	session_no integer,
	details varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	schedule_status varchar(12) DEFAULT 'SCH',
	catch_up_crs_sch_id bigint,
	video_reference_id varchar(20),
	seal_flag varchar(1),
	cancelled_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_schedules IS E'The course/activity schedules';
COMMENT ON COLUMN course_schedules.catch_up_crs_sch_id IS E'The original Course schedule ID';
COMMENT ON COLUMN course_schedules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_schedules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_schedules.crs_acty_id IS E'The course activity SChedule ID';
COMMENT ON COLUMN course_schedules.crs_sch_id IS E'Schedule Date';
COMMENT ON COLUMN course_schedules.details IS E'Details of the scheduled course';
COMMENT ON COLUMN course_schedules.end_time IS E'End Time';
COMMENT ON COLUMN course_schedules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_schedules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN course_schedules.schedule_date IS E'The course schedule ID ';
COMMENT ON COLUMN course_schedules.schedule_status IS E'The status of the schedule. Purely for documentation and no function on scheduling';
COMMENT ON COLUMN course_schedules.session_no IS E'The unique schedule session number';
COMMENT ON COLUMN course_schedules.start_time IS E'Start Time';
COMMENT ON COLUMN course_schedules.weekday IS E'Course Activity Id';

CREATE TABLE course_schedule_days (
	day_no integer NOT NULL,
	schedule_date timestamp,
	week_day varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	holiday_flag varchar(1),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_schedule_days IS E'The general master calendar for schedule generation';
COMMENT ON COLUMN course_schedule_days.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_schedule_days.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_schedule_days.day_no IS E'The ID of day';
COMMENT ON COLUMN course_schedule_days.holiday_flag IS E'? If it is a public holiday';
COMMENT ON COLUMN course_schedule_days.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_schedule_days.modify_user_id IS E'The user who modifies the record';

CREATE TABLE course_schedule_rules (
	course_schedule_rule_id bigint NOT NULL,
	crs_acty_id bigint NOT NULL,
	week_no smallint,
	monday_flag varchar(1) NOT NULL DEFAULT 'N',
	tuesday_flag varchar(1) NOT NULL DEFAULT 'N',
	wednesday_flag varchar(1) NOT NULL DEFAULT 'N',
	thursday_flag varchar(1) NOT NULL DEFAULT 'N',
	friday_flag varchar(1) NOT NULL DEFAULT 'N',
	saturday_flag varchar(1) NOT NULL DEFAULT 'N',
	sunday_flag varchar(1) NOT NULL DEFAULT 'N',
	start_time timestamp,
	end_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	capacity smallint
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_schedule_rules IS E'The detail rules for generating course schedules';
COMMENT ON COLUMN course_schedule_rules.course_schedule_rule_id IS E'The ID of the course schedule rule';
COMMENT ON COLUMN course_schedule_rules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN course_schedule_rules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN course_schedule_rules.crs_acty_id IS E'The course activity ID';
COMMENT ON COLUMN course_schedule_rules.end_time IS E'End Time';
COMMENT ON COLUMN course_schedule_rules.friday_flag IS E'? Friday';
COMMENT ON COLUMN course_schedule_rules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN course_schedule_rules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN course_schedule_rules.monday_flag IS E'? Monday';
COMMENT ON COLUMN course_schedule_rules.saturday_flag IS E'? Saturday';
COMMENT ON COLUMN course_schedule_rules.start_time IS E'Start Time';
COMMENT ON COLUMN course_schedule_rules.sunday_flag IS E'? Sunday';
COMMENT ON COLUMN course_schedule_rules.thursday_flag IS E'? Thursday';
COMMENT ON COLUMN course_schedule_rules.tuesday_flag IS E'? Tuesday';
COMMENT ON COLUMN course_schedule_rules.wednesday_flag IS E'? Wednesday';
COMMENT ON COLUMN course_schedule_rules.week_no IS E'The week no';

CREATE TABLE course_schedule_staffs (
	course_schedule_staff_id bigint NOT NULL,
	crs_sch_id bigint NOT NULL,
	staff_role varchar(12) NOT NULL,
	staff_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE course_schedule_staffs IS E'The staff involvement in a course session';
COMMENT ON COLUMN course_schedule_staffs.course_schedule_staff_id IS E'The ID of staff''s involvement';
COMMENT ON COLUMN course_schedule_staffs.crs_sch_id IS E'The course schedule ID';
COMMENT ON COLUMN course_schedule_staffs.staff_id IS E'The staff ID';
COMMENT ON COLUMN course_schedule_staffs.staff_role IS E'The role of the staff.  Reference Codes(PS_ROLE)';

CREATE TABLE court_dark_days (
	dark_day_seq integer NOT NULL DEFAULT 1,
	agy_loc_id varchar(6) NOT NULL,
	event_type varchar(12),
	event_date timestamp NOT NULL,
	event_end_date timestamp,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN court_dark_days.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN court_dark_days.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN court_dark_days.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN court_dark_days.modify_user_id IS E'The user who modifies the record';

CREATE TABLE court_departments (
	agy_loc_id varchar(6) NOT NULL,
	code varchar(12) NOT NULL,
	description varchar(240) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN court_departments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN court_departments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN court_departments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN court_departments.modify_user_id IS E'The user who modifies the record';

CREATE TABLE court_events (
	event_id bigint NOT NULL,
	case_id bigint,
	offender_book_id bigint NOT NULL,
	event_date timestamp NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp,
	court_event_type varchar(12) NOT NULL,
	judge_name varchar(60),
	event_status varchar(12) DEFAULT 'SCH',
	parent_event_id bigint,
	agy_loc_id varchar(12) NOT NULL,
	outcome_reason_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	event_outcome varchar(12),
	next_event_request_flag varchar(1) DEFAULT 'N',
	order_requested_flag varchar(1) DEFAULT 'N',
	result_code varchar(12),
	next_event_date timestamp,
	next_event_start_time timestamp,
	outcome_date timestamp,
	offender_proceeding_id bigint,
	direction_code varchar(12),
	hold_flag varchar(1) DEFAULT 'N',
	seal_flag varchar(1),
	scheduled_trip_id bigint
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE court_events IS E'Court hearing events.  ';
COMMENT ON COLUMN court_events.agy_loc_id IS E'FK to the agency location';
COMMENT ON COLUMN court_events.case_id IS E'FK to the offender cases';
COMMENT ON COLUMN court_events.comment_text IS E'The general comment text';
COMMENT ON COLUMN court_events.court_event_type IS E'Reference Code (EVENT_SUBTYP) Where parent code = ''CRT''';
COMMENT ON COLUMN court_events.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN court_events.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN court_events.end_time IS E'The end time of the court event if there is any';
COMMENT ON COLUMN court_events.event_date IS E'The event date';
COMMENT ON COLUMN court_events.event_id IS E'The PK of the court event';
COMMENT ON COLUMN court_events.event_outcome IS E'The outcome of the court event:Reference COde(OUTCOMES)';
COMMENT ON COLUMN court_events.event_status IS E'Reference Code (EVENT_STS)';
COMMENT ON COLUMN court_events.judge_name IS E'The name of the judge';
COMMENT ON COLUMN court_events.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN court_events.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN court_events.next_event_date IS E'The next event date';
COMMENT ON COLUMN court_events.next_event_request_flag IS E'Next event is requested';
COMMENT ON COLUMN court_events.next_event_start_time IS E'The next event start time';
COMMENT ON COLUMN court_events.offender_book_id IS E'FK to the Offender Booking ID';
COMMENT ON COLUMN court_events.order_requested_flag IS E'An Orderis requested';
COMMENT ON COLUMN court_events.outcome_date IS E'The date of the outcome deteremined';
COMMENT ON COLUMN court_events.outcome_reason_code IS E'Reference Code (CANC_RSN)';
COMMENT ON COLUMN court_events.parent_event_id IS E'FK to the previous court event';
COMMENT ON COLUMN court_events.result_code IS E'The result code';
COMMENT ON COLUMN court_events.start_time IS E'The start time of the court event';

CREATE TABLE court_event_charges (
	event_id bigint NOT NULL,
	offender_charge_id bigint NOT NULL,
	plea_code varchar(12),
	result_code_1 varchar(12),
	result_code_2 varchar(12),
	result_code_1_indicator varchar(12),
	result_code_2_indicator varchar(12),
	most_serious_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	property_value decimal(10,2),
	total_property_value decimal(10,2),
	no_of_offences smallint,
	offence_date timestamp,
	offence_range_date timestamp,
	cjit_offence_code_1 varchar(21),
	cjit_offence_code_2 varchar(8),
	cjit_offence_code_3 varchar(3),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE court_event_charges IS E'The outcome of the offences in a court event';
COMMENT ON COLUMN court_event_charges.cjit_offence_code_1 IS E'The CJIT Code 1';
COMMENT ON COLUMN court_event_charges.cjit_offence_code_2 IS E'The CJIT code 2';
COMMENT ON COLUMN court_event_charges.cjit_offence_code_3 IS E'The CJIT code 3';
COMMENT ON COLUMN court_event_charges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN court_event_charges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN court_event_charges.event_id IS E'The court event ID';
COMMENT ON COLUMN court_event_charges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN court_event_charges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN court_event_charges.most_serious_flag IS E'? If this is the most serious offence charged';
COMMENT ON COLUMN court_event_charges.no_of_offences IS E'No of offences';
COMMENT ON COLUMN court_event_charges.offence_date IS E'The Offence Date';
COMMENT ON COLUMN court_event_charges.offence_range_date IS E'The end date of the offence';
COMMENT ON COLUMN court_event_charges.offender_charge_id IS E'The Offender charge ID';
COMMENT ON COLUMN court_event_charges.plea_code IS E'The Plea Code.  Reference Code(PLEA_STATUS)';
COMMENT ON COLUMN court_event_charges.property_value IS E'The property value of the offence';
COMMENT ON COLUMN court_event_charges.result_code_1 IS E'The result code 1of the charge';
COMMENT ON COLUMN court_event_charges.result_code_1_indicator IS E'The indicator of the result code 1';
COMMENT ON COLUMN court_event_charges.result_code_2 IS E'The result code 2 of the charge';
COMMENT ON COLUMN court_event_charges.result_code_2_indicator IS E'The indicator of the result code 2';
COMMENT ON COLUMN court_event_charges.total_property_value IS E'The total property value of the offence';

CREATE TABLE court_event_sentences (
	event_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	result_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	no_of_breachs integer,
	start_date timestamp,
	end_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN court_event_sentences.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN court_event_sentences.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN court_event_sentences.event_id IS E'The court event ID';
COMMENT ON COLUMN court_event_sentences.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN court_event_sentences.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN court_event_sentences.offender_book_id IS E'Offender Book ID';
COMMENT ON COLUMN court_event_sentences.result_code IS E'Reference Code(SENT_VERDICT)';
COMMENT ON COLUMN court_event_sentences.sentence_seq IS E'Sentence seq';

CREATE TABLE court_movement_tmp (
	offender_book_id bigint,
	agy_loc_id varchar(6),
	to_agy_loc_id varchar(6),
	living_unit_id1 bigint,
	living_unit_id2 bigint,
	living_unit_id3 bigint,
	living_unit_id4 bigint,
	to_living_unit_id1 bigint,
	to_living_unit_id2 bigint,
	to_living_unit_id3 bigint,
	movement_reason varchar(12),
	to_living_unit_id4 bigint,
	movement_date timestamp,
	movement_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN court_movement_tmp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN court_movement_tmp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN court_movement_tmp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN court_movement_tmp.modify_user_id IS E'The user who modifies the record';

CREATE TABLE create_adhoc_email (
	email_id bigint NOT NULL,
	offender_book_id bigint,
	work_id bigint,
	email_subject varchar(240),
	email_body text,
	email_sender varchar(240),
	email_from varchar(240),
	create_datetime timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ct_offenders (
	facility_code char(3),
	offender_id char(8),
	admitdatelatest char(8),
	admitdatesystem char(8),
	birthdate char(8),
	housingunit char(2),
	housingcell char(3),
	movedate char(8),
	movetime char(4),
	movecode char(7),
	firstname char(15),
	middlename char(15),
	lastname char(15),
	alias_first_name char(12),
	alias_last_name char(12),
	ssn char(9),
	sex char(1),
	booking_number char(14),
	in_out_status char(3),
	mf_legal_st char(1),
	youth_adult_code char(1),
	drdisposition char(2),
	drhearing_date char(8),
	drinclusivedate char(8),
	movement_flag varchar(1),
	disposition_flag varchar(1),
	housing_flag varchar(1),
	datetimestamp timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ct_offenders_log (
	datetimestamp timestamp,
	total_records bigint,
	total_movements bigint,
	total_dispositions bigint,
	time_stamp varchar(4),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE curfew_addresses (
	curfew_address_id bigint NOT NULL,
	offender_book_id bigint,
	address_id bigint NOT NULL,
	active_flag varchar(1),
	electricity_flag varchar(1),
	phone_flag varchar(1),
	phone_no varchar(40),
	ext_no varchar(7),
	electricity_confirm_flag varchar(1) DEFAULT 'N',
	phone_confirm_flag varchar(1) DEFAULT 'N',
	phone_no_confirm_flag varchar(1) DEFAULT 'N',
	offender_curfew_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE curfew_addresses IS E'The address information of the curfew';
COMMENT ON COLUMN curfew_addresses.active_flag IS E'? Active HDC address';
COMMENT ON COLUMN curfew_addresses.address_id IS E'FK to address';
COMMENT ON COLUMN curfew_addresses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN curfew_addresses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN curfew_addresses.curfew_address_id IS E'PK of the curfew address';
COMMENT ON COLUMN curfew_addresses.electricity_confirm_flag IS E'?Is there any electricty in the location';
COMMENT ON COLUMN curfew_addresses.electricity_flag IS E'? Electricity';
COMMENT ON COLUMN curfew_addresses.ext_no IS E'Phone Extension no';
COMMENT ON COLUMN curfew_addresses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN curfew_addresses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN curfew_addresses.offender_book_id IS E'FK to offender curfew';
COMMENT ON COLUMN curfew_addresses.offender_curfew_id IS E'The offender curfew';
COMMENT ON COLUMN curfew_addresses.phone_confirm_flag IS E'?IS there any phone';
COMMENT ON COLUMN curfew_addresses.phone_flag IS E'? Phone there';
COMMENT ON COLUMN curfew_addresses.phone_no IS E'Phone no';
COMMENT ON COLUMN curfew_addresses.phone_no_confirm_flag IS E'?If the phone number confirmed';

CREATE TABLE curfew_address_occupants (
	curfew_address_id bigint NOT NULL,
	occupant_seq integer NOT NULL,
	person_id bigint NOT NULL,
	occupant_relationship_code varchar(12),
	age bigint,
	contact_flag varchar(1),
	phone_no varchar(40),
	ext_no varchar(7),
	contact_text varchar(240),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE curfew_address_occupants IS E'The occupants of the curfew address';
COMMENT ON COLUMN curfew_address_occupants.age IS E'age';
COMMENT ON COLUMN curfew_address_occupants.comment_text IS E'comment text';
COMMENT ON COLUMN curfew_address_occupants.contact_flag IS E'? for contact';
COMMENT ON COLUMN curfew_address_occupants.contact_text IS E'contact text';
COMMENT ON COLUMN curfew_address_occupants.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN curfew_address_occupants.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN curfew_address_occupants.curfew_address_id IS E'FK to curfew address';
COMMENT ON COLUMN curfew_address_occupants.ext_no IS E'phone ext no';
COMMENT ON COLUMN curfew_address_occupants.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN curfew_address_occupants.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN curfew_address_occupants.occupant_relationship_code IS E'Reference code (OCC_REL)';
COMMENT ON COLUMN curfew_address_occupants.occupant_seq IS E'occupant seq';
COMMENT ON COLUMN curfew_address_occupants.person_id IS E'FK to person';
COMMENT ON COLUMN curfew_address_occupants.phone_no IS E'phone no';

CREATE TABLE current_offenders (
	offender_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	user_id varchar(32) NOT NULL,
	offender_book_id bigint,
	create_user_id varchar(32),
	active_datetime timestamp,
	create_datetime timestamp
)  TABLESPACE TAG_DATA;

CREATE TABLE custody_rules (
	custody_rule_code varchar(6) NOT NULL,
	hour_rule smallint NOT NULL,
	key_event varchar(1) NOT NULL,
	warrant_default_flag varchar(1) NOT NULL,
	include_event_date varchar(1) NOT NULL,
	include_sun varchar(1) NOT NULL,
	include_mon varchar(1) NOT NULL,
	include_tue varchar(1) NOT NULL,
	include_wed varchar(1) NOT NULL,
	include_thu varchar(1) NOT NULL,
	include_fri varchar(1) NOT NULL,
	include_sat varchar(1) NOT NULL,
	active_flag varchar(1) NOT NULL,
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE custody_rules IS E'- Retrofitted';
COMMENT ON COLUMN custody_rules.active_flag IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN custody_rules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN custody_rules.custody_rule_code IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.hour_rule IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_event_date IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_fri IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_mon IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_sat IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_sun IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_thu IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_tue IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.include_wed IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.key_event IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.list_seq IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN custody_rules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN custody_rules.update_allowed_flag IS E' - Column already exists';
COMMENT ON COLUMN custody_rules.warrant_default_flag IS E' - Column already exists';

CREATE TABLE db_patches (
	profile_code varchar(12) NOT NULL,
	profile_value varchar(100) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN db_patches.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN db_patches.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN db_patches.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN db_patches.modify_user_id IS E'The user who modifies the record';

CREATE TABLE deduction_limits (
	compensation_code varchar(12) NOT NULL,
	pay_range_code varchar(12) NOT NULL,
	receipt_type varchar(12) NOT NULL,
	max_deduction decimal(5,2) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN deduction_limits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN deduction_limits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN deduction_limits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN deduction_limits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE deduction_limit_types (
	compensation_code varchar(12) NOT NULL,
	pay_range_code varchar(12) NOT NULL,
	receipt_type varchar(12) NOT NULL,
	max_deduction_category varchar(12) NOT NULL,
	max_deduction_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN deduction_limit_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN deduction_limit_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN deduction_limit_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN deduction_limit_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE deduction_types (
	deduction_type varchar(6) NOT NULL,
	deduction_desc varchar(40) NOT NULL,
	deduction_category varchar(12) NOT NULL,
	from_balance_type varchar(12) DEFAULT 'OB',
	caseload_restricted_flag varchar(1),
	increment_payables_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	clp_flag varchar(1),
	caseload_code varchar(12) NOT NULL,
	parent_deduction_type varchar(6),
	percentage_of_parent decimal(5,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE deduction_types IS E'- Retrofitted';
COMMENT ON COLUMN deduction_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN deduction_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN deduction_types.deduction_category IS E'Reference Code ( DEDUCT_CAT )';
COMMENT ON COLUMN deduction_types.modify_date IS E'Modify Date';
COMMENT ON COLUMN deduction_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN deduction_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN deduction_types.parent_deduction_type IS E'Link Deduction_type to a parent Deduction_type';
COMMENT ON COLUMN deduction_types.percentage_of_parent IS E'A child deduction will be automatically created when a parent deduction is created.  The amount of deduction is calculated based on the percentage stored in this column.';

CREATE TABLE default_hearing_types (
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	hearing_type varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN default_hearing_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN default_hearing_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN default_hearing_types.hearing_type IS E'REFERENCE_CODES DOMAIN EVENT_SUBTYP';
COMMENT ON COLUMN default_hearing_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN default_hearing_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN default_hearing_types.order_code IS E'PROBATION_ORDER_TYPES ORDER_CODE';
COMMENT ON COLUMN default_hearing_types.order_type IS E'PROBATION_ORDER_TYPES ORDER_TYPE';

CREATE TABLE dept (
	deptno smallint,
	dname varchar(14),
	loc varchar(13),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE document_closed (
	session_id bigint NOT NULL,
	prev_doc_closed varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE document_templates (
	template_code varchar(24) NOT NULL,
	template_name varchar(80) NOT NULL,
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	security_lock_user_id varchar(32),
	localdata bytea,
	srctype varchar(2000),
	srclocation varchar(4000),
	srcname varchar(4000),
	updatetime timestamp,
	local bigint,
	height numeric(38),
	width numeric(38),
	contentlength numeric(38),
	fileformat varchar(4000),
	contentformat varchar(4000),
	compressionformat varchar(4000),
	mimetype varchar(4000) NOT NULL DEFAULT 'application/msword',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	template_type varchar(12) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_IWP;
COMMENT ON COLUMN document_templates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN document_templates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN document_templates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN document_templates.modify_user_id IS E'The user who modifies the record';

CREATE TABLE document_template_queues (
	document_template_queue_id bigint NOT NULL,
	template_code varchar(12) NOT NULL,
	offender_book_id bigint NOT NULL,
	queue_status varchar(12) NOT NULL DEFAULT 'ACTIVE',
	offender_document_template_id bigint,
	module_name varchar(20) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	session_id bigint,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_IWP;
COMMENT ON COLUMN document_template_queues.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN document_template_queues.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN document_template_queues.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN document_template_queues.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN document_template_queues.offender_document_template_id IS E'This column gets populated when Status changed to Complate.';
COMMENT ON COLUMN document_template_queues.queue_status IS E'ACTIVE or INACTIVE';
COMMENT ON COLUMN document_template_queues.session_id IS E'Required for running multiple instances of 6i generator form on the network...';

CREATE TABLE document_template_roles (
	template_code varchar(12) NOT NULL,
	role_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_IWP;
COMMENT ON COLUMN document_template_roles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN document_template_roles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN document_template_roles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN document_template_roles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE durations (
	duration_code varchar(12) NOT NULL,
	internal_status varchar(12) NOT NULL,
	int_sts_reason_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer NOT NULL,
	no_of_days smallint,
	active_flag varchar(1),
	expiry_date timestamp,
	rev_box varchar(1) DEFAULT 'Y',
	next_review smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE durations IS E'- Retrofitted';
COMMENT ON COLUMN durations.active_flag IS E' - Retrofitted';
COMMENT ON COLUMN durations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN durations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN durations.description IS E' - Retrofitted';
COMMENT ON COLUMN durations.duration_code IS E' - Retrofitted';
COMMENT ON COLUMN durations.expiry_date IS E' - Retrofitted';
COMMENT ON COLUMN durations.list_seq IS E' - Retrofitted';
COMMENT ON COLUMN durations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN durations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN durations.no_of_days IS E' - Retrofitted';
COMMENT ON COLUMN durations.update_allowed_flag IS E' - Retrofitted';

CREATE TABLE elite_dictionary (
	dictionary_word varchar(100) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'User',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE elite_dictionary IS E'The table contains a dictionary of words. A function based index on oracle LOWER() function should be present';
COMMENT ON COLUMN elite_dictionary.create_datetime IS E'Create time';
COMMENT ON COLUMN elite_dictionary.create_user_id IS E'Create user';
COMMENT ON COLUMN elite_dictionary.dictionary_word IS E'Dictionary word. A function based index on oracle LOWER() function should be present';
COMMENT ON COLUMN elite_dictionary.modify_datetime IS E'Modify time';
COMMENT ON COLUMN elite_dictionary.modify_user_id IS E'Modify user';

CREATE TABLE elite_patches (
	patch_no varchar(20) NOT NULL,
	patches_seq bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN elite_patches.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN elite_patches.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN elite_patches.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN elite_patches.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN elite_patches.patch_no IS E'It is the patch NO';
COMMENT ON COLUMN elite_patches.patches_seq IS E'It is the patch Sequence';

CREATE TABLE emp (
	empno smallint NOT NULL,
	ename varchar(10),
	job varchar(9),
	mgr smallint,
	hiredate timestamp,
	sal decimal(7,2),
	comm decimal(7,2),
	deptno smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE employment_limit_levels (
	work_code varchar(12) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	iep_level varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	user_id varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN employment_limit_levels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN employment_limit_levels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN employment_limit_levels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN employment_limit_levels.modify_user_id IS E'The user who modifies the record';

CREATE TABLE event_measures (
	event_measure_id integer NOT NULL,
	event_type varchar(12) NOT NULL,
	event_sub_type varchar(12) NOT NULL,
	measures_standard_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer DEFAULT 99,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32) DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE event_measures IS E'This is a maintenance table used for defining if a particular event_type and event_sub_type combination measures the national standard.';
COMMENT ON COLUMN event_measures.active_flag IS E'Flag denoting if the record is active or not.';
COMMENT ON COLUMN event_measures.create_date IS E'Audit column records the date of creation of record.';
COMMENT ON COLUMN event_measures.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN event_measures.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN event_measures.event_measure_id IS E'System generated unique sequence - PK.';
COMMENT ON COLUMN event_measures.event_sub_type IS E'Category within an event type, values are associated with reference_domain=''EVENTS'' and parent_code = event_type.';
COMMENT ON COLUMN event_measures.event_type IS E'Type of an event, values are associated with reference_domain= ''EVENTS''.';
COMMENT ON COLUMN event_measures.expiry_date IS E'Date of expiration of the record. This column is populated when the active_flag value is set to ''N''.';
COMMENT ON COLUMN event_measures.list_seq IS E'Numeric sequence value used for driving the sort order on the screen level.';
COMMENT ON COLUMN event_measures.measures_standard_flag IS E'Flag denoting if this combination of event_type and event_sub_type measures a national standard, valid values are (Y,N).';
COMMENT ON COLUMN event_measures.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN event_measures.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN event_measures.update_allowed_flag IS E'Flag denoting if update is allowed for this record. ( No functionality defined currently but will be used post pilot ).';

CREATE TABLE event_measure_outcomes (
	event_measure_id integer NOT NULL,
	outcome_code varchar(12) NOT NULL,
	set_counter_flag varchar(1) NOT NULL DEFAULT 'N',
	prompt_user_flag varchar(1) NOT NULL DEFAULT 'N',
	list_seq integer DEFAULT 99,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32) DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	update_on_contact_log varchar(1) NOT NULL DEFAULT 'N',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE event_measure_outcomes IS E'This is a maintenance table used for defining outcomes associated with a particular event_type and event_sub_type combination.';
COMMENT ON COLUMN event_measure_outcomes.active_flag IS E'Flag denoting if the record is active or not.';
COMMENT ON COLUMN event_measure_outcomes.create_date IS E'Audit column records the date of creation of record.';
COMMENT ON COLUMN event_measure_outcomes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN event_measure_outcomes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN event_measure_outcomes.event_measure_id IS E'System generated unique sequence - part of the PK. This is a FK reference from EVENT_MEASURES table.';
COMMENT ON COLUMN event_measure_outcomes.expiry_date IS E'Date of expiration of the record. This column is populated when the active_flag value is set to ''N''.';
COMMENT ON COLUMN event_measure_outcomes.list_seq IS E'Numeric sequence value used for driving the sort order on the screen level.';
COMMENT ON COLUMN event_measure_outcomes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN event_measure_outcomes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN event_measure_outcomes.outcome_code IS E'The code value for outcomes associated with the combination of event_type and event_sub_type defined in event_measures table.';
COMMENT ON COLUMN event_measure_outcomes.prompt_user_flag IS E'Flag which drives the creation of a ''next appointment'' by prompting the user on the scheduler screen.';
COMMENT ON COLUMN event_measure_outcomes.set_counter_flag IS E'Indicator wether this outcome will calculate an entry in the counter for breach.';
COMMENT ON COLUMN event_measure_outcomes.update_allowed_flag IS E'Flag denoting if update is allowed for this record. ( No functionality defined currently but will be used post pilot ).';

CREATE TABLE event_order_types (
	eod_id bigint NOT NULL,
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	event_type varchar(12) NOT NULL,
	default_status varchar(12),
	supervision_expiry_date_flag varchar(1) NOT NULL DEFAULT 'N',
	supervision_expiry_months bigint,
	min_att_hours bigint,
	max_att_hours bigint,
	min_work_hours bigint,
	max_work_hours bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN event_order_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN event_order_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN event_order_types.default_status IS E'The default status for the Orders type code combionation';
COMMENT ON COLUMN event_order_types.eod_id IS E'Standard Number ID';
COMMENT ON COLUMN event_order_types.event_type IS E'Standard Reference Code for the Event Type';
COMMENT ON COLUMN event_order_types.max_att_hours IS E'The Maximum Number of hours that can be allocated against this order type/code combination';
COMMENT ON COLUMN event_order_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN event_order_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN event_order_types.order_code IS E'Standard Reference Code';
COMMENT ON COLUMN event_order_types.order_type IS E'Order Type - Reference domain ORDER_TYPE';
COMMENT ON COLUMN event_order_types.supervision_expiry_date_flag IS E'Should the supervision expiry date be defaulted to the order expi';

CREATE TABLE ext_ownership_transfer (
	offender_book_id bigint NOT NULL,
	ext_transfer_id integer NOT NULL DEFAULT 1,
	agy_loc_id_from varchar(6) NOT NULL,
	agy_loc_id_to varchar(6) NOT NULL,
	transfer_date timestamp,
	ass_staff_id integer,
	transfer_flag varchar(1) NOT NULL DEFAULT 'N',
	seal_flag varchar(1),
	ptr_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN ext_ownership_transfer.ptr_id IS E'Pre-Transfer Request Id';

CREATE TABLE facility_placement (
	facility_id bigint NOT NULL,
	offender_domain varchar(20),
	offender_code varchar(20),
	source_system varchar(20),
	source_system_table varchar(50),
	offender_table varchar(50),
	required char(1),
	weightage bigint,
	source_system_tbl_col varchar(20),
	source_domain varchar(20),
	offender_tbl_col1 varchar(40),
	offender_tbl_col2 varchar(40),
	mapped_for varchar(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE far_audit_errors (
	far_audit_error_id bigint NOT NULL,
	description varchar(80) NOT NULL,
	account_code integer,
	offender_id bigint,
	offender_deduction_id bigint,
	amount_difference decimal(11,2),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN far_audit_errors.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN far_audit_errors.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN far_audit_errors.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN far_audit_errors.modify_user_id IS E'The user who modifies the record';

CREATE TABLE far_caseload_current_accts (
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id bigint,
	current_balance bigint,
	bank_account_type varchar(12),
	bank_account_number varchar(25),
	account_party_type varchar(12),
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp,
	list_seq bigint,
	routing_number integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN far_caseload_current_accts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN far_caseload_current_accts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN far_caseload_current_accts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN far_caseload_current_accts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE far_csld_current_accts_txns (
	caseload_current_account_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	account_period_id integer NOT NULL,
	current_balance decimal(11,2) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	module_name varchar(20),
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL,
	gl_entry_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN far_csld_current_accts_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN far_csld_current_accts_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN far_csld_current_accts_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN far_csld_current_accts_txns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE far_financial_audits (
	far_audit_id bigint NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	start_txn_id bigint NOT NULL,
	start_date timestamp NOT NULL,
	end_txn_id bigint,
	end_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN far_financial_audits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN far_financial_audits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN far_financial_audits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN far_financial_audits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE far_off_deductions (
	offender_deduction_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	credit_limit decimal(11,2),
	deduction_type varchar(6) NOT NULL,
	deduction_status varchar(1) NOT NULL,
	deduction_priority smallint NOT NULL,
	information_number varchar(32),
	deduction_percentage smallint,
	process_priority_number smallint,
	effective_date timestamp NOT NULL,
	comment_text varchar(240),
	fifo_flag varchar(1),
	payee_person_id bigint,
	payee_corporate_id bigint,
	max_monthly_amount decimal(11,2),
	max_total_amount decimal(11,2),
	deduction_amount decimal(11,2),
	adjustment_reason_code varchar(12),
	adjustment_amount decimal(11,2),
	adjustment_user_id varchar(32),
	adjustment_txn_id bigint,
	adjustment_text varchar(40),
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	pay_deduction_flag varchar(1),
	max_recursive_amount decimal(11,2),
	group_id smallint,
	case_id bigint,
	parent_deduction_id bigint,
	js_status varchar(1),
	collect_agency_amount decimal(11,2),
	collect_agency_flag varchar(1),
	collect_sent_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN far_off_deductions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN far_off_deductions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN far_off_deductions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN far_off_deductions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE far_off_sub_accounts (
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	trust_account_code integer NOT NULL,
	balance decimal(11,2),
	minimum_balance decimal(11,2),
	hold_balance decimal(11,2),
	last_txn_id bigint,
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer,
	ind_date timestamp,
	ind_days integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN far_off_sub_accounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN far_off_sub_accounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN far_off_sub_accounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN far_off_sub_accounts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE file_delivery_details (
	file_delivery_id bigint NOT NULL,
	submitted_by integer,
	recorded_date timestamp,
	sent_date timestamp,
	sent_time timestamp,
	delivery_method varchar(240),
	receipt_number bigint,
	agy_loc_id_to varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN file_delivery_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN file_delivery_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN file_delivery_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN file_delivery_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE file_types (
	file_extension varchar(5) NOT NULL,
	mime_type varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN file_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN file_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN file_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN file_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE fixed_assets (
	asset_id bigint NOT NULL,
	asset_class varchar(12) NOT NULL,
	asset_location_id bigint,
	asset_type varchar(12) NOT NULL,
	description varchar(40),
	make varchar(12),
	model varchar(12),
	status varchar(12) NOT NULL,
	serial_no varchar(20),
	year timestamp,
	color varchar(12),
	cost decimal(11,2),
	life_span_code varchar(12),
	manufacture_date timestamp,
	acquisition_date timestamp NOT NULL,
	acquisition_corporation_id bigint,
	acquisition_person_id bigint,
	disposition_date timestamp,
	disposition_price decimal(11,2),
	disposition_type varchar(12),
	disposition_corporate_id bigint,
	disposition_person_id bigint,
	disposition_comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE fixed_assets IS E'Fixed Asset- Retrofitted';
COMMENT ON COLUMN fixed_assets.acquisition_corporation_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.acquisition_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.acquisition_person_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.asset_class IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.asset_id IS E'Oracle Sequence Asset ID - Retrofitted';
COMMENT ON COLUMN fixed_assets.asset_location_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.asset_type IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.color IS E'Reference Comain (PPTY_COLOR)';
COMMENT ON COLUMN fixed_assets.cost IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN fixed_assets.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN fixed_assets.disposition_comment_text IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.disposition_corporate_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.disposition_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.disposition_person_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.disposition_type IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.life_span_code IS E'Reference Code (AST_LIFE)';
COMMENT ON COLUMN fixed_assets.make IS E'Reference Domain (AST_MAKE)';
COMMENT ON COLUMN fixed_assets.manufacture_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_assets.model IS E'Reference Domain (AST_MODEL)';
COMMENT ON COLUMN fixed_assets.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN fixed_assets.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN fixed_assets.serial_no IS E'Serial No';
COMMENT ON COLUMN fixed_assets.status IS E' - Retrofitted';

CREATE TABLE fixed_asset_events (
	fixed_asset_event_id bigint NOT NULL,
	asset_id bigint NOT NULL,
	event_type varchar(12) NOT NULL,
	reason_code varchar(12),
	schedule_from_date timestamp NOT NULL,
	schedule_to_date timestamp,
	status varchar(12) NOT NULL DEFAULT 'SCH',
	actual_start_date timestamp,
	actual_end_date timestamp,
	provider_corporate_id bigint,
	comment_text varchar(2000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE fixed_asset_events IS E'- Retrofitted';
COMMENT ON COLUMN fixed_asset_events.actual_end_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_events.actual_start_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_events.asset_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_events.comment_text IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_events.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN fixed_asset_events.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN fixed_asset_events.event_type IS E'Reference Code (AST_EVT)';
COMMENT ON COLUMN fixed_asset_events.fixed_asset_event_id IS E'Oracle Seqence Fixed_Asset_event_ID';
COMMENT ON COLUMN fixed_asset_events.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN fixed_asset_events.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN fixed_asset_events.provider_corporate_id IS E'AGY_LOC_TYPE = "DEALER" in Agency_Locations';
COMMENT ON COLUMN fixed_asset_events.reason_code IS E'Reference Code (AST_EVT_RSN)';
COMMENT ON COLUMN fixed_asset_events.schedule_from_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_events.schedule_to_date IS E' - Retrofitted';

CREATE TABLE fixed_asset_staffs (
	fixed_asset_assign_id bigint NOT NULL,
	asset_id bigint NOT NULL,
	staff_id integer NOT NULL,
	assign_date timestamp NOT NULL,
	assign_time timestamp NOT NULL,
	return_date timestamp,
	return_time timestamp,
	return_condition_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE fixed_asset_staffs IS E'Fixed Asset Assignment History- Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.asset_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.assign_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.assign_time IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.comment_text IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN fixed_asset_staffs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN fixed_asset_staffs.fixed_asset_assign_id IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN fixed_asset_staffs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN fixed_asset_staffs.return_condition_code IS E'Reference Domain (AST_COND) - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.return_date IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.return_time IS E' - Retrofitted';
COMMENT ON COLUMN fixed_asset_staffs.staff_id IS E' - Retrofitted';

CREATE TABLE floor_plan (
	floor_plan_id numeric(20) NOT NULL,
	image_id bigint,
	root_floor_plan char(1),
	parent_floor_plan numeric(20),
	agy_loc_id varchar(20),
	bread_crumb_nav_id numeric(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE floor_plan_back (
	floor_plan_id numeric(20) NOT NULL,
	image_id bigint,
	root_floor_plan char(1),
	parent_floor_plan numeric(20),
	agy_loc_id varchar(20),
	bread_crumb_nav_id numeric(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE formpaths (
	direction varchar(1) NOT NULL,
	originating_form varchar(20) NOT NULL,
	destination_form varchar(20) NOT NULL,
	caseload_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN formpaths.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN formpaths.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN formpaths.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN formpaths.modify_user_id IS E'The user who modifies the record';

CREATE TABLE form_accessible_forms (
	originating_form varchar(20) NOT NULL,
	destination_form varchar(20) NOT NULL,
	list_seq integer NOT NULL DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN form_accessible_forms.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN form_accessible_forms.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN form_accessible_forms.destination_form IS E' - Column already exists';
COMMENT ON COLUMN form_accessible_forms.list_seq IS E'Listing order of the code (It for controlling the order of listing in LOV).  If the value is "0", then it is taken as the default for this domain';
COMMENT ON COLUMN form_accessible_forms.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN form_accessible_forms.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN form_accessible_forms.originating_form IS E' - Column already exists';

CREATE TABLE freeze_disbursements (
	caseload_type varchar(12) NOT NULL,
	account_code integer NOT NULL,
	txn_type varchar(6) NOT NULL,
	freeze_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN freeze_disbursements.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN freeze_disbursements.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN freeze_disbursements.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN freeze_disbursements.modify_user_id IS E'The user who modifies the record';

CREATE TABLE gangs (
	gang_code varchar(12) NOT NULL,
	gang_name varchar(40),
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	parent_gang_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE gangs IS E'Information relating to maintenance of gang codes and descriptions.';
COMMENT ON COLUMN gangs.active_flag IS E'Active flag for code.';
COMMENT ON COLUMN gangs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN gangs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN gangs.expiry_date IS E' Deactivation date.';
COMMENT ON COLUMN gangs.gang_code IS E' Code representing a gang or gang faction.';
COMMENT ON COLUMN gangs.gang_name IS E'The description of the gang code.';
COMMENT ON COLUMN gangs.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN gangs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN gangs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN gangs.parent_gang_code IS E' A pointer back to the parent gang code ie. a faction associated with a gang.';
COMMENT ON COLUMN gangs.update_allowed_flag IS E'Flag indicating that code is protected from update.';

CREATE TABLE gang_characteristics (
	gang_code varchar(12) NOT NULL,
	gang_character_code varchar(12) NOT NULL,
	security_flag varchar(1) NOT NULL DEFAULT 'Y',
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE gang_characteristics IS E'Gang"s Characteristics';
COMMENT ON COLUMN gang_characteristics.comment_text IS E' - Column already exists';
COMMENT ON COLUMN gang_characteristics.gang_character_code IS E'Reference Code ( GANG_CHARACT )';
COMMENT ON COLUMN gang_characteristics.gang_code IS E' - Column already exists';
COMMENT ON COLUMN gang_characteristics.security_flag IS E' - Column already exists';

CREATE TABLE gang_non_associations (
	gang_code varchar(12) NOT NULL,
	ns_gang_code varchar(12) NOT NULL,
	ns_reason_code varchar(12) NOT NULL,
	ns_level_code varchar(12),
	internal_location_flag varchar(1) NOT NULL DEFAULT 'Y',
	transport_flag varchar(1) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE gang_non_associations IS E'Non-Association Among Gangs';
COMMENT ON COLUMN gang_non_associations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN gang_non_associations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN gang_non_associations.gang_code IS E'A code representing a gang or gang faction.';
COMMENT ON COLUMN gang_non_associations.internal_location_flag IS E'Flag siganliing non association internally - within jail.';
COMMENT ON COLUMN gang_non_associations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN gang_non_associations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN gang_non_associations.ns_gang_code IS E' Gang non-associations.';
COMMENT ON COLUMN gang_non_associations.ns_level_code IS E'Refrence Code ( NON_ASSO_LVL )';
COMMENT ON COLUMN gang_non_associations.ns_reason_code IS E'Refrence Code ( NON_ASSO_RSN ). Reason for non-association.';
COMMENT ON COLUMN gang_non_associations.transport_flag IS E'Non association flag for transport purposes outside jail.';

CREATE TABLE gl_transactions (
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL DEFAULT 99,
	gl_entry_seq integer NOT NULL DEFAULT 99,
	account_period_id integer NOT NULL,
	account_code integer NOT NULL,
	txn_entry_date timestamp NOT NULL,
	txn_type varchar(6) NOT NULL,
	txn_post_usage varchar(12) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint,
	offender_book_id bigint,
	txn_entry_amount decimal(11,2) NOT NULL,
	txn_entry_desc varchar(240),
	txn_reference_number varchar(12),
	bank_statement_date timestamp,
	recon_clear_flag varchar(1) DEFAULT 'N',
	txn_reversed_flag varchar(1) DEFAULT 'N',
	reversed_txn_id bigint DEFAULT 99,
	payee_person_id bigint,
	reversed_txn_entry_seq integer DEFAULT 99,
	reversed_gl_entry_seq integer DEFAULT 99,
	payee_corporate_id bigint,
	payee_name_text varchar(60),
	txn_object_code varchar(12),
	list_seq integer DEFAULT 99,
	txn_object_id bigint,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL,
	info_number varchar(32),
	deduction_id bigint,
	txn_entry_time timestamp,
	receipt_number varchar(13),
	reversal_reason_code varchar(12),
	txn_loc_id varchar(6),
	payee_clear_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
) ;
COMMENT ON TABLE gl_transactions IS E'Details surrounding general ledger transactions.';
COMMENT ON COLUMN gl_transactions.create_date IS E'The date this posting record was created.';
COMMENT ON COLUMN gl_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN gl_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN gl_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN gl_transactions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE gl_transactions_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	txn_id bigint,
	txn_entry_seq integer,
	gl_entry_seq integer,
	account_period_id integer,
	account_code integer,
	txn_entry_date timestamp,
	txn_type varchar(6),
	txn_post_usage varchar(12),
	caseload_id varchar(6),
	offender_id bigint,
	offender_book_id bigint,
	txn_entry_amount decimal(11,2),
	txn_entry_desc varchar(240),
	txn_reference_number varchar(12),
	bank_statement_date timestamp,
	recon_clear_flag varchar(1),
	txn_reversed_flag varchar(1),
	reversed_txn_id bigint,
	payee_person_id bigint,
	reversed_txn_entry_seq integer,
	reversed_gl_entry_seq integer,
	payee_corporate_id bigint,
	payee_name_text varchar(60),
	txn_object_code varchar(12),
	list_seq integer,
	txn_object_id bigint,
	create_user_id varchar(32) NOT NULL,
	create_date timestamp,
	info_number varchar(32),
	deduction_id bigint,
	txn_entry_time timestamp,
	receipt_number varchar(13),
	reversal_reason_code varchar(12),
	txn_loc_id varchar(6),
	payee_clear_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;

CREATE TABLE goodtime_rates (
	goodtime_type varchar(12) NOT NULL,
	rate_seq integer NOT NULL,
	min_sentence_units integer,
	units_allotted smallint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE goodtime_rates IS E'- Retrofitted';
COMMENT ON COLUMN goodtime_rates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN goodtime_rates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN goodtime_rates.goodtime_type IS E' - Column already exists';
COMMENT ON COLUMN goodtime_rates.min_sentence_units IS E' - Column already exists';
COMMENT ON COLUMN goodtime_rates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN goodtime_rates.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN goodtime_rates.rate_seq IS E' - Column already exists';
COMMENT ON COLUMN goodtime_rates.units_allotted IS E' - Column already exists';

CREATE TABLE goodtime_types (
	goodtime_type varchar(12) NOT NULL,
	sentence_unit_code varchar(12),
	unit_increment smallint NOT NULL,
	goodtime_unit_code varchar(12),
	initial_units_allotted smallint NOT NULL,
	incluse_exccluse_code varchar(12),
	description varchar(30),
	active_flag varchar(1),
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE goodtime_types IS E'- Retrofitted';
COMMENT ON COLUMN goodtime_types.active_flag IS E' - Column already exists';
COMMENT ON COLUMN goodtime_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN goodtime_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN goodtime_types.description IS E' - Column already exists';
COMMENT ON COLUMN goodtime_types.goodtime_type IS E' - Column already exists';
COMMENT ON COLUMN goodtime_types.goodtime_unit_code IS E'Reference Code ( PERIOD_TYPE )';
COMMENT ON COLUMN goodtime_types.incluse_exccluse_code IS E'Reference Code ( INC_EXC )';
COMMENT ON COLUMN goodtime_types.initial_units_allotted IS E' - Column already exists';
COMMENT ON COLUMN goodtime_types.list_seq IS E' - Column already exists';
COMMENT ON COLUMN goodtime_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN goodtime_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN goodtime_types.sentence_unit_code IS E'Reference Code ( PERIOD_TYPE )';
COMMENT ON COLUMN goodtime_types.unit_increment IS E' - Column already exists';

CREATE TABLE grievance_reasons (
	griev_type varchar(12) NOT NULL,
	griev_reason_code varchar(12) NOT NULL,
	description varchar(24),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	list_seq smallint,
	modified_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modified_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE grievance_txns (
	griev_type varchar(12) NOT NULL,
	txn_type varchar(12) NOT NULL,
	description varchar(24),
	days_respond smallint,
	doc_rsp_flag varchar(1),
	off_rsp_flag varchar(1),
	ig_rsp_flag varchar(1),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	list_seq smallint,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE grievance_types (
	griev_type varchar(12) NOT NULL,
	description varchar(24),
	staff_involved_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modified_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modified_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	list_seq smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE grouped_obligations (
	deduction_type varchar(6) NOT NULL,
	group_id bigint NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	sanction_notice_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN grouped_obligations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN grouped_obligations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN grouped_obligations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN grouped_obligations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN grouped_obligations.sanction_notice_code IS E'Foreign key to Sanction_notice"s sanction_notice_code..';

CREATE TABLE hdc_board_decisions (
	decision_seq integer NOT NULL,
	hdc_request_referral_id bigint NOT NULL,
	comment_text varchar(4000) NOT NULL,
	board_attendees varchar(240) NOT NULL,
	chair_staff_id bigint NOT NULL,
	board_recommendation varchar(12),
	attach_comment_flag varchar(1),
	successful_rotl_flag varchar(1),
	offending_behaviour_flag varchar(1),
	home_circumstances_flag varchar(1),
	medical_officer_comment_flag varchar(1),
	probation_comment_flag varchar(1),
	throughcare_team_comment_flag varchar(1),
	wing_officer_comment_flag varchar(1),
	likely_to_fail_curfew_flag varchar(1),
	reoffending_probability_flag varchar(1),
	no_suitable_accommodation_flag varchar(1),
	threat_to_public_safety_flag varchar(1),
	other_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	message_id varchar(64),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE hdc_board_decisions IS E'HDC board decisions ';
COMMENT ON COLUMN hdc_board_decisions.attach_comment_flag IS E'When Y, comments are pulled into the IWP document.';
COMMENT ON COLUMN hdc_board_decisions.board_attendees IS E'Board Attendees.';
COMMENT ON COLUMN hdc_board_decisions.board_recommendation IS E'Recommendation from the Board.';
COMMENT ON COLUMN hdc_board_decisions.chair_staff_id IS E'Staff ID of the person who has chaired the Board.';
COMMENT ON COLUMN hdc_board_decisions.comment_text IS E'Comments entered by the Board.';
COMMENT ON COLUMN hdc_board_decisions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN hdc_board_decisions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN hdc_board_decisions.decision_seq IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN hdc_board_decisions.hdc_request_referral_id IS E'An Oracle Sequence for each referal record created in hdc_request_referrals table.';
COMMENT ON COLUMN hdc_board_decisions.home_circumstances_flag IS E'Flag to indicate for Home Circumstances.';
COMMENT ON COLUMN hdc_board_decisions.likely_to_fail_curfew_flag IS E'Flag to indicate for likely to fail curfew.';
COMMENT ON COLUMN hdc_board_decisions.medical_officer_comment_flag IS E'Flag to indicate for Medical officer comments.';
COMMENT ON COLUMN hdc_board_decisions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN hdc_board_decisions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN hdc_board_decisions.no_suitable_accommodation_flag IS E'Flag to indicate for no suitable accommodation.';
COMMENT ON COLUMN hdc_board_decisions.offending_behaviour_flag IS E'Flag to indicate for Offending Behaviour.';
COMMENT ON COLUMN hdc_board_decisions.other_flag IS E'Flag to indicate for others.';
COMMENT ON COLUMN hdc_board_decisions.probation_comment_flag IS E'Flag to indicate for Probation officer comment.';
COMMENT ON COLUMN hdc_board_decisions.reoffending_probability_flag IS E'Flag to indicate for reoffending probability.';
COMMENT ON COLUMN hdc_board_decisions.successful_rotl_flag IS E'Flag to indicate for Successful release on Temporary License.';
COMMENT ON COLUMN hdc_board_decisions.threat_to_public_safety_flag IS E'Flag to indicate for threat to public safety.';
COMMENT ON COLUMN hdc_board_decisions.throughcare_team_comment_flag IS E'Flag to indicate for through care team comment.';
COMMENT ON COLUMN hdc_board_decisions.wing_officer_comment_flag IS E'Flag to indicate for wing officer comment.';

CREATE TABLE hdc_governor_decisions (
	decision_seq integer NOT NULL,
	hdc_request_referral_id bigint NOT NULL,
	comment_text varchar(4000) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	governors_decision varchar(12),
	governors_staff_id integer,
	attach_comment_flag varchar(1),
	referral_to varchar(12),
	referred_staff_id integer,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	message_id varchar(64),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE hdc_governor_decisions IS E'The governor decisions of HDC case';
COMMENT ON COLUMN hdc_governor_decisions.attach_comment_flag IS E'When Y, comments are pulled into the IWP document.';
COMMENT ON COLUMN hdc_governor_decisions.comment_text IS E'Comments entered by the Governor.';
COMMENT ON COLUMN hdc_governor_decisions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN hdc_governor_decisions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN hdc_governor_decisions.decision_seq IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN hdc_governor_decisions.governors_decision IS E'Decision taken by the Government.';
COMMENT ON COLUMN hdc_governor_decisions.governors_staff_id IS E'Staff Id of the Governor who has taken the Decision.';
COMMENT ON COLUMN hdc_governor_decisions.hdc_request_referral_id IS E'An Oracle Sequence for each referal record created in hdc_request_referrals table.';
COMMENT ON COLUMN hdc_governor_decisions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN hdc_governor_decisions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN hdc_governor_decisions.referral_to IS E'department whom it is referred to.';
COMMENT ON COLUMN hdc_governor_decisions.referred_staff_id IS E'Staff Id of the person who has referred.';

CREATE TABLE hdc_prison_staff_comments (
	offender_book_id bigint,
	comment_seq integer NOT NULL,
	comment_text varchar(4000) NOT NULL,
	suitable_flag varchar(1) NOT NULL,
	staff_id integer,
	offender_curfew_id bigint NOT NULL,
	date_created timestamp DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE hdc_prison_staff_comments IS E'The Prison officer''s comments';
COMMENT ON COLUMN hdc_prison_staff_comments.comment_seq IS E'A sequence to determine the running number of comment record per offender.';
COMMENT ON COLUMN hdc_prison_staff_comments.comment_text IS E'Comment Text.';
COMMENT ON COLUMN hdc_prison_staff_comments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN hdc_prison_staff_comments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN hdc_prison_staff_comments.date_created IS E'The date when the record is created';
COMMENT ON COLUMN hdc_prison_staff_comments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN hdc_prison_staff_comments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN hdc_prison_staff_comments.offender_book_id IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN hdc_prison_staff_comments.offender_curfew_id IS E'The offender curfew ID';
COMMENT ON COLUMN hdc_prison_staff_comments.staff_id IS E'Staff who added comments.';
COMMENT ON COLUMN hdc_prison_staff_comments.suitable_flag IS E'An Indicator whether this offender is suitable to go for Home Detention or not.';

CREATE TABLE hdc_prob_staff_comments (
	hdc_request_referral_id bigint NOT NULL,
	comment_seq integer NOT NULL,
	comment_text varchar(4000) NOT NULL,
	suitable_flag varchar(1) NOT NULL,
	staff_id integer,
	date_created timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE hdc_prob_staff_comments IS E'The probation officers'' comments';
COMMENT ON COLUMN hdc_prob_staff_comments.comment_seq IS E'A Sequence for each comment record created.';
COMMENT ON COLUMN hdc_prob_staff_comments.comment_text IS E'Probation officer comments.';
COMMENT ON COLUMN hdc_prob_staff_comments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN hdc_prob_staff_comments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN hdc_prob_staff_comments.date_created IS E'The date the record is created';
COMMENT ON COLUMN hdc_prob_staff_comments.hdc_request_referral_id IS E'An Oracle Sequence for each referal record created in hdc_request_referrals table.';
COMMENT ON COLUMN hdc_prob_staff_comments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN hdc_prob_staff_comments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN hdc_prob_staff_comments.staff_id IS E'Staff Id of the Probation officer who is entering the comments.';
COMMENT ON COLUMN hdc_prob_staff_comments.suitable_flag IS E'An Indicator whether this offender is suitable to go for Home Detention or not.';

CREATE TABLE hdc_prob_staff_responses (
	hdc_request_referral_id bigint NOT NULL,
	response_seq integer NOT NULL,
	response_date timestamp NOT NULL,
	staff_id integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE hdc_prob_staff_responses IS E'The probation officers'' response';
COMMENT ON COLUMN hdc_prob_staff_responses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN hdc_prob_staff_responses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN hdc_prob_staff_responses.hdc_request_referral_id IS E'An Oracle Sequence for each referal record created in hdc_request_referrals table.';
COMMENT ON COLUMN hdc_prob_staff_responses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN hdc_prob_staff_responses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN hdc_prob_staff_responses.response_date IS E'Date on which Probation officer responded.';
COMMENT ON COLUMN hdc_prob_staff_responses.response_seq IS E'The list order';
COMMENT ON COLUMN hdc_prob_staff_responses.staff_id IS E'Staff ID of the Probation officer responded.';

CREATE TABLE hdc_request_referrals (
	hdc_request_referral_id bigint NOT NULL,
	referral_to varchar(12) NOT NULL,
	referred_by varchar(12) NOT NULL,
	offender_book_id bigint NOT NULL,
	response_due_date timestamp,
	referral_information varchar(240),
	staff_id integer,
	contact_of_addr_by_letter varchar(1),
	contact_of_addr_by_visit varchar(1),
	contact_of_addr_by_telephone varchar(1),
	referral_date timestamp NOT NULL,
	victim_issues_flag varchar(1),
	offender_curfew_id bigint NOT NULL,
	received_date timestamp,
	response_date timestamp,
	response_staff_id bigint,
	parent_hdc_request_referral_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	message_id varchar(64),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE hdc_request_referrals IS E'The offender curfew request referrals';
COMMENT ON COLUMN hdc_request_referrals.contact_of_addr_by_letter IS E'An Indicator whether the probation officer has contacted the offender by letter.';
COMMENT ON COLUMN hdc_request_referrals.contact_of_addr_by_telephone IS E'An Indicator whether the probation officer has contacted the offender by telephone.';
COMMENT ON COLUMN hdc_request_referrals.contact_of_addr_by_visit IS E'An Indicator whether the probation officer has contacted the offender by visit.';
COMMENT ON COLUMN hdc_request_referrals.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN hdc_request_referrals.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN hdc_request_referrals.hdc_request_referral_id IS E'An Oracle Sequence for each referal record created.';
COMMENT ON COLUMN hdc_request_referrals.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN hdc_request_referrals.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN hdc_request_referrals.offender_book_id IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN hdc_request_referrals.offender_curfew_id IS E'The curfew ID';
COMMENT ON COLUMN hdc_request_referrals.parent_hdc_request_referral_id IS E'The Prior Request Referral';
COMMENT ON COLUMN hdc_request_referrals.received_date IS E'The date when the request is received';
COMMENT ON COLUMN hdc_request_referrals.referral_date IS E'The date of the referral';
COMMENT ON COLUMN hdc_request_referrals.referral_information IS E'Referral Information.';
COMMENT ON COLUMN hdc_request_referrals.referral_to IS E'Whom it was referred to?.';
COMMENT ON COLUMN hdc_request_referrals.referred_by IS E'Whom it was referred by?.';
COMMENT ON COLUMN hdc_request_referrals.response_date IS E'The date of the response';
COMMENT ON COLUMN hdc_request_referrals.response_due_date IS E'Response Due Date.';
COMMENT ON COLUMN hdc_request_referrals.response_staff_id IS E'The staff who response';
COMMENT ON COLUMN hdc_request_referrals.staff_id IS E'Staff ID of the person who has referred it.';
COMMENT ON COLUMN hdc_request_referrals.victim_issues_flag IS E'If there are issues with the victim';

CREATE TABLE health_class_restrict_codes (
	health_type varchar(12) NOT NULL,
	class_restrict_type varchar(12) NOT NULL,
	code varchar(20) NOT NULL,
	description varchar(100),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq smallint,
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE ho_codes (
	ho_code varchar(12) NOT NULL,
	description varchar(240) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE ho_codes IS E'This table will store the HO codes and Description of the HO codes';
COMMENT ON COLUMN ho_codes.active_flag IS E'Active code if it is ''Y'', Inactive code if it is ''N''';
COMMENT ON COLUMN ho_codes.create_date IS E'When the record was created';
COMMENT ON COLUMN ho_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN ho_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN ho_codes.description IS E'It is the description of the HO Code';
COMMENT ON COLUMN ho_codes.expiry_date IS E'Expiry Date of the Code';
COMMENT ON COLUMN ho_codes.ho_code IS E'It is a combination of HO Class/HO Sub Class';
COMMENT ON COLUMN ho_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN ho_codes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE ids_passwords (
	username varchar(50) NOT NULL,
	password varchar(50),
	user_created varchar(50) DEFAULT 'user',
	date_created timestamp DEFAULT LOCALTIMESTAMP,
	retries bigint DEFAULT 0,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ids_search_files (
	search_system_id bigint NOT NULL,
	file_name varchar(256) NOT NULL,
	date_created timestamp DEFAULT LOCALTIMESTAMP,
	user_created varchar(50) DEFAULT 'USER',
	search_criteria varchar(2000),
	search_reference varchar(256),
	search_type varchar(15) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ids_search_parameters (
	search_parameter_id bigint NOT NULL,
	table_name varchar(30) NOT NULL,
	column_name varchar(60) NOT NULL,
	user_label varchar(40) NOT NULL,
	list_seq smallint,
	parameter_format varchar(12) NOT NULL,
	format_value_1 varchar(30),
	format_value_2 varchar(30),
	format_value_3 varchar(30),
	partial_script varchar(2000),
	offender_search_col varchar(1) NOT NULL,
	search_type varchar(12),
	group_name varchar(60),
	parent_search_parameter_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ids_search_results (
	offender_book_id bigint NOT NULL,
	offender_id_display bigint NOT NULL,
	image_id bigint,
	name varchar(150),
	sex varchar(50),
	birth_date timestamp,
	eye_color varchar(50),
	hair_color varchar(50),
	height_ft integer,
	height_in integer,
	weight_lbs integer,
	search_system_id bigint,
	selected varchar(15),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ids_temp (
	id_value numeric(38),
	name_array varchar(255),
	value_array varchar(255),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE ids_tmp (
	display_text varchar(240),
	profile_desc varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE iep_levels (
	iep_level varchar(12) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	user_id varchar(40),
	default_flag varchar(1) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'NULL',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	remand_transfer_limit decimal(12,2),
	remand_spend_limit decimal(12,2),
	convicted_transfer_limit decimal(12,2),
	convicted_spend_limit decimal(12,2),
	record_user_id varchar(30) DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN iep_levels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iep_levels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iep_levels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iep_levels.modify_user_id IS E'The user who modifies the record';

CREATE TABLE images (
	image_id bigint NOT NULL,
	capture_date timestamp NOT NULL,
	image_object_type varchar(12) NOT NULL,
	image_object_id bigint NOT NULL,
	image_object_seq integer,
	image_view_type varchar(12),
	image_thumbnail bytea,
	active_flag varchar(1) DEFAULT 'Y',
	orientation_type varchar(12),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_IMAGES;

CREATE TABLE image_originals (
	image_id bigint NOT NULL,
	image_original bytea,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	image_full bytea
)  TABLESPACE TAG_IMAGE_ORIGINALS;

CREATE TABLE image_properties (
	image_property_id bigint NOT NULL,
	image_id bigint NOT NULL,
	property varchar(12),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_IMAGES;

CREATE TABLE image_reports (
	report_name char(15) NOT NULL,
	object_name char(25) NOT NULL,
	active_flag char(1),
	type char(10) NOT NULL,
	module_name varchar(20),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN image_reports.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN image_reports.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN image_reports.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN image_reports.modify_user_id IS E'The user who modifies the record';

CREATE TABLE image_report_attributes (
	report_name char(15) NOT NULL,
	object_name char(25) NOT NULL,
	attribute_name char(25) NOT NULL,
	value char(40) NOT NULL,
	active_flag char(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN image_report_attributes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN image_report_attributes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN image_report_attributes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN image_report_attributes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE image_report_columns (
	report_name char(15) NOT NULL,
	object_name char(25) NOT NULL,
	profile_type char(12) NOT NULL,
	active_flag char(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN image_report_columns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN image_report_columns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN image_report_columns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN image_report_columns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE imp_agy_billing_details (
	imp_agy_billing_detail_id bigint NOT NULL,
	imp_agy_billing_master_id bigint NOT NULL,
	bill_to_agency_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	billing_type varchar(12) NOT NULL,
	shared_rate decimal(6,2),
	duration_type varchar(12),
	duration_number integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	delay_days integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN imp_agy_billing_details.billing_type IS E'DOMAIN (BILL_TYPE)';
COMMENT ON COLUMN imp_agy_billing_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN imp_agy_billing_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN imp_agy_billing_details.delay_days IS E'Allows users to define  the number of days of delay between the definition of the offender imprisonment status and the start of billing.
';
COMMENT ON COLUMN imp_agy_billing_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN imp_agy_billing_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE imp_agy_billing_masters (
	imp_agy_billing_master_id bigint NOT NULL,
	inst_location_id varchar(6) NOT NULL,
	imprisonment_status varchar(12) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	sentence_calc_type varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN imp_agy_billing_masters.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN imp_agy_billing_masters.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN imp_agy_billing_masters.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN imp_agy_billing_masters.modify_user_id IS E'The user who modifies the record';

CREATE TABLE incident_cases (
	incident_case_id bigint NOT NULL,
	reported_staff_id integer NOT NULL,
	incident_date timestamp NOT NULL,
	incident_time timestamp NOT NULL,
	incident_status varchar(12) NOT NULL,
	response_locked_flag varchar(1) NOT NULL DEFAULT 'N',
	incident_details varchar(4000),
	report_date timestamp NOT NULL,
	report_time timestamp NOT NULL,
	agy_loc_id varchar(6),
	incident_title varchar(240),
	incident_type varchar(12) NOT NULL,
	questionnaire_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	follow_up_date timestamp,
	seal_flag varchar(1),
	lock_flag varchar(1) DEFAULT 'N'
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE incident_cases IS E'Agency location incident cases (confidential reports)';
COMMENT ON COLUMN incident_cases.agy_loc_id IS E'FK to agency locations';
COMMENT ON COLUMN incident_cases.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_cases.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_cases.follow_up_date IS E'The followup date of the case';
COMMENT ON COLUMN incident_cases.incident_case_id IS E'Agency incident ID NOMIS Log number';
COMMENT ON COLUMN incident_cases.incident_date IS E'Incident Date';
COMMENT ON COLUMN incident_cases.incident_details IS E'The Occurence Details';
COMMENT ON COLUMN incident_cases.incident_status IS E'The status of the incident.  Reference Code ( IR_STS )';
COMMENT ON COLUMN incident_cases.incident_time IS E'Incident Time';
COMMENT ON COLUMN incident_cases.incident_title IS E'The title of the incident case';
COMMENT ON COLUMN incident_cases.incident_type IS E'The type of the incident.  Reference Code (IR_TYPE)';
COMMENT ON COLUMN incident_cases.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_cases.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_cases.questionnaire_id IS E'The questionnaire taken for the incident report.  FK to questionnaires';
COMMENT ON COLUMN incident_cases.report_date IS E'The report date of the incident';
COMMENT ON COLUMN incident_cases.report_time IS E'The report time of the incident';
COMMENT ON COLUMN incident_cases.reported_staff_id IS E'The staff who report the incident';
COMMENT ON COLUMN incident_cases.response_locked_flag IS E'If the response completed ?';

CREATE TABLE incident_case_parties (
	incident_case_id bigint NOT NULL,
	party_seq integer NOT NULL DEFAULT 1,
	participation_role varchar(12) NOT NULL,
	offender_book_id bigint,
	staff_id integer,
	person_id bigint,
	comment_text varchar(240),
	outcome_code varchar(12),
	record_staff_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE incident_case_parties IS E'The parties involvement in an incident cases.  ';
COMMENT ON COLUMN incident_case_parties.comment_text IS E'The general comment text';
COMMENT ON COLUMN incident_case_parties.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_case_parties.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_case_parties.incident_case_id IS E'Incident ID';
COMMENT ON COLUMN incident_case_parties.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_case_parties.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_case_parties.offender_book_id IS E'FK : Offender Bookings';
COMMENT ON COLUMN incident_case_parties.outcome_code IS E'The outcome the party.  Reference Code (IR_OUTCOME)';
COMMENT ON COLUMN incident_case_parties.participation_role IS E'The role of the participation parties. Reference Code (IR_STF_PART), (IR_OFF_PART)';
COMMENT ON COLUMN incident_case_parties.party_seq IS E'Sequence';
COMMENT ON COLUMN incident_case_parties.person_id IS E'FK : Persons';
COMMENT ON COLUMN incident_case_parties.record_staff_id IS E'The staff who input the record';
COMMENT ON COLUMN incident_case_parties.staff_id IS E'FK : Staff Members';

CREATE TABLE incident_case_questions (
	incident_case_id bigint NOT NULL,
	question_seq integer NOT NULL,
	questionnaire_que_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE incident_case_questions IS E'The question answered in the incident case';
COMMENT ON COLUMN incident_case_questions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_case_questions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_case_questions.incident_case_id IS E'FK to the incident case';
COMMENT ON COLUMN incident_case_questions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_case_questions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_case_questions.question_seq IS E'The question no as part of the primary key';
COMMENT ON COLUMN incident_case_questions.questionnaire_que_id IS E'The questions';

CREATE TABLE incident_case_requirements (
	incident_case_id bigint NOT NULL,
	requirement_seq integer NOT NULL DEFAULT 1,
	record_staff_id bigint NOT NULL,
	record_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	comment_text varchar(240),
	agy_loc_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE incident_case_requirements IS E'The Incident Case Requirement log';
COMMENT ON COLUMN incident_case_requirements.agy_loc_id IS E'The agency location who made the request.';
COMMENT ON COLUMN incident_case_requirements.comment_text IS E'The comment text';
COMMENT ON COLUMN incident_case_requirements.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_case_requirements.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_case_requirements.incident_case_id IS E'FK to the Incident case';
COMMENT ON COLUMN incident_case_requirements.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_case_requirements.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_case_requirements.record_date IS E'The requirement record date';
COMMENT ON COLUMN incident_case_requirements.record_staff_id IS E'The staff who records the requirements';
COMMENT ON COLUMN incident_case_requirements.requirement_seq IS E'The requirement seq';

CREATE TABLE incident_case_responses (
	incident_case_id bigint NOT NULL,
	question_seq integer NOT NULL,
	response_seq integer NOT NULL,
	response_date timestamp,
	response_comment_text varchar(240),
	record_staff_id bigint NOT NULL,
	questionnaire_ans_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN incident_case_responses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_case_responses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_case_responses.incident_case_id IS E'The incident case';
COMMENT ON COLUMN incident_case_responses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_case_responses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_case_responses.question_seq IS E'The question seq';
COMMENT ON COLUMN incident_case_responses.questionnaire_ans_id IS E'FK to the answer of the question';
COMMENT ON COLUMN incident_case_responses.record_staff_id IS E'The staff who input the response';
COMMENT ON COLUMN incident_case_responses.response_comment_text IS E'Part of the response';
COMMENT ON COLUMN incident_case_responses.response_date IS E'Part of the response';
COMMENT ON COLUMN incident_case_responses.response_seq IS E'The response';

CREATE TABLE incident_offender_weapons (
	agency_incident_id bigint NOT NULL,
	party_seq integer NOT NULL DEFAULT 1,
	offender_book_id bigint NOT NULL,
	weapons_used varchar(40) NOT NULL,
	weapons_detail varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE incident_questionnaire_hty (
	incident_questionnaire_id bigint NOT NULL,
	incident_case_id bigint NOT NULL,
	questionnaire_id bigint NOT NULL,
	change_date timestamp NOT NULL,
	change_staff_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE incident_questionnaire_hty IS E'The historical records of incident case questionniares ';
COMMENT ON COLUMN incident_questionnaire_hty.change_date IS E'The date of the incident type change';
COMMENT ON COLUMN incident_questionnaire_hty.change_staff_id IS E'The staff who made the change';
COMMENT ON COLUMN incident_questionnaire_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_questionnaire_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_questionnaire_hty.incident_case_id IS E'FK to incident case';
COMMENT ON COLUMN incident_questionnaire_hty.incident_questionnaire_id IS E'PK of the incident questionnaire history';
COMMENT ON COLUMN incident_questionnaire_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_questionnaire_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_questionnaire_hty.questionnaire_id IS E'Reference Code (INC_TYPE)';

CREATE TABLE incident_que_question_hty (
	incident_questionnaire_id bigint NOT NULL,
	question_seq integer NOT NULL,
	questionnaire_que_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE incident_que_question_hty IS E'The questions of incident case questionnaire history';
COMMENT ON COLUMN incident_que_question_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_que_question_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_que_question_hty.incident_questionnaire_id IS E'FK to the incident case';
COMMENT ON COLUMN incident_que_question_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_que_question_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_que_question_hty.question_seq IS E'The question no as part of the primary key';
COMMENT ON COLUMN incident_que_question_hty.questionnaire_que_id IS E'The questions';

CREATE TABLE incident_que_response_hty (
	incident_questionnaire_id bigint NOT NULL,
	question_seq integer NOT NULL,
	response_seq integer NOT NULL,
	response_date timestamp,
	response_comment_text varchar(240),
	record_staff_id bigint NOT NULL,
	questionnaire_ans_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE incident_que_response_hty IS E'The reponse of incident case questionnaire history';
COMMENT ON COLUMN incident_que_response_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_que_response_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_que_response_hty.incident_questionnaire_id IS E'The PK of the incident questionnaire';
COMMENT ON COLUMN incident_que_response_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_que_response_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_que_response_hty.question_seq IS E'The question seq';
COMMENT ON COLUMN incident_que_response_hty.questionnaire_ans_id IS E'FK to the answer of the question';
COMMENT ON COLUMN incident_que_response_hty.record_staff_id IS E'The staff who input the response';
COMMENT ON COLUMN incident_que_response_hty.response_comment_text IS E'Part of the response';
COMMENT ON COLUMN incident_que_response_hty.response_date IS E'Part of the response';
COMMENT ON COLUMN incident_que_response_hty.response_seq IS E'The response';

CREATE TABLE incident_staff_equipments (
	agency_incident_id bigint NOT NULL,
	party_seq integer NOT NULL DEFAULT 1,
	staff_id bigint NOT NULL,
	equipment_used varchar(40) NOT NULL,
	equipment_detail varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE incident_staff_forces (
	sequence_number smallint NOT NULL,
	agency_incident_id bigint NOT NULL,
	party_seq integer NOT NULL DEFAULT 1,
	staff_id bigint NOT NULL,
	force_used varchar(40) NOT NULL,
	force_detail varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE incident_staff_reports (
	incident_report_id bigint NOT NULL,
	staff_id bigint NOT NULL,
	report_date timestamp NOT NULL,
	report_time timestamp NOT NULL,
	report_type varchar(4000) NOT NULL,
	lock_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	agency_incident_id bigint NOT NULL,
	party_seq integer NOT NULL DEFAULT 1,
	seal_flag varchar(1),
	incident_details varchar(4000)
)  TABLESPACE TAG_DATA;

CREATE TABLE incident_statuses (
	code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	list_seq integer DEFAULT 1,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	standard_user_flag varchar(1) NOT NULL DEFAULT 'N',
	enhanced_user_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE incident_statuses IS E'The status code for incident cases. ';
COMMENT ON COLUMN incident_statuses.active_flag IS E'Is the code active ?';
COMMENT ON COLUMN incident_statuses.code IS E'Reference code';
COMMENT ON COLUMN incident_statuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN incident_statuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN incident_statuses.description IS E'Description of the code';
COMMENT ON COLUMN incident_statuses.enhanced_user_flag IS E'Accessible by Enhanced User ?';
COMMENT ON COLUMN incident_statuses.expiry_date IS E'If the code allowed to changed ( It is for controlling the code)';
COMMENT ON COLUMN incident_statuses.list_seq IS E'Listing order of the code (It for controlling the order of listing in LOV).  If the value is "0", then it is taken as the default for this domain';
COMMENT ON COLUMN incident_statuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN incident_statuses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN incident_statuses.standard_user_flag IS E'Accessible by All user ?';

CREATE TABLE institution_mini_balances (
	caseload_id varchar(6) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	account_code integer NOT NULL,
	minimum_account_balance decimal(11,2),
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer DEFAULT 99,
	ind_days smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN institution_mini_balances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN institution_mini_balances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN institution_mini_balances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN institution_mini_balances.modify_user_id IS E'The user who modifies the record';

CREATE TABLE integration_input (
	input_request_id bigint,
	input_payload varchar(4000),
	output_payload varchar(4000),
	action varchar(10),
	status varchar(10),
	input_request_type varchar(10),
	create_date timestamp,
	modify_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE interest_transaction_types (
	trust_account_code integer NOT NULL,
	txn_type varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN interest_transaction_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN interest_transaction_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN interest_transaction_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN interest_transaction_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE interface_errors (
	interface_timestamp timestamp NOT NULL,
	interface_name varchar(100) NOT NULL,
	application_marker varchar(20),
	error_text varchar(600),
	record_identifier varchar(20),
	record_identifier_type varchar(20),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE internal_location_usages (
	internal_location_usage_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	internal_location_usage varchar(12) NOT NULL,
	event_sub_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE internal_location_usages IS E'The agency internal location usages';
COMMENT ON COLUMN internal_location_usages.agy_loc_id IS E'The agency location of the usage';
COMMENT ON COLUMN internal_location_usages.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN internal_location_usages.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN internal_location_usages.event_sub_type IS E'The sub usage type.  Reference Code(Event_Subtyp)';
COMMENT ON COLUMN internal_location_usages.internal_location_usage IS E'The usage type.  Reference Code(ILOC_USG)';
COMMENT ON COLUMN internal_location_usages.internal_location_usage_id IS E'The unique identifier of the agency location usage';
COMMENT ON COLUMN internal_location_usages.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN internal_location_usages.modify_user_id IS E'The user who modifies the record';

CREATE TABLE internal_schedule_reasons (
	internal_schedule_type varchar(12) NOT NULL,
	internal_schedule_rsn_code varchar(12) NOT NULL,
	description varchar(40),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer DEFAULT 1,
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE internal_schedule_reasons IS E'- Retrofitted';
COMMENT ON COLUMN internal_schedule_reasons.active_flag IS E' - Column already exists';
COMMENT ON COLUMN internal_schedule_reasons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN internal_schedule_reasons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN internal_schedule_reasons.description IS E' - Column already exists';
COMMENT ON COLUMN internal_schedule_reasons.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN internal_schedule_reasons.internal_schedule_rsn_code IS E'Refrence Code ( INT_SCH_RSN )';
COMMENT ON COLUMN internal_schedule_reasons.internal_schedule_type IS E'Refrence Code ( INT_SCH_TYPE)';
COMMENT ON COLUMN internal_schedule_reasons.list_seq IS E' - Column already exists';
COMMENT ON COLUMN internal_schedule_reasons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN internal_schedule_reasons.modify_user_id IS E'The user who modifies the record';

CREATE TABLE internal_status_reasons (
	internal_status varchar(12) NOT NULL,
	int_sts_reason_code varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN internal_status_reasons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN internal_status_reasons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN internal_status_reasons.int_sts_reason_code IS E'Reference Code ( INT_STS_RSN )';
COMMENT ON COLUMN internal_status_reasons.internal_status IS E'Reference Code ( INT_STS )';
COMMENT ON COLUMN internal_status_reasons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN internal_status_reasons.modify_user_id IS E'The user who modifies the record';

CREATE TABLE internet_addresses (
	internet_address_id bigint NOT NULL,
	owner_class varchar(12) NOT NULL,
	owner_id bigint,
	owner_seq integer,
	owner_code varchar(12),
	internet_address_class varchar(12) NOT NULL DEFAULT 'EMAIL',
	internet_address varchar(240) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE internet_addresses IS E'The table for common internet addresses, including both email and website.  ';
COMMENT ON COLUMN internet_addresses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN internet_addresses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN internet_addresses.internet_address IS E'The internet address';
COMMENT ON COLUMN internet_addresses.internet_address_class IS E'Ref Domain (IADDR_CLASS)';
COMMENT ON COLUMN internet_addresses.internet_address_id IS E'PK of the internet addess ID';
COMMENT ON COLUMN internet_addresses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN internet_addresses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN internet_addresses.owner_class IS E'Ref Domain (OWNER_CLASS)';
COMMENT ON COLUMN internet_addresses.owner_code IS E'FK to the Owner Code';
COMMENT ON COLUMN internet_addresses.owner_id IS E'FK to the Owner ID';
COMMENT ON COLUMN internet_addresses.owner_seq IS E'FK to the Owner Seq';

CREATE TABLE int_loc_usage_locations (
	internal_location_usage_id bigint NOT NULL,
	internal_location_id bigint NOT NULL,
	capacity integer,
	usage_location_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	list_seq integer,
	usage_location_id bigint NOT NULL,
	parent_usage_location_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE int_loc_usage_locations IS E'The internal locations of the agency internal location usage';
COMMENT ON COLUMN int_loc_usage_locations.capacity IS E'The capacity of the internal location in the context of the usage';
COMMENT ON COLUMN int_loc_usage_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN int_loc_usage_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN int_loc_usage_locations.internal_location_id IS E'The agency internal location ID';
COMMENT ON COLUMN int_loc_usage_locations.internal_location_usage_id IS E'The primary agency internal location usage';
COMMENT ON COLUMN int_loc_usage_locations.list_seq IS E'The order of the list';
COMMENT ON COLUMN int_loc_usage_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN int_loc_usage_locations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN int_loc_usage_locations.usage_location_type IS E'The internal location type : Reference Code(ILOC_TYPE)';

CREATE TABLE item_cat_override_accts (
	stock_item_cat varchar(12) NOT NULL,
	description varchar(40),
	sales_override_ac integer,
	cogs_override_ac integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE item_transaction_statii (
	item_status_from varchar(12) NOT NULL,
	item_status_to varchar(12) NOT NULL,
	list_seq integer,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE item_transaction_statii IS E'Reasons associated with movement types.';
COMMENT ON COLUMN item_transaction_statii.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN item_transaction_statii.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN item_transaction_statii.item_status_from IS E'Reference Code ( PPTY_TXN_TYP )';
COMMENT ON COLUMN item_transaction_statii.item_status_to IS E'Reference Code ( PPTY_TXN_STA ). The status for the movement.';
COMMENT ON COLUMN item_transaction_statii.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN item_transaction_statii.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN item_transaction_statii.modify_user_id IS E'The user who modifies the record';

CREATE TABLE iwp_bookmarks (
	bookmark_name varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	bookmark_type varchar(12) NOT NULL DEFAULT 'TEXT',
	description varchar(256),
	sql_text varchar(4000) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	user_created varchar(30) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	expiry_date timestamp,
	sql_verified_flag varchar(1) NOT NULL DEFAULT 'N',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_bookmarks IS E'The bookmark';
COMMENT ON COLUMN iwp_bookmarks.active_flag IS E'? if the bookmark actively used';
COMMENT ON COLUMN iwp_bookmarks.bookmark_name IS E'The name of the bookmark';
COMMENT ON COLUMN iwp_bookmarks.bookmark_type IS E'Bookmark type';
COMMENT ON COLUMN iwp_bookmarks.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_bookmarks.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_bookmarks.date_created IS E'User field : The record creation date';
COMMENT ON COLUMN iwp_bookmarks.description IS E'Description';
COMMENT ON COLUMN iwp_bookmarks.expiry_date IS E'The expiry Date';
COMMENT ON COLUMN iwp_bookmarks.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_bookmarks.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_bookmarks.sql_text IS E'The SQL text';
COMMENT ON COLUMN iwp_bookmarks.sql_verified_flag IS E'? If the SQL verified';
COMMENT ON COLUMN iwp_bookmarks.user_created IS E'User field : The user who creates the record';

CREATE TABLE iwp_bookmarks_groups (
	template_id bigint NOT NULL,
	bookmark_name varchar(50) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN iwp_bookmarks_groups.bookmark_name IS E'The name of the bookmark';
COMMENT ON COLUMN iwp_bookmarks_groups.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_bookmarks_groups.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_bookmarks_groups.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_bookmarks_groups.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_bookmarks_groups.template_id IS E'The ID of the template';

CREATE TABLE iwp_bookmark_parameters (
	parameter_name varchar(50) NOT NULL,
	parameter_type varchar(1) NOT NULL DEFAULT 'S',
	description varchar(256),
	bookmark_name varchar(50) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	user_created varchar(32) NOT NULL DEFAULT 'user',
	parameter_data_type varchar(1) NOT NULL DEFAULT 'T',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_bookmark_parameters IS E'The parameter value of a bookmark';
COMMENT ON COLUMN iwp_bookmark_parameters.active_flag IS E'?if the parameter active';
COMMENT ON COLUMN iwp_bookmark_parameters.bookmark_name IS E'The name of the bookmark';
COMMENT ON COLUMN iwp_bookmark_parameters.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_bookmark_parameters.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_bookmark_parameters.date_created IS E'The date the bookmark parameter is created';
COMMENT ON COLUMN iwp_bookmark_parameters.description IS E'The general description';
COMMENT ON COLUMN iwp_bookmark_parameters.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_bookmark_parameters.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_bookmark_parameters.parameter_data_type IS E'The data type of the parameter';
COMMENT ON COLUMN iwp_bookmark_parameters.parameter_name IS E'The parameter name';
COMMENT ON COLUMN iwp_bookmark_parameters.parameter_type IS E'The type of Parameter';
COMMENT ON COLUMN iwp_bookmark_parameters.user_created IS E'The user who create the bookmark';

CREATE TABLE iwp_documents (
	document_id bigint NOT NULL,
	offender_book_id bigint,
	document_name varchar(50) NOT NULL,
	template_id bigint NOT NULL,
	comment_text varchar(256),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	location varchar(256),
	object_id varchar(100),
	object_type varchar(100),
	document_status varchar(12) NOT NULL,
	document_body bytea,
	date_created timestamp NOT NULL DEFAULT date_trunc('day', LOCALTIMESTAMP),
	date_modified timestamp,
	user_created varchar(32) NOT NULL DEFAULT 'user',
	user_modified varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	document_context varchar(256)
) ;
COMMENT ON COLUMN iwp_documents.active_flag IS E'Active data indicator';
COMMENT ON COLUMN iwp_documents.comment_text IS E'The general comment text';
COMMENT ON COLUMN iwp_documents.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_documents.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_documents.date_created IS E'The date when the document is created';
COMMENT ON COLUMN iwp_documents.date_modified IS E'The date when the document is modified';
COMMENT ON COLUMN iwp_documents.document_id IS E'The ID of the documents';
COMMENT ON COLUMN iwp_documents.document_name IS E'The name of the document';
COMMENT ON COLUMN iwp_documents.location IS E'The physical location of the template';
COMMENT ON COLUMN iwp_documents.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_documents.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_documents.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN iwp_documents.template_id IS E'The ID of the template which the doucment based on';
COMMENT ON COLUMN iwp_documents.user_created IS E'The user who created the document';

CREATE TABLE iwp_parameter_mappings (
	mapping_id bigint NOT NULL,
	template_module_id bigint NOT NULL,
	bookmark_name varchar(50) NOT NULL,
	parameter_name varchar(50) NOT NULL,
	field_name varchar(60),
	document_context_flag varchar(1) NOT NULL DEFAULT 'N',
	create_user_id varchar(32) NOT NULL DEFAULT 'User',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_parameter_mappings IS E'Define mapping between iwp parameter which belong to bookmark and field wich belong to module block. It is used during iwp document generation to find value for context parameters from sceen block.  ';
COMMENT ON COLUMN iwp_parameter_mappings.create_datetime IS E'Create time';
COMMENT ON COLUMN iwp_parameter_mappings.create_user_id IS E'Create user';
COMMENT ON COLUMN iwp_parameter_mappings.modify_datetime IS E'Modify time';
COMMENT ON COLUMN iwp_parameter_mappings.modify_user_id IS E'Modify user';
COMMENT ON COLUMN iwp_parameter_mappings.seal_flag IS E'Seal flag';
COMMENT ON COLUMN iwp_parameter_mappings.template_module_id IS E'Identifier -PK for IWP_TEMPLATE_MODULES table';

CREATE TABLE iwp_parameter_values (
	parameter_name varchar(50) NOT NULL,
	parameter_value varchar(50),
	template_id bigint NOT NULL,
	bookmark_name varchar(50) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	user_created varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_parameter_values IS E'The parameter values of IPW template';
COMMENT ON COLUMN iwp_parameter_values.bookmark_name IS E'The name of the bookmark';
COMMENT ON COLUMN iwp_parameter_values.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_parameter_values.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_parameter_values.date_created IS E'The date the parameter is created';
COMMENT ON COLUMN iwp_parameter_values.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_parameter_values.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_parameter_values.parameter_name IS E'The name of the parameter';
COMMENT ON COLUMN iwp_parameter_values.parameter_value IS E'The value of the parameter';
COMMENT ON COLUMN iwp_parameter_values.template_id IS E'The ID of the template';
COMMENT ON COLUMN iwp_parameter_values.user_created IS E'The user who creates the parameter';

CREATE TABLE iwp_templates (
	template_id bigint NOT NULL,
	template_name varchar(12) NOT NULL,
	description varchar(256),
	location varchar(256),
	active_flag varchar(1) DEFAULT 'Y',
	template_body bytea,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	user_created varchar(32) NOT NULL DEFAULT 'user',
	lock_password varchar(32),
	object_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	expiry_date timestamp,
	seal_flag varchar(1),
	template_type varchar(12)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN iwp_templates.active_flag IS E'If the template active?';
COMMENT ON COLUMN iwp_templates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_templates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_templates.date_created IS E'The date when the template is created';
COMMENT ON COLUMN iwp_templates.description IS E'The description of the tempalte';
COMMENT ON COLUMN iwp_templates.expiry_date IS E'The expiry date of the template';
COMMENT ON COLUMN iwp_templates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_templates.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_templates.object_type IS E'Reference_Code (OBJECT_TYPE)';
COMMENT ON COLUMN iwp_templates.template_id IS E'The ID of the template document';
COMMENT ON COLUMN iwp_templates.template_name IS E'Short name of the template';
COMMENT ON COLUMN iwp_templates.user_created IS E'User who create the template';

CREATE TABLE iwp_templates_object_types (
	template_id bigint NOT NULL,
	object_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_templates_object_types IS E'The assoicate of template with other database objects';
COMMENT ON COLUMN iwp_templates_object_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_templates_object_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_templates_object_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_templates_object_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_templates_object_types.object_type IS E'The general object Type';
COMMENT ON COLUMN iwp_templates_object_types.template_id IS E'The ID of the template';

CREATE TABLE iwp_template_modules (
	template_module_id bigint NOT NULL,
	template_id bigint NOT NULL,
	module_name varchar(20) NOT NULL,
	block_name varchar(60),
	block_description varchar(256),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_template_modules IS E'The assoication relationship between template and modules or template and module blocks.  Maintenance linking Integrated Word Processing templates to modules and blocks. This allows users to have access to specific IWP templates via the Toolbar when they enter the screen or select any record in the screen block. It is used in parameters mappings to map parameters to block fields Child to DOCUMENT_TEMPLATES.  Maintain IWP Document Templates screen (OUMDTEMP).';
COMMENT ON COLUMN iwp_template_modules.active_flag IS E'If the record actively in use? ';
COMMENT ON COLUMN iwp_template_modules.block_description IS E'Block description';
COMMENT ON COLUMN iwp_template_modules.block_name IS E'Name of the blok belonging to module_name';
COMMENT ON COLUMN iwp_template_modules.create_datetime IS E'The date and time when the record was created. ';
COMMENT ON COLUMN iwp_template_modules.create_user_id IS E'The user who creates the record. ';
COMMENT ON COLUMN iwp_template_modules.expiry_date IS E'The expiry date. ';
COMMENT ON COLUMN iwp_template_modules.modify_datetime IS E'The date and time the record was last modified. ';
COMMENT ON COLUMN iwp_template_modules.modify_user_id IS E'The user who last modifies the record. ';
COMMENT ON COLUMN iwp_template_modules.module_name IS E'The code used to uniquely identify the name of the module.  Application Form/Screen Name (i.e. OTDCLOSE)';
COMMENT ON COLUMN iwp_template_modules.seal_flag IS E'If the record is sealed from change. ';
COMMENT ON COLUMN iwp_template_modules.template_id IS E'The ID of the template';
COMMENT ON COLUMN iwp_template_modules.template_module_id IS E'Identifier -PK for IWP_TEMPLATE_MODULES table';

CREATE TABLE iwp_template_objects (
	iwp_template_object_id bigint NOT NULL,
	template_id bigint NOT NULL,
	object_type varchar(12) NOT NULL,
	object_code varchar(12),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_template_objects IS E'The assoicate of template with other database objects';
COMMENT ON COLUMN iwp_template_objects.active_flag IS E'?If the record is active';
COMMENT ON COLUMN iwp_template_objects.expiry_date IS E'expiry date of the relationship';
COMMENT ON COLUMN iwp_template_objects.iwp_template_object_id IS E'The IWP template object ID';
COMMENT ON COLUMN iwp_template_objects.list_seq IS E'the order of listing';
COMMENT ON COLUMN iwp_template_objects.object_code IS E'The object code';
COMMENT ON COLUMN iwp_template_objects.object_type IS E'The general object Type';
COMMENT ON COLUMN iwp_template_objects.template_id IS E'The ID of the template';

CREATE TABLE iwp_template_roles (
	template_id bigint NOT NULL,
	role_code varchar(30) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE iwp_template_roles IS E'The associate roles with the templates';
COMMENT ON COLUMN iwp_template_roles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN iwp_template_roles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN iwp_template_roles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN iwp_template_roles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN iwp_template_roles.role_code IS E'The User role';
COMMENT ON COLUMN iwp_template_roles.template_id IS E'The ID of the template';

CREATE TABLE job_controls (
	job_control_id bigint NOT NULL,
	module_name varchar(100) NOT NULL,
	job_status varchar(12) NOT NULL,
	parameter_values varchar(4000),
	last_key varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE job_controls IS E'The NOMIS batch job control counter which record the current status of a job and its last processed record ID for recovery. ';
COMMENT ON COLUMN job_controls.job_control_id IS E'The ID of the Job control';
COMMENT ON COLUMN job_controls.job_status IS E'The status of the Job.  Reference Code (JOB_STS)';
COMMENT ON COLUMN job_controls.last_key IS E'The last proceeed Record ID/Code';
COMMENT ON COLUMN job_controls.module_name IS E'The Program/Module Name';
COMMENT ON COLUMN job_controls.parameter_values IS E'The parameter of the job';

CREATE TABLE legal_update_reasons (
	update_reason_code varchar(12) NOT NULL,
	description varchar(80) NOT NULL,
	effective_date timestamp,
	reason_category varchar(12) NOT NULL,
	active_type varchar(12) NOT NULL,
	list_seq integer,
	expiry_date timestamp,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN legal_update_reasons.active_flag IS E'? if the record active';
COMMENT ON COLUMN legal_update_reasons.active_type IS E'The active type.  Reference Codes(ACTIVE_TYPE)';
COMMENT ON COLUMN legal_update_reasons.description IS E'The description';
COMMENT ON COLUMN legal_update_reasons.effective_date IS E'The effective date';
COMMENT ON COLUMN legal_update_reasons.expiry_date IS E'The expiry date of the reaons';
COMMENT ON COLUMN legal_update_reasons.list_seq IS E'The list seq';
COMMENT ON COLUMN legal_update_reasons.reason_category IS E'The category of the reason code.  Reference Codes(LGL_RSN_CAT)';
COMMENT ON COLUMN legal_update_reasons.update_reason_code IS E'The update reason code';

CREATE TABLE legal_update_usages (
	legal_class varchar(12) NOT NULL,
	update_reason_code varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	list_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN legal_update_usages.active_flag IS E'? If the record active';
COMMENT ON COLUMN legal_update_usages.expiry_date IS E'Expiry Date';
COMMENT ON COLUMN legal_update_usages.legal_class IS E'The legal case.  Reference Code(LGL_CLS)';
COMMENT ON COLUMN legal_update_usages.list_seq IS E'The order of listing';
COMMENT ON COLUMN legal_update_usages.update_reason_code IS E'The update reason code';

CREATE TABLE legs (
	from_location_id varchar(12) NOT NULL,
	to_location_id varchar(12) NOT NULL,
	travel_time timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE legs IS E'- Retrofitted';
COMMENT ON COLUMN legs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN legs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN legs.from_location_id IS E'From - Retrofitted';
COMMENT ON COLUMN legs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN legs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN legs.to_location_id IS E'To - Retrofitted';
COMMENT ON COLUMN legs.travel_time IS E'Travel Time - Retrofitted';

CREATE TABLE link_case_txns (
	case_id bigint NOT NULL,
	combined_case_id bigint NOT NULL,
	offender_charge_id bigint NOT NULL,
	event_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE link_case_txns IS E'The transaction details of link cases';
COMMENT ON COLUMN link_case_txns.case_id IS E'The original case ID';
COMMENT ON COLUMN link_case_txns.combined_case_id IS E'The new combined case ID';
COMMENT ON COLUMN link_case_txns.offender_charge_id IS E'The offender charge ID';

CREATE TABLE locked_modules (
	module_name varchar(20) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	user_id varchar(32) NOT NULL,
	locked_date timestamp NOT NULL,
	offender_id bigint,
	session_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	agy_loc_id varchar(6),
	seal_flag varchar(1),
	account_code integer
)  TABLESPACE TAG_DATA;

CREATE TABLE magnetic_extend_info (
	mei_id bigint NOT NULL,
	payer_fed_id_num varchar(40) NOT NULL,
	transmitter_tin integer NOT NULL,
	transmitter_control_code varchar(5) NOT NULL,
	contact_name varchar(40) NOT NULL,
	contact_phone varchar(14) NOT NULL,
	payer_tin integer NOT NULL,
	state_payer_state_num varchar(40) NOT NULL,
	electronic_file_num varchar(40),
	last_file_indicator varchar(40),
	payer_name_control varchar(40),
	combined_fed_state_filer varchar(40),
	transmitter_name1 varchar(40),
	transmitter_name2 varchar(40),
	combined_fed_state_code varchar(2),
	correct_return_indicator varchar(2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	contact_email varchar(50),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN magnetic_extend_info.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN magnetic_extend_info.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN magnetic_extend_info.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN magnetic_extend_info.modify_user_id IS E'The user who modifies the record';

CREATE TABLE magnetic_output_temp (
	msm_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	output_seq integer NOT NULL DEFAULT 1,
	account_number varchar(15),
	non_emp_compensation decimal(11,2),
	fed_tax_amount decimal(11,2),
	sta_tax_amount decimal(11,2),
	interest_income decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN magnetic_output_temp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN magnetic_output_temp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN magnetic_output_temp.interest_income IS E'An extra column INTEREST_INCOME is needed for the table MAGNETIC_OUPUT_TEMP.   Interest report for the INT 1099 requires a field to store the income from offenders" interest.';
COMMENT ON COLUMN magnetic_output_temp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN magnetic_output_temp.modify_user_id IS E'The user who modifies the record';

CREATE TABLE magnetic_submission_maint (
	msm_id bigint NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp NOT NULL,
	state_tax_type varchar(1) NOT NULL,
	fed_tax_type varchar(1) NOT NULL,
	return_type varchar(12) NOT NULL,
	module_name varchar(12),
	run_background varchar(1) DEFAULT 'Y',
	report_output varchar(12),
	combined_fed_state_filer varchar(1) NOT NULL DEFAULT 'Y',
	nec_rcuni varchar(1) NOT NULL DEFAULT 'Y',
	nec_rcinta varchar(1) NOT NULL DEFAULT 'Y',
	nec_rcintb varchar(1) NOT NULL DEFAULT 'Y',
	nec_rcintp varchar(1) NOT NULL DEFAULT 'Y',
	nec_rcsp varchar(1) NOT NULL,
	nec_rcjuv varchar(1) NOT NULL,
	printer_id varchar(12),
	min_income_amt decimal(11,2),
	caseload_id varchar(6),
	offender_id bigint,
	foreign_transmitter varchar(1) NOT NULL DEFAULT 'Y',
	test_file varchar(1) NOT NULL DEFAULT 'Y',
	magnetic_tape varchar(1) NOT NULL DEFAULT 'Y',
	electronic_file_name varchar(60),
	last_filing_id varchar(1) NOT NULL DEFAULT 'Y',
	original_file varchar(1) NOT NULL DEFAULT 'Y',
	replacement_file varchar(1) NOT NULL DEFAULT 'Y',
	correction_file varchar(1) NOT NULL DEFAULT 'Y',
	foreign_entity_payer varchar(1) NOT NULL DEFAULT 'Y',
	number_of_copy smallint,
	range_from smallint,
	range_to smallint,
	prior_year varchar(1),
	transferagent varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN magnetic_submission_maint.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN magnetic_submission_maint.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN magnetic_submission_maint.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN magnetic_submission_maint.modify_user_id IS E'The user who modifies the record';

CREATE TABLE map_modules (
	module_name varchar(20) NOT NULL,
	block_name varchar(30) NOT NULL,
	column_name varchar(30) NOT NULL,
	column_label varchar(40) NOT NULL,
	column_seq smallint NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN map_modules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN map_modules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN map_modules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN map_modules.modify_user_id IS E'The user who modifies the record';

CREATE TABLE medical_categories_6i (
	medical_questionaire_code varchar(12) NOT NULL,
	medical_category varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	active_flag varchar(1) DEFAULT 'Y',
	list_seq integer DEFAULT 99,
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN medical_categories_6i.active_flag IS E' Y/N flag to show whether questionnaire is active or inactive.';
COMMENT ON COLUMN medical_categories_6i.description IS E'Description of questionnaire code.';
COMMENT ON COLUMN medical_categories_6i.expiry_date IS E'Date code was deactivated.';
COMMENT ON COLUMN medical_categories_6i.list_seq IS E'Sequence for list of values.';
COMMENT ON COLUMN medical_categories_6i.medical_category IS E'Version of questionnaire.';
COMMENT ON COLUMN medical_categories_6i.medical_questionaire_code IS E'Version of questionnaire.';
COMMENT ON COLUMN medical_categories_6i.update_allowed_flag IS E' Update allowed flag.';

CREATE TABLE medical_questionaires_6i (
	medical_questionaire_code varchar(12) NOT NULL,
	create_date timestamp NOT NULL,
	description varchar(40) NOT NULL,
	active_flag varchar(1) DEFAULT 'Y',
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE medical_questionaires_6i IS E'- Retrofitted';
COMMENT ON COLUMN medical_questionaires_6i.active_flag IS E' Y/N flag to show whether questionnaire is active or inactive.';
COMMENT ON COLUMN medical_questionaires_6i.create_date IS E' Create date for questionnaire.';
COMMENT ON COLUMN medical_questionaires_6i.description IS E'Description of questionnaire code.';
COMMENT ON COLUMN medical_questionaires_6i.expiry_date IS E'Date code was deactivated.';
COMMENT ON COLUMN medical_questionaires_6i.list_seq IS E'Sequence for list of values.';
COMMENT ON COLUMN medical_questionaires_6i.medical_questionaire_code IS E'Version of questionnaire.';
COMMENT ON COLUMN medical_questionaires_6i.update_allowed_flag IS E' Update allowed flag.';

CREATE TABLE medical_questions_6i (
	medical_questionaire_code varchar(12) NOT NULL,
	question_seq integer NOT NULL,
	medical_category varchar(12) NOT NULL,
	description varchar(40),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	modify_user_id varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE medical_questions_6i IS E'The medical questions for each questionnaire and category.';
COMMENT ON COLUMN medical_questions_6i.active_flag IS E'Medical questions are either active or inactive.';
COMMENT ON COLUMN medical_questions_6i.description IS E' Description of medical question.';
COMMENT ON COLUMN medical_questions_6i.expiry_date IS E'Deactivation date for question.';
COMMENT ON COLUMN medical_questions_6i.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN medical_questions_6i.medical_category IS E'Reference Code ( MED_CAT )';
COMMENT ON COLUMN medical_questions_6i.medical_questionaire_code IS E'The version of questionnaire.';
COMMENT ON COLUMN medical_questions_6i.modify_user_id IS E'Modified By';
COMMENT ON COLUMN medical_questions_6i.question_seq IS E' Sequence number forming part of primary key.';
COMMENT ON COLUMN medical_questions_6i.update_allowed_flag IS E'Are questions protected?';

CREATE TABLE menu_securities (
	menu_id bigint NOT NULL,
	parent_menu_id bigint NOT NULL,
	menu_item varchar(60) NOT NULL,
	module_name varchar(20),
	sort_order smallint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN menu_securities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN menu_securities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN menu_securities.menu_id IS E'System generated sequence number; primary key of the table.';
COMMENT ON COLUMN menu_securities.menu_item IS E'Free text entry; defines the item name to appear in the menu.';
COMMENT ON COLUMN menu_securities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN menu_securities.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN menu_securities.module_name IS E'This field is entered for all forms appearing in the menu, but not for sub-menu names.';
COMMENT ON COLUMN menu_securities.parent_menu_id IS E'Free text entry (any valid Menu ID); for any item in a sub-menu (whether another sub0menu or a form), enter the parent menu item under which it is to appear.  For main menu items, this value must be 0.';

CREATE TABLE menu_securities_backup (
	menu_id bigint NOT NULL,
	parent_menu_id bigint NOT NULL,
	menu_item varchar(60) NOT NULL,
	module_name varchar(20),
	sort_order smallint NOT NULL,
	create_datetime timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE menu_securities_bak (
	menu_id bigint NOT NULL,
	parent_menu_id bigint NOT NULL,
	menu_item varchar(60) NOT NULL,
	module_name varchar(20),
	sort_order smallint NOT NULL,
	create_datetime timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE merge_logs (
	merge_log_id bigint,
	transaction_id bigint,
	merge_user varchar(30),
	log_level varchar(30),
	message varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE merge_offender_sqls (
	sql_text varchar(2000),
	generation_time timestamp DEFAULT LOCALTIMESTAMP,
	sql_id integer,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE merge_offender_tables (
	table_name varchar(30) NOT NULL,
	parent_table varchar(30),
	application_code varchar(12),
	pk_type varchar(12),
	additional_update_rule varchar(200),
	calling_procedure varchar(100),
	process_method varchar(12),
	root_flag varchar(2),
	completed_flag varchar(1),
	offender_id_column varchar(30),
	seq_column varchar(30),
	object_class varchar(12),
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE merge_processes (
	process_id bigint NOT NULL,
	process_name varchar(30),
	init_proc varchar(240),
	first_rule_id bigint,
	next_check_proc varchar(240),
	next_check_proc_type varchar(12),
	result_true_next_id bigint,
	result_false_next_id bigint,
	starting_process_flag varchar(1),
	description varchar(256),
	term_proc varchar(240),
	active_flag varchar(1) DEFAULT 'Y',
	ending_process_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	transaction_type varchar(12) DEFAULT 'MERGE',
	mandatory_on_flag varchar(1) DEFAULT 'Y',
	default_on_flag varchar(1) DEFAULT 'Y',
	timeframe_required_flag varchar(1) DEFAULT 'Y',
	first_rule_id_off bigint
)  TABLESPACE TAG_DATA;

CREATE TABLE merge_process_rules (
	rule_id bigint NOT NULL,
	rule_proc varchar(240),
	rule_proc_type varchar(12),
	result_true_next_id bigint,
	result_false_next_id bigint,
	description varchar(256),
	init_proc varchar(240),
	term_proc varchar(240),
	process_name varchar(30),
	active_flag varchar(1) DEFAULT 'Y',
	ending_rule_flag varchar(1),
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	seal_flag varchar(1),
	process_id bigint,
	mandatory_on_flag varchar(1),
	default_on_flag varchar(1),
	timeframe_required_flag varchar(1),
	application_code varchar(12)
)  TABLESPACE TAG_DATA;

CREATE TABLE merge_tables (
	table_name varchar(30) NOT NULL,
	column_name varchar(30) NOT NULL,
	financial_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE merge_tables IS E'Merge offender specific records from the TAG system';
COMMENT ON COLUMN merge_tables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN merge_tables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN merge_tables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN merge_tables.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN merge_tables.table_name IS E'Stores table names';

CREATE TABLE merge_transactions (
	merge_transaction_id bigint NOT NULL,
	request_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	request_status_code varchar(12) NOT NULL DEFAULT 'PENDING',
	queue_message_id varchar(64),
	transaction_source varchar(12) NOT NULL,
	offender_book_id_1 bigint,
	root_offender_id_1 bigint,
	offender_id_1 bigint,
	offender_id_display_1 varchar(10),
	last_name_1 varchar(35),
	first_name_1 varchar(35),
	offender_book_id_2 bigint,
	root_offender_id_2 bigint,
	offender_id_2 bigint,
	offender_id_display_2 varchar(10),
	last_name_2 varchar(35),
	first_name_2 varchar(35),
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	seal_flag varchar(1),
	transaction_type varchar(12)
) ;

CREATE TABLE merge_transaction_logs (
	merge_transaction_id bigint NOT NULL,
	log_timestamp timestamp NOT NULL,
	log_text varchar(4000) NOT NULL,
	log_level varchar(60) NOT NULL,
	log_msg_part numeric(38) NOT NULL DEFAULT 1,
	merge_transaction_log_id bigint NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	seal_flag varchar(1)
) ;

CREATE TABLE merge_transaction_processes (
	merge_transaction_id bigint NOT NULL,
	process_id bigint NOT NULL,
	begin_date timestamp,
	end_date timestamp,
	timeframe_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE me_audit (
	action_type varchar(1),
	agy_loc_id varchar(6),
	old_offender_id_display varchar(10),
	new_offender_id_display varchar(10),
	new_booking_no varchar(14),
	modified_date timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE minimum_payable_balances (
	account_code integer NOT NULL,
	min_pay_amount decimal(11,2) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN minimum_payable_balances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN minimum_payable_balances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN minimum_payable_balances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN minimum_payable_balances.modify_user_id IS E'The user who modifies the record';

CREATE TABLE mn1099_log (
	action varchar(255),
	action_time timestamp,
	seq bigint,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE modify_tables (
	table_operation_code varchar(12) NOT NULL,
	movement_type varchar(12) NOT NULL,
	movement_reason_code varchar(12) NOT NULL,
	table_name varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN modify_tables.active_flag IS E'Active flag on movement reasons.';
COMMENT ON COLUMN modify_tables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN modify_tables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN modify_tables.expiry_date IS E'Date code deactivated.';
COMMENT ON COLUMN modify_tables.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN modify_tables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN modify_tables.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN modify_tables.movement_reason_code IS E'Reference Code ( MOVE_RSN ). The reason for the movement.';
COMMENT ON COLUMN modify_tables.movement_type IS E'Reference Code ( MOVE_TYPE )';
COMMENT ON COLUMN modify_tables.table_operation_code IS E'REFERENCE CODE ( TABLE_OPER ) Valid Code are (COP : COPY, DEL : DELETE)';
COMMENT ON COLUMN modify_tables.update_allowed_flag IS E'Can record be updated?';

CREATE TABLE module_accessible_documents (
	module_name varchar(20) NOT NULL,
	template_code varchar(24) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN module_accessible_documents.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN module_accessible_documents.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN module_accessible_documents.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN module_accessible_documents.modify_user_id IS E'The user who modifies the record';

CREATE TABLE module_accessible_forms (
	module_name varchar(20) NOT NULL,
	access_module_name varchar(20) NOT NULL,
	list_seq smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN module_accessible_forms.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN module_accessible_forms.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN module_accessible_forms.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN module_accessible_forms.modify_user_id IS E'The user who modifies the record';

CREATE TABLE module_privileges (
	module_name varchar(20) NOT NULL,
	role_id bigint NOT NULL,
	access_privilege varchar(1) NOT NULL,
	verification_flag varchar(1) DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN module_privileges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN module_privileges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN module_privileges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN module_privileges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN module_privileges.verification_flag IS E'Does user account have update capability on caseload?';

CREATE TABLE module_sort_orders (
	module_name varchar(20) NOT NULL,
	block_name varchar(30) NOT NULL,
	column_name varchar(30) NOT NULL,
	column_label varchar(40) NOT NULL,
	sort_seq smallint NOT NULL,
	sort_order varchar(12) NOT NULL DEFAULT 'A',
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN module_sort_orders.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN module_sort_orders.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN module_sort_orders.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN module_sort_orders.modify_user_id IS E'The user who modifies the record';

CREATE TABLE module_tables (
	module_tab_id bigint NOT NULL,
	object_name varchar(30) NOT NULL,
	module_name varchar(20) NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE module_tables IS E'Tables for Tag Modules';
COMMENT ON COLUMN module_tables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN module_tables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN module_tables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN module_tables.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN module_tables.module_tab_id IS E' The system generated identifier - module_tab_id';

CREATE TABLE module_tab_columns (
	module_tab_id bigint NOT NULL,
	module_tab_seq integer NOT NULL DEFAULT 1,
	column_name varchar(30) NOT NULL,
	domain varchar(12),
	ref_tables varchar(30),
	setup_module varchar(20),
	lov_item_name varchar(61),
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN module_tab_columns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN module_tab_columns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN module_tab_columns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN module_tab_columns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE module_versions (
	appln_code varchar(40) NOT NULL,
	module_name varchar(20) NOT NULL,
	module_type varchar(10) NOT NULL,
	bug_number bigint NOT NULL,
	version_number varchar(30) NOT NULL,
	previous_version varchar(30) NOT NULL,
	release_notes varchar(30),
	assigned_developer varchar(40),
	developer_comment varchar(2000),
	qa_date timestamp,
	fixed_date timestamp,
	qa_flag varchar(1) NOT NULL DEFAULT 'N',
	fixed_flag varchar(1) NOT NULL DEFAULT 'N',
	qa_comment varchar(2000),
	modify_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN module_versions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN module_versions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN module_versions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN module_versions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN module_versions.module_type IS E'REFERENCE_CODES DOMAIN (MOD_TYPE)';

CREATE TABLE movement_reasons (
	movement_type varchar(12) NOT NULL,
	movement_reason_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	open_contact_flag varchar(1) NOT NULL DEFAULT 'Y',
	close_contact_flag varchar(1) NOT NULL DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	notification_type varchar(1),
	notification_flag varchar(1),
	billing_service_flag varchar(1),
	transportation_flag varchar(1),
	header_status_flag varchar(1),
	in_movement_type varchar(12),
	in_movement_reason_code varchar(12),
	esc_recap_flag varchar(1) DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	trn_req_apvl_flag varchar(1) DEFAULT 'N',
	trn_schd_trip_flag varchar(1) DEFAULT 'N',
	trn_assign_priority_flag varchar(1) DEFAULT 'N',
	trn_p_list_flag varchar(1) DEFAULT 'N',
	trn_priority_seq integer,
	subsequent_mv_type varchar(12),
	subsequent_mv_rsn_code varchar(12),
	reason_flag varchar(1),
	drive_to_oidumapp_flag varchar(1),
	inactivate_sent varchar(1),
	suspend_reactivate_sent varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE movement_reasons IS E'Reasons associated with movement types.';
COMMENT ON COLUMN movement_reasons.active_flag IS E'Active flag on movement reasons.';
COMMENT ON COLUMN movement_reasons.close_contact_flag IS E'Signals the fact that an offender booking should be closed.';
COMMENT ON COLUMN movement_reasons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN movement_reasons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN movement_reasons.description IS E'Description of movement reason.';
COMMENT ON COLUMN movement_reasons.esc_recap_flag IS E'When Admission and Release screens see this flag is checked, a record will be created in Offender_Escapes table.';
COMMENT ON COLUMN movement_reasons.expiry_date IS E'Date code deactivated.';
COMMENT ON COLUMN movement_reasons.header_status_flag IS E'For Ontario Header Status';
COMMENT ON COLUMN movement_reasons.in_movement_reason_code IS E'Domain = "MOVE_RSN".  The Default Incoming Movement Reason.';
COMMENT ON COLUMN movement_reasons.in_movement_type IS E'Domain = "MOVE_TYPE".  The Default Incoming Movement Type.';
COMMENT ON COLUMN movement_reasons.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN movement_reasons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN movement_reasons.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN movement_reasons.movement_reason_code IS E'Reference Code ( MOVE_RSN ). The reason for the movement.';
COMMENT ON COLUMN movement_reasons.movement_type IS E'Reference Code ( MOVE_TYPE )';
COMMENT ON COLUMN movement_reasons.open_contact_flag IS E' Flag signalling the opening of a new offender booking.';

CREATE TABLE msg_log (
	msl_time timestamp,
	msl_message varchar(4000),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE name_synonyms (
	name varchar(30) NOT NULL,
	base_name varchar(30) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE name_synonyms IS E'Other names associated with an offender"s given names. ie. William and Bill.';
COMMENT ON COLUMN name_synonyms.base_name IS E'An offender given name which is to be associated
 with other names for the purpose of conducting
 searches.';
COMMENT ON COLUMN name_synonyms.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN name_synonyms.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN name_synonyms.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN name_synonyms.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN name_synonyms.name IS E' A name which is to be associated with others.';

CREATE TABLE noms_id_sequence (
	prefix_alpha_seq integer NOT NULL,
	suffix_alpha_seq integer NOT NULL,
	current_prefix varchar(5) NOT NULL,
	current_suffix varchar(5) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN noms_id_sequence.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN noms_id_sequence.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN noms_id_sequence.current_prefix IS E'Column used to hold the current prefix value for performing comparison';
COMMENT ON COLUMN noms_id_sequence.current_suffix IS E'Column used to hold the current suffix value for performing comparison';
COMMENT ON COLUMN noms_id_sequence.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN noms_id_sequence.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN noms_id_sequence.prefix_alpha_seq IS E'Column used to hold the prefix alpha character sequence';
COMMENT ON COLUMN noms_id_sequence.suffix_alpha_seq IS E'Column used to hold the suffix alpha character sequence';

CREATE TABLE non_admitted_inmate_mvmts (
	non_adm_inmate_id bigint NOT NULL,
	last_name varchar(35) NOT NULL,
	first_name varchar(35) NOT NULL,
	sex_code varchar(12),
	race_code varchar(12),
	birth_date timestamp,
	ssn_id varchar(12),
	from_agy_loc_id varchar(6) NOT NULL,
	to_agy_loc_id varchar(6) NOT NULL,
	mvmt_reason_code varchar(12) DEFAULT 'INT',
	inmate_comment_text varchar(240),
	movement_comment_text varchar(240),
	scheduled_trip_id bigint,
	alternate_agy_loc_id varchar(6),
	algo_comment varchar(240),
	event_date timestamp,
	tmp_group_id bigint,
	from_agy_seq integer,
	to_agy_seq integer,
	mvmt_type varchar(30),
	responsible_agency varchar(40),
	emergency_contact varchar(240),
	inmate_id varchar(30) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE non_adm_inm_mvmt_details (
	non_adm_inmate_id bigint NOT NULL,
	detail_seq integer NOT NULL,
	status_code varchar(12) NOT NULL,
	recorded_by varchar(32) NOT NULL DEFAULT 'USER',
	recorded_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	app_rsn varchar(240),
	txn_status varchar(12) NOT NULL,
	txn_rsn varchar(240),
	non_completion_flag varchar(1) NOT NULL DEFAULT 'N',
	non_comp_schd_trip_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE notify_movement_types (
	offender_book_id bigint NOT NULL,
	noti_seq integer NOT NULL,
	movement_type varchar(12) NOT NULL,
	movement_reason_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN notify_movement_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN notify_movement_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN notify_movement_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN notify_movement_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE oasys_risk_levels (
	lower_score smallint NOT NULL,
	upper_score smallint NOT NULL,
	risk_level varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN oasys_risk_levels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oasys_risk_levels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oasys_risk_levels.lower_score IS E'Lower score';
COMMENT ON COLUMN oasys_risk_levels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oasys_risk_levels.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oasys_risk_levels.risk_level IS E'Risk level defined for this range';
COMMENT ON COLUMN oasys_risk_levels.upper_score IS E'Upper score';

CREATE TABLE oasys_sections (
	section_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN oasys_sections.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oasys_sections.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oasys_sections.description IS E'Section Description';
COMMENT ON COLUMN oasys_sections.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oasys_sections.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oasys_sections.section_code IS E'Section Code defined in OASYS';

CREATE TABLE oasys_two_scores (
	section_code varchar(12) NOT NULL,
	lower_score smallint NOT NULL,
	upper_score smallint NOT NULL,
	weighted_score smallint NOT NULL,
	scoring_group smallint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN oasys_two_scores.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oasys_two_scores.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oasys_two_scores.lower_score IS E'Scoring Group, Either 1 or 2';
COMMENT ON COLUMN oasys_two_scores.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oasys_two_scores.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oasys_two_scores.section_code IS E'Section Code defined in OASYS';

CREATE TABLE objectives (
	objective_id bigint NOT NULL,
	description varchar(60) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN objectives.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN objectives.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN objectives.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN objectives.modify_user_id IS E'The user who modifies the record';

CREATE TABLE obligation_groups (
	group_id bigint NOT NULL,
	group_code varchar(12) NOT NULL,
	group_description varchar(32) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN obligation_groups.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN obligation_groups.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN obligation_groups.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN obligation_groups.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offences (
	offence_code varchar(25) NOT NULL,
	statute_code varchar(12) NOT NULL,
	description varchar(1000) NOT NULL,
	old_statute_code varchar(12),
	severity_ranking varchar(12),
	default_offence_type varchar(12),
	max_sentence_length smallint,
	sentence_unit_code varchar(12),
	offence_group varchar(12),
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	repealed_date timestamp,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	check_box1 varchar(1),
	check_box2 varchar(1),
	check_box3 varchar(1),
	offense_degree varchar(12),
	max_good_time_perc smallint,
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	ho_code varchar(12),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE offences IS E'- Retrofitted';
COMMENT ON COLUMN offences.active_flag IS E' The flag derives whether Offence is active or not';
COMMENT ON COLUMN offences.create_date IS E'The date when Offence gets Created';
COMMENT ON COLUMN offences.default_offence_type IS E'The default offence type';
COMMENT ON COLUMN offences.description IS E' - Column already exists';
COMMENT ON COLUMN offences.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN offences.ho_code IS E' This column stores the value of Home Office Class and Home Office sub class';
COMMENT ON COLUMN offences.list_seq IS E' - Column already exists';
COMMENT ON COLUMN offences.max_sentence_length IS E'Maximum Sentence';
COMMENT ON COLUMN offences.offence_code IS E'Reference Code ( OFFENCE )';
COMMENT ON COLUMN offences.old_statute_code IS E'Previous Statue Code';
COMMENT ON COLUMN offences.repealed_date IS E' - Column already exists';
COMMENT ON COLUMN offences.sentence_unit_code IS E'Reference Code ( PERIOD_TYPE ) : Sentence unit of the max sentence';
COMMENT ON COLUMN offences.severity_ranking IS E'The severity ranking of Offence';
COMMENT ON COLUMN offences.statute_code IS E' - Column already exists';
COMMENT ON COLUMN offences.update_allowed_flag IS E' - Column already exists';

CREATE TABLE offence_code_groupings (
	offence_code varchar(25) NOT NULL,
	statute_code varchar(12) NOT NULL,
	offence_group varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE offence_code_groupings IS E'- Retrofitted';
COMMENT ON COLUMN offence_code_groupings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offence_code_groupings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offence_code_groupings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offence_code_groupings.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offence_code_groupings.offence_code IS E'Reference Code ( OFFENCE )';
COMMENT ON COLUMN offence_code_groupings.offence_group IS E'Reference Code ( OFFENCE_GRP )';
COMMENT ON COLUMN offence_code_groupings.statute_code IS E' - Column already exists';

CREATE TABLE offence_group_variables (
	offence_group varchar(12) NOT NULL,
	assess_variable_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN offence_group_variables.assess_variable_code IS E'Reference Code ( ASSESS VAR )';
COMMENT ON COLUMN offence_group_variables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offence_group_variables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offence_group_variables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offence_group_variables.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offence_group_var_scores (
	offence_group varchar(12) NOT NULL,
	assess_variable_code varchar(12) NOT NULL,
	severity_code varchar(12) NOT NULL,
	variable_score numeric(38),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE offence_group_var_scores IS E'Offence Group Variables';
COMMENT ON COLUMN offence_group_var_scores.assess_variable_code IS E' - Column already exists';
COMMENT ON COLUMN offence_group_var_scores.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offence_group_var_scores.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offence_group_var_scores.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offence_group_var_scores.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offence_group_var_scores.offence_group IS E' - Column already exists';

CREATE TABLE offence_indicators (
	offence_indicator_id bigint NOT NULL,
	offence_code varchar(25) NOT NULL,
	statute_code varchar(12) NOT NULL,
	indicator_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN offence_indicators.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offence_indicators.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offence_indicators.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offence_indicators.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offence_result_codes (
	result_code varchar(6) NOT NULL,
	description varchar(240) NOT NULL,
	disposition_code varchar(12) NOT NULL,
	charge_status varchar(12) NOT NULL,
	active_flag varchar(1),
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	conviction_flag varchar(1),
	list_seq integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offence_result_codes IS E'The possible result codes of offences';
COMMENT ON COLUMN offence_result_codes.active_flag IS E'Whether result is active or not';
COMMENT ON COLUMN offence_result_codes.charge_status IS E'Charge status.';
COMMENT ON COLUMN offence_result_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offence_result_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offence_result_codes.description IS E'Description of the results.';
COMMENT ON COLUMN offence_result_codes.disposition_code IS E'disposition code .';
COMMENT ON COLUMN offence_result_codes.expiry_date IS E'Expiry date';
COMMENT ON COLUMN offence_result_codes.list_seq IS E'The listing order sequence';
COMMENT ON COLUMN offence_result_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offence_result_codes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offence_result_codes.result_code IS E'Result codes used to record offence outcomes at each court appearance';

CREATE TABLE offenders (
	offender_id bigint NOT NULL,
	offender_name_seq numeric(38),
	id_source_code varchar(12) NOT NULL,
	last_name varchar(35) NOT NULL,
	name_type varchar(12),
	first_name varchar(35),
	middle_name varchar(35),
	birth_date timestamp,
	sex_code varchar(12) NOT NULL,
	suffix varchar(12),
	last_name_soundex varchar(6),
	birth_place varchar(25),
	birth_country_code varchar(12),
	create_date timestamp NOT NULL,
	last_name_key varchar(35) NOT NULL,
	alias_offender_id bigint,
	first_name_key varchar(35),
	middle_name_key varchar(35),
	offender_id_display varchar(10),
	root_offender_id bigint,
	caseload_type varchar(12),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	alias_name_type varchar(12),
	parent_offender_id bigint,
	unique_obligation_flag varchar(1),
	suspended_flag varchar(1),
	suspended_date timestamp,
	race_code varchar(12),
	remark_code varchar(12),
	add_info_code varchar(12),
	birth_county varchar(20),
	birth_state varchar(20),
	middle_name_2 varchar(35),
	title varchar(12),
	age smallint,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	last_name_alpha_key varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	name_sequence varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offenders IS E'The unique identifier and names for an offender.';
COMMENT ON COLUMN offenders.add_info_code IS E'Reference Domain (OFF_INFO)';
COMMENT ON COLUMN offenders.age IS E'A new column to store Age of the Offender.';
COMMENT ON COLUMN offenders.alias_offender_id IS E'Pointer to another offender Id.';
COMMENT ON COLUMN offenders.birth_country_code IS E'Reference Code ( COUNTRY)';
COMMENT ON COLUMN offenders.birth_date IS E'The birthdate of the offender.';
COMMENT ON COLUMN offenders.birth_place IS E'Place where the offender was born.';
COMMENT ON COLUMN offenders.create_date IS E'Date of record creation.';
COMMENT ON COLUMN offenders.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offenders.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offenders.first_name IS E'Indicates the first name fo the offender.';
COMMENT ON COLUMN offenders.first_name_key IS E'Key for the storage of first name in upper case with spaces removed.';
COMMENT ON COLUMN offenders.id_source_code IS E'The type of offender Id whether it be input or generated.';
COMMENT ON COLUMN offenders.last_name IS E'Last name of the offender';
COMMENT ON COLUMN offenders.last_name_alpha_key IS E'Column to store the first alphabet for the last name field - this field will be used to help in search and will have a non-unique index created on it.';
COMMENT ON COLUMN offenders.last_name_key IS E'Key for the storage of last name in upper case with spaces removed.';
COMMENT ON COLUMN offenders.last_name_soundex IS E'Soundex of the last name.';
COMMENT ON COLUMN offenders.middle_name IS E'Indicates middle name of the offender.';
COMMENT ON COLUMN offenders.middle_name_2 IS E'It is Middle_Name_2, for UK it is Given_Name 3.';
COMMENT ON COLUMN offenders.middle_name_key IS E'Key for the storage of middle name in upper case with spaces removed.';
COMMENT ON COLUMN offenders.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offenders.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offenders.name_sequence IS E'The order of names displayed';
COMMENT ON COLUMN offenders.name_type IS E'Reference Code ( NAME_TYPE ) : Name qualifier - Given Name, Maiden Name ..';
COMMENT ON COLUMN offenders.offender_id IS E'The unique identifier number for the offender.';
COMMENT ON COLUMN offenders.offender_id_display IS E'The unique identifier number for the offender.';
COMMENT ON COLUMN offenders.offender_name_seq IS E'System generated number forming part of primary key.';
COMMENT ON COLUMN offenders.root_offender_id IS E'Pointer to another offender Id.';
COMMENT ON COLUMN offenders.sex_code IS E'Reference Code ( SEX).  The gender of the offender.';
COMMENT ON COLUMN offenders.suffix IS E'The offender name suffix (ie JR or III).';
COMMENT ON COLUMN offenders.title IS E'The title of the offender';

CREATE TABLE offenders_external_search (
	external_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	last_name varchar(35) NOT NULL,
	first_name varchar(35),
	middle_name varchar(35),
	birth_date timestamp,
	sex_code varchar(12) NOT NULL,
	birth_place varchar(25),
	birth_country_code varchar(12),
	create_date timestamp NOT NULL,
	modify_date timestamp,
	request_status varchar(12) NOT NULL,
	output_payload varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offenders_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	offender_id bigint,
	offender_name_seq bigint,
	id_source_code varchar(12),
	last_name varchar(35),
	name_type varchar(12),
	first_name varchar(35),
	middle_name varchar(35),
	birth_date timestamp,
	sex_code varchar(12),
	suffix varchar(12),
	last_name_soundex varchar(6),
	birth_place varchar(25),
	birth_country_code varchar(12),
	create_date timestamp,
	last_name_key varchar(35),
	alias_offender_id bigint,
	first_name_key varchar(35),
	middle_name_key varchar(35),
	offender_id_display varchar(10),
	root_offender_id bigint,
	caseload_type varchar(12),
	modify_user_id varchar(32),
	alias_name_type varchar(12),
	parent_offender_id bigint,
	unique_obligation_flag varchar(1),
	suspended_flag varchar(1),
	suspended_date timestamp,
	race_code varchar(12),
	remark_code varchar(12),
	add_info_code varchar(12),
	birth_county varchar(20),
	birth_state varchar(20),
	middle_name_2 varchar(35),
	title varchar(12),
	age smallint,
	create_user_id varchar(32),
	last_name_alpha_key varchar(1),
	name_sequence varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_action_plans (
	off_action_plan_id bigint NOT NULL,
	casework_type varchar(12) NOT NULL,
	off_crim_need_id bigint,
	off_case_cond_id bigint,
	program_id bigint,
	notes varchar(240),
	start_date timestamp,
	end_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_action_plans.casework_type IS E'Case work type';
COMMENT ON COLUMN offender_action_plans.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_action_plans.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_action_plans.end_date IS E'End date of the condition';
COMMENT ON COLUMN offender_action_plans.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_action_plans.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_action_plans.notes IS E'Free text commentary';
COMMENT ON COLUMN offender_action_plans.off_action_plan_id IS E' The system generated identifier for an offender action plan';
COMMENT ON COLUMN offender_action_plans.off_case_cond_id IS E'The ID of an offender case condition';
COMMENT ON COLUMN offender_action_plans.off_crim_need_id IS E'The ID of an offender criminogenic needs';
COMMENT ON COLUMN offender_action_plans.program_id IS E'Program service id';
COMMENT ON COLUMN offender_action_plans.start_date IS E'Start date of the condition';

CREATE TABLE offender_activity_events (
	offender_book_id bigint NOT NULL,
	events_seq integer NOT NULL,
	schedule_id bigint,
	event_date timestamp,
	event_time timestamp,
	activity_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_activity_events IS E'- Retrofitted';
COMMENT ON COLUMN offender_activity_events.activity_code IS E' - Column already exists';
COMMENT ON COLUMN offender_activity_events.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_activity_events.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_activity_events.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_activity_events.event_date IS E' - Column already exists';
COMMENT ON COLUMN offender_activity_events.event_time IS E' - Column already exists';
COMMENT ON COLUMN offender_activity_events.events_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_activity_events.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_activity_events.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_activity_events.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_activity_events.schedule_id IS E' - Column already exists';

CREATE TABLE offender_adjustment_txns (
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL,
	offender_id bigint NOT NULL,
	offender_deduction_id bigint NOT NULL,
	txn_posting_type varchar(12) NOT NULL,
	adjustment_date timestamp NOT NULL,
	adjustment_amount decimal(11,2),
	adjustment_reason_code varchar(12),
	adjustment_text varchar(40),
	adjustment_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_adjustment_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_adjustment_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_adjustment_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_adjustment_txns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_alerts (
	alert_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	offender_book_id bigint NOT NULL,
	root_offender_id bigint,
	alert_seq integer NOT NULL,
	alert_type varchar(12) NOT NULL,
	alert_code varchar(12) NOT NULL,
	authorize_person_text varchar(40),
	create_date timestamp,
	alert_status varchar(12) NOT NULL,
	verified_flag varchar(1) NOT NULL DEFAULT 'N',
	expiry_date timestamp,
	comment_text varchar(1000),
	caseload_id varchar(6),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	caseload_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_alerts IS E'Alerts pertain to cautions such as security, medical or transport alerts.- Retrofitted';
COMMENT ON COLUMN offender_alerts.alert_code IS E'Reference Code [ ALERT_CODE ] : The alert code associated with the type entered.
 For example, code - Retrofitted';
COMMENT ON COLUMN offender_alerts.alert_date IS E'This indicates the date the alert was imposed on the offender. - Retrofitted';
COMMENT ON COLUMN offender_alerts.alert_seq IS E'Sequence number forming part of primary key. - Retrofitted';
COMMENT ON COLUMN offender_alerts.alert_status IS E'Refrence Code [ STATUS ] : Alerts can either be active or inactive. They become inactive after passi - Retrofitted';
COMMENT ON COLUMN offender_alerts.alert_type IS E' Refrence Code [ ALERT ] :The type of alert placed on offender"s record. ie. Security,
 Medical, Tra - Retrofitted';
COMMENT ON COLUMN offender_alerts.authorize_person_text IS E'Person AUTHORIZING PLACEMENT OF ALERT. - Retrofitted';
COMMENT ON COLUMN offender_alerts.caseload_type IS E'Reference codes (CSLD_TYPE)';
COMMENT ON COLUMN offender_alerts.comment_text IS E' Comments describing the reason for the alert. - Retrofitted';
COMMENT ON COLUMN offender_alerts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_alerts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_alerts.expiry_date IS E'Expiry Date of the Alert - Retrofitted';
COMMENT ON COLUMN offender_alerts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_alerts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_alerts.offender_book_id IS E' System identifier for offender booking. - Retrofitted';
COMMENT ON COLUMN offender_alerts.verified_flag IS E' - Retrofitted';

CREATE TABLE offender_alerts_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	alert_date timestamp,
	offender_book_id bigint,
	root_offender_id bigint,
	alert_seq integer,
	alert_type varchar(12),
	alert_code varchar(12),
	authorize_person_text varchar(40),
	create_date timestamp,
	alert_status varchar(12),
	verified_flag varchar(1),
	expiry_date timestamp,
	comment_text varchar(1000),
	caseload_id varchar(6),
	modify_user_id varchar(32),
	caseload_type varchar(12),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_applications (
	off_app_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	application_type varchar(12) NOT NULL,
	application_date timestamp NOT NULL,
	agy_loc_id varchar(6),
	disposition_status varchar(12),
	disposition_type varchar(12),
	disp_comment varchar(240),
	application_status varchar(12),
	disposition_date timestamp,
	appl_comment varchar(240),
	creation_date timestamp,
	creation_user varchar(32),
	caseload_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_applications.appl_comment IS E'Comment Text';
COMMENT ON COLUMN offender_applications.application_status IS E'Standard Reference Code';
COMMENT ON COLUMN offender_applications.application_type IS E'Standard Reference Code';
COMMENT ON COLUMN offender_applications.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_applications.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_applications.disp_comment IS E'Comment Text';
COMMENT ON COLUMN offender_applications.disposition_status IS E'Standard Reference Code';
COMMENT ON COLUMN offender_applications.disposition_type IS E'Standard Reference Code';
COMMENT ON COLUMN offender_applications.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_applications.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_appl_sentences (
	oas_id bigint NOT NULL,
	off_app_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_appl_sentences.oas_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_appl_sentences.offender_book_id IS E'Unique identifier for an offender booking';

CREATE TABLE offender_assessments (
	offender_book_id bigint NOT NULL,
	assessment_seq integer NOT NULL,
	assessment_date timestamp NOT NULL,
	assessment_type_id bigint,
	score decimal(6,2),
	assess_status varchar(12) NOT NULL,
	calc_sup_level_type varchar(12),
	assess_staff_id integer NOT NULL,
	assess_comment_text varchar(4000),
	override_reason_text varchar(40),
	place_agy_loc_id varchar(6),
	overrided_sup_level_type varchar(12),
	override_comment_text varchar(240),
	override_staff_id integer,
	evaluation_date timestamp,
	next_review_date timestamp,
	evaluation_result_code varchar(12),
	review_sup_level_type varchar(12),
	review_placement_text varchar(240),
	review_committe_code varchar(12),
	committe_comment_text varchar(240),
	review_place_agy_loc_id varchar(6),
	review_sup_level_text varchar(240),
	modify_user_id varchar(32),
	assess_committe_code varchar(12),
	creation_date timestamp,
	creation_user varchar(32),
	approved_sup_level_type varchar(12),
	assessment_create_location varchar(6),
	assessor_staff_id integer,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	override_user_id varchar(32),
	override_reason varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_assessments IS E'Allows for a calculated security level assessment for an offender.';
COMMENT ON COLUMN offender_assessments.assess_comment_text IS E'Offender assessment comment.';
COMMENT ON COLUMN offender_assessments.assess_staff_id IS E'Userid performing assessment.';
COMMENT ON COLUMN offender_assessments.assess_status IS E'Reference Code ( STATUS ) - ie. A-Active, P-Pending, I-Inactive.';
COMMENT ON COLUMN offender_assessments.assessment_create_location IS E'Recording the location where assessment was performed';
COMMENT ON COLUMN offender_assessments.assessment_date IS E'Assessment date.';
COMMENT ON COLUMN offender_assessments.assessment_seq IS E' System generated sequence number forming part of primary key.';
COMMENT ON COLUMN offender_assessments.assessment_type_id IS E'Assessment ID where Assessment Class = "TYPE"';
COMMENT ON COLUMN offender_assessments.assessor_staff_id IS E'Recording of the staff id  who performed the assessment';
COMMENT ON COLUMN offender_assessments.calc_sup_level_type IS E'Reference Code ( SUP_LVL_TYPE )';
COMMENT ON COLUMN offender_assessments.committe_comment_text IS E'Assessment committee comments.';
COMMENT ON COLUMN offender_assessments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_assessments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_assessments.evaluation_date IS E'Date the evaluation occurrred.';
COMMENT ON COLUMN offender_assessments.evaluation_result_code IS E'Evaluation result ie. Approved, Rejected, Approved with Changes.';
COMMENT ON COLUMN offender_assessments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_assessments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_assessments.next_review_date IS E'Next scheduled review based upon number of days since last review.';
COMMENT ON COLUMN offender_assessments.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_assessments.override_comment_text IS E'Override Reason Text';
COMMENT ON COLUMN offender_assessments.override_reason_text IS E' Reason for override.';
COMMENT ON COLUMN offender_assessments.override_staff_id IS E'Override userid.';
COMMENT ON COLUMN offender_assessments.overrided_sup_level_type IS E'Override security level ie. Minimum, Medium, Maximum..';
COMMENT ON COLUMN offender_assessments.place_agy_loc_id IS E'Agency location of placement.';
COMMENT ON COLUMN offender_assessments.review_committe_code IS E'Assessment committe ie. Reception, Program Review, Classification..';
COMMENT ON COLUMN offender_assessments.review_place_agy_loc_id IS E'Revised agency location placement.';
COMMENT ON COLUMN offender_assessments.review_placement_text IS E'Reviewed placement comment.';
COMMENT ON COLUMN offender_assessments.review_sup_level_text IS E' Approved security level comment.';
COMMENT ON COLUMN offender_assessments.review_sup_level_type IS E'Approved security level.';
COMMENT ON COLUMN offender_assessments.score IS E'This calculated score will determine the offender"s security level.';

CREATE TABLE offender_assessment_items (
	offender_book_id bigint NOT NULL,
	assessment_seq integer NOT NULL,
	item_seq integer NOT NULL,
	assessment_id bigint NOT NULL,
	score decimal(6,2) NOT NULL,
	comment_text varchar(4000),
	parent_assessment_id bigint,
	rank smallint,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	answered_flag varchar(1),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_assessment_items IS E'Offender Assessment Detailed Item scores';
COMMENT ON COLUMN offender_assessment_items.assessment_id IS E'System generated identifer for an assessment.';
COMMENT ON COLUMN offender_assessment_items.assessment_seq IS E'System generated sequence number forming part of primary key.';
COMMENT ON COLUMN offender_assessment_items.create_date IS E'Populates with sysdate while creating a new record';
COMMENT ON COLUMN offender_assessment_items.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_assessment_items.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_assessment_items.item_seq IS E'System generated sequence number forming part of primary key.';
COMMENT ON COLUMN offender_assessment_items.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_assessment_items.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_assessment_items.offender_book_id IS E'Unique identifer for an offender booking.';
COMMENT ON COLUMN offender_assessment_items.rank IS E'Stores rank value from assessments';
COMMENT ON COLUMN offender_assessment_items.score IS E'Assessment calculation score.';

CREATE TABLE offender_assets (
	assest_seq bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	assest_type varchar(12) NOT NULL,
	amount decimal(11,2) NOT NULL,
	partial_to_date_flag varchar(1),
	to_date timestamp,
	comment_text varchar(240),
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_assets.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_assets.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_assets.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_assets.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_associated_parties (
	associated_party_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	party_type varchar(12) NOT NULL,
	party_id varchar(10) NOT NULL,
	relationship_code varchar(12) NOT NULL,
	victim_email_addr varchar(30),
	age smallint,
	ethnicity varchar(12),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	case_id bigint,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_assoc_party_notes (
	associated_party_id bigint NOT NULL,
	note_seq integer NOT NULL,
	note_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	note_type varchar(12) NOT NULL,
	note_subtype varchar(12),
	casenote_text varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_assoc_prty_contacts (
	associated_party_id bigint NOT NULL,
	party_seq bigint NOT NULL,
	person_id bigint NOT NULL,
	primary_contact_flag varchar(1) NOT NULL DEFAULT 'N',
	relationship varchar(12),
	notification_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_assoc_p_cnt_notifs (
	associated_party_id bigint NOT NULL,
	party_seq bigint NOT NULL,
	notification_seq integer NOT NULL,
	notification_code varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_assoc_p_event_notifs (
	trg_event_id bigint NOT NULL,
	event_date timestamp NOT NULL,
	offender_book_id bigint NOT NULL,
	notification_code varchar(12) NOT NULL,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_assoc_p_notifs (
	associated_party_id bigint NOT NULL,
	notification_seq integer NOT NULL,
	notification_code varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_authorised_visitors (
	offender_book_id bigint NOT NULL,
	visitor_seq bigint NOT NULL,
	visitor_type varchar(10) NOT NULL,
	contact_type varchar(12) NOT NULL,
	relationship_type varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL,
	person_id bigint,
	visitor_offender_book_id bigint,
	approved_visitor_flag varchar(1) DEFAULT 'Y',
	comment_text varchar(240),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_authorised_visitors IS E'This table will store all the authorised visitors for an offender.
                                                  Authorised Visitor can be a Person or an offender.';
COMMENT ON COLUMN offender_authorised_visitors.approved_visitor_flag IS E'Indicates Y/N for an approved Visitor.';
COMMENT ON COLUMN offender_authorised_visitors.comment_text IS E'Free text entry column to store comments.';
COMMENT ON COLUMN offender_authorised_visitors.contact_type IS E'Contact type between visitor of type Person or offender and Offender.';
COMMENT ON COLUMN offender_authorised_visitors.create_date IS E'Date when the record got created.';
COMMENT ON COLUMN offender_authorised_visitors.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_authorised_visitors.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_authorised_visitors.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_authorised_visitors.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_authorised_visitors.offender_book_id IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN offender_authorised_visitors.person_id IS E'A unique identifier for each person who is authorised to visit offender.';
COMMENT ON COLUMN offender_authorised_visitors.relationship_type IS E'Relationship type between visitor of type person or offender and Offender.';
COMMENT ON COLUMN offender_authorised_visitors.visitor_offender_book_id IS E'A unique identifier for each offender booking who is authorised to visit another offender.';
COMMENT ON COLUMN offender_authorised_visitors.visitor_seq IS E'A running sequence for each visitor under an offender booking.';
COMMENT ON COLUMN offender_authorised_visitors.visitor_type IS E'An indicator whether the Visitor is a Person or an Offender.';

CREATE TABLE offender_bail_details (
	offender_book_id bigint NOT NULL,
	offender_charge_id bigint NOT NULL,
	bail_status varchar(12) NOT NULL,
	cash_flag varchar(1) NOT NULL DEFAULT 'Y',
	cash decimal(11,2),
	surety decimal(11,2),
	property decimal(11,2),
	perfected_datetime timestamp,
	perfected_by varchar(32),
	method varchar(12),
	comment_text varchar(240),
	bail_date timestamp,
	judge varchar(40),
	receipt_reference_text varchar(20),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_balances (
	offender_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	txn_entry_date timestamp NOT NULL,
	last_txn_number integer NOT NULL,
	modify_user_id varchar(32),
	current_balance decimal(9,2),
	holding_balance decimal(9,2),
	foreign_currency_code varchar(12),
	foreign_currency_balance decimal(9,2),
	safe_flag varchar(1) NOT NULL,
	account_closed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_balances IS E'- Retrofitted';
COMMENT ON COLUMN offender_balances.account_closed_flag IS E' - Column already exists';
COMMENT ON COLUMN offender_balances.caseload_id IS E' - Column already exists';
COMMENT ON COLUMN offender_balances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_balances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_balances.current_balance IS E' - Column already exists';
COMMENT ON COLUMN offender_balances.foreign_currency_balance IS E' - Column already exists';
COMMENT ON COLUMN offender_balances.foreign_currency_code IS E'Reference Code ( CURRENCY )';
COMMENT ON COLUMN offender_balances.holding_balance IS E' - Column already exists';
COMMENT ON COLUMN offender_balances.last_txn_number IS E' - Column already exists';
COMMENT ON COLUMN offender_balances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_balances.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_balances.safe_flag IS E' - Column already exists';
COMMENT ON COLUMN offender_balances.txn_entry_date IS E' - Column already exists';

CREATE TABLE offender_beneficiaries (
	beneficiary_id bigint NOT NULL,
	offender_deduction_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	person_id bigint,
	corporate_id bigint,
	priority smallint,
	amount decimal(11,2),
	percent smallint,
	override_amount decimal(11,2),
	received_amount decimal(11,2),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	unknown_ben_id bigint,
	comment_text varchar(240),
	monthly_amount decimal(11,2),
	recursive_amount decimal(11,2),
	tbd_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_beneficiaries.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_beneficiaries.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_beneficiaries.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_beneficiaries.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_beneficiaries.tbd_flag IS E'This flag allows for the ability to highlight obligation where the amount will be determined at a later stage after processing the obligation.';

CREATE TABLE offender_billing_details (
	offender_billing_id bigint NOT NULL,
	offender_booking_id bigint NOT NULL,
	agency_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	billing_type varchar(12) NOT NULL,
	effective_date_start timestamp NOT NULL,
	billing_from_date timestamp NOT NULL,
	billing_to_date timestamp NOT NULL,
	total_days bigint,
	billing_inv_number varchar(12),
	invoiced_amount decimal(8,2),
	comments varchar(240),
	start_date timestamp,
	end_date timestamp,
	imp_agy_billing_detail_id bigint,
	effective_start_time timestamp,
	start_time timestamp,
	end_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	invoice_start_date timestamp,
	invoice_end_date timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_billing_details.invoice_end_date IS E'End date of the Invoice Billing Period';
COMMENT ON COLUMN offender_billing_details.invoice_start_date IS E'Start date of the Invoice Billing Period';

CREATE TABLE offender_billing_details_tmp (
	offender_billing_id bigint NOT NULL,
	offender_booking_id bigint NOT NULL,
	agency_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	billing_type varchar(12) NOT NULL,
	effective_date_start timestamp NOT NULL,
	billing_from_date timestamp NOT NULL,
	billing_to_date timestamp NOT NULL,
	start_date timestamp,
	end_date timestamp,
	total_days bigint,
	billing_inv_number varchar(12),
	invoiced_amount decimal(8,2),
	confirm_flag varchar(1) NOT NULL DEFAULT 'N',
	comments varchar(240),
	effective_start_time timestamp,
	start_time timestamp,
	end_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	override_amount bigint,
	offender_id_display varchar(10),
	last_name varchar(35),
	first_name varchar(35),
	case_id bigint,
	imprisonment_status varchar(12),
	eligible_date timestamp,
	case_number varchar(40),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_billing_details_tmp.case_number IS E'Allows users to select the offender case to which billings shall be associated.
';
COMMENT ON COLUMN offender_billing_details_tmp.eligible_date IS E'Allows users to define the date on which the offender becomes eligible for billing to begin.
';

CREATE TABLE offender_billing_profiles (
	offender_booking_id bigint NOT NULL,
	agency_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	billing_type varchar(12) NOT NULL,
	effective_date_start timestamp NOT NULL,
	effective_date_end timestamp,
	create_date timestamp DEFAULT LOCALTIMESTAMP,
	rate decimal(8,2),
	comments varchar(240),
	imp_agy_billing_detail_id bigint,
	effective_start_time timestamp,
	effective_end_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	case_id bigint,
	imprisonment_status varchar(12),
	eligible_date timestamp,
	case_number varchar(40),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_billing_profiles.case_number IS E'Allows users to select the offender case to which billings shall be associated.
';
COMMENT ON COLUMN offender_billing_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_billing_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_billing_profiles.eligible_date IS E'Allows users to define the date on which the offender becomes eligible for billing to begin.
';
COMMENT ON COLUMN offender_billing_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_billing_profiles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_bookings (
	offender_book_id bigint NOT NULL,
	booking_begin_date timestamp NOT NULL,
	booking_end_date timestamp,
	booking_no varchar(14),
	offender_id bigint NOT NULL,
	agy_loc_id varchar(6),
	living_unit_id bigint,
	disclosure_flag varchar(1) NOT NULL DEFAULT 'Y',
	in_out_status varchar(12) NOT NULL,
	active_flag varchar(1),
	booking_status varchar(12),
	youth_adult_code varchar(12) NOT NULL,
	finger_printed_staff_id integer,
	search_staff_id integer,
	photo_taking_staff_id integer,
	assigned_staff_id integer,
	create_agy_loc_id varchar(6),
	booking_type varchar(12),
	booking_created_date timestamp,
	root_offender_id bigint,
	agency_iml_id bigint,
	service_fee_flag varchar(1),
	earned_credit_level varchar(12),
	ekstrand_credit_level varchar(12),
	intake_agy_loc_id varchar(6),
	activity_date timestamp,
	intake_caseload_id varchar(6),
	intake_user_id varchar(32),
	case_officer_id integer,
	case_date timestamp,
	case_time timestamp,
	community_active_flag varchar(1),
	create_intake_agy_loc_id varchar(6),
	comm_staff_id integer,
	comm_status varchar(12),
	community_agy_loc_id varchar(6),
	no_comm_agy_loc_id integer,
	comm_staff_role varchar(12),
	agy_loc_id_list varchar(80),
	status_reason varchar(32),
	total_unexcused_absences integer,
	request_name varchar(240),
	record_user_id varchar(30),
	intake_agy_loc_assign_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_bookings IS E'A period of incarceration for an offender from admission through to release.';
COMMENT ON COLUMN offender_bookings.active_flag IS E' Indicates whether the offender is active or inactive at the location.';
COMMENT ON COLUMN offender_bookings.agy_loc_id IS E' The location residing within an agency.';
COMMENT ON COLUMN offender_bookings.assigned_staff_id IS E'COMM Side assigned Staff ID.';
COMMENT ON COLUMN offender_bookings.booking_begin_date IS E' The date the booking was created.';
COMMENT ON COLUMN offender_bookings.booking_end_date IS E'The date the booking was closed.';
COMMENT ON COLUMN offender_bookings.booking_no IS E' The identifier for the booking which is visible to the user.';
COMMENT ON COLUMN offender_bookings.booking_status IS E'Reference Code ( BOOK_STS ). The open or closed status of the booking.';
COMMENT ON COLUMN offender_bookings.case_officer_id IS E'INST side Current Case Officer staff ID, with history assignment in Offender Case Officers';
COMMENT ON COLUMN offender_bookings.comm_staff_id IS E'COMM side case plan staff ID.  History table in Case Plans';
COMMENT ON COLUMN offender_bookings.disclosure_flag IS E'A flag relating to the disclosure of offender information.';
COMMENT ON COLUMN offender_bookings.finger_printed_staff_id IS E'The staff member finger printing the offender.';
COMMENT ON COLUMN offender_bookings.in_out_status IS E'Reference Code ( IN_OUT_STS ) Indicates whether the offender is currently in or out of the facility.';
COMMENT ON COLUMN offender_bookings.living_unit_id IS E'System generated id for offender bed location.';
COMMENT ON COLUMN offender_bookings.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_bookings.offender_id IS E' The unique identifier for an offender.';
COMMENT ON COLUMN offender_bookings.photo_taking_staff_id IS E' Id of staff member who took offender"s image';
COMMENT ON COLUMN offender_bookings.search_staff_id IS E'Id of staff member who searched offender.';
COMMENT ON COLUMN offender_bookings.status_reason IS E'For Ontario Header Status';
COMMENT ON COLUMN offender_bookings.total_unexcused_absences IS E'Captures the total unexcused absences for the offender within the booking based on the event_outcome column in offender_schedules table.';
COMMENT ON COLUMN offender_bookings.youth_adult_code IS E'Reference Code (  YOUTH_ADULT ) : Indicates whether the offender is currently a youth or adult.';

CREATE TABLE offender_booking_agy_locs (
	caseload_id varchar(6) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	offender_book_id bigint NOT NULL,
	addition_date timestamp NOT NULL,
	reason_code varchar(12) NOT NULL,
	removed_reason_code varchar(12),
	removed_date timestamp,
	addition_comment varchar(240),
	removal_comment varchar(240),
	offender_status varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	addition_time timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	ptr_id bigint
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_booking_agy_locs.addition_comment IS E'Comment Text';
COMMENT ON COLUMN offender_booking_agy_locs.agy_loc_id IS E'The location residing within an agency.';
COMMENT ON COLUMN offender_booking_agy_locs.caseload_id IS E' An identifying code for a caseload.';
COMMENT ON COLUMN offender_booking_agy_locs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_booking_agy_locs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_booking_agy_locs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_booking_agy_locs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_booking_agy_locs.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_booking_agy_locs.offender_status IS E'Derived Offender Header Status';
COMMENT ON COLUMN offender_booking_agy_locs.ptr_id IS E'Pre-Transfer Request Id';
COMMENT ON COLUMN offender_booking_agy_locs.reason_code IS E'Standard Reference Code';
COMMENT ON COLUMN offender_booking_agy_locs.removal_comment IS E'Comment Text';

CREATE TABLE offender_booking_details (
	offender_book_id bigint NOT NULL,
	cell_sharing_alert_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	special_needs_text varchar(1000),
	availability_text varchar(1000),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_booking_details.availability_text IS E'Availability details';
COMMENT ON COLUMN offender_booking_details.cell_sharing_alert_flag IS E'?if cell sharing alerted';
COMMENT ON COLUMN offender_booking_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_booking_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_booking_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_booking_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_booking_details.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_booking_details.special_needs_text IS E'Special need details';

CREATE TABLE offender_booking_events (
	offender_book_id bigint NOT NULL,
	event_seq integer NOT NULL DEFAULT 1,
	booking_event_code varchar(12) NOT NULL,
	reason_code varchar(12) NOT NULL,
	from_agy_loc_id varchar(6),
	to_agy_loc_id varchar(6) NOT NULL,
	comment_text varchar(240),
	event_date timestamp,
	event_time timestamp,
	event_user varchar(32),
	creation_user varchar(32),
	creation_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_booking_events.booking_event_code IS E'Reference Code ( BOOK_EVENT ) : The event code of the booking';
COMMENT ON COLUMN offender_booking_events.comment_text IS E'Booking event comment';
COMMENT ON COLUMN offender_booking_events.event_seq IS E' System generated sequence number forming part of primary key.';
COMMENT ON COLUMN offender_booking_events.from_agy_loc_id IS E'The location where offender come from';
COMMENT ON COLUMN offender_booking_events.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_booking_events.reason_code IS E'Reference Code ( BOOK_RSN ) : The booking event reason';
COMMENT ON COLUMN offender_booking_events.to_agy_loc_id IS E'The location where person assigned to';

CREATE TABLE offender_cases (
	case_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	case_info_number varchar(13),
	case_type varchar(12),
	case_status varchar(12),
	combined_case_id bigint,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	begin_date timestamp,
	agy_loc_id varchar(6) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	case_info_prefix varchar(12),
	victim_liaison_unit varchar(12),
	status_update_reason varchar(12),
	status_update_comment varchar(400),
	status_update_date timestamp,
	status_update_staff_id bigint,
	lids_case_number bigint,
	case_seq integer NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_cases IS E'The Offender Cases';
COMMENT ON COLUMN offender_cases.agy_loc_id IS E'The court agency location ID';
COMMENT ON COLUMN offender_cases.begin_date IS E'The Begin date';
COMMENT ON COLUMN offender_cases.case_id IS E'The Case ID';
COMMENT ON COLUMN offender_cases.case_info_number IS E'The case Info number';
COMMENT ON COLUMN offender_cases.case_info_prefix IS E'The Prefix of the case number';
COMMENT ON COLUMN offender_cases.case_seq IS E'The case seq no for the offender';
COMMENT ON COLUMN offender_cases.case_status IS E'The status of the case';
COMMENT ON COLUMN offender_cases.case_type IS E'The case type.  Reference Codes(LEG_CASE_TYP)';
COMMENT ON COLUMN offender_cases.combined_case_id IS E'The combined case ID';
COMMENT ON COLUMN offender_cases.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_cases.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_cases.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_cases.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_cases.offender_book_id IS E'The Ofender Booking ID';
COMMENT ON COLUMN offender_cases.status_update_comment IS E'The comment of status updated';
COMMENT ON COLUMN offender_cases.status_update_date IS E'The date of status updated';
COMMENT ON COLUMN offender_cases.status_update_reason IS E'The reason of status updated';
COMMENT ON COLUMN offender_cases.status_update_staff_id IS E'The staff who perform of status updated';
COMMENT ON COLUMN offender_cases.victim_liaison_unit IS E'The liaison unit in charge of the case';

CREATE TABLE offender_case_associations (
	case_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	companion_id bigint NOT NULL,
	associated_off_book_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_case_associations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_case_associations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_case_associations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_case_associations.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_case_conditions (
	off_case_cond_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	case_plan_id bigint NOT NULL,
	offender_sent_condition_id bigint NOT NULL,
	objective varchar(240),
	comm_condition_type varchar(12) NOT NULL,
	comm_condition_code varchar(12) NOT NULL,
	length integer,
	length_unit varchar(12),
	start_date timestamp,
	end_date timestamp,
	condition_status varchar(12),
	category_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_case_conditions.case_plan_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_case_conditions.comm_condition_code IS E'The conditon code';
COMMENT ON COLUMN offender_case_conditions.comm_condition_type IS E'The conditon type';
COMMENT ON COLUMN offender_case_conditions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_case_conditions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_case_conditions.end_date IS E'End date of the condition';
COMMENT ON COLUMN offender_case_conditions.length IS E'The length of the condtion';
COMMENT ON COLUMN offender_case_conditions.length_unit IS E'The length unit of condition';
COMMENT ON COLUMN offender_case_conditions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_case_conditions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_case_conditions.objective IS E'Goal related to mitigation of this Risk/Need';
COMMENT ON COLUMN offender_case_conditions.off_case_cond_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_case_conditions.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_case_conditions.offender_sent_condition_id IS E'The ID of the offender sentence condition';
COMMENT ON COLUMN offender_case_conditions.start_date IS E'Start date of the condition';

CREATE TABLE offender_case_identifiers (
	identifier_type varchar(12) NOT NULL,
	case_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	identifier_no varchar(240) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_case_identifiers.case_id IS E'The Case ID';
COMMENT ON COLUMN offender_case_identifiers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_case_identifiers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_case_identifiers.identifier_no IS E'The case identifier number';
COMMENT ON COLUMN offender_case_identifiers.identifier_type IS E'The case identifier type.  Reference Code(CASE_ID_TYPE)';
COMMENT ON COLUMN offender_case_identifiers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_case_identifiers.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_case_issues (
	off_rq_det_id bigint NOT NULL,
	oci_seq bigint NOT NULL,
	case_issue varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_case_issues.case_issue IS E'Standard Reference Code';
COMMENT ON COLUMN offender_case_issues.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_case_issues.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_case_issues.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_case_issues.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_case_issues.off_rq_det_id IS E'Standard Number ID';

CREATE TABLE offender_case_notes (
	offender_book_id bigint NOT NULL,
	contact_date timestamp NOT NULL,
	contact_time timestamp NOT NULL,
	case_note_type varchar(12) NOT NULL,
	case_note_sub_type varchar(12) NOT NULL,
	staff_id bigint NOT NULL,
	case_note_text varchar(4000),
	amendment_flag varchar(1) NOT NULL DEFAULT 'N',
	iwp_flag varchar(1) NOT NULL DEFAULT 'N',
	check_box1 varchar(1) NOT NULL DEFAULT 'N',
	check_box2 varchar(1) NOT NULL DEFAULT 'N',
	check_box3 varchar(1) NOT NULL DEFAULT 'N',
	check_box4 varchar(1) NOT NULL DEFAULT 'N',
	check_box5 varchar(1) NOT NULL DEFAULT 'N',
	event_id bigint,
	case_note_id bigint NOT NULL,
	note_source_code varchar(12),
	date_creation timestamp DEFAULT LOCALTIMESTAMP,
	time_creation timestamp,
	seal_flag varchar(1),
	object_type varchar(20),
	object_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
) ;

CREATE TABLE offender_case_note_sents (
	case_note_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_case_note_sents IS E'The relation between case note and sentences';
COMMENT ON COLUMN offender_case_note_sents.case_note_id IS E'The ID of the case note';
COMMENT ON COLUMN offender_case_note_sents.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_case_note_sents.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_case_note_sents.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_case_note_sents.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_case_note_sents.offender_book_id IS E'The ID of the offender Booking';
COMMENT ON COLUMN offender_case_note_sents.sentence_seq IS E'The sentence seq';

CREATE TABLE offender_case_officers (
	case_officer_id integer NOT NULL,
	case_assigned_date timestamp NOT NULL,
	case_assigned_time timestamp NOT NULL,
	user_id varchar(32),
	case_agy_loc_id varchar(6),
	offender_book_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_case_officers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_case_officers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_case_officers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_case_officers.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_case_statuses (
	case_id bigint NOT NULL,
	status_update_reason varchar(12) NOT NULL,
	status_update_comment varchar(400),
	status_update_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	status_update_staff_id bigint NOT NULL,
	offender_case_status_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_case_statuses IS E'The historical record of status updated reasons';
COMMENT ON COLUMN offender_case_statuses.case_id IS E'The case ID';
COMMENT ON COLUMN offender_case_statuses.offender_case_status_id IS E'The ID of the status update reason history';
COMMENT ON COLUMN offender_case_statuses.status_update_comment IS E'The comment of the update reason';
COMMENT ON COLUMN offender_case_statuses.status_update_date IS E'The date of the reaon updated';
COMMENT ON COLUMN offender_case_statuses.status_update_reason IS E'The update reason';
COMMENT ON COLUMN offender_case_statuses.status_update_staff_id IS E'The staff who perform the update reasons';

CREATE TABLE offender_charges (
	offender_book_id bigint NOT NULL,
	offender_charge_id bigint NOT NULL,
	statute_code varchar(12) NOT NULL,
	offence_code varchar(25) NOT NULL,
	no_of_offences smallint,
	offence_date timestamp,
	offence_range_date timestamp,
	plea_code varchar(12),
	property_value decimal(10,2),
	total_property_value decimal(10,2),
	cjit_offence_code_1 varchar(21),
	cjit_offence_code_2 varchar(8),
	cjit_offence_code_3 varchar(3),
	charge_status varchar(12),
	create_user_id varchar(32) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	result_code_1 varchar(12),
	result_code_2 varchar(12),
	result_code_1_indicator varchar(12),
	result_code_2_indicator varchar(12),
	case_id bigint NOT NULL,
	most_serious_flag varchar(1) NOT NULL DEFAULT 'N',
	charge_seq integer,
	order_id integer,
	lids_offence_number integer,
	offence_type varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_charges IS E'The offences charged ';
COMMENT ON COLUMN offender_charges.case_id IS E'The Offender Cases';
COMMENT ON COLUMN offender_charges.charge_status IS E'The charge status.  Reference Code(CHARGE_STS)';
COMMENT ON COLUMN offender_charges.cjit_offence_code_1 IS E'CJIT Code 1';
COMMENT ON COLUMN offender_charges.cjit_offence_code_2 IS E'CJIT Code 2';
COMMENT ON COLUMN offender_charges.cjit_offence_code_3 IS E'CJIT Code 3';
COMMENT ON COLUMN offender_charges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_charges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_charges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_charges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_charges.most_serious_flag IS E'?The most serious offence out of all offences';
COMMENT ON COLUMN offender_charges.no_of_offences IS E'No of offences';
COMMENT ON COLUMN offender_charges.offence_code IS E'The Offence Code';
COMMENT ON COLUMN offender_charges.offence_date IS E'The date of the offence';
COMMENT ON COLUMN offender_charges.offence_range_date IS E'The end date of the offence';
COMMENT ON COLUMN offender_charges.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_charges.offender_charge_id IS E'PK The offender charge ID';
COMMENT ON COLUMN offender_charges.plea_code IS E'The plea.  Reference Code(PLEA_STATUS)';
COMMENT ON COLUMN offender_charges.property_value IS E'The value of the property of the offence';
COMMENT ON COLUMN offender_charges.result_code_1 IS E'The result Code 1of the offender';
COMMENT ON COLUMN offender_charges.result_code_1_indicator IS E'The indicator of the result code 1';
COMMENT ON COLUMN offender_charges.result_code_2 IS E'The result code 2 of the offender';
COMMENT ON COLUMN offender_charges.result_code_2_indicator IS E'The indicator of the result code 2';
COMMENT ON COLUMN offender_charges.statute_code IS E'The Statute Code';
COMMENT ON COLUMN offender_charges.total_property_value IS E'The total value of the property of the offence';

CREATE TABLE offender_charges_hty (
	sentence_event_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	charge_seq bigint NOT NULL DEFAULT 99,
	investigation_id bigint,
	order_id bigint,
	offence_code varchar(25),
	statute_code varchar(12),
	initial_counts smallint,
	cleared_counts smallint,
	attemped_flag varchar(1) DEFAULT 'Y',
	offense_date timestamp,
	offence_type varchar(12),
	charge_status varchar(12),
	vcl_amount decimal(11,2),
	vcl_comment_text varchar(240),
	description varchar(40),
	update_allowed_flag varchar(1) DEFAULT 'Y',
	charge_bail_amount decimal(10,2),
	bail_type varchar(12),
	original_bail_amount decimal(10,2),
	bail_allowed_flag varchar(1) DEFAULT 'Y',
	good_time_allowed_flag varchar(1),
	commit_date timestamp,
	attempted_flag varchar(1),
	conviction_date timestamp,
	creation_date timestamp,
	creation_user varchar(32),
	drugs_involved_flag varchar(1),
	firearms_involved_flag varchar(1),
	intoximeter smallint,
	offence_date_range timestamp,
	other_charges varchar(240),
	sex_involved_flag varchar(1),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_charges_hty IS E'Charges attached to an order.';
COMMENT ON COLUMN offender_charges_hty.attemped_flag IS E'Refers to an attempted category of offence - CSS Michigan.';
COMMENT ON COLUMN offender_charges_hty.bail_allowed_flag IS E' - Column already exists';
COMMENT ON COLUMN offender_charges_hty.bail_type IS E'Reference Code ( Bail Type ). Charge bail type - U.S. Market Only.';
COMMENT ON COLUMN offender_charges_hty.charge_bail_amount IS E'The amount of bail calculated for a charge - U.S. market!!';
COMMENT ON COLUMN offender_charges_hty.charge_seq IS E'Sequence number for the charge.';
COMMENT ON COLUMN offender_charges_hty.charge_status IS E'Reference Code ( CHARGE_STS ). The status of the offence (charge).';
COMMENT ON COLUMN offender_charges_hty.cleared_counts IS E'Number of offence counts cleared during court process.';
COMMENT ON COLUMN offender_charges_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_charges_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_charges_hty.description IS E' - Column already exists';
COMMENT ON COLUMN offender_charges_hty.initial_counts IS E'Number of counts for this offence on order.';
COMMENT ON COLUMN offender_charges_hty.investigation_id IS E'Relates to Report Assignments in CSS.';
COMMENT ON COLUMN offender_charges_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_charges_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_charges_hty.offence_code IS E'Offence associated with an order.';
COMMENT ON COLUMN offender_charges_hty.offence_type IS E'Reference Code ( OFFENCE_TYPE ) : Offence Type ie. Summary, Indictable..';
COMMENT ON COLUMN offender_charges_hty.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_charges_hty.offense_date IS E'Date offence committed - not used.';
COMMENT ON COLUMN offender_charges_hty.order_id IS E'Identifier for order.';
COMMENT ON COLUMN offender_charges_hty.original_bail_amount IS E' - Column already exists';
COMMENT ON COLUMN offender_charges_hty.statute_code IS E'Offences reside within a statute.';
COMMENT ON COLUMN offender_charges_hty.update_allowed_flag IS E' - Column already exists';
COMMENT ON COLUMN offender_charges_hty.vcl_amount IS E'Victims compensation levy amount.';
COMMENT ON COLUMN offender_charges_hty.vcl_comment_text IS E'VCL Comment';

CREATE TABLE offender_charge_schedules (
	off_chg_sch_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	charge_seq integer NOT NULL,
	order_id bigint NOT NULL,
	schedule_id bigint NOT NULL,
	appearance_flag varchar(1) NOT NULL DEFAULT 'Y',
	statute_code varchar(12) NOT NULL,
	offence_code varchar(25) NOT NULL,
	initial_counts smallint NOT NULL,
	offence_date timestamp,
	offence_date_range timestamp,
	offence_type varchar(12),
	plea_code varchar(12),
	offence_value1 decimal(10,2),
	offence_value2 decimal(10,2),
	cjit_offence_code1 varchar(12),
	cjit_offence_code2 varchar(21),
	cjit_offence_code3 varchar(12),
	comment_text varchar(240),
	result_code1 varchar(12),
	result_code2 varchar(12),
	result_code1_indicator varchar(12),
	result_code2_indicator varchar(12),
	charge_status varchar(12),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_charge_schedules IS E'Charges attached to an order.';
COMMENT ON COLUMN offender_charge_schedules.appearance_flag IS E'Identifies the charges being heard this court appearance.';
COMMENT ON COLUMN offender_charge_schedules.charge_seq IS E'Sequence number for the charge.';
COMMENT ON COLUMN offender_charge_schedules.charge_status IS E'The status of the offence (charge).';
COMMENT ON COLUMN offender_charge_schedules.cjit_offence_code1 IS E'CJIT Offence Code ';
COMMENT ON COLUMN offender_charge_schedules.cjit_offence_code2 IS E'CJIT Offence Code  ';
COMMENT ON COLUMN offender_charge_schedules.cjit_offence_code3 IS E'CJIT Offence Code  ';
COMMENT ON COLUMN offender_charge_schedules.comment_text IS E'Free text entry for Offences Taken ';
COMMENT ON COLUMN offender_charge_schedules.create_date IS E'Charges Created date';
COMMENT ON COLUMN offender_charge_schedules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_charge_schedules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_charge_schedules.initial_counts IS E'Number of counts for this offence .';
COMMENT ON COLUMN offender_charge_schedules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_charge_schedules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_charge_schedules.off_chg_sch_id IS E'Unique identifier for an offender legal schedule charges.';
COMMENT ON COLUMN offender_charge_schedules.offence_code IS E'Offence associated with a Charge.';
COMMENT ON COLUMN offender_charge_schedules.offence_date IS E'Date offence committed.';
COMMENT ON COLUMN offender_charge_schedules.offence_date_range IS E'Range of Offence Date';
COMMENT ON COLUMN offender_charge_schedules.offence_type IS E'Reference Code ( OFFENCE_TYPE ) : Offence Type ie. Summary, Indictable..';
COMMENT ON COLUMN offender_charge_schedules.offence_value1 IS E'Monetary value ';
COMMENT ON COLUMN offender_charge_schedules.offence_value2 IS E'Monetary value ';
COMMENT ON COLUMN offender_charge_schedules.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_charge_schedules.order_id IS E'Identifier for order.';
COMMENT ON COLUMN offender_charge_schedules.plea_code IS E'Plea Code ';
COMMENT ON COLUMN offender_charge_schedules.result_code1 IS E'Magistrate Court description code. ';
COMMENT ON COLUMN offender_charge_schedules.result_code1_indicator IS E'Parent code for selected Result Code1 ';
COMMENT ON COLUMN offender_charge_schedules.result_code2 IS E'Magistrate Court description code ';
COMMENT ON COLUMN offender_charge_schedules.result_code2_indicator IS E'parent code for selected Result Code2 ';
COMMENT ON COLUMN offender_charge_schedules.schedule_id IS E'Offences linked Schedule Id.';
COMMENT ON COLUMN offender_charge_schedules.statute_code IS E'Offences reside within a statute.';

CREATE TABLE offender_checklist_details (
	offender_checklist_id bigint NOT NULL,
	profile_seq bigint NOT NULL,
	profile_type varchar(12) NOT NULL,
	checklist_type varchar(12) NOT NULL,
	profile_code varchar(40),
	list_seq integer,
	comment_text varchar(240),
	caseload_type varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_chk_list_details (
	offender_book_id bigint NOT NULL,
	check_list_category varchar(12) NOT NULL,
	check_list_code varchar(12) NOT NULL,
	confirmed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	list_seq smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_chk_list_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_chk_list_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_chk_list_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_chk_list_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_cip_details (
	offender_book_id bigint NOT NULL,
	placement_seq integer NOT NULL,
	placement_type varchar(12) NOT NULL,
	placement_reason_code varchar(12) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	req_by_per_code varchar(12),
	auth_by_per_code varchar(12) NOT NULL,
	auth_by_per_name varchar(32) NOT NULL,
	effective_date timestamp NOT NULL,
	effective_time timestamp NOT NULL,
	duration_type varchar(12) NOT NULL,
	duration bigint,
	review_date timestamp,
	expiry_date timestamp,
	expiry_time timestamp,
	comment_text varchar(4000),
	rel_by_per_code varchar(12),
	rel_by_per_name varchar(32),
	release_date timestamp,
	release_time timestamp,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_class_programs (
	offender_book_id bigint NOT NULL,
	class_prog_seq integer NOT NULL DEFAULT 99,
	class_program_type varchar(12) NOT NULL,
	program_result_code varchar(12),
	record_status varchar(12),
	effective_date timestamp NOT NULL,
	review_date timestamp,
	approved_staff_id integer,
	complete_date timestamp,
	entry_comment_text varchar(240),
	condition_comment_text varchar(240),
	default_comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_class_programs IS E'Details associated with offender"s assignment to classification programs.';
COMMENT ON COLUMN offender_class_programs.approved_staff_id IS E'Approved Staff ID';
COMMENT ON COLUMN offender_class_programs.class_prog_seq IS E'Sequence number for program assignment.';
COMMENT ON COLUMN offender_class_programs.class_program_type IS E'The type of classification program ie. Behaviour Management..';
COMMENT ON COLUMN offender_class_programs.complete_date IS E'Program completion date.';
COMMENT ON COLUMN offender_class_programs.condition_comment_text IS E'Program assignment conditions.';
COMMENT ON COLUMN offender_class_programs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_class_programs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_class_programs.default_comment_text IS E'Result comment.';
COMMENT ON COLUMN offender_class_programs.effective_date IS E'Effective date for program assignment.';
COMMENT ON COLUMN offender_class_programs.entry_comment_text IS E'Program assignment comment.';
COMMENT ON COLUMN offender_class_programs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_class_programs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_class_programs.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_class_programs.program_result_code IS E'Program result ie. Completed, Incomplete..';
COMMENT ON COLUMN offender_class_programs.record_status IS E'The status of the management program assignment.';
COMMENT ON COLUMN offender_class_programs.review_date IS E'Review date for program assignment.';

CREATE TABLE offender_clothes (
	offender_book_id bigint NOT NULL,
	clothes_seq integer NOT NULL,
	clothes_type varchar(12) NOT NULL,
	available_clothes_type varchar(12),
	clothes_size_code varchar(12) NOT NULL,
	issue_reason_code varchar(12) NOT NULL,
	quantity smallint NOT NULL,
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_clothes IS E'- Retrofitted';
COMMENT ON COLUMN offender_clothes.available_clothes_type IS E'Reference Code (CLOTH_TYPE)';
COMMENT ON COLUMN offender_clothes.clothes_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_clothes.clothes_size_code IS E'Reference Code (CLOTH_SIZE)';
COMMENT ON COLUMN offender_clothes.clothes_type IS E'Reference Code (CLOTH_TYPE)';
COMMENT ON COLUMN offender_clothes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_clothes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_clothes.issue_reason_code IS E'Reference Code (CLOTH_IS_RSN)';
COMMENT ON COLUMN offender_clothes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_clothes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_clothes.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_clothes.quantity IS E' - Column already exists';

CREATE TABLE offender_clothing_bundles (
	offender_book_id bigint NOT NULL,
	bundle_seq integer NOT NULL DEFAULT 99,
	issue_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	issue_time timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	issue_reason_code varchar(12) NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_clothing_bundles.bundle_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_clothing_bundles.comment_text IS E'Comment';
COMMENT ON COLUMN offender_clothing_bundles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_clothing_bundles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_clothing_bundles.issue_reason_code IS E'Reference Code (CLOTH_IS_RSN)';
COMMENT ON COLUMN offender_clothing_bundles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_clothing_bundles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_clothing_bundles.offender_book_id IS E' - Column already exists';

CREATE TABLE offender_clothing_issue (
	offender_clothing_issue_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	issue_reason_code varchar(12) NOT NULL,
	issue_date timestamp NOT NULL,
	issue_time timestamp NOT NULL,
	issue_user_id varchar(32),
	issue_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_clothing_issue IS E'- Retrofitted';
COMMENT ON COLUMN offender_clothing_issue.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_clothing_issue.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_clothing_issue.issue_comment IS E' - Retrofitted';
COMMENT ON COLUMN offender_clothing_issue.issue_date IS E'The date of the clothing issue. - Retrofitted';
COMMENT ON COLUMN offender_clothing_issue.issue_reason_code IS E'Enter the Reason for the issue ( Domain "CLOTH_IS_RSN" ) - Retrofitted';
COMMENT ON COLUMN offender_clothing_issue.issue_time IS E'The time of the clothing issue. - Retrofitted';
COMMENT ON COLUMN offender_clothing_issue.issue_user_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_clothing_issue.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_clothing_issue.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_clothing_issue.offender_book_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_clothing_issue.offender_clothing_issue_id IS E' - Retrofitted';

CREATE TABLE offender_clothing_items (
	offender_clothing_item_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	offender_clothing_issue_id bigint NOT NULL,
	clothes_type varchar(12) NOT NULL,
	clothes_size_code varchar(12),
	quantity smallint NOT NULL,
	secondary_column_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	issued_quality varchar(12) NOT NULL,
	comment_text varchar(256),
	quality_rsn_code varchar(12),
	return_quality varchar(12),
	return_quantity smallint,
	return_date timestamp,
	return_time timestamp,
	return_flag varchar(1),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_clothing_items IS E'- Retrofitted';
COMMENT ON COLUMN offender_clothing_items.clothes_size_code IS E'Enter the size of the clothes to be issued ( Domain "CLOTH_SIZE" ). - Retrofitted';
COMMENT ON COLUMN offender_clothing_items.clothes_type IS E'Enter the type of the clothes to be issued ( Domain "CLOTH_TYPE" ). - Retrofitted';
COMMENT ON COLUMN offender_clothing_items.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_clothing_items.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_clothing_items.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_clothing_items.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_clothing_items.offender_book_id IS E' - Column already exists - Retrofitted';
COMMENT ON COLUMN offender_clothing_items.offender_clothing_issue_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_clothing_items.offender_clothing_item_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_clothing_items.quantity IS E'Enter the number of clothes of this type to be issued. - Retrofitted';
COMMENT ON COLUMN offender_clothing_items.secondary_column_comment IS E' - Retrofitted';

CREATE TABLE offender_codefendants (
	codefendant_seq integer NOT NULL,
	offender_book_id bigint NOT NULL,
	request_id integer,
	cod_offender_book_id bigint,
	first_name varchar(35) NOT NULL,
	last_name varchar(35) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_codefendants IS E'- Retrofitted';
COMMENT ON COLUMN offender_codefendants.cod_offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_codefendants.codefendant_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_codefendants.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_codefendants.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_codefendants.first_name IS E' - Column already exists';
COMMENT ON COLUMN offender_codefendants.last_name IS E' - Column already exists';
COMMENT ON COLUMN offender_codefendants.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_codefendants.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_codefendants.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_codefendants.request_id IS E' - Column already exists';

CREATE TABLE offender_comments (
	offender_book_id bigint NOT NULL,
	comment_seq integer NOT NULL DEFAULT 1,
	comment_type varchar(12) NOT NULL,
	comment_text varchar(240),
	comment_text_2 varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_comments.comment_seq IS E' System generated sequence number forming part of primary key.';
COMMENT ON COLUMN offender_comments.comment_text IS E'Offender Comment';
COMMENT ON COLUMN offender_comments.comment_text_2 IS E'Offender Comment';
COMMENT ON COLUMN offender_comments.comment_type IS E'Reference Code ( COMMENT_TYPE )';
COMMENT ON COLUMN offender_comments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_comments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_comments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_comments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_comments.offender_book_id IS E' The system generated identifier for an offender booking.';

CREATE TABLE offender_community_conditions (
	off_cc_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	comm_condition_type varchar(12) NOT NULL,
	comm_condition_code varchar(12) NOT NULL,
	effective_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	condition_status varchar(12) NOT NULL,
	status_date timestamp NOT NULL,
	offender_book_id bigint NOT NULL,
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	details_text varchar(240),
	expiry_date timestamp,
	condition_text text,
	cso_flag varchar(1),
	financial_flag varchar(1),
	substance_flag varchar(1),
	cso_hours varchar(32),
	condition_amount decimal(11,2),
	list_seq smallint,
	program_units decimal(6,2),
	program_flag varchar(1),
	units_credited decimal(6,2),
	units_remaining decimal(6,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	category_type varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_community_conditions.comm_condition_code IS E'Standard Reference Code';
COMMENT ON COLUMN offender_community_conditions.comm_condition_type IS E'Standard Reference Code';
COMMENT ON COLUMN offender_community_conditions.offender_book_id IS E'Unique identifier for an offender booking';

CREATE TABLE offender_community_files (
	offender_file_seq smallint NOT NULL,
	offender_id bigint NOT NULL,
	file_type varchar(12) NOT NULL,
	file_sub_type varchar(12) NOT NULL,
	offender_file_num bigint NOT NULL,
	volume_seq smallint NOT NULL,
	file_reference varchar(100),
	file_create_date timestamp,
	holding_agy_loc_id varchar(6) NOT NULL,
	holding_staff_id integer,
	non_officer_status varchar(12),
	storage varchar(80),
	resubmission_date timestamp,
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	caseload_type varchar(12) NOT NULL,
	close_file_no varchar(12),
	trans_comment_text varchar(100),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_community_files.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_community_files.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_community_files.file_create_date IS E'Date Created';
COMMENT ON COLUMN offender_community_files.file_reference IS E'The file reference number';
COMMENT ON COLUMN offender_community_files.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_community_files.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_community_files.non_officer_status IS E'holder of the file, must be filled out if no relationship with st';
COMMENT ON COLUMN offender_community_files.offender_file_num IS E'seq within offender but does not increment for new volumes of the same type and subtype';
COMMENT ON COLUMN offender_community_files.offender_file_seq IS E'sequence within offender';
COMMENT ON COLUMN offender_community_files.resubmission_date IS E'?';
COMMENT ON COLUMN offender_community_files.storage IS E'eg filing cabinet #1, drawer 3, archive box #734';

CREATE TABLE offender_comm_restrictions (
	offender_id bigint NOT NULL,
	restriction_seq integer NOT NULL,
	caseload_id varchar(6) NOT NULL,
	restriction_type varchar(12) NOT NULL,
	visit_restriction_code varchar(12),
	effective_date timestamp NOT NULL,
	expiry_date timestamp NOT NULL,
	comment_text varchar(240),
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	authorized_staff_id integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_comm_restrictions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_comm_restrictions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_comm_restrictions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_comm_restrictions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_comm_sup_histories (
	offender_book_id bigint NOT NULL,
	status_seq integer NOT NULL DEFAULT null,
	effective_date timestamp NOT NULL,
	entry_date timestamp NOT NULL,
	create_date timestamp NOT NULL,
	status_code varchar(12) NOT NULL,
	sac_staff_id integer,
	sup_level_type varchar(12),
	comment_txt varchar(2000),
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_comm_sup_histories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_comm_sup_histories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_comm_sup_histories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_comm_sup_histories.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_comm_sup_histories.status_code IS E'Reference_codes COMM_SUP_STS';

CREATE TABLE offender_compact_agreements (
	offender_book_id bigint NOT NULL,
	agreement_seq integer NOT NULL,
	agreement_type varchar(12),
	jurisdiction_agy_loc_id varchar(6),
	agency_name varchar(40),
	contact_name varchar(25),
	movement_date timestamp,
	request_date timestamp,
	return_date timestamp,
	direction_code varchar(12),
	comment_text varchar(240),
	address1 varchar(40),
	address2 varchar(40),
	city varchar(12),
	prov_state_code varchar(12),
	country varchar(12),
	zip_code varchar(10),
	phone_area varchar(4),
	phone varchar(8),
	phone_ext varchar(4),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_compact_agreements IS E'- Retrofitted';
COMMENT ON COLUMN offender_compact_agreements.address1 IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.address2 IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.agency_name IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.agreement_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.agreement_type IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.city IS E'NSW Project : Reference Code (CITY)';
COMMENT ON COLUMN offender_compact_agreements.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.contact_name IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.country IS E'Reference Code (COUNTRY)';
COMMENT ON COLUMN offender_compact_agreements.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_compact_agreements.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_compact_agreements.direction_code IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.jurisdiction_agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_compact_agreements.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_compact_agreements.movement_date IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.phone IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.phone_area IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.phone_ext IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.prov_state_code IS E'Reference Code (PROV_STATE)';
COMMENT ON COLUMN offender_compact_agreements.request_date IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.return_date IS E' - Column already exists';
COMMENT ON COLUMN offender_compact_agreements.zip_code IS E' - Column already exists';

CREATE TABLE offender_configuration (
	id bigint,
	offender_system_table varchar(50),
	offender_system_table_column varchar(50),
	offender_label varchar(20),
	domain_code varchar(20),
	domain_value varchar(20),
	unique_id varchar(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_contact_persons (
	offender_book_id bigint NOT NULL,
	person_id bigint,
	contact_type varchar(12) NOT NULL,
	relationship_type varchar(12) NOT NULL,
	approved_visitor_flag varchar(1) DEFAULT 'N',
	caseload_type varchar(12),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	comment_text varchar(240),
	case_info_number varchar(60),
	aware_of_charges_flag varchar(1),
	can_be_contacted_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	emergency_contact_flag varchar(1) NOT NULL DEFAULT 'N',
	next_of_kin_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'N',
	expiry_date timestamp,
	offender_contact_person_id bigint NOT NULL,
	contact_root_offender_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_contact_persons IS E'Contact person for offender';
COMMENT ON COLUMN offender_contact_persons.active_flag IS E'Is it a active record';
COMMENT ON COLUMN offender_contact_persons.approved_visitor_flag IS E'Is this person an approved visitor?';
COMMENT ON COLUMN offender_contact_persons.aware_of_charges_flag IS E'Is the person aware of the charges';
COMMENT ON COLUMN offender_contact_persons.can_be_contacted_flag IS E'Can be contacted ?';
COMMENT ON COLUMN offender_contact_persons.case_info_number IS E'Case Info Number';
COMMENT ON COLUMN offender_contact_persons.caseload_type IS E'Caseload Type';
COMMENT ON COLUMN offender_contact_persons.comment_text IS E'Comment Text';
COMMENT ON COLUMN offender_contact_persons.contact_type IS E'The contact type with offender ie. Emergency, Professional..';
COMMENT ON COLUMN offender_contact_persons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_contact_persons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_contact_persons.emergency_contact_flag IS E'Is the person emergency contact';
COMMENT ON COLUMN offender_contact_persons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_contact_persons.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_contact_persons.next_of_kin_flag IS E'Is the person next of Kin';
COMMENT ON COLUMN offender_contact_persons.offender_book_id IS E'System generated identifier for an offender booking.';
COMMENT ON COLUMN offender_contact_persons.person_id IS E'System generated identider for a person.';
COMMENT ON COLUMN offender_contact_persons.relationship_type IS E'The relationship with offender ie. Friend, Wife, Brother..';

CREATE TABLE offender_contact_restrictions (
	offender_book_id bigint NOT NULL,
	person_id bigint NOT NULL,
	restriction_seq integer NOT NULL,
	restriction_type varchar(12) NOT NULL,
	restriction_effective_date timestamp NOT NULL,
	restriction_expiry_date timestamp,
	authorized_staff_id integer,
	comment_text varchar(255),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_contact_restrictions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_contact_restrictions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_contact_restrictions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_contact_restrictions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_course_appt_grps (
	offender_course_appt_grp_id bigint NOT NULL,
	start_date timestamp NOT NULL,
	no_of_week integer,
	end_date timestamp,
	off_prgref_id bigint NOT NULL,
	holiday_flag varchar(1) DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_course_appt_grps IS E'The offender course appointment groups';
COMMENT ON COLUMN offender_course_appt_grps.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_course_appt_grps.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_course_appt_grps.end_date IS E'End date';
COMMENT ON COLUMN offender_course_appt_grps.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_course_appt_grps.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_course_appt_grps.no_of_week IS E'No of weeks';
COMMENT ON COLUMN offender_course_appt_grps.off_prgref_id IS E'The offender program profile';
COMMENT ON COLUMN offender_course_appt_grps.offender_course_appt_grp_id IS E'The course appointment group';
COMMENT ON COLUMN offender_course_appt_grps.start_date IS E'The start Date';

CREATE TABLE offender_course_appt_rules (
	offender_course_appt_rule_id bigint NOT NULL,
	monday_flag varchar(1) NOT NULL DEFAULT 'N',
	tuesday_flag varchar(1) NOT NULL DEFAULT 'N',
	wednesday_flag varchar(1) NOT NULL DEFAULT 'N',
	thursday_flag varchar(1) NOT NULL DEFAULT 'N',
	friday_flag varchar(1) NOT NULL DEFAULT 'N',
	saturday_flag varchar(1) NOT NULL DEFAULT 'N',
	sunday_flag varchar(1) NOT NULL DEFAULT 'N',
	start_time timestamp,
	end_time timestamp,
	offender_course_appt_grp_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_course_appt_rules IS E'The offender course appointment rule for generating virtual appointments';
COMMENT ON COLUMN offender_course_appt_rules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_course_appt_rules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_course_appt_rules.end_time IS E'? Thursday';
COMMENT ON COLUMN offender_course_appt_rules.friday_flag IS E'The Offender Course scheule Rule ID';
COMMENT ON COLUMN offender_course_appt_rules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_course_appt_rules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_course_appt_rules.monday_flag IS E'? Sunday';
COMMENT ON COLUMN offender_course_appt_rules.offender_course_appt_grp_id IS E'? Friday';
COMMENT ON COLUMN offender_course_appt_rules.offender_course_appt_rule_id IS E'? Saturday';
COMMENT ON COLUMN offender_course_appt_rules.saturday_flag IS E'? Monday';
COMMENT ON COLUMN offender_course_appt_rules.start_time IS E'? Wednesday';
COMMENT ON COLUMN offender_course_appt_rules.sunday_flag IS E'? Tuesday';
COMMENT ON COLUMN offender_course_appt_rules.thursday_flag IS E'The offender course appointment group';
COMMENT ON COLUMN offender_course_appt_rules.tuesday_flag IS E'The start time';
COMMENT ON COLUMN offender_course_appt_rules.wednesday_flag IS E'End Time';

CREATE TABLE offender_course_attendances (
	event_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	event_date timestamp NOT NULL,
	start_time timestamp,
	end_time timestamp,
	event_sub_type varchar(12) NOT NULL,
	event_status varchar(12) NOT NULL DEFAULT 'SCH',
	comment_text varchar(4000),
	hidden_comment_text varchar(240),
	to_internal_location_id bigint,
	crs_sch_id bigint,
	outcome_reason_code varchar(12),
	piece_work decimal(11,2),
	engagement_code varchar(12),
	understanding_code varchar(12),
	details varchar(40),
	credited_hours decimal(6,2),
	agreed_travel_hour decimal(6,2),
	supervisor_name varchar(30),
	behaviour_code varchar(12),
	action_code varchar(12),
	sick_note_received_date timestamp,
	sick_note_expiry_date timestamp,
	off_prgref_id bigint NOT NULL,
	in_time timestamp,
	out_time timestamp,
	performance_code varchar(12),
	reference_id numeric(20),
	to_address_owner_class varchar(12),
	to_address_id bigint,
	event_outcome varchar(12),
	off_crs_sch_ref_id numeric(20),
	supervisor_staff_id bigint,
	crs_appt_id numeric(20),
	offender_course_appt_rule_id bigint,
	crs_acty_id bigint,
	event_type varchar(12) NOT NULL,
	agy_loc_id varchar(6),
	event_class varchar(12) NOT NULL,
	unexcused_absence_flag varchar(1),
	to_agy_loc_id varchar(6),
	session_no integer,
	offender_prg_obligation_id bigint,
	program_id bigint,
	bonus_pay decimal(11,3),
	txn_id bigint,
	txn_entry_seq integer,
	pay_flag varchar(1) DEFAULT 'N',
	authorised_absence_flag varchar(1) DEFAULT 'N',
	seal_flag varchar(1),
	direction_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
) ;

CREATE TABLE offender_course_skills (
	event_id bigint NOT NULL,
	skill_code varchar(12) NOT NULL,
	no_of_hours decimal(6,2) NOT NULL,
	staff_id bigint,
	comment_text varchar(240),
	staff_role varchar(12) NOT NULL DEFAULT 'TUTOR',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_course_skills IS E'The skill breakdown of an offender course event';
COMMENT ON COLUMN offender_course_skills.comment_text IS E'Comment text';
COMMENT ON COLUMN offender_course_skills.event_id IS E'The Offender Course Event';
COMMENT ON COLUMN offender_course_skills.no_of_hours IS E'No of hours';
COMMENT ON COLUMN offender_course_skills.skill_code IS E'SKILL Code Reference_Code(PS_SKILL)';
COMMENT ON COLUMN offender_course_skills.staff_id IS E'Staff';
COMMENT ON COLUMN offender_course_skills.staff_role IS E'Course_Role.  Reference Code(Person Role)';

CREATE TABLE offender_credit_prior_payments (
	txn_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	payment_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	payment_amount decimal(11,2) NOT NULL,
	location varchar(32) NOT NULL,
	comment_text varchar(240),
	txn_entry_seq integer NOT NULL,
	beneficiary_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_credit_prior_payments.caseload_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_credit_prior_payments.comment_text IS E' - Retrofitted';
COMMENT ON COLUMN offender_credit_prior_payments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_credit_prior_payments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_credit_prior_payments.location IS E' - Retrofitted';
COMMENT ON COLUMN offender_credit_prior_payments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_credit_prior_payments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_credit_prior_payments.offender_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_credit_prior_payments.payment_amount IS E' - Retrofitted';
COMMENT ON COLUMN offender_credit_prior_payments.payment_date IS E' - Retrofitted';
COMMENT ON COLUMN offender_credit_prior_payments.txn_id IS E' - Retrofitted';

CREATE TABLE offender_credit_types (
	offender_book_id bigint NOT NULL,
	credit_type varchar(12) NOT NULL,
	credit_level varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_credit_types IS E'The Offender"s current credit type credit level';
COMMENT ON COLUMN offender_credit_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_credit_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_credit_types.credit_level IS E'Current Credit Level';
COMMENT ON COLUMN offender_credit_types.credit_type IS E'Credit Type';
COMMENT ON COLUMN offender_credit_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_credit_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_credit_types.offender_book_id IS E'The system generated identifier for an offender bookings';

CREATE TABLE offender_credit_type_histories (
	offender_book_id bigint NOT NULL,
	credit_type varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	credit_level varchar(12) NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_credit_type_histories.comment_text IS E'Comments';
COMMENT ON COLUMN offender_credit_type_histories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_credit_type_histories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_credit_type_histories.credit_level IS E'Credit Level';
COMMENT ON COLUMN offender_credit_type_histories.credit_type IS E'Credit Type';
COMMENT ON COLUMN offender_credit_type_histories.effective_date IS E'Effective date of the Credit Level';
COMMENT ON COLUMN offender_credit_type_histories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_credit_type_histories.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_credit_type_histories.offender_book_id IS E'The System Generated identifier for an offender booking';

CREATE TABLE offender_criminogenic_needs (
	off_crim_need_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	case_plan_id bigint NOT NULL,
	assessed_need_code varchar(12) NOT NULL,
	objective varchar(240),
	target_date timestamp,
	end_date timestamp,
	status_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_criminogenic_needs.assessed_need_code IS E'Autopopulate from assessments';
COMMENT ON COLUMN offender_criminogenic_needs.case_plan_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_criminogenic_needs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_criminogenic_needs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_criminogenic_needs.end_date IS E'The End date for the goal';
COMMENT ON COLUMN offender_criminogenic_needs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_criminogenic_needs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_criminogenic_needs.objective IS E'Goal related to mitigation of this Risk/Need';
COMMENT ON COLUMN offender_criminogenic_needs.off_crim_need_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_criminogenic_needs.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_criminogenic_needs.status_code IS E'Standard Reference Code - domain CP_FACT_STS';
COMMENT ON COLUMN offender_criminogenic_needs.target_date IS E'The Target date for the criminogenic needs';

CREATE TABLE offender_curfews (
	offender_book_id bigint NOT NULL,
	offender_curfew_id bigint NOT NULL,
	eligibility_date timestamp NOT NULL,
	assessment_date timestamp,
	ard_crd_date timestamp,
	approval_status varchar(12),
	refused_reason varchar(12),
	decision_date timestamp,
	review_flag varchar(1),
	mon_start_time timestamp,
	tue_start_time timestamp,
	wed_start_time timestamp,
	thu_start_time timestamp,
	fri_start_time timestamp,
	sat_start_time timestamp,
	sun_start_time timestamp,
	mon_end_time timestamp,
	tue_end_time timestamp,
	wed_end_time timestamp,
	thu_end_time timestamp,
	fri_end_time timestamp,
	sat_end_time timestamp,
	sun_end_time timestamp,
	comment_text varchar(240),
	offending_behaviour_flag varchar(1),
	family_links_flag varchar(1),
	successful_rotl_flag varchar(1),
	risk_behaviour_attitude_flag varchar(1),
	violent_offending_risk varchar(12),
	reimprisonment_risk varchar(12),
	sex_offending_risk varchar(12),
	contractor_corp_id bigint,
	review_reason varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_curfews IS E'The offender curfew details';
COMMENT ON COLUMN offender_curfews.approval_status IS E'Approval Status of the Curfew record.';
COMMENT ON COLUMN offender_curfews.ard_crd_date IS E'A date populated based on entry of legal information in TAG.';
COMMENT ON COLUMN offender_curfews.assessment_date IS E'Calculated 10 weeks before Eligibility Date.';
COMMENT ON COLUMN offender_curfews.comment_text IS E'The comment text';
COMMENT ON COLUMN offender_curfews.contractor_corp_id IS E'The contractor corporate';
COMMENT ON COLUMN offender_curfews.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_curfews.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_curfews.decision_date IS E'Date on which Decision is made.';
COMMENT ON COLUMN offender_curfews.eligibility_date IS E'Derived based on Sentence Calculation.';
COMMENT ON COLUMN offender_curfews.family_links_flag IS E'Flag to indicate for Family links.';
COMMENT ON COLUMN offender_curfews.fri_end_time IS E'The Friday end time';
COMMENT ON COLUMN offender_curfews.fri_start_time IS E'The Friday start time';
COMMENT ON COLUMN offender_curfews.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_curfews.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_curfews.mon_end_time IS E'The Monday end time';
COMMENT ON COLUMN offender_curfews.mon_start_time IS E'The Monday start time';
COMMENT ON COLUMN offender_curfews.offender_book_id IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN offender_curfews.offender_curfew_id IS E'A sequence to determine the running number of curfew record per offender.';
COMMENT ON COLUMN offender_curfews.offending_behaviour_flag IS E'Flag to indicate for offending behaviour.';
COMMENT ON COLUMN offender_curfews.refused_reason IS E'Reason if refused. Reference Codes(HDC_REJ_RSN)';
COMMENT ON COLUMN offender_curfews.reimprisonment_risk IS E'Flag to indicate for re-imprisonment risk?.';
COMMENT ON COLUMN offender_curfews.review_flag IS E'review flag.';
COMMENT ON COLUMN offender_curfews.review_reason IS E'Reason for review.  Reference Codes(HDC_RVW_RSN)';
COMMENT ON COLUMN offender_curfews.risk_behaviour_attitude_flag IS E'Flag to indicate for Risk behaviour attitude.';
COMMENT ON COLUMN offender_curfews.sat_end_time IS E'The Saturday end time';
COMMENT ON COLUMN offender_curfews.sat_start_time IS E'The Saturaday start time';
COMMENT ON COLUMN offender_curfews.sex_offending_risk IS E'Flag to indicate for Sex offending risk?.';
COMMENT ON COLUMN offender_curfews.successful_rotl_flag IS E'Flag to indicate for Successful release on Temporary License.';
COMMENT ON COLUMN offender_curfews.sun_end_time IS E'The Sunday end time';
COMMENT ON COLUMN offender_curfews.sun_start_time IS E'The Sunday start time';
COMMENT ON COLUMN offender_curfews.thu_end_time IS E'The Thurday end time';
COMMENT ON COLUMN offender_curfews.thu_start_time IS E'The Thursday start time';
COMMENT ON COLUMN offender_curfews.tue_end_time IS E'The Tuesday end time';
COMMENT ON COLUMN offender_curfews.tue_start_time IS E'The Tuesday start time';
COMMENT ON COLUMN offender_curfews.violent_offending_risk IS E'Flag to indicate for Violent offending risk?.';
COMMENT ON COLUMN offender_curfews.wed_end_time IS E'The Wednesday end time';
COMMENT ON COLUMN offender_curfews.wed_start_time IS E'The Wednesday start time';

CREATE TABLE offender_deductions (
	offender_deduction_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	credit_limit decimal(11,2),
	deduction_type varchar(6) NOT NULL,
	deduction_status varchar(1) NOT NULL DEFAULT 'A',
	deduction_priority smallint NOT NULL,
	information_number varchar(32),
	deduction_percentage smallint,
	process_priority_number smallint DEFAULT 99,
	effective_date timestamp NOT NULL,
	comment_text varchar(240),
	fifo_flag varchar(1) DEFAULT 'Y',
	payee_person_id bigint,
	payee_corporate_id bigint,
	max_monthly_amount decimal(11,2),
	max_total_amount decimal(11,2),
	deduction_amount decimal(11,2),
	adjustment_reason_code varchar(12),
	adjustment_amount decimal(11,2),
	adjustment_user_id varchar(32),
	adjustment_txn_id bigint,
	adjustment_text varchar(40),
	modify_date timestamp NOT NULL,
	pay_deduction_flag varchar(1),
	max_recursive_amount decimal(11,2),
	group_id smallint,
	case_id bigint,
	parent_deduction_id bigint,
	js_status varchar(1),
	collect_agency_amount decimal(11,2),
	collect_agency_flag varchar(1) NOT NULL DEFAULT 'N',
	collect_sent_date timestamp,
	offender_payment_profile_id bigint,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_deductions IS E'The detailed deduction profiles for each offender.';
COMMENT ON COLUMN offender_deductions.adjustment_reason_code IS E'The adjustment reason code ie. Write Off Credit Obligation.';
COMMENT ON COLUMN offender_deductions.adjustment_text IS E'Adjustment comment.';
COMMENT ON COLUMN offender_deductions.adjustment_txn_id IS E' The G/L transaction number.';
COMMENT ON COLUMN offender_deductions.adjustment_user_id IS E'The User Id performing the adjustment.';
COMMENT ON COLUMN offender_deductions.caseload_id IS E' Unique identifier for a caseload.';
COMMENT ON COLUMN offender_deductions.comment_text IS E'Offender deduction comment.';
COMMENT ON COLUMN offender_deductions.deduction_percentage IS E' Deduction perecentage on receipt transaction type.';
COMMENT ON COLUMN offender_deductions.deduction_status IS E'Reference Code [DED_STATUS ]';
COMMENT ON COLUMN offender_deductions.deduction_type IS E' Deduction type.';
COMMENT ON COLUMN offender_deductions.effective_date IS E' Effective date for deduction profile.';
COMMENT ON COLUMN offender_deductions.information_number IS E' Information number ie. a number attached to a court document';
COMMENT ON COLUMN offender_deductions.max_monthly_amount IS E'Monthly maximum deduction.';
COMMENT ON COLUMN offender_deductions.max_total_amount IS E' Maximum total deduction.';
COMMENT ON COLUMN offender_deductions.offender_deduction_id IS E'System generated identifier for an offender deduction.';
COMMENT ON COLUMN offender_deductions.offender_id IS E' Unique identifier for an offender.';
COMMENT ON COLUMN offender_deductions.payee_corporate_id IS E' Unique identifier for a corporate payee.';
COMMENT ON COLUMN offender_deductions.payee_person_id IS E' Unqiue identifier for a person.';
COMMENT ON COLUMN offender_deductions.process_priority_number IS E'Deduction priority within identical deduction types.';

CREATE TABLE offender_deductions_hty (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	offender_deduction_id bigint,
	caseload_id varchar(6),
	offender_id bigint,
	credit_limit decimal(11,2),
	deduction_type varchar(6),
	deduction_status varchar(1),
	deduction_priority smallint,
	information_number varchar(32),
	deduction_percentage smallint,
	process_priority_number smallint,
	effective_date timestamp,
	comment_text varchar(240),
	fifo_flag varchar(1),
	payee_person_id bigint,
	payee_corporate_id bigint,
	max_monthly_amount decimal(11,2),
	max_total_amount decimal(11,2),
	deduction_amount decimal(11,2),
	adjustment_reason_code varchar(12),
	adjustment_amount decimal(11,2),
	adjustment_user_id varchar(32),
	adjustment_txn_id bigint,
	adjustment_text varchar(40),
	modify_user_id varchar(32),
	modify_date timestamp,
	pay_deduction_flag varchar(1),
	max_recursive_amount decimal(11,2),
	group_id smallint,
	case_id bigint,
	parent_deduction_id bigint,
	js_status varchar(1),
	collect_agency_amount decimal(11,2),
	collect_agency_flag varchar(1),
	collect_sent_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	offender_payment_profile_id bigint,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_deductions_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	offender_deduction_id bigint,
	caseload_id varchar(6),
	offender_id bigint,
	credit_limit decimal(11,2),
	deduction_type varchar(6),
	deduction_status varchar(1),
	deduction_priority smallint,
	information_number varchar(32),
	deduction_percentage smallint,
	process_priority_number smallint,
	effective_date timestamp,
	comment_text varchar(240),
	fifo_flag varchar(1),
	payee_person_id bigint,
	payee_corporate_id bigint,
	max_monthly_amount decimal(11,2),
	max_total_amount decimal(11,2),
	deduction_amount decimal(11,2),
	adjustment_reason_code varchar(12),
	adjustment_amount decimal(11,2),
	adjustment_user_id varchar(32),
	adjustment_txn_id bigint,
	adjustment_text varchar(40),
	modify_date timestamp,
	pay_deduction_flag varchar(1),
	max_recursive_amount decimal(11,2),
	group_id smallint,
	case_id bigint,
	parent_deduction_id bigint,
	js_status varchar(1),
	collect_agency_amount decimal(11,2),
	collect_agency_flag varchar(1),
	collect_sent_date timestamp,
	offender_payment_profile_id bigint,
	seal_flag varchar(1),
	create_user_id varchar(32),
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_deductions_temp (
	modify_user_id varchar(33) NOT NULL,
	comment_text varchar(241),
	monthly_max varchar(12),
	total_max varchar(12),
	effective_date varchar(11) NOT NULL,
	status varchar(3),
	modify_date varchar(11) NOT NULL,
	information_number varchar(33) NOT NULL,
	offender_ded_id varchar(11) NOT NULL,
	deduction_type varchar(7) NOT NULL,
	offender_id varchar(11) NOT NULL,
	request_temp_id varchar(11) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_deduction_receipts (
	list_seq integer,
	receipt_percentage decimal(5,2),
	receipt_txn_type varchar(6) NOT NULL,
	offender_deduction_id bigint NOT NULL,
	flat_rate decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_deduction_receipts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_deduction_receipts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_deduction_receipts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_deduction_receipts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_deduction_receipts_bk (
	list_seq integer,
	receipt_percentage decimal(5,2),
	receipt_txn_type varchar(6) NOT NULL,
	offender_deduction_id bigint NOT NULL,
	flat_rate decimal(11,2),
	create_datetime timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_deduction_shadows (
	deduction_txn_entry decimal(11,2),
	confirm_flag varchar(1) NOT NULL,
	percentage decimal(5,2) NOT NULL,
	offender_deduction_id bigint NOT NULL,
	shadow_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_deduction_shadows.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_deduction_shadows.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_deduction_shadows.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_deduction_shadows.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_demogrants (
	demogrant_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	amount decimal(11,2) NOT NULL,
	demogrant_date timestamp NOT NULL,
	start_txn_id bigint,
	end_txn_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_demogrants.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_demogrants.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_demogrants.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_demogrants.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_demogrant_imp_status (
	demogrant_id bigint NOT NULL,
	ineligible_imprisonment_status varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_demogrant_imp_status.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_demogrant_imp_status.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_demogrant_imp_status.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_demogrant_imp_status.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_document_templates (
	offender_document_template_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	module_name varchar(20) NOT NULL,
	document_status varchar(12) NOT NULL,
	description varchar(80) NOT NULL,
	template_code varchar(24) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	list_seq varchar(240),
	security_lock_user_id varchar(32),
	localdata bytea NOT NULL,
	comment_text varchar(240),
	srctype varchar(4000),
	srclocation varchar(4000),
	srcname varchar(4000),
	updatetime timestamp,
	local bigint,
	height numeric(38),
	width numeric(38),
	contentlength numeric(38),
	fileformat varchar(4000),
	contentformat varchar(4000),
	compressionformat varchar(4000),
	mimetype varchar(4000) NOT NULL DEFAULT 'application/msword',
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_IWP;
COMMENT ON COLUMN offender_document_templates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_document_templates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_document_templates.document_status IS E'domain = "DOCUMENT_STS"';
COMMENT ON COLUMN offender_document_templates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_document_templates.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_drug_admissions (
	offender_drug_admission_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	admit_date timestamp NOT NULL,
	witness_name varchar(70),
	event_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	audit_timestamp timestamp,
	audit_user_id varchar(32),
	audit_module_name varchar(50),
	audit_client_user_id varchar(64),
	audit_client_ip_address varchar(39),
	audit_client_workstation_name varchar(64),
	audit_additional_info varchar(256),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_drug_adm_drugs (
	offender_drug_admission_id bigint NOT NULL,
	drug_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	audit_timestamp timestamp,
	audit_user_id varchar(32),
	audit_module_name varchar(50),
	audit_client_user_id varchar(64),
	audit_client_ip_address varchar(39),
	audit_client_workstation_name varchar(64),
	audit_additional_info varchar(256),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_drug_results (
	offender_drug_sample_id bigint NOT NULL,
	drug_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	audit_timestamp timestamp,
	audit_user_id varchar(32),
	audit_module_name varchar(50),
	audit_client_user_id varchar(64),
	audit_client_ip_address varchar(39),
	audit_client_workstation_name varchar(64),
	audit_additional_info varchar(256),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_drug_samples (
	offender_drug_sample_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	event_id bigint,
	sample_date timestamp NOT NULL,
	sample_type varchar(12) NOT NULL,
	reference_id varchar(25),
	test_date timestamp,
	sample_taken_person_name varchar(70),
	sample_tested_lab varchar(12),
	taken_action_code varchar(12),
	test_result varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	audit_timestamp timestamp,
	audit_user_id varchar(32),
	audit_module_name varchar(50),
	audit_client_user_id varchar(64),
	audit_client_ip_address varchar(39),
	audit_client_workstation_name varchar(64),
	audit_additional_info varchar(256),
	drug_code varchar(12) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_educations (
	offender_book_id bigint NOT NULL,
	education_seq integer NOT NULL,
	education_type varchar(12),
	study_area_code varchar(12),
	education_level_code varchar(12),
	number_of_years smallint,
	graduation_year smallint,
	start_date timestamp,
	comment_text varchar(240),
	school_name varchar(240) NOT NULL,
	special_education_flag varchar(1) NOT NULL DEFAULT 'Y',
	caseload_type varchar(12),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	root_offender_id bigint,
	end_date timestamp,
	partial_end_date_flag varchar(1),
	partial_start_date_flag varchar(1),
	student_id varchar(32),
	agy_loc_id varchar(6),
	school_code varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	education_schedule varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_educations IS E'Information relating to offender"s educational background.';
COMMENT ON COLUMN offender_educations.comment_text IS E' Comment relating to education.';
COMMENT ON COLUMN offender_educations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_educations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_educations.education_level_code IS E'Reference Code (EDU_LVL) : The highest level attained for the educational period.';
COMMENT ON COLUMN offender_educations.education_schedule IS E'Reference code (EDU_EMP_SCH)';
COMMENT ON COLUMN offender_educations.education_seq IS E' Sequence number forming part of primary key.';
COMMENT ON COLUMN offender_educations.education_type IS E'Reference Code (EDU_TYPE) :  Education type (Michigan).';
COMMENT ON COLUMN offender_educations.graduation_year IS E'Year of graduation.';
COMMENT ON COLUMN offender_educations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_educations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_educations.number_of_years IS E' The number of educational years completed.';
COMMENT ON COLUMN offender_educations.offender_book_id IS E' System generated unique identifier for an offender booking.';
COMMENT ON COLUMN offender_educations.school_name IS E'Name of school attended.';
COMMENT ON COLUMN offender_educations.special_education_flag IS E' Special education (Michigan).';
COMMENT ON COLUMN offender_educations.start_date IS E'Year started at school.';
COMMENT ON COLUMN offender_educations.study_area_code IS E'Reference Code (STUDY_AREA) : The area of study for the offender while in school.';

CREATE TABLE offender_educations_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	offender_book_id bigint,
	education_seq integer,
	education_type varchar(12),
	study_area_code varchar(12),
	education_level_code varchar(12),
	number_of_years smallint,
	graduation_year smallint,
	start_date timestamp,
	comment_text varchar(240),
	school_name varchar(240),
	special_education_flag varchar(1),
	caseload_type varchar(12),
	modify_user_id varchar(32),
	root_offender_id bigint,
	end_date timestamp,
	partial_end_date_flag varchar(1),
	partial_start_date_flag varchar(1),
	student_id varchar(32),
	agy_loc_id varchar(6),
	school_code varchar(32),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	education_schedule varchar(12),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_employments (
	offender_book_id bigint NOT NULL,
	employ_seq integer NOT NULL,
	employment_date timestamp,
	employment_post_code varchar(12),
	employment_type varchar(12),
	termination_date timestamp,
	employer_name varchar(240),
	supervisor_name varchar(240),
	position varchar(40),
	termination_reason_text varchar(240),
	wage decimal(12,2),
	wage_period_code varchar(12),
	occupations_code varchar(12),
	comment_text varchar(240),
	caseload_type varchar(12),
	root_offender_id bigint,
	contact_type varchar(12),
	contact_number varchar(32),
	schedule_type varchar(12),
	schedule_hours integer,
	hours_week integer,
	partial_employment_date_flag varchar(1) DEFAULT 'N',
	partial_termination_date_flag varchar(1) DEFAULT 'N',
	check_box_1 varchar(1),
	check_box_2 varchar(1),
	employer_aware_flag varchar(1) NOT NULL DEFAULT 'N',
	contact_employer_flag varchar(1) NOT NULL DEFAULT 'N',
	offender_employment_id bigint,
	employment_schedule varchar(12),
	certification varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_employments IS E'History of offender employment.';
COMMENT ON COLUMN offender_employments.caseload_type IS E'The caseload Type';
COMMENT ON COLUMN offender_employments.certification IS E'Reference code (EMPLOY_CERT))';
COMMENT ON COLUMN offender_employments.comment_text IS E'Comment relating to employment.';
COMMENT ON COLUMN offender_employments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_employments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_employments.employ_seq IS E'Sequence number forming part of primary key.';
COMMENT ON COLUMN offender_employments.employer_name IS E'Offender"s employer.';
COMMENT ON COLUMN offender_employments.employment_date IS E' Start of employment.';
COMMENT ON COLUMN offender_employments.employment_post_code IS E'Reference Code (EMP_POST).';
COMMENT ON COLUMN offender_employments.employment_schedule IS E'Reference code (EDU_EMP_SHC))';
COMMENT ON COLUMN offender_employments.employment_type IS E'Reference Code (EMP_TYPE) : Part TIme/ Full TIme (Reference_ Code) (Michigan)';
COMMENT ON COLUMN offender_employments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_employments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_employments.occupations_code IS E'Reference Code (OCCUPAT_CAT) :  The offender"s occupation.';
COMMENT ON COLUMN offender_employments.offender_book_id IS E'System generated unique identifier for an offender booking.';
COMMENT ON COLUMN offender_employments.position IS E'Position held on job.';
COMMENT ON COLUMN offender_employments.root_offender_id IS E'The root offender ID';
COMMENT ON COLUMN offender_employments.supervisor_name IS E' Supervisor"s name for employment period.';
COMMENT ON COLUMN offender_employments.termination_date IS E'Date employment terminated.';
COMMENT ON COLUMN offender_employments.termination_reason_text IS E' The reason for leaving job.';
COMMENT ON COLUMN offender_employments.wage IS E' Amount the offender was earning.';
COMMENT ON COLUMN offender_employments.wage_period_code IS E'Reference Code (PERIOD_TYPE) :  Wage period (Michigan).';

CREATE TABLE offender_escapes (
	escape_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	escape_date timestamp NOT NULL,
	escape_time timestamp NOT NULL,
	escape_circumstance_code varchar(12),
	escape_escort_code varchar(12),
	escape_agy_loc_id varchar(6),
	arrest_agy_code varchar(12),
	escape_comment_text varchar(240),
	security_breach_code varchar(12),
	recapture_date timestamp,
	recpature_time timestamp,
	recpature_comment_text varchar(240),
	readmission_date timestamp,
	readmission_time timestamp,
	readmiss_agy_loc_id varchar(6),
	readmiss_comment_text varchar(240),
	adjust_sentence_flag varchar(1),
	escape_registration_ref varchar(20),
	in_company_flag varchar(1),
	last_seen_date timestamp,
	last_seen_time timestamp,
	incident_number varchar(60),
	offender_adjust_id bigint,
	escape_movement_reason varchar(12),
	recapture_movement_reason varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_escapes IS E'Stores information re: circumstances surrounding
 an offender escape and subsequent recapture.';
COMMENT ON COLUMN offender_escapes.adjust_sentence_flag IS E'Should the sentence be adjusted accordingly';
COMMENT ON COLUMN offender_escapes.arrest_agy_code IS E'Reference Code ( ARREST_AGY )';
COMMENT ON COLUMN offender_escapes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_escapes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_escapes.escape_agy_loc_id IS E'Escape agency location.';
COMMENT ON COLUMN offender_escapes.escape_circumstance_code IS E'REFERENCE CODE (ESC_CIRM )';
COMMENT ON COLUMN offender_escapes.escape_comment_text IS E' Comment regarding escape.';
COMMENT ON COLUMN offender_escapes.escape_date IS E'Date of escape from custody.';
COMMENT ON COLUMN offender_escapes.escape_escort_code IS E'Reference Code (ESCORT )';
COMMENT ON COLUMN offender_escapes.escape_id IS E'Identifier for an offender escape in YY-00001 format. Based
 upon fiscal year starting at July 1st of each year.';
COMMENT ON COLUMN offender_escapes.escape_movement_reason IS E'Escape Reason';
COMMENT ON COLUMN offender_escapes.escape_registration_ref IS E'Escape registration number';
COMMENT ON COLUMN offender_escapes.escape_time IS E'Time of escape from custody.';
COMMENT ON COLUMN offender_escapes.in_company_flag IS E'If the offender escape in company';
COMMENT ON COLUMN offender_escapes.last_seen_date IS E'Date of last Seen';
COMMENT ON COLUMN offender_escapes.last_seen_time IS E'Time of last Seen';
COMMENT ON COLUMN offender_escapes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_escapes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_escapes.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_escapes.readmiss_agy_loc_id IS E'Readmission agency location.';
COMMENT ON COLUMN offender_escapes.readmiss_comment_text IS E'Readmission comment.';
COMMENT ON COLUMN offender_escapes.readmission_date IS E'Readmission date at jail.';
COMMENT ON COLUMN offender_escapes.readmission_time IS E'Time of readmission.';
COMMENT ON COLUMN offender_escapes.recapture_date IS E'Date recaptured.';
COMMENT ON COLUMN offender_escapes.recapture_movement_reason IS E'Recapture Reason';
COMMENT ON COLUMN offender_escapes.recpature_comment_text IS E' Recapture comments.';
COMMENT ON COLUMN offender_escapes.recpature_time IS E'Recpature time.';
COMMENT ON COLUMN offender_escapes.security_breach_code IS E'Reference COde ( SEC_BREACH )';

CREATE TABLE offender_expenses (
	expense_seq bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	payment_for varchar(12) NOT NULL,
	amount decimal(11,2) NOT NULL,
	partial_from_date_flag varchar(1),
	from_date timestamp,
	partial_to_date_flag varchar(1),
	to_date timestamp,
	comment_text varchar(240),
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_expenses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_expenses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_expenses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_expenses.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_external_movements (
	offender_book_id bigint NOT NULL,
	movement_seq integer NOT NULL DEFAULT 99,
	movement_date timestamp NOT NULL,
	movement_time timestamp NOT NULL,
	internal_schedule_type varchar(12),
	internal_schedule_reason_code varchar(12),
	movement_type varchar(12),
	movement_reason_code varchar(12),
	direction_code varchar(12),
	arrest_agency_loc_id varchar(6),
	to_prov_stat_code varchar(6),
	escort_code varchar(12),
	from_agy_loc_id varchar(6),
	to_agy_loc_id varchar(6),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	escort_text varchar(240),
	comment_text varchar(240),
	reporting_date timestamp,
	to_city varchar(12),
	from_city varchar(12),
	reporting_time timestamp,
	event_id bigint,
	parent_event_id bigint,
	to_country_code varchar(12),
	oj_location_code varchar(12),
	application_date timestamp,
	application_time timestamp,
	to_address_id bigint,
	from_address_id bigint,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_external_movements IS E'The External Movement of an Offender, such as attending the court, hospital visits etc.';
COMMENT ON COLUMN offender_external_movements.active_flag IS E'?If the movement is a active one';
COMMENT ON COLUMN offender_external_movements.application_date IS E'The date of the application';
COMMENT ON COLUMN offender_external_movements.application_time IS E'The time of the application';
COMMENT ON COLUMN offender_external_movements.arrest_agency_loc_id IS E' The identifer for arresting agency noted on admission.';
COMMENT ON COLUMN offender_external_movements.comment_text IS E'The general comment text';
COMMENT ON COLUMN offender_external_movements.direction_code IS E'Reference Code (MOVE_DIRECT). Direction of movement In or Out.';
COMMENT ON COLUMN offender_external_movements.escort_code IS E'Reference Code (ESCORT). Agency escorting offender to inst.';
COMMENT ON COLUMN offender_external_movements.escort_text IS E'The Escort details';
COMMENT ON COLUMN offender_external_movements.event_id IS E'The reference ID of the events';
COMMENT ON COLUMN offender_external_movements.from_address_id IS E'The address of the movement source';
COMMENT ON COLUMN offender_external_movements.from_agy_loc_id IS E'The agency location offender is coming from on admission.';
COMMENT ON COLUMN offender_external_movements.from_city IS E'The city of the offender from';
COMMENT ON COLUMN offender_external_movements.internal_schedule_reason_code IS E'The reason for the internal schedule ie. OIC hearing, Medical..';
COMMENT ON COLUMN offender_external_movements.internal_schedule_type IS E'The type of internal schedule ie. Appointment, Parole Review..';
COMMENT ON COLUMN offender_external_movements.movement_date IS E'Date of the external movement.';
COMMENT ON COLUMN offender_external_movements.movement_reason_code IS E'Reason for movement.';
COMMENT ON COLUMN offender_external_movements.movement_seq IS E'The movement seq for the PK';
COMMENT ON COLUMN offender_external_movements.movement_time IS E'Movement time.';
COMMENT ON COLUMN offender_external_movements.movement_type IS E' The type of movement.';
COMMENT ON COLUMN offender_external_movements.offender_book_id IS E'System generated unique identifer for an offender booking.';
COMMENT ON COLUMN offender_external_movements.oj_location_code IS E'the OJ Location. REference Code(OJ_LOCATION)';
COMMENT ON COLUMN offender_external_movements.parent_event_id IS E'pointing to the previous movement for Temporary Absence';
COMMENT ON COLUMN offender_external_movements.reporting_date IS E'The date of the reporting';
COMMENT ON COLUMN offender_external_movements.reporting_time IS E'The time of the reporting';
COMMENT ON COLUMN offender_external_movements.to_address_id IS E'The address of the movement destination';
COMMENT ON COLUMN offender_external_movements.to_agy_loc_id IS E'The destination of the movement (Agency Locations';
COMMENT ON COLUMN offender_external_movements.to_city IS E'The city of the destination';
COMMENT ON COLUMN offender_external_movements.to_country_code IS E'the country of the destination. REference Code(COUNTRY)';
COMMENT ON COLUMN offender_external_movements.to_prov_stat_code IS E'Transfer to state relevant in a transfer outside jurisdiction.';

CREATE TABLE offender_files_trig (
	offender_file_seq smallint NOT NULL,
	offender_id bigint NOT NULL,
	file_type varchar(12),
	file_sub_type varchar(12),
	offender_file_num bigint,
	volume_seq smallint,
	file_reference varchar(20),
	file_create_date timestamp,
	holding_agy_loc_id varchar(6),
	holding_staff_id bigint,
	non_officer_status varchar(12),
	storage varchar(80),
	resubmission_date timestamp,
	creation_date timestamp,
	creation_user varchar(32),
	caseload_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_files_trig.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_files_trig.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_files_trig.file_create_date IS E'Date Created';
COMMENT ON COLUMN offender_files_trig.file_reference IS E'The file reference number';
COMMENT ON COLUMN offender_files_trig.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_files_trig.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_files_trig.non_officer_status IS E'holder of the file, must be filled out if no relationship with st';
COMMENT ON COLUMN offender_files_trig.offender_file_num IS E'seq within offender but does not increment for new volumes of the same type and subtype';
COMMENT ON COLUMN offender_files_trig.offender_file_seq IS E'sequence within offender';
COMMENT ON COLUMN offender_files_trig.resubmission_date IS E'?';
COMMENT ON COLUMN offender_files_trig.storage IS E'eg filing cabinet #1, drawer 3, archive box #734';

CREATE TABLE offender_files_trig1 (
	offender_file_seq smallint NOT NULL,
	offender_id bigint NOT NULL,
	old_hold_agy_loc_id varchar(6),
	new_hold_agy_loc_id varchar(6),
	old_hold_staff_id bigint,
	new_hold_staff_id bigint,
	old_non_off_status varchar(12),
	new_non_off_status varchar(12),
	creation_date timestamp,
	creation_user varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_files_trig1.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_files_trig1.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_files_trig1.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_files_trig1.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_file_deliveries (
	file_delivery_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	offender_file_seq smallint NOT NULL,
	cancel_flag varchar(1) NOT NULL DEFAULT 'Y',
	transaction_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_file_deliveries.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_file_deliveries.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_file_deliveries.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_file_deliveries.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_file_locations (
	offender_book_id bigint NOT NULL,
	location_seq integer NOT NULL,
	agy_loc_id varchar(6),
	create_date timestamp NOT NULL,
	create_time timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	comment_text varchar(240),
	case_staff_id integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_file_locations IS E'Tracks the history of hard copy file movements.';
COMMENT ON COLUMN offender_file_locations.agy_loc_id IS E'Agency location for a file location.';
COMMENT ON COLUMN offender_file_locations.comment_text IS E'File location comments.';
COMMENT ON COLUMN offender_file_locations.create_date IS E'Date of movement for hard copy file.';
COMMENT ON COLUMN offender_file_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_file_locations.create_time IS E'File movement time.';
COMMENT ON COLUMN offender_file_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_file_locations.location_seq IS E'Sequence for a file location.';
COMMENT ON COLUMN offender_file_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_file_locations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_file_locations.offender_book_id IS E'Unique identifier for an offender booking.';

CREATE TABLE offender_file_transactions (
	transaction_id bigint NOT NULL,
	offender_file_seq bigint NOT NULL,
	offender_id bigint NOT NULL,
	staff_id_to integer,
	staff_id_from integer,
	non_officer_to varchar(12),
	non_officer_from varchar(12),
	agy_loc_id_to varchar(6),
	agy_loc_id_from varchar(6),
	transaction_date timestamp NOT NULL,
	transfer_date timestamp,
	file_trans_type varchar(12) NOT NULL,
	confirmed varchar(1) NOT NULL DEFAULT 'N',
	file_trans_comment varchar(240),
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_file_transactions.agy_loc_id_from IS E' The location residing within an agency.';
COMMENT ON COLUMN offender_file_transactions.agy_loc_id_to IS E' The location residing within an agency.';
COMMENT ON COLUMN offender_file_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_file_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_file_transactions.file_trans_comment IS E'Comment Text';
COMMENT ON COLUMN offender_file_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_file_transactions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_file_transactions.offender_file_seq IS E'System File ID';
COMMENT ON COLUMN offender_file_transactions.staff_id_from IS E'System generated number associated with user account';
COMMENT ON COLUMN offender_file_transactions.staff_id_to IS E'System generated number associated with user account';
COMMENT ON COLUMN offender_file_transactions.transaction_id IS E'Standard Number ID';

CREATE TABLE offender_fine_defaults (
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	reissue_order_flag varchar(1) NOT NULL DEFAULT 'N',
	total_vcl_code varchar(12),
	total_vcl_amount decimal(11,2),
	date_imposed timestamp NOT NULL,
	report_by_date timestamp,
	total_amount_owing decimal(11,2) NOT NULL,
	total_court_amount decimal(11,2),
	total_court_code varchar(12),
	total_other_amount decimal(11,2),
	total_other_code varchar(12),
	total_penalty_amount decimal(11,2),
	total_penalty_code varchar(12),
	total_prof_amount decimal(11,2),
	total_prof_code varchar(12),
	imposing_agy_loc_id varchar(6),
	creation_date timestamp,
	creation_user varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_fine_defaults.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_fine_defaults.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_fine_defaults.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_fine_defaults.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_fine_defaults.total_court_code IS E'Standard Reference Code';
COMMENT ON COLUMN offender_fine_defaults.total_other_code IS E'Standard Reference Code';
COMMENT ON COLUMN offender_fine_defaults.total_penalty_code IS E'Standard Reference Code';
COMMENT ON COLUMN offender_fine_defaults.total_prof_code IS E'Standard Reference Code';
COMMENT ON COLUMN offender_fine_defaults.total_vcl_code IS E'Standard Reference Code';

CREATE TABLE offender_fine_payments (
	offender_book_id bigint NOT NULL,
	payment_seq integer NOT NULL,
	payment_date timestamp NOT NULL,
	payment_amount decimal(11,2) NOT NULL,
	comment_text varchar(240),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	weekend_days integer,
	staff_id integer NOT NULL,
	payment_status varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_fine_payments IS E'The payment offender made';
COMMENT ON COLUMN offender_fine_payments.comment_text IS E'The comment of the payment';
COMMENT ON COLUMN offender_fine_payments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_fine_payments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_fine_payments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_fine_payments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_fine_payments.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_fine_payments.payment_amount IS E'The amount of the payment';
COMMENT ON COLUMN offender_fine_payments.payment_date IS E'The date of payment made';
COMMENT ON COLUMN offender_fine_payments.payment_seq IS E'The payment Seq';
COMMENT ON COLUMN offender_fine_payments.payment_status IS E'The status of the payment';
COMMENT ON COLUMN offender_fine_payments.staff_id IS E'The staff who input the record';
COMMENT ON COLUMN offender_fine_payments.weekend_days IS E'The number of days in the weekend';

CREATE TABLE offender_fingerprints (
	root_offender_id bigint NOT NULL,
	hand_id varchar(15) NOT NULL,
	finger_id varchar(15) NOT NULL,
	user_created varchar(50) DEFAULT 'user',
	date_created timestamp DEFAULT LOCALTIMESTAMP,
	finger_code varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_fingerprints.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_fingerprints.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_fingerprints.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_fingerprints.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_foreign_currencies (
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	currency_code varchar(12) NOT NULL,
	txn_date timestamp,
	currency_balance decimal(11,2) NOT NULL,
	currency_converted_flag varchar(1) NOT NULL DEFAULT 'N',
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_foreign_currencies.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_foreign_currencies.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_foreign_currencies.modify_date IS E'Modify Date';
COMMENT ON COLUMN offender_foreign_currencies.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_foreign_currencies.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_foreign_currencies.offender_id IS E'The unique identifier number for the offender.';

CREATE TABLE offender_freeze_disbursements (
	offender_freeze_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	from_date timestamp NOT NULL,
	to_date timestamp NOT NULL,
	freeze_reason_code varchar(12) NOT NULL,
	comment_text varchar(240),
	seal_flag varchar(1),
	removed_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_gang_affiliations (
	gang_code varchar(12) NOT NULL,
	offender_book_id bigint NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_gang_affiliations IS E'Offender Gang Affiliations';
COMMENT ON COLUMN offender_gang_affiliations.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_gang_affiliations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_gang_affiliations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_gang_affiliations.gang_code IS E'A code representing a gang or faction.';
COMMENT ON COLUMN offender_gang_affiliations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_gang_affiliations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_gang_affiliations.offender_book_id IS E' Unique identifier for an offender booking.';

CREATE TABLE offender_gang_evidences (
	offender_book_id bigint NOT NULL,
	gang_code varchar(12) NOT NULL,
	off_gang_evidence_seq integer NOT NULL,
	gang_evidence_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_gang_evidences IS E'Evidence surrounding offender"s membership in a gang.';
COMMENT ON COLUMN offender_gang_evidences.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_gang_evidences.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_gang_evidences.gang_code IS E' A code representing a gang or faction.';
COMMENT ON COLUMN offender_gang_evidences.gang_evidence_code IS E'Reference Code (GANG_EVIDEN)';
COMMENT ON COLUMN offender_gang_evidences.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_gang_evidences.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_gang_evidences.off_gang_evidence_seq IS E'System generated sequence number for gang evidence.';
COMMENT ON COLUMN offender_gang_evidences.offender_book_id IS E' Unique identifer for an offender booking.';

CREATE TABLE offender_gang_invests (
	offender_book_id bigint NOT NULL,
	gang_code varchar(12) NOT NULL,
	investigate_seq integer NOT NULL,
	membership_status varchar(12) NOT NULL,
	comment_text varchar(240),
	modified_date timestamp NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_gang_invests IS E'Data relevant to investigation of offender gang status.';
COMMENT ON COLUMN offender_gang_invests.comment_text IS E' Investigation comments.';
COMMENT ON COLUMN offender_gang_invests.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_gang_invests.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_gang_invests.gang_code IS E' A code representing a gang or faction.';
COMMENT ON COLUMN offender_gang_invests.investigate_seq IS E'System generated sequence number.';
COMMENT ON COLUMN offender_gang_invests.membership_status IS E'Reference Code (GANG_MBR_STS) ie. Acitve Member, Non-active Member..';
COMMENT ON COLUMN offender_gang_invests.modified_date IS E'Modified Date';
COMMENT ON COLUMN offender_gang_invests.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_gang_invests.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_gang_invests.offender_book_id IS E' Unique identifier for an offender booking.';

CREATE TABLE offender_grievances (
	grievance_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	report_date timestamp NOT NULL,
	griev_type varchar(12) NOT NULL,
	griev_reason_code varchar(12) NOT NULL,
	agency_incident_id bigint,
	party_seq integer,
	claim_amount decimal(5,2),
	agy_loc_id varchar(6) NOT NULL,
	comment_text varchar(128),
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_grievance_txns (
	grievance_id bigint NOT NULL,
	txn_seq integer NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp,
	griev_type varchar(12) NOT NULL,
	txn_type varchar(12) NOT NULL,
	finding varchar(12),
	assigned_staff_id integer,
	griev_level varchar(5),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	status varchar(12) NOT NULL,
	proposed_response varchar(2000),
	official_response varchar(2000),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_griev_staffs (
	grievance_id bigint NOT NULL,
	staff_id integer NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_groups (
	crs_acty_id bigint NOT NULL,
	target_group varchar(12) NOT NULL,
	exclude_flag varchar(1),
	target_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_groups.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_groups.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_groups.crs_acty_id IS E'The Course/Activity Id';
COMMENT ON COLUMN offender_groups.exclude_flag IS E'Target Group to be Excluded';
COMMENT ON COLUMN offender_groups.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_groups.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_groups.target_flag IS E'Target Group to be Targeted';
COMMENT ON COLUMN offender_groups.target_group IS E'Target Group - DOMAIN PS_OFF_GRPS';

CREATE TABLE offender_health_problems (
	offender_health_problem_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	problem_type varchar(12) NOT NULL,
	problem_code varchar(12) NOT NULL,
	start_date timestamp,
	end_date timestamp,
	caseload_type varchar(12) NOT NULL,
	description varchar(240),
	problem_status varchar(12),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_health_problems IS E'The Physical Health Problem of an Offender';
COMMENT ON COLUMN offender_health_problems.description IS E' - Column already exists';
COMMENT ON COLUMN offender_health_problems.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_health_problems.offender_health_problem_id IS E' - Column already exists';
COMMENT ON COLUMN offender_health_problems.problem_code IS E'Reference Code ( HEALTH PBLM )';
COMMENT ON COLUMN offender_health_problems.problem_status IS E'Reference Code ( Status ) : [ Active | Inactive ]';
COMMENT ON COLUMN offender_health_problems.problem_type IS E'REFRENCE CODE (HEALTH ) [PHYSICAL | MENTA | DRUG ABUSED ]';

CREATE TABLE offender_hospital_visits (
	offender_book_id bigint NOT NULL,
	visit_seq integer NOT NULL,
	visit_date timestamp NOT NULL,
	hospital_code varchar(6) NOT NULL,
	comment_text varchar(240),
	escort_code varchar(12) NOT NULL,
	user_id integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_hospital_visits IS E'- Retrofitted';
COMMENT ON COLUMN offender_hospital_visits.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_hospital_visits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_hospital_visits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_hospital_visits.escort_code IS E'Reference Code ( ESCORT )';
COMMENT ON COLUMN offender_hospital_visits.hospital_code IS E' - Column already exists';
COMMENT ON COLUMN offender_hospital_visits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_hospital_visits.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_hospital_visits.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_hospital_visits.user_id IS E'Modified By';
COMMENT ON COLUMN offender_hospital_visits.visit_date IS E' - Column already exists';
COMMENT ON COLUMN offender_hospital_visits.visit_seq IS E' - Column already exists';

CREATE TABLE offender_hwd (
	hwd_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	received_date timestamp NOT NULL,
	issuing_agy varchar(12) NOT NULL,
	hwd_type varchar(12) NOT NULL,
	hwd_info_id varchar(40),
	start_date timestamp,
	expiry_date timestamp,
	bail_amount decimal(11,2),
	prob_revoc_flag varchar(1) NOT NULL,
	hwd_status varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_hwd IS E'Records individual offender holds/ warrants / detainers from outside jurisdictions';
COMMENT ON COLUMN offender_hwd.bail_amount IS E'Bail amount assessed to offender';
COMMENT ON COLUMN offender_hwd.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_hwd.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_hwd.expiry_date IS E'End date on HWD document';
COMMENT ON COLUMN offender_hwd.hwd_id IS E'System generated identifier (oracle sequence HWD_ID)';
COMMENT ON COLUMN offender_hwd.hwd_info_id IS E'Identification number on HWD document';
COMMENT ON COLUMN offender_hwd.hwd_status IS E'Hold, Warrant or Detainer status (reference domain = HWD_STATUS)';
COMMENT ON COLUMN offender_hwd.hwd_type IS E'Document type (reference domain = HWD_TYPE)';
COMMENT ON COLUMN offender_hwd.issuing_agy IS E'Agency/Jurisdiction who has issued HWD (reference domain = HWD_AGENCY)';
COMMENT ON COLUMN offender_hwd.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_hwd.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_hwd.offender_book_id IS E'Offender booking id; Holds Warrants and Detainers are stored against the booking id';
COMMENT ON COLUMN offender_hwd.prob_revoc_flag IS E'Flag indicating if offender is subject to revocation of parole(Y, N values only)';
COMMENT ON COLUMN offender_hwd.received_date IS E'Date HWD document was recived by holding facility';
COMMENT ON COLUMN offender_hwd.start_date IS E'Start date on HWD document';

CREATE TABLE offender_hwd_charges (
	hwd_charge_id bigint NOT NULL,
	hwd_id bigint NOT NULL,
	charge_code varchar(12) NOT NULL,
	charge_comment varchar(240),
	tried_untried_code varchar(12),
	charge_status varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_hwd_charges IS E'Records charges against individual offender hold, warrant or detainer from outside jurisdiction';
COMMENT ON COLUMN offender_hwd_charges.charge_code IS E'Charge code (reference domain = HWD_CHARGES)';
COMMENT ON COLUMN offender_hwd_charges.charge_comment IS E'Free-text charge detail information ';
COMMENT ON COLUMN offender_hwd_charges.charge_status IS E'Status of charge (refernec domain = HWD_CHRG_STS)';
COMMENT ON COLUMN offender_hwd_charges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_hwd_charges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_hwd_charges.hwd_charge_id IS E'System generated identifier (oracle sequence HWD_CHARGE_ID)';
COMMENT ON COLUMN offender_hwd_charges.hwd_id IS E'Hold, Warrant or Detainer system generated identifier';
COMMENT ON COLUMN offender_hwd_charges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_hwd_charges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_hwd_charges.tried_untried_code IS E'Indicator code if charge has already been tried or if the court proceedings are not yet complete (reference domain = HWD_TRIED)';

CREATE TABLE offender_hwd_hty (
	hwd_hty_id bigint NOT NULL,
	hwd_id bigint NOT NULL,
	event_datetime timestamp NOT NULL,
	event_type varchar(12) NOT NULL,
	event_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_hwd_hty IS E'Records events against individual offender holds, warrants or detainers from outside jurisdiction';
COMMENT ON COLUMN offender_hwd_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_hwd_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_hwd_hty.event_comment IS E'Free text comment on event';
COMMENT ON COLUMN offender_hwd_hty.event_datetime IS E'Date and Time of the event (needs to include time portion)';
COMMENT ON COLUMN offender_hwd_hty.event_type IS E'Event type (reference domain = HWD_EVENT)';
COMMENT ON COLUMN offender_hwd_hty.hwd_hty_id IS E'System generated identifier (oracle sequence HWD_HTY_ID)';
COMMENT ON COLUMN offender_hwd_hty.hwd_id IS E'Hold, Warrant or Detainer system generated identifier';
COMMENT ON COLUMN offender_hwd_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_hwd_hty.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_identifiers (
	offender_id bigint NOT NULL,
	offender_id_seq varchar(12) NOT NULL,
	identifier_type varchar(12) NOT NULL,
	identifier varchar(20) NOT NULL,
	issued_authority_text varchar(240),
	issued_date timestamp,
	root_offender_id bigint,
	caseload_type varchar(12),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	verified_flag varchar(1) DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_identifiers IS E'The identifier of the offender name such as SIN card, Driving Licence';
COMMENT ON COLUMN offender_identifiers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_identifiers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_identifiers.identifier IS E'The number associated with the type of identifier.';
COMMENT ON COLUMN offender_identifiers.identifier_type IS E'Reference Code ( ID_TYPE ) :  Type of identifier to be associated with offender.';
COMMENT ON COLUMN offender_identifiers.issued_authority_text IS E' The authority issuing the identification.';
COMMENT ON COLUMN offender_identifiers.issued_date IS E' The date the identification was issued.';
COMMENT ON COLUMN offender_identifiers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_identifiers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_identifiers.offender_id IS E'Unique identifier for an offender.';
COMMENT ON COLUMN offender_identifiers.offender_id_seq IS E'System generated number forming part of primary key.';

CREATE TABLE offender_identifying_marks (
	offender_book_id bigint NOT NULL,
	id_mark_seq integer NOT NULL,
	body_part_code varchar(12) NOT NULL,
	mark_type varchar(12) NOT NULL,
	side_code varchar(12),
	part_orientation_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_identifying_marks IS E'The Body Identifying Marks of an offender';
COMMENT ON COLUMN offender_identifying_marks.body_part_code IS E'Reference Code ( BODY_PART ) : Code for body part with mark ie. Leg, Forearm, Chest etc.';
COMMENT ON COLUMN offender_identifying_marks.comment_text IS E' Comment describing identifying mark.';
COMMENT ON COLUMN offender_identifying_marks.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_identifying_marks.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_identifying_marks.id_mark_seq IS E' A system generated secondary primary key column.';
COMMENT ON COLUMN offender_identifying_marks.mark_type IS E'Reference Code ( MARK_TYPE ) :  Type of mark on offender - ie. Tattoo, Scar etc.';
COMMENT ON COLUMN offender_identifying_marks.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_identifying_marks.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_identifying_marks.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_identifying_marks.part_orientation_code IS E'Reference Code ( PART_ORIENT ) : Orientation of mark on body ie. Lower, Upper etc.';
COMMENT ON COLUMN offender_identifying_marks.side_code IS E'Reference Code ( SIDE ) : Side of body part containing mark ie. Front, Back, Left, Right etc.';

CREATE TABLE offender_id_display_temp (
	session_id bigint NOT NULL,
	offender_id_display varchar(10) NOT NULL,
	date_inserted timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_iep_levels (
	offender_book_id bigint NOT NULL,
	iep_level_seq bigint NOT NULL,
	iep_date timestamp NOT NULL,
	iep_time timestamp,
	agy_loc_id varchar(6) NOT NULL,
	iep_level varchar(12) NOT NULL,
	comment_text varchar(240),
	user_id varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_iep_levels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_iep_levels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_iep_levels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_iep_levels.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_images (
	offender_image_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	capture_datetime timestamp NOT NULL,
	orientation_type varchar(12) NOT NULL,
	full_size_image bytea,
	thumbnail_image bytea,
	image_object_type varchar(12),
	image_view_type varchar(12),
	image_object_id bigint,
	image_object_seq bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_images IS E'The images of an offender';
COMMENT ON COLUMN offender_images.active_flag IS E'Flag to identify if the image record is currently active or not.';
COMMENT ON COLUMN offender_images.capture_datetime IS E'The timestamp when the image is taken';
COMMENT ON COLUMN offender_images.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_images.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_images.full_size_image IS E'The full size image (MUGSHOT) of the offender stored as jpeg format.';
COMMENT ON COLUMN offender_images.image_object_id IS E'The ID of the image object.';
COMMENT ON COLUMN offender_images.image_object_seq IS E'The seq ID of the image object.';
COMMENT ON COLUMN offender_images.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_images.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_images.offender_book_id IS E'Unique Sequence identifying the Offender''s Booking record.';
COMMENT ON COLUMN offender_images.offender_image_id IS E'Unique sequence identifying each image - Oracle Sequence - (PK)';
COMMENT ON COLUMN offender_images.orientation_type IS E'The orientation type ';
COMMENT ON COLUMN offender_images.thumbnail_image IS E'The thumbnail size image (MUGSHOT) of the offender stored as jpeg format.';

CREATE TABLE offender_imprison_statuses (
	offender_book_id bigint NOT NULL,
	imprison_status_seq integer NOT NULL,
	imprisonment_status varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	effective_time timestamp,
	expiry_date timestamp,
	agy_loc_id varchar(6),
	create_date timestamp,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	state varchar(12),
	seal_flag varchar(1),
	error_flag varchar(1) DEFAULT 'N'
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_imprison_statuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_imprison_statuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_imprison_statuses.imprisonment_status IS E'Reference Code ( IMP_STS)';
COMMENT ON COLUMN offender_imprison_statuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_imprison_statuses.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_incident_details (
	agency_incident_id bigint NOT NULL,
	party_seq integer NOT NULL,
	profile_type varchar(12) NOT NULL,
	profile_code varchar(40),
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_incident_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_incident_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_incident_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_incident_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_income (
	income_seq bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	source varchar(12) NOT NULL,
	amount decimal(11,2) NOT NULL,
	partial_from_date_flag varchar(1),
	from_date timestamp,
	partial_to_date_flag varchar(1),
	to_date timestamp,
	comment_text varchar(240),
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_income.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_income.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_income.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_income.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_ind_schedules (
	event_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	event_date timestamp,
	start_time timestamp,
	end_time timestamp,
	event_class varchar(12) NOT NULL,
	event_type varchar(12) NOT NULL,
	event_sub_type varchar(12) NOT NULL,
	event_status varchar(12) NOT NULL,
	comment_text varchar(3600),
	hidden_comment_text varchar(240),
	application_date timestamp,
	parent_event_id bigint,
	agy_loc_id varchar(12),
	to_agy_loc_id varchar(6),
	to_internal_location_id bigint,
	from_city varchar(20),
	to_city varchar(20),
	crs_sch_id bigint,
	order_id bigint,
	sentence_seq bigint,
	outcome_reason_code varchar(12),
	judge_name varchar(60),
	check_box_1 varchar(1),
	check_box_2 varchar(1),
	in_charge_staff_id integer,
	credited_hours integer,
	report_in_date timestamp,
	piece_work decimal(11,2),
	engagement_code varchar(12),
	understanding_code varchar(12),
	details varchar(40),
	credited_work_hour decimal(6,2),
	agreed_travel_hour decimal(6,2),
	unpaid_work_supervisor varchar(30),
	unpaid_work_behaviour varchar(12),
	unpaid_work_action varchar(12),
	sick_note_received_date timestamp,
	sick_note_expiry_date timestamp,
	court_event_result varchar(12),
	unexcused_absence_flag varchar(1),
	create_user_id varchar(32) NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	escort_code varchar(12),
	confirm_flag varchar(1),
	direction_code varchar(12),
	to_city_code varchar(12),
	from_city_code varchar(12),
	off_prgref_id bigint,
	in_time timestamp,
	out_time timestamp,
	performance_code varchar(12),
	temp_abs_sch_id bigint,
	reference_id bigint,
	transport_code varchar(12),
	application_time timestamp,
	contact_person_name varchar(40),
	to_address_owner_class varchar(12),
	to_address_id bigint,
	return_date timestamp,
	return_time timestamp,
	to_corporate_id bigint,
	ta_id bigint,
	event_outcome varchar(12),
	offender_prg_obligation_id bigint,
	prov_state_code varchar(12),
	seal_flag varchar(1),
	scheduled_trip_id bigint
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_ind_schedules IS E'The Offender Individual schedules';
COMMENT ON COLUMN offender_ind_schedules.agreed_travel_hour IS E'Travel time (hours)';
COMMENT ON COLUMN offender_ind_schedules.agy_loc_id IS E'Record Owner : Agency Location for security sake';
COMMENT ON COLUMN offender_ind_schedules.application_date IS E'The date time of the schedule application such as temporary absence';
COMMENT ON COLUMN offender_ind_schedules.application_time IS E'The time of application (For internal movements)';
COMMENT ON COLUMN offender_ind_schedules.check_box_1 IS E'For court movement';
COMMENT ON COLUMN offender_ind_schedules.check_box_2 IS E'For court movement';
COMMENT ON COLUMN offender_ind_schedules.comment_text IS E'Comments';
COMMENT ON COLUMN offender_ind_schedules.confirm_flag IS E'? if the schedule confirmed';
COMMENT ON COLUMN offender_ind_schedules.contact_person_name IS E'The contact person name';
COMMENT ON COLUMN offender_ind_schedules.court_event_result IS E'Ref Domain (CRT_RESULT)';
COMMENT ON COLUMN offender_ind_schedules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ind_schedules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ind_schedules.credited_hours IS E'Credit hours';
COMMENT ON COLUMN offender_ind_schedules.credited_work_hour IS E'No of credited hours';
COMMENT ON COLUMN offender_ind_schedules.crs_sch_id IS E'FK to course schedules';
COMMENT ON COLUMN offender_ind_schedules.details IS E'Details text';
COMMENT ON COLUMN offender_ind_schedules.direction_code IS E'The direction of the movements: Reference Code(MOVE_DIRECT)';
COMMENT ON COLUMN offender_ind_schedules.end_time IS E'Schedule End Time of the event';
COMMENT ON COLUMN offender_ind_schedules.engagement_code IS E'Ref Domain (ENGAGE)';
COMMENT ON COLUMN offender_ind_schedules.escort_code IS E'The escort type of the movements: Reference Code(ESCORT)';
COMMENT ON COLUMN offender_ind_schedules.event_class IS E'Ref Domain (EVENT_CLASS)';
COMMENT ON COLUMN offender_ind_schedules.event_date IS E'Schedule Date of the event (no time)';
COMMENT ON COLUMN offender_ind_schedules.event_id IS E'Schedule(Event) ID';
COMMENT ON COLUMN offender_ind_schedules.event_outcome IS E'The actual outcome of the schedule';
COMMENT ON COLUMN offender_ind_schedules.event_status IS E'Ref Domain (EVENT_STS)';
COMMENT ON COLUMN offender_ind_schedules.event_sub_type IS E'Ref DOmain (MOVE_RSN, INS_SCH_RSN, EVENT_SUBTYP)';
COMMENT ON COLUMN offender_ind_schedules.event_type IS E'Ref Domain (MOVE_TYPE, INT_SCH_TYPE, EVENTS)';
COMMENT ON COLUMN offender_ind_schedules.from_city IS E'Movement : From which city';
COMMENT ON COLUMN offender_ind_schedules.from_city_code IS E'Reference Code (CITY))';
COMMENT ON COLUMN offender_ind_schedules.hidden_comment_text IS E'Hidden comments for scurity';
COMMENT ON COLUMN offender_ind_schedules.in_charge_staff_id IS E'The staff memeber who in charge of this schedules such as movement escort';
COMMENT ON COLUMN offender_ind_schedules.in_time IS E'The actual in time';
COMMENT ON COLUMN offender_ind_schedules.judge_name IS E'For court movement';
COMMENT ON COLUMN offender_ind_schedules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ind_schedules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_ind_schedules.off_prgref_id IS E'The Reference ID of the Offender Program Profiles';
COMMENT ON COLUMN offender_ind_schedules.offender_book_id IS E'FK to Offender Booking';
COMMENT ON COLUMN offender_ind_schedules.offender_prg_obligation_id IS E'The offender program obligation ID';
COMMENT ON COLUMN offender_ind_schedules.order_id IS E'FK to Orders';
COMMENT ON COLUMN offender_ind_schedules.out_time IS E'The actual out time';
COMMENT ON COLUMN offender_ind_schedules.outcome_reason_code IS E'Reference Code (CANC_RSN)';
COMMENT ON COLUMN offender_ind_schedules.parent_event_id IS E'Previous related Event ID';
COMMENT ON COLUMN offender_ind_schedules.performance_code IS E'The attendance performance ';
COMMENT ON COLUMN offender_ind_schedules.piece_work IS E'No of piece work';
COMMENT ON COLUMN offender_ind_schedules.reference_id IS E'The general reference ID for virtual schedule';
COMMENT ON COLUMN offender_ind_schedules.report_in_date IS E'Report In Date';
COMMENT ON COLUMN offender_ind_schedules.return_date IS E'The Date of the return (for movements such as temporary absence)';
COMMENT ON COLUMN offender_ind_schedules.return_time IS E'The Time of the return (for movements such as temporary absence)';
COMMENT ON COLUMN offender_ind_schedules.sentence_seq IS E'FK to Offender Sentences';
COMMENT ON COLUMN offender_ind_schedules.sick_note_expiry_date IS E'The expiry date of the sick note';
COMMENT ON COLUMN offender_ind_schedules.sick_note_received_date IS E'The date sick note received';
COMMENT ON COLUMN offender_ind_schedules.start_time IS E'Schedule Time of the event';
COMMENT ON COLUMN offender_ind_schedules.ta_id IS E'The Temporary absence group ID';
COMMENT ON COLUMN offender_ind_schedules.temp_abs_sch_id IS E'The tempary absence schedule ID';
COMMENT ON COLUMN offender_ind_schedules.to_address_id IS E'The address ID of the movement destination';
COMMENT ON COLUMN offender_ind_schedules.to_address_owner_class IS E'The party class of the address, such as OFF Offender, AGY Agency Location';
COMMENT ON COLUMN offender_ind_schedules.to_agy_loc_id IS E'Movement : to which agency location';
COMMENT ON COLUMN offender_ind_schedules.to_city IS E'Movement : To which city';
COMMENT ON COLUMN offender_ind_schedules.to_city_code IS E'Reference Code (CITY)';
COMMENT ON COLUMN offender_ind_schedules.to_corporate_id IS E'The party ID of corporate for the movement destination';
COMMENT ON COLUMN offender_ind_schedules.to_internal_location_id IS E'FK to Agency Internal Location';
COMMENT ON COLUMN offender_ind_schedules.transport_code IS E'The transport of the movement. Reference code(TRANSPORT)';
COMMENT ON COLUMN offender_ind_schedules.understanding_code IS E'Ref Domain (UNSTAND)';
COMMENT ON COLUMN offender_ind_schedules.unexcused_absence_flag IS E'If the event is unexcused absence';
COMMENT ON COLUMN offender_ind_schedules.unpaid_work_action IS E'Ref Domain (COMM_ACTION)';
COMMENT ON COLUMN offender_ind_schedules.unpaid_work_behaviour IS E'Ref Domain (BEHAVIOR)';
COMMENT ON COLUMN offender_ind_schedules.unpaid_work_supervisor IS E'supervisor name';

CREATE TABLE offender_ind_sch_sents (
	event_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_ind_sch_sents.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ind_sch_sents.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ind_sch_sents.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ind_sch_sents.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_ind_sch_wait_lists (
	event_id bigint NOT NULL,
	request_date timestamp NOT NULL,
	wait_list_status varchar(12) NOT NULL,
	status_date timestamp NOT NULL,
	transfer_priority varchar(12) NOT NULL,
	approved_flag varchar(1) NOT NULL DEFAULT 'N',
	approved_staff_id bigint,
	outcome_reason_code varchar(12),
	comment_text_1 varchar(240),
	comment_text_2 varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_ind_sch_wait_lists.approved_flag IS E'?if the request approved';
COMMENT ON COLUMN offender_ind_sch_wait_lists.approved_staff_id IS E'The ID of staff who approved the request';
COMMENT ON COLUMN offender_ind_sch_wait_lists.comment_text_1 IS E'General comment text 1';
COMMENT ON COLUMN offender_ind_sch_wait_lists.comment_text_2 IS E'General comment text 2';
COMMENT ON COLUMN offender_ind_sch_wait_lists.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ind_sch_wait_lists.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ind_sch_wait_lists.event_id IS E'The PK of the event';
COMMENT ON COLUMN offender_ind_sch_wait_lists.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ind_sch_wait_lists.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_ind_sch_wait_lists.outcome_reason_code IS E'The reason of the request outcome';
COMMENT ON COLUMN offender_ind_sch_wait_lists.request_date IS E'The date of the request/application';
COMMENT ON COLUMN offender_ind_sch_wait_lists.status_date IS E'The date of status changed';
COMMENT ON COLUMN offender_ind_sch_wait_lists.transfer_priority IS E'The priority of the transfer (for internal business process)';
COMMENT ON COLUMN offender_ind_sch_wait_lists.wait_list_status IS E'The status of the waiting list';

CREATE TABLE offender_inst_requests (
	off_inst_req_id bigint NOT NULL,
	offender_booking_id bigint NOT NULL,
	request_date timestamp NOT NULL,
	request_type varchar(12) NOT NULL,
	request_status varchar(12) NOT NULL,
	request_reason varchar(12),
	requested_by_type varchar(12),
	requested_by_id integer,
	requested_agency_id varchar(6),
	request_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_inst_requests.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_inst_requests.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_inst_requests.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_inst_requests.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_inst_responses (
	off_inst_response_id bigint NOT NULL,
	off_inst_req_id bigint NOT NULL,
	response_type varchar(12) NOT NULL,
	response_date timestamp,
	response_authority_code varchar(12),
	disposition_code varchar(12),
	authrized_by integer,
	refered_to varchar(12),
	offender_book_id bigint,
	response_auth_member_id bigint,
	response_auth_time_id bigint,
	response_auth_loc_id bigint,
	in_person_flag varchar(1),
	response_comment varchar(600),
	response_status_code varchar(12),
	response_status varchar(12),
	result_code varchar(12),
	result_reason_code varchar(12),
	effective_date timestamp,
	general_comment varchar(240),
	confidatial_comment varchar(240),
	last_change_flag varchar(1),
	create_date timestamp,
	modify_user_id varchar(32),
	schedule_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_inst_responses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_inst_responses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_inst_responses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_inst_responses.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_inst_response_members (
	off_response_member_id bigint NOT NULL,
	committee_meeting_id bigint NOT NULL,
	review_auth_member_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_inst_response_members.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_inst_response_members.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_inst_response_members.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_inst_response_members.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_inst_response_results (
	off_inst_result_id bigint NOT NULL,
	off_response_inst_id bigint NOT NULL,
	result_code varchar(12),
	result_reason_code varchar(12) NOT NULL,
	response_authority varchar(12),
	offender_book_id bigint,
	effective_date timestamp,
	referred_to varchar(12),
	general_comment varchar(240),
	confidatial_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_inst_response_results.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_inst_response_results.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_inst_response_results.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_inst_response_results.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_interests (
	from_date timestamp NOT NULL,
	to_date timestamp NOT NULL,
	txn_type varchar(6) NOT NULL,
	interest_rate decimal(12,5) NOT NULL,
	start_txn_id bigint,
	end_txn_id bigint,
	caseload_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_interests.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_interests.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_interests.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_interests.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_internal_movements (
	offender_book_id bigint NOT NULL,
	movement_seq integer NOT NULL,
	movement_type varchar(12) NOT NULL,
	movement_code varchar(12),
	movement_reason_code varchar(12),
	movement_date timestamp NOT NULL,
	movement_start_time timestamp NOT NULL,
	movement_end_time timestamp,
	duration_code varchar(12),
	movement_status varchar(12),
	condition_text varchar(240),
	request_staff_id integer,
	comment_text varchar(4000),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp,
	agy_loc_id varchar(6),
	visit_loc_id varchar(6),
	visit_type varchar(12),
	visit_cycle_type varchar(12),
	restriction_apply_flag varchar(1) DEFAULT 'Y',
	cancellation_reason_code varchar(12),
	schedule_id bigint,
	living_unit_id bigint,
	visit_order_number bigint,
	visit_time_slot timestamp,
	completion_circumstance varchar(12),
	authorised_staff_id integer,
	search_level varchar(12),
	incidents_raised varchar(12),
	incident_number bigint,
	visitor_concerns varchar(240),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_internal_movements IS E'Offenders" Internal Movements (Such as Visits ..)';
COMMENT ON COLUMN offender_internal_movements.agy_loc_id IS E'The location residing within an agency.';
COMMENT ON COLUMN offender_internal_movements.authorised_staff_id IS E'An Unique Identifier for Authorised Staff.';
COMMENT ON COLUMN offender_internal_movements.comment_text IS E'Comment Of the Movement';
COMMENT ON COLUMN offender_internal_movements.completion_circumstance IS E'Circumstance under which the visit occured.';
COMMENT ON COLUMN offender_internal_movements.condition_text IS E'Condition Details of the Movement';
COMMENT ON COLUMN offender_internal_movements.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_internal_movements.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_internal_movements.duration_code IS E'Reference Code ( PERIOD_TYPE )Duration Code of the movement.';
COMMENT ON COLUMN offender_internal_movements.incident_number IS E'Stores incident number against the Visit';
COMMENT ON COLUMN offender_internal_movements.incidents_raised IS E'Stores incidents raised against the Visit';
COMMENT ON COLUMN offender_internal_movements.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_internal_movements.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_internal_movements.movement_code IS E'Reference Code ( MOVE_CODE ) Movement Code (For example, Segregation For CARE in Placement)';
COMMENT ON COLUMN offender_internal_movements.movement_date IS E'The date of the internal movement - ie. the date of the Visit.';
COMMENT ON COLUMN offender_internal_movements.movement_end_time IS E'End time for the event ie. Visit end time.';
COMMENT ON COLUMN offender_internal_movements.movement_reason_code IS E'Reference Code ( MOVE_CODE )The Reason For This Movement';
COMMENT ON COLUMN offender_internal_movements.movement_seq IS E'Sequence number forming part of primary key.';
COMMENT ON COLUMN offender_internal_movements.movement_start_time IS E'Start time for the event ie. Visit start time.';
COMMENT ON COLUMN offender_internal_movements.movement_status IS E'Reference Code ( MOVE_STS ) : Movement Status';
COMMENT ON COLUMN offender_internal_movements.movement_type IS E'Reference Code ( MOVE_TYPE )Movement Type (Such as VIS - Visit)';
COMMENT ON COLUMN offender_internal_movements.offender_book_id IS E'System generated unique identifier for an offender booking.';
COMMENT ON COLUMN offender_internal_movements.restriction_apply_flag IS E'If Restriction Apply During This Movement';
COMMENT ON COLUMN offender_internal_movements.search_level IS E'Stores type of search? Pat frisked etc...';
COMMENT ON COLUMN offender_internal_movements.visit_cycle_type IS E'Visit Cycle Type';
COMMENT ON COLUMN offender_internal_movements.visit_loc_id IS E'Visit Location Code';
COMMENT ON COLUMN offender_internal_movements.visit_order_number IS E'A unique ID associated to each Visit Order.';
COMMENT ON COLUMN offender_internal_movements.visit_time_slot IS E'Visit time slot.';
COMMENT ON COLUMN offender_internal_movements.visit_type IS E'Reference Code (VISIT_TYPE)';
COMMENT ON COLUMN offender_internal_movements.visitor_concerns IS E'Free text entry to store visitor concerns';

CREATE TABLE offender_internal_statuses (
	offender_book_id bigint NOT NULL,
	internal_status_seq integer NOT NULL,
	internal_status varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	agy_loc_id varchar(6),
	int_sts_reason_code varchar(12),
	record_status varchar(12),
	is_requested_party_type varchar(12),
	duration_code varchar(12),
	effective_time timestamp,
	expiry_date timestamp,
	create_date timestamp NOT NULL,
	comment_text varchar(240),
	authorized_person_text varchar(20),
	revoked_by integer,
	auth_person_post_code varchar(12),
	authorized_person_name varchar(30),
	revoked_person_post_code varchar(12),
	revoked_person_name varchar(30),
	review_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_internal_statuses IS E'The internal Status of an Offender in Insitute';
COMMENT ON COLUMN offender_internal_statuses.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_internal_statuses.create_date IS E'Create Date';
COMMENT ON COLUMN offender_internal_statuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_internal_statuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_internal_statuses.effective_date IS E' - Column already exists';
COMMENT ON COLUMN offender_internal_statuses.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN offender_internal_statuses.internal_status IS E'Reference Code ( INT_STS )';
COMMENT ON COLUMN offender_internal_statuses.internal_status_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_internal_statuses.is_requested_party_type IS E'Reference Code ( INT_STS_PTY )';
COMMENT ON COLUMN offender_internal_statuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_internal_statuses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_internal_statuses.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_internal_statuses.record_status IS E'Reference Code ( STATUS )';

CREATE TABLE offender_intervention_tiers (
	offender_intervention_tier_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	intervention_date timestamp NOT NULL,
	intervention_tier_code varchar(12) NOT NULL,
	comment_text varchar(240),
	record_staff_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_intervention_tiers IS E'The details of offender intervention tiers';
COMMENT ON COLUMN offender_intervention_tiers.comment_text IS E'Comment';
COMMENT ON COLUMN offender_intervention_tiers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_intervention_tiers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_intervention_tiers.intervention_date IS E'Date of the intervention';
COMMENT ON COLUMN offender_intervention_tiers.intervention_tier_code IS E'The intervention code';
COMMENT ON COLUMN offender_intervention_tiers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_intervention_tiers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_intervention_tiers.offender_book_id IS E'Offender Book Id';
COMMENT ON COLUMN offender_intervention_tiers.offender_intervention_tier_id IS E'The intervention ID';
COMMENT ON COLUMN offender_intervention_tiers.record_staff_id IS E'The staff who record this intervention';

CREATE TABLE offender_inter_mvmt_locations (
	offender_iml_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	agency_location_id varchar(6) NOT NULL,
	agency_iml_id bigint NOT NULL,
	movement_date timestamp NOT NULL,
	movement_time timestamp NOT NULL,
	from_agency_iml_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	movement_type varchar(12),
	movement_reason_code varchar(12),
	event_id bigint,
	comment_text varchar(240),
	seal_flag varchar(1)
) ;
COMMENT ON TABLE offender_inter_mvmt_locations IS E'The record of offender internal movements inside agency locations';
COMMENT ON COLUMN offender_inter_mvmt_locations.agency_iml_id IS E'The agency internal location  ID';
COMMENT ON COLUMN offender_inter_mvmt_locations.agency_location_id IS E'The agency location ID';
COMMENT ON COLUMN offender_inter_mvmt_locations.event_id IS E'The event ID';
COMMENT ON COLUMN offender_inter_mvmt_locations.from_agency_iml_id IS E'The original internal location ID';
COMMENT ON COLUMN offender_inter_mvmt_locations.movement_date IS E'The date of the movement';
COMMENT ON COLUMN offender_inter_mvmt_locations.movement_time IS E'The time of the movement';
COMMENT ON COLUMN offender_inter_mvmt_locations.offender_book_id IS E'The offender Book ID';
COMMENT ON COLUMN offender_inter_mvmt_locations.offender_iml_id IS E'The PK of the internal movement record';

CREATE TABLE offender_int_loc_defaults (
	agy_loc_id varchar(6) NOT NULL,
	encounter_type varchar(12) NOT NULL,
	internal_location_id bigint NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_int_mov_persons (
	offender_book_id bigint NOT NULL,
	movement_seq integer NOT NULL,
	person_seq integer NOT NULL,
	person_id bigint NOT NULL,
	restriction_apply_flag varchar(1) DEFAULT 'Y',
	number_of_children smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_int_mov_persons IS E'Offender Internal Movement Persons';
COMMENT ON COLUMN offender_int_mov_persons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_int_mov_persons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_int_mov_persons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_int_mov_persons.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_int_mov_persons.person_id IS E'Person Involved';
COMMENT ON COLUMN offender_int_mov_persons.restriction_apply_flag IS E'If Restrcition Apply For This Event';

CREATE TABLE offender_key_date_adjusts (
	offender_key_date_adjust_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_adjust_code varchar(12) NOT NULL,
	adjust_from_date timestamp,
	adjust_to_date timestamp,
	adjust_days integer,
	adjust_status varchar(12),
	comment_text varchar(240),
	adjust_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_key_date_adjusts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_key_date_adjusts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_key_date_adjusts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_key_date_adjusts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_languages (
	offender_book_id bigint NOT NULL,
	language_type varchar(12) NOT NULL,
	language_code varchar(12) NOT NULL,
	read_skill varchar(12),
	speak_skill varchar(12),
	write_skill varchar(12),
	comment_text varchar(240),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	numeracy_skill varchar(12),
	prefered_write_flag varchar(1) NOT NULL DEFAULT 'N',
	prefered_speak_flag varchar(1) NOT NULL DEFAULT 'N',
	interpreter_requested_flag varchar(1) NOT NULL DEFAULT 'N',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_languages IS E'Offender Language and numeracy skills';
COMMENT ON COLUMN offender_languages.comment_text IS E'General comment on offender language skill';
COMMENT ON COLUMN offender_languages.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_languages.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_languages.interpreter_requested_flag IS E' Y/N flag if an interpreter is required.';
COMMENT ON COLUMN offender_languages.language_code IS E'Reference Code ( LANG ) A code for a language';
COMMENT ON COLUMN offender_languages.language_type IS E'Reference Code ( LANG_TYPE ) PRImary or SECondary';
COMMENT ON COLUMN offender_languages.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_languages.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_languages.numeracy_skill IS E'Reference Code (LANG_SKILL)';
COMMENT ON COLUMN offender_languages.offender_book_id IS E'FK to Offender Bookings.';
COMMENT ON COLUMN offender_languages.prefered_speak_flag IS E'Y/N flag if it is the prefered spoken language. ';
COMMENT ON COLUMN offender_languages.prefered_write_flag IS E'Y/N flag if it is the prefered written language.';
COMMENT ON COLUMN offender_languages.read_skill IS E'Reference Code (LANG_SKILL).';
COMMENT ON COLUMN offender_languages.speak_skill IS E'Reference Code (LANG_SKILL).';
COMMENT ON COLUMN offender_languages.write_skill IS E'Reference Code (LANG_SKILL).';

CREATE TABLE offender_liabilities (
	liability_seq bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	liability_type varchar(12) NOT NULL,
	amount decimal(11,2) NOT NULL,
	partial_to_date_flag varchar(1),
	to_date timestamp,
	comment_text varchar(240),
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_liabilities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_liabilities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_liabilities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_liabilities.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_licence_sentences (
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	case_id bigint NOT NULL,
	licence_sentence_seq integer NOT NULL,
	creation_date timestamp,
	creation_user varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_licence_sentences IS E'This table holds the sentence to licence link';

CREATE TABLE offender_limits (
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	limit_type varchar(12) NOT NULL,
	limit_amount decimal(11,2),
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	period_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_limits IS E'Specifies financial limits of various types for an offender.';
COMMENT ON COLUMN offender_limits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_limits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_limits.modify_date IS E'Modify Date';
COMMENT ON COLUMN offender_limits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_limits.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_limits.offender_id IS E'The unique identifier number for the offender.';

CREATE TABLE offender_loc_chng_dtls (
	offender_book_id bigint NOT NULL,
	location_seq integer NOT NULL,
	detail_seq integer NOT NULL,
	status_code varchar(12) NOT NULL,
	status_comment varchar(240),
	recorded_by varchar(32) NOT NULL DEFAULT 'user',
	recorded_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	app_rsn varchar(240),
	txn_status varchar(12) NOT NULL,
	txn_rsn varchar(240),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_mail_logs (
	offender_book_id bigint NOT NULL,
	inout_mail_type varchar(12) NOT NULL,
	log_date timestamp NOT NULL,
	mail_address_id bigint NOT NULL,
	mail_type varchar(12) NOT NULL,
	confidential_flag varchar(1) NOT NULL DEFAULT 'N',
	contraband_flag varchar(1) NOT NULL DEFAULT 'N',
	status_code varchar(12) NOT NULL,
	alert_code varchar(12),
	comment_text varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_mail_logs IS E'Offender mail registry.  A log of all mail coming to and going from the offender,
 the address and sender or recipient of the mail, the status, and the alert level recorded for the mail.';
COMMENT ON COLUMN offender_mail_logs.confidential_flag IS E'Indicates the mail is confidential if Y.  E.g., for mail with legal representative.';
COMMENT ON COLUMN offender_mail_logs.contraband_flag IS E'Indicates the mail contained contraband.';
COMMENT ON COLUMN offender_mail_logs.inout_mail_type IS E'Incoming mail (IN) or out going mail (OUT)';
COMMENT ON COLUMN offender_mail_logs.log_date IS E'Date the mail item was registered in the system.';
COMMENT ON COLUMN offender_mail_logs.mail_type IS E'Correspondent type (PER = Person or CORP = Business, UNKNOWN = none or non specified).  Corresponds to addresses.owner_class.  UNKNOWN new address class that will use the owner_id of offender_id (root_offender_id).';

CREATE TABLE offender_mail_restrictions (
	offender_book_id bigint NOT NULL,
	restriction_seq integer NOT NULL,
	restriction_address_id bigint NOT NULL,
	restriction_type varchar(12) NOT NULL,
	start_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	end_date timestamp,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	no_mail_to_flag varchar(1) NOT NULL DEFAULT 'N',
	no_mail_from_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_mail_restrictions.restriction_type IS E'Restriction type.  person_id populated if type = PER (person), corporate_id populated if type = CORP (other).  Corresponds to addresses.owner_class.';

CREATE TABLE offender_medical_answers_6i (
	offender_book_id bigint NOT NULL,
	screen_seq integer NOT NULL DEFAULT 99,
	medical_questionaire_code varchar(12) NOT NULL,
	medical_category varchar(12) NOT NULL,
	question_seq integer NOT NULL DEFAULT 99,
	answer_flag varchar(1) DEFAULT 'Y',
	comment_text varchar(750),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_medical_answers_6i IS E'Answers associated with medical questions.';
COMMENT ON COLUMN offender_medical_answers_6i.answer_flag IS E'Yes/No answers to medical questions.';
COMMENT ON COLUMN offender_medical_answers_6i.comment_text IS E'Comments associated with Y/N answers.';
COMMENT ON COLUMN offender_medical_answers_6i.medical_category IS E'Version of questionnaire.';
COMMENT ON COLUMN offender_medical_answers_6i.medical_questionaire_code IS E'Version of questionnaire.';
COMMENT ON COLUMN offender_medical_answers_6i.offender_book_id IS E'System generated identifier for an offender booking.';
COMMENT ON COLUMN offender_medical_answers_6i.question_seq IS E' Sequence number for questions.';
COMMENT ON COLUMN offender_medical_answers_6i.screen_seq IS E'Screening sequence number.';

CREATE TABLE offender_medical_categories_6i (
	offender_book_id bigint NOT NULL,
	screen_seq integer NOT NULL,
	medical_questionaire_code varchar(12) NOT NULL,
	medical_category varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_medical_categories_6i IS E'- Retrofitted- Retrofitted';
COMMENT ON COLUMN offender_medical_categories_6i.medical_category IS E'Version of questionaire. - Retrofitted';
COMMENT ON COLUMN offender_medical_categories_6i.medical_questionaire_code IS E' - Column already exists - Retrofitted';
COMMENT ON COLUMN offender_medical_categories_6i.offender_book_id IS E' - Column already exists - Retrofitted';
COMMENT ON COLUMN offender_medical_categories_6i.screen_seq IS E' - Column already exists - Retrofitted';

CREATE TABLE offender_medical_screenings (
	offender_book_id bigint NOT NULL,
	screen_seq integer NOT NULL,
	medical_date timestamp NOT NULL,
	medical_disposition_code varchar(12),
	staff_id integer NOT NULL,
	blood_pressure varchar(6),
	comment_text varchar(240),
	physical_exam_date timestamp,
	reviewed_by_text varchar(40),
	screen_reason_code varchar(12),
	medical_time timestamp,
	dental_exam_date timestamp,
	pulse varchar(5),
	respiration_text varchar(40),
	temp smallint,
	temp_unit_code varchar(12),
	medical_questionaire_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_medical_screenings IS E'- Retrofitted';
COMMENT ON COLUMN offender_medical_screenings.blood_pressure IS E' Offender"s blood pressure.';
COMMENT ON COLUMN offender_medical_screenings.comment_text IS E'Comments regarding medical screening.';
COMMENT ON COLUMN offender_medical_screenings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_medical_screenings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_medical_screenings.dental_exam_date IS E' Date of last medical exam.';
COMMENT ON COLUMN offender_medical_screenings.medical_date IS E'Date medical exam occured.';
COMMENT ON COLUMN offender_medical_screenings.medical_disposition_code IS E'Reference Code ( MED_DISP ) Code for medical screeing outcome.';
COMMENT ON COLUMN offender_medical_screenings.medical_time IS E'Time exam occured.';
COMMENT ON COLUMN offender_medical_screenings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_medical_screenings.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_medical_screenings.offender_book_id IS E'System generated identifier for an offender booking.';
COMMENT ON COLUMN offender_medical_screenings.physical_exam_date IS E' Last physical exam date.';
COMMENT ON COLUMN offender_medical_screenings.pulse IS E'Pulse measured in heart beats per minute.';
COMMENT ON COLUMN offender_medical_screenings.respiration_text IS E'Respiration measure in breaths per minute.';
COMMENT ON COLUMN offender_medical_screenings.reviewed_by_text IS E' Doctor reviewing.';
COMMENT ON COLUMN offender_medical_screenings.screen_reason_code IS E'Reference Code ( MED_SCRN_RSN )';
COMMENT ON COLUMN offender_medical_screenings.screen_seq IS E'Sequence number forming part of primary key.';
COMMENT ON COLUMN offender_medical_screenings.staff_id IS E'User Id of staff member completing questionnaire.';
COMMENT ON COLUMN offender_medical_screenings.temp IS E' Offender"s temperature.';
COMMENT ON COLUMN offender_medical_screenings.temp_unit_code IS E'Reference Code ( TEMP_SCALE ) : TEMPERATURE MEASUREMENT IE. CENTIGRADE, FAHRENHEIT.';

CREATE TABLE offender_medical_screenings_6i (
	offender_book_id bigint NOT NULL,
	screen_seq integer NOT NULL,
	medical_date timestamp NOT NULL,
	medical_disposition_code varchar(12),
	staff_id integer NOT NULL,
	blood_pressure varchar(6),
	comment_text varchar(240),
	physical_exam_date timestamp,
	reviewed_by_text varchar(40),
	screen_reason_code varchar(12),
	medical_time timestamp,
	dental_exam_date timestamp,
	pulse varchar(5),
	respiration_text varchar(40),
	temp smallint,
	temp_unit_code varchar(12),
	medical_questionaire_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_medical_screenings_6i IS E'- Retrofitted';
COMMENT ON COLUMN offender_medical_screenings_6i.blood_pressure IS E' Offender"s blood pressure.';
COMMENT ON COLUMN offender_medical_screenings_6i.comment_text IS E'Comments regarding medical screening.';
COMMENT ON COLUMN offender_medical_screenings_6i.dental_exam_date IS E' Date of last medical exam.';
COMMENT ON COLUMN offender_medical_screenings_6i.medical_date IS E'Date medical exam occured.';
COMMENT ON COLUMN offender_medical_screenings_6i.medical_disposition_code IS E'Reference Code ( MED_DISP ) Code for medical screeing outcome.';
COMMENT ON COLUMN offender_medical_screenings_6i.medical_time IS E'Time exam occured.';
COMMENT ON COLUMN offender_medical_screenings_6i.offender_book_id IS E'System generated identifier for an offender booking.';
COMMENT ON COLUMN offender_medical_screenings_6i.physical_exam_date IS E' Last physical exam date.';
COMMENT ON COLUMN offender_medical_screenings_6i.pulse IS E'Pulse measured in heart beats per minute.';
COMMENT ON COLUMN offender_medical_screenings_6i.respiration_text IS E'Respiration measure in breaths per minute.';
COMMENT ON COLUMN offender_medical_screenings_6i.reviewed_by_text IS E' Doctor reviewing.';
COMMENT ON COLUMN offender_medical_screenings_6i.screen_reason_code IS E'Reference Code ( MED_SCRN_RSN )';
COMMENT ON COLUMN offender_medical_screenings_6i.screen_seq IS E'Sequence number forming part of primary key.';
COMMENT ON COLUMN offender_medical_screenings_6i.staff_id IS E'User Id of staff member completing questionnaire.';
COMMENT ON COLUMN offender_medical_screenings_6i.temp IS E' Offender"s temperature.';
COMMENT ON COLUMN offender_medical_screenings_6i.temp_unit_code IS E'Reference Code ( TEMP_SCALE ) : TEMPERATURE MEASUREMENT IE. CENTIGRADE, FAHRENHEIT.';

CREATE TABLE offender_medical_treatments (
	offender_medical_treatment_id bigint NOT NULL,
	offender_health_problem_id bigint NOT NULL,
	start_date timestamp NOT NULL,
	caseload_type varchar(12),
	end_date timestamp,
	treatment_code varchar(12) NOT NULL,
	comment_text varchar(240),
	description varchar(240),
	treatment_provider_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_medical_treatments IS E'Offender Medical Treatmen Details';
COMMENT ON COLUMN offender_medical_treatments.caseload_type IS E'The information source';
COMMENT ON COLUMN offender_medical_treatments.comment_text IS E'Comment Text';
COMMENT ON COLUMN offender_medical_treatments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_medical_treatments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_medical_treatments.description IS E'The treatment description';
COMMENT ON COLUMN offender_medical_treatments.end_date IS E'The end date of the treatment';
COMMENT ON COLUMN offender_medical_treatments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_medical_treatments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_medical_treatments.offender_health_problem_id IS E'The offender treatment ID';
COMMENT ON COLUMN offender_medical_treatments.offender_medical_treatment_id IS E'The offender health problem ID';
COMMENT ON COLUMN offender_medical_treatments.start_date IS E'The start date of the treatment';
COMMENT ON COLUMN offender_medical_treatments.treatment_code IS E'Reference Code ( MED_TREAT ) : Medical Treatment';
COMMENT ON COLUMN offender_medical_treatments.treatment_provider_code IS E'The treatment provider code';

CREATE TABLE offender_military_disc_actions (
	offender_book_id bigint NOT NULL,
	military_seq integer NOT NULL,
	mlty_discp_seq integer NOT NULL,
	mlty_discp_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_military_disc_actions IS E'Offender Military Disciplinary Actions';
COMMENT ON COLUMN offender_military_disc_actions.mlty_discp_code IS E'Reference Code ( MLTY_DISCP )';

CREATE TABLE offender_military_records (
	offender_book_id bigint NOT NULL,
	military_seq integer NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp,
	military_discharge_code varchar(12),
	military_branch_code varchar(12) NOT NULL,
	description varchar(240),
	unit_number varchar(20),
	enlistment_location varchar(40),
	discharge_location varchar(40),
	selective_services_flag varchar(1) NOT NULL DEFAULT 'Y',
	military_rank_code varchar(12),
	service_number varchar(12),
	disciplinary_action_code varchar(6),
	highest_rank_attained varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_military_records IS E'Offender Military Records';
COMMENT ON COLUMN offender_military_records.description IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.discharge_location IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.end_date IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.enlistment_location IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.highest_rank_attained IS E'The highest rank that the offender attained within the branch';
COMMENT ON COLUMN offender_military_records.military_branch_code IS E'Reference Code  ( MLTY_BRANCH )';
COMMENT ON COLUMN offender_military_records.military_discharge_code IS E'Reference Code ( MLTY_DSCHRG )';
COMMENT ON COLUMN offender_military_records.military_rank_code IS E'Reference Code ( MLTY_RANK )';
COMMENT ON COLUMN offender_military_records.military_seq IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.offender_book_id IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.selective_services_flag IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.service_number IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.start_date IS E'- Column already exists';
COMMENT ON COLUMN offender_military_records.unit_number IS E'- Column already exists';

CREATE TABLE offender_military_tech_specs (
	offender_book_id bigint NOT NULL,
	military_seq integer NOT NULL,
	mlty_tech_seq integer NOT NULL,
	tech_spec_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_military_tech_specs IS E'Offender Military Technical Specialization';
COMMENT ON COLUMN offender_military_tech_specs.tech_spec_code IS E'Reference Code ( MLTY_TECH )';

CREATE TABLE offender_military_war_zones (
	offender_book_id bigint NOT NULL,
	military_seq integer NOT NULL,
	war_seq integer NOT NULL,
	war_zone_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_military_war_zones IS E'Offender Military war zones';
COMMENT ON COLUMN offender_military_war_zones.war_zone_code IS E'Reference Code ( MLTY_WZONE )';

CREATE TABLE offender_mon_beneficiaries (
	beneficiary_id bigint NOT NULL,
	monthly_deduction_date timestamp NOT NULL,
	offender_deduction_id bigint NOT NULL,
	received_amount decimal(11,2),
	person_id bigint,
	corporate_id bigint,
	unknown_ben_id bigint,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_mon_deductions (
	monthly_deduction_date timestamp NOT NULL,
	offender_deduction_id bigint NOT NULL,
	deduction_amount decimal(11,2),
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_mon_deductions IS E'- Retrofitted';
COMMENT ON COLUMN offender_mon_deductions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_mon_deductions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_mon_deductions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_mon_deductions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_movement_details (
	offender_book_id bigint NOT NULL,
	movement_seq integer NOT NULL,
	detail_seq integer NOT NULL,
	status_code varchar(12) NOT NULL,
	recorded_by varchar(32) NOT NULL DEFAULT 'user',
	recorded_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	app_rsn varchar(240),
	txn_status varchar(12) NOT NULL,
	txn_rsn varchar(240),
	non_completion_flag varchar(1) NOT NULL DEFAULT 'N',
	non_comp_schd_trip_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_na_details (
	offender_id bigint NOT NULL,
	ns_offender_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	ns_offender_book_id bigint NOT NULL,
	type_seq smallint NOT NULL,
	ns_reason_code varchar(12) NOT NULL,
	ns_level_code varchar(12),
	ns_type varchar(12) NOT NULL,
	ns_effective_date timestamp NOT NULL,
	ns_expiry_date timestamp,
	authorized_staff varchar(60),
	comment_text varchar(240),
	recip_ns_reason_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_na_details IS E'The Non Assoication Details Between Offenders';
COMMENT ON COLUMN offender_na_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_na_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_na_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_na_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_na_details.ns_level_code IS E'Reference Code ( NON_ASSO_LVL )';
COMMENT ON COLUMN offender_na_details.ns_offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_na_details.ns_reason_code IS E'Reference Code ( NON_ASSO_RSN )';
COMMENT ON COLUMN offender_na_details.ns_type IS E'FROM REFERENCE_CODES DOMAIN(NON_ASSO_TYPE)';
COMMENT ON COLUMN offender_na_details.offender_book_id IS E' - Column already exists';

CREATE TABLE offender_non_associations (
	offender_id bigint NOT NULL,
	ns_offender_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	ns_offender_book_id bigint NOT NULL,
	ns_reason_code varchar(12),
	ns_level_code varchar(12),
	internal_location_flag varchar(12),
	transport_flag varchar(1) DEFAULT 'N',
	recip_ns_reason_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_non_associations IS E'The Non Assoication Details Between Offenders';
COMMENT ON COLUMN offender_non_associations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_non_associations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_non_associations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_non_associations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_non_associations.ns_level_code IS E'Reference Code ( NON_ASSO_LVL )';
COMMENT ON COLUMN offender_non_associations.ns_offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_non_associations.ns_reason_code IS E'Reference Code ( NON_ASSO_RSN )';
COMMENT ON COLUMN offender_non_associations.offender_book_id IS E' - Column already exists';

CREATE TABLE offender_not_completions (
	offender_book_id bigint NOT NULL,
	noti_seq integer NOT NULL,
	status varchar(12) NOT NULL,
	noti_move_seq integer NOT NULL DEFAULT 1,
	noti_agency_party_code varchar(12) NOT NULL,
	notify_method varchar(12),
	noti_corp_id bigint,
	noti_person_id bigint,
	completion_date timestamp,
	comment_text varchar(240),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_not_completions.comment_text IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.completion_date IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_not_completions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_not_completions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_not_completions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_not_completions.noti_agency_party_code IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.noti_corp_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.noti_person_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.noti_seq IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.notify_method IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.offender_book_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_not_completions.status IS E' - Retrofitted';

CREATE TABLE offender_no_pay_periods (
	offender_book_id bigint NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp,
	agy_loc_id varchar(6) NOT NULL,
	reason_code varchar(12) NOT NULL,
	comment_text varchar(40),
	offender_no_pay_period_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_no_pay_periods IS E'The period ih which offender recieved no unemployment pay. ';
COMMENT ON COLUMN offender_no_pay_periods.agy_loc_id IS E'The ID of the agency locations';
COMMENT ON COLUMN offender_no_pay_periods.comment_text IS E'General comment';
COMMENT ON COLUMN offender_no_pay_periods.end_date IS E'The end date of the no pay periods';
COMMENT ON COLUMN offender_no_pay_periods.offender_book_id IS E'The offenderID';
COMMENT ON COLUMN offender_no_pay_periods.offender_no_pay_period_id IS E'The ID of the no pay period';
COMMENT ON COLUMN offender_no_pay_periods.reason_code IS E'The reason for no pay.  Reference Code(NOPAY_RSN)';
COMMENT ON COLUMN offender_no_pay_periods.start_date IS E'The start date of the no pay periods';

CREATE TABLE offender_oasys_actions (
	objective_id bigint NOT NULL,
	action_seq integer NOT NULL,
	description varchar(60) NOT NULL,
	action_code varchar(12),
	timescale varchar(20),
	action_achievement varchar(20),
	achievement_notes varchar(40),
	version bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oasys_actions.achievement_notes IS E'Achievement Notes';
COMMENT ON COLUMN offender_oasys_actions.action_achievement IS E'Achievement';
COMMENT ON COLUMN offender_oasys_actions.action_code IS E'Action Code';
COMMENT ON COLUMN offender_oasys_actions.action_seq IS E'The action sequence number';
COMMENT ON COLUMN offender_oasys_actions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oasys_actions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oasys_actions.description IS E'Description';
COMMENT ON COLUMN offender_oasys_actions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oasys_actions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oasys_actions.objective_id IS E'The system generated identifier for an objective';
COMMENT ON COLUMN offender_oasys_actions.timescale IS E'Timescale';
COMMENT ON COLUMN offender_oasys_actions.version IS E'Internal version number of the action';

CREATE TABLE offender_oasys_concerns (
	offender_book_id bigint NOT NULL,
	plan_seq integer NOT NULL,
	risk_code varchar(12) NOT NULL,
	concerned_flag varchar(12) NOT NULL,
	version bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oasys_concerns.concerned_flag IS E'Concerned flag Y or N';
COMMENT ON COLUMN offender_oasys_concerns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oasys_concerns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oasys_concerns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oasys_concerns.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oasys_concerns.offender_book_id IS E'The system generated identifier for a booking';
COMMENT ON COLUMN offender_oasys_concerns.plan_seq IS E'The system generated sequence number for plan';
COMMENT ON COLUMN offender_oasys_concerns.risk_code IS E'Risk Code';
COMMENT ON COLUMN offender_oasys_concerns.version IS E'Internal version number of the concern';

CREATE TABLE offender_oasys_objectives (
	objective_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	plan_seq integer NOT NULL,
	section_code varchar(12) NOT NULL,
	description varchar(60) NOT NULL,
	progress_measure varchar(40) NOT NULL,
	timescale varchar(20),
	objectives_achievement varchar(20),
	achievement_notes varchar(40),
	version bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oasys_objectives.achievement_notes IS E'Achievement Notes';
COMMENT ON COLUMN offender_oasys_objectives.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oasys_objectives.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oasys_objectives.description IS E'Description';
COMMENT ON COLUMN offender_oasys_objectives.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oasys_objectives.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oasys_objectives.objective_id IS E'The system generated identifier for an objective';
COMMENT ON COLUMN offender_oasys_objectives.objectives_achievement IS E'Achievement';
COMMENT ON COLUMN offender_oasys_objectives.offender_book_id IS E'The offender booking';
COMMENT ON COLUMN offender_oasys_objectives.plan_seq IS E'The plan sequence number';
COMMENT ON COLUMN offender_oasys_objectives.progress_measure IS E'Progress Measure';
COMMENT ON COLUMN offender_oasys_objectives.section_code IS E'Section Code';
COMMENT ON COLUMN offender_oasys_objectives.timescale IS E'Timescale';
COMMENT ON COLUMN offender_oasys_objectives.version IS E'Internal version number of the objective';

CREATE TABLE offender_oasys_plans (
	offender_book_id bigint NOT NULL,
	plan_seq integer NOT NULL,
	plan_type varchar(12) NOT NULL,
	creation_date timestamp NOT NULL,
	staff_id integer NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	plan_status varchar(12) NOT NULL DEFAULT 'ACTIVE',
	review_date timestamp NOT NULL,
	version bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	ogrs_score smallint,
	case_management_tier varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oasys_plans.agy_loc_id IS E'The agency where plan is created';
COMMENT ON COLUMN offender_oasys_plans.case_management_tier IS E'Case Management Tier';
COMMENT ON COLUMN offender_oasys_plans.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oasys_plans.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oasys_plans.creation_date IS E'Creation date of the plan within Oasys';
COMMENT ON COLUMN offender_oasys_plans.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oasys_plans.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oasys_plans.offender_book_id IS E'The system generated identifier for a booking';
COMMENT ON COLUMN offender_oasys_plans.ogrs_score IS E'OGRS Score';
COMMENT ON COLUMN offender_oasys_plans.plan_seq IS E'The system generated sequence number for plan';
COMMENT ON COLUMN offender_oasys_plans.plan_status IS E'The status of the plan';
COMMENT ON COLUMN offender_oasys_plans.plan_type IS E'The Oasys plan type';
COMMENT ON COLUMN offender_oasys_plans.review_date IS E'Plan review date from Oasys';
COMMENT ON COLUMN offender_oasys_plans.staff_id IS E'Staff member who created the plan';
COMMENT ON COLUMN offender_oasys_plans.version IS E'Internal version number of the plan';

CREATE TABLE offender_oasys_risk_to_others (
	offender_book_id bigint NOT NULL,
	plan_seq integer NOT NULL,
	risk_code varchar(12) NOT NULL,
	custody_risk_level_code varchar(12),
	community_risk_level_code varchar(12),
	version bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oasys_risk_to_others.community_risk_level_code IS E'Risk level in community';
COMMENT ON COLUMN offender_oasys_risk_to_others.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oasys_risk_to_others.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oasys_risk_to_others.custody_risk_level_code IS E'Risk level in custody';
COMMENT ON COLUMN offender_oasys_risk_to_others.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oasys_risk_to_others.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oasys_risk_to_others.offender_book_id IS E'The system generated identifier for a booking';
COMMENT ON COLUMN offender_oasys_risk_to_others.plan_seq IS E'The system generated sequence number for plan';
COMMENT ON COLUMN offender_oasys_risk_to_others.risk_code IS E'Risk Code';
COMMENT ON COLUMN offender_oasys_risk_to_others.version IS E'Internal version number of the risk';

CREATE TABLE offender_oasys_sections (
	offender_book_id bigint NOT NULL,
	plan_seq integer NOT NULL,
	section_code varchar(12) NOT NULL,
	raw_score smallint,
	summary_ratio decimal(4,3),
	weighted_score smallint,
	centreline_group varchar(12),
	version bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oasys_sections.centreline_group IS E'Above or Below centreline';
COMMENT ON COLUMN offender_oasys_sections.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oasys_sections.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oasys_sections.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oasys_sections.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oasys_sections.offender_book_id IS E'The system generated identifier for a booking';
COMMENT ON COLUMN offender_oasys_sections.plan_seq IS E'The system generated sequence number for plan';
COMMENT ON COLUMN offender_oasys_sections.raw_score IS E'The Oasys raw score';
COMMENT ON COLUMN offender_oasys_sections.section_code IS E'The section code';
COMMENT ON COLUMN offender_oasys_sections.summary_ratio IS E'Display ratio value calculated from raw score';
COMMENT ON COLUMN offender_oasys_sections.version IS E'Internal version number of the section';
COMMENT ON COLUMN offender_oasys_sections.weighted_score IS E'Weighted score calculated from the raw score';

CREATE TABLE offender_oasys_supervisions (
	objective_id bigint NOT NULL,
	action_seq integer NOT NULL,
	supervision_seq integer NOT NULL,
	work_code varchar(12) NOT NULL,
	version bigint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oasys_supervisions.action_seq IS E'The action sequence number';
COMMENT ON COLUMN offender_oasys_supervisions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oasys_supervisions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oasys_supervisions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oasys_supervisions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oasys_supervisions.objective_id IS E'Objective';
COMMENT ON COLUMN offender_oasys_supervisions.supervision_seq IS E'The supervision sequence number';
COMMENT ON COLUMN offender_oasys_supervisions.version IS E'Internal version number of the supervision';
COMMENT ON COLUMN offender_oasys_supervisions.work_code IS E'Work Code';

CREATE TABLE offender_obligation_adjs (
	offender_obligation_adjs_id bigint NOT NULL,
	offender_prg_obligation_id bigint NOT NULL,
	adjustment_date timestamp NOT NULL,
	adjustment_days integer NOT NULL,
	adjustment_type varchar(1) NOT NULL,
	reason_code varchar(12) NOT NULL,
	comment_text varchar(256),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_obligation_adjs IS E'This table holds the manual specified activity adjustment related to a obligation';
COMMENT ON COLUMN offender_obligation_adjs.adjustment_date IS E'The adjustment date for the adjustment record';
COMMENT ON COLUMN offender_obligation_adjs.adjustment_days IS E'The adjustment number of days for the adjustment record';
COMMENT ON COLUMN offender_obligation_adjs.adjustment_type IS E'The adjustment type, either Credit or Debit';
COMMENT ON COLUMN offender_obligation_adjs.comment_text IS E'Free text commnet text for the adjustment';
COMMENT ON COLUMN offender_obligation_adjs.offender_obligation_adjs_id IS E'This column is a surrogate key';
COMMENT ON COLUMN offender_obligation_adjs.reason_code IS E'The adjustment reason code for the adjustment';

CREATE TABLE offender_obligation_hty (
	offender_deduction_id bigint NOT NULL,
	deduction_seq integer NOT NULL,
	information_number varchar(32),
	deduction_type varchar(6),
	adjusted_amount decimal(11,2),
	modified_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modified_datetime timestamp DEFAULT LOCALTIMESTAMP,
	max_total_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_obligation_hty IS E'wc probation requires the ability to view the history of changes made to obligation total amount(s)..';
COMMENT ON COLUMN offender_obligation_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_obligation_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_obligation_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_obligation_hty.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_obli_verifications (
	verification_id bigint NOT NULL,
	offender_deduction_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	verify_flag varchar(1) NOT NULL DEFAULT 'N',
	unverify_flag varchar(1) NOT NULL DEFAULT 'N',
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	person_id bigint,
	original_max_total_amount decimal(11,2),
	new_max_total_amount decimal(11,2),
	verify_date timestamp,
	verify_user_id varchar(32),
	table_changed varchar(1),
	operation_type varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_observation_types (
	observation_type varchar(12) NOT NULL,
	frequency bigint NOT NULL,
	notification_flag varchar(1) NOT NULL DEFAULT 'Y',
	notification_timing bigint,
	link_assess_flag varchar(1) NOT NULL DEFAULT 'Y',
	link_seg_di_flag varchar(1) NOT NULL DEFAULT 'Y',
	link_incident_flag varchar(1) NOT NULL DEFAULT 'Y',
	link_oic_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_observation_zones (
	agy_loc_id varchar(10) NOT NULL,
	zone_code varchar(12) NOT NULL,
	list_seq bigint NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_offences (
	offender_book_id bigint NOT NULL,
	order_type varchar(12),
	offense_desc varchar(40) NOT NULL,
	offense_status varchar(12),
	source varchar(12),
	county varchar(12),
	state varchar(12),
	verified varchar(1) DEFAULT 'N',
	comment_text varchar(240),
	offense_seq smallint NOT NULL,
	offense_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_offences.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_offences.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_offences.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_offences.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_oic_appeals (
	oic_appreal_id bigint NOT NULL,
	offender_booking_id bigint NOT NULL,
	appreal_date timestamp NOT NULL,
	aprreal_reason_code varchar(12) NOT NULL,
	hearing_date timestamp,
	hearing_result_code varchar(12),
	hearing_time timestamp,
	heard_by integer,
	summary varchar(240),
	review_date timestamp,
	other_representative varchar(60),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oic_appeals.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oic_appeals.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oic_appeals.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oic_appeals.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oic_appeals.other_representative IS E'Other Representative.';

CREATE TABLE offender_oic_appeal_incidents (
	oic_appreal_id bigint NOT NULL,
	oic_hearing_id bigint NOT NULL,
	result_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oic_appeal_incidents.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oic_appeal_incidents.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oic_appeal_incidents.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oic_appeal_incidents.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_oic_appeal_penalties (
	oic_appreal_id bigint NOT NULL,
	oic_hearing_id bigint NOT NULL,
	result_seq integer NOT NULL,
	seq integer NOT NULL,
	oic_penalty_type varchar(12) NOT NULL,
	effect_date timestamp NOT NULL,
	month smallint,
	days smallint,
	compensation decimal(11,2),
	oic_comment varchar(50),
	oic_appeal_id_log bigint,
	oic_seq_log integer DEFAULT 1,
	oic_hearing_id_log bigint,
	result_seq_log integer,
	status varchar(6),
	offender_adjust_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_oic_appeal_penalties.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oic_appeal_penalties.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oic_appeal_penalties.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oic_appeal_penalties.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_oic_sanctions (
	offender_book_id bigint NOT NULL,
	sanction_seq integer NOT NULL,
	oic_sanction_code varchar(12),
	compensation_amount decimal(11,2),
	sanction_months smallint,
	sanction_days smallint,
	comment_text varchar(240),
	effective_date timestamp NOT NULL,
	appealing_date timestamp,
	consecutive_offender_book_id bigint,
	consecutive_sanction_seq integer,
	oic_hearing_id bigint,
	status varchar(12),
	offender_adjust_id bigint,
	result_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	status_date timestamp,
	oic_incident_id bigint,
	lids_sanction_number integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_oic_sanctions IS E'Detail of penalties arising from the OIC process.';
COMMENT ON COLUMN offender_oic_sanctions.appealing_date IS E'Date of appeal.';
COMMENT ON COLUMN offender_oic_sanctions.comment_text IS E'Pop-up edit window allowing penalty comments.';
COMMENT ON COLUMN offender_oic_sanctions.compensation_amount IS E'Penalty involving compensation amount.';
COMMENT ON COLUMN offender_oic_sanctions.consecutive_offender_book_id IS E'FK to OIC sanction';
COMMENT ON COLUMN offender_oic_sanctions.consecutive_sanction_seq IS E'Specification of specific penalty that this may be consecutive to.';
COMMENT ON COLUMN offender_oic_sanctions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oic_sanctions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oic_sanctions.effective_date IS E'Effective date for penalty.';
COMMENT ON COLUMN offender_oic_sanctions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oic_sanctions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oic_sanctions.offender_adjust_id IS E'FK Offender OIC Appeal Penalty';
COMMENT ON COLUMN offender_oic_sanctions.offender_book_id IS E'Unique identifer for an offender booking.';
COMMENT ON COLUMN offender_oic_sanctions.oic_hearing_id IS E'FK to OIC snaction';
COMMENT ON COLUMN offender_oic_sanctions.oic_sanction_code IS E'Reference Code ( OIC_SANCT )';
COMMENT ON COLUMN offender_oic_sanctions.result_seq IS E'Sequential number for hearing results';
COMMENT ON COLUMN offender_oic_sanctions.sanction_days IS E'The number of penalty days imposed against sentences.';
COMMENT ON COLUMN offender_oic_sanctions.sanction_months IS E'Penalty months imposed against sentences.';
COMMENT ON COLUMN offender_oic_sanctions.sanction_seq IS E'Sequence number on sanction forming part of primary key.';
COMMENT ON COLUMN offender_oic_sanctions.status IS E'Referece Code (OIC_SANCT_STS)';
COMMENT ON COLUMN offender_oic_sanctions.status_date IS E'The date when the status changed';

CREATE TABLE offender_oic_sanc_reviews (
	offender_book_id bigint NOT NULL,
	sanction_seq integer NOT NULL DEFAULT 99,
	review_seq smallint NOT NULL DEFAULT 99,
	review_date timestamp NOT NULL,
	review_time timestamp NOT NULL,
	finding_code varchar(12) NOT NULL,
	govener_staff_id integer NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_oic_sanc_reviews IS E'- Retrofitted';
COMMENT ON COLUMN offender_oic_sanc_reviews.comment_text IS E'Review Comment - Column already exists';
COMMENT ON COLUMN offender_oic_sanc_reviews.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_oic_sanc_reviews.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_oic_sanc_reviews.finding_code IS E'Reference Code ( FINDING ) - Column already exists';
COMMENT ON COLUMN offender_oic_sanc_reviews.govener_staff_id IS E'Govenor - Column already exists';
COMMENT ON COLUMN offender_oic_sanc_reviews.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_oic_sanc_reviews.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_oic_sanc_reviews.offender_book_id IS E'Unique identifer for an offender booking. - Column already exists';
COMMENT ON COLUMN offender_oic_sanc_reviews.review_date IS E'Review date - Column already exists';
COMMENT ON COLUMN offender_oic_sanc_reviews.review_seq IS E'Sequence number on sanction reviews forming part of primary key. - Column already exists';
COMMENT ON COLUMN offender_oic_sanc_reviews.review_time IS E'Review Time - Column already exists';
COMMENT ON COLUMN offender_oic_sanc_reviews.sanction_seq IS E'Sequence number on sanction forming part of primary key. - Column already exists';

CREATE TABLE offender_parole_conditions (
	offender_book_id bigint,
	schedule_id bigint NOT NULL,
	parole_hearing_seq smallint,
	parole_decision_seq smallint NOT NULL,
	parole_condition_code varchar(12) NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_parole_conditions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_parole_conditions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_parole_conditions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_parole_conditions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_parole_conditions.parole_condition_code IS E'Reference Code ( PRL_COND )';

CREATE TABLE offender_parole_decisions (
	offender_book_id bigint,
	schedule_id bigint NOT NULL,
	parole_hearing_seq integer,
	parole_decision_seq smallint NOT NULL,
	parole_hearing_date timestamp,
	parole_hearing_type varchar(12),
	charge_seq smallint NOT NULL DEFAULT 1,
	action_date timestamp,
	comment_text varchar(240),
	parole_decision_type varchar(12),
	parole_dec_reason_code varchar(12),
	authorized_staff_id integer,
	decision_by varchar(12),
	future_terms varchar(30),
	parole_date timestamp,
	eligibility_date timestamp,
	parole_set timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_parole_decisions IS E'- Retrofitted';
COMMENT ON COLUMN offender_parole_decisions.action_date IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_decisions.charge_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_decisions.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_decisions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_parole_decisions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_parole_decisions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_parole_decisions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_parole_decisions.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_decisions.parole_decision_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_decisions.parole_decision_type IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_decisions.parole_hearing_date IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_decisions.parole_hearing_type IS E' - Column already exists';

CREATE TABLE offender_parole_hearings (
	offender_book_id bigint NOT NULL,
	parole_hearing_seq integer NOT NULL,
	parole_hearing_date timestamp NOT NULL,
	schedule_id bigint,
	parole_sitting_date timestamp,
	parole_commission_code varchar(12) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	order_id bigint,
	parole_hearing_type varchar(12) NOT NULL,
	parole_hearing_reason_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_parole_hearings IS E'- Retrofitted';
COMMENT ON COLUMN offender_parole_hearings.agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_hearings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_parole_hearings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_parole_hearings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_parole_hearings.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_parole_hearings.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_hearings.order_id IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_hearings.parole_commission_code IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_hearings.parole_hearing_date IS E' - Column already exists';
COMMENT ON COLUMN offender_parole_hearings.parole_hearing_reason_code IS E'Reference Code ( PRL_HEAR_RSN )';
COMMENT ON COLUMN offender_parole_hearings.parole_hearing_type IS E'Referenc Code ( PAROLE_HEAR )';
COMMENT ON COLUMN offender_parole_hearings.parole_sitting_date IS E' - Column already exists';

CREATE TABLE offender_parole_hearing_reqmts (
	off_hearing_req_id bigint NOT NULL,
	schedule_id bigint NOT NULL,
	home_to_inst_date timestamp,
	home_received_date timestamp,
	home_to_district_date timestamp,
	home_received_district_date timestamp,
	home_accept_district_flag varchar(1),
	interstate_sent_date timestamp,
	interstate_received_date timestamp,
	interstate_accepted_flag varchar(1) DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_parole_hearing_reqmts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_parole_hearing_reqmts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_parole_hearing_reqmts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_parole_hearing_reqmts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_parole_locations (
	offender_book_id bigint NOT NULL,
	parole_location_seq integer NOT NULL,
	open_date timestamp NOT NULL,
	close_date timestamp,
	board_location_code varchar(12) NOT NULL,
	comment_text varchar(240),
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_parole_locations IS E'This table is created for Ontario specific Parole module.';
COMMENT ON COLUMN offender_parole_locations.board_location_code IS E'domain = "PAR_BRD_LOC"';
COMMENT ON COLUMN offender_parole_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_parole_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_parole_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_parole_locations.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_parole_plans (
	offender_book_id bigint NOT NULL,
	plan_seq integer NOT NULL,
	comment_text varchar(240) NOT NULL,
	problem_text varchar(240),
	denial_text varchar(240),
	plan_status varchar(12) NOT NULL,
	accepted_flag varchar(1) DEFAULT 'Y',
	policy_compliance_flag varchar(1) DEFAULT 'Y',
	hearing_conformance_flag varchar(1) DEFAULT 'Y',
	created_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modified_date timestamp NOT NULL,
	modified_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_parole_plans.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_parole_plans.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_parole_plans.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_parole_plans.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_parole_plans.plan_status IS E'Reference Code ( STATUS )';

CREATE TABLE offender_parole_stipulations (
	schedule_id bigint NOT NULL,
	parole_decision_seq smallint NOT NULL,
	parole_stipulation_type varchar(12) NOT NULL,
	offender_book_id bigint,
	parole_hearing_seq smallint,
	recorded_date timestamp,
	completed_date timestamp,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_parole_stipulations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_parole_stipulations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_parole_stipulations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_parole_stipulations.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_payment_plans (
	payment_plan_id bigint NOT NULL,
	payment_plan_seq integer NOT NULL DEFAULT 1,
	offender_id bigint NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp,
	frequency varchar(12) NOT NULL,
	monthly smallint,
	weekly varchar(12),
	bi_weekly varchar(12),
	twice_monthly_1 smallint,
	twice_monthly_2 smallint,
	amount decimal(11,2),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	information_number varchar(32),
	offender_deduction_id bigint,
	payment_completion_date timestamp,
	group_id smallint,
	leniency_flag varchar(1) NOT NULL DEFAULT 'N',
	payment_closed_flag varchar(1) NOT NULL DEFAULT 'N',
	payment_closed_date timestamp,
	regeneration_flag varchar(1) NOT NULL DEFAULT 'N',
	regeneration_date timestamp,
	original_owing_amount decimal(11,2),
	case_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_payment_plans.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_payment_plans.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_payment_plans.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_payment_plans.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_payment_plans.original_owing_amount IS E'To store the value of the total owing amount of a particular group obligation upon the creation of the payment plan.';

CREATE TABLE offender_payment_profiles (
	offender_payment_profile_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	txn_type varchar(12) NOT NULL,
	payment_mode varchar(12) NOT NULL,
	advance_amount decimal(11,2),
	start_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	advance_date timestamp,
	payment_amount decimal(11,2),
	end_date timestamp,
	reference_text varchar(40),
	comment_text varchar(240),
	record_user_id varchar(30) DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_payment_profiles IS E'The details of Offender payment schedules';
COMMENT ON COLUMN offender_payment_profiles.advance_amount IS E'Weekly amount';
COMMENT ON COLUMN offender_payment_profiles.advance_date IS E'The advance date';
COMMENT ON COLUMN offender_payment_profiles.caseload_id IS E'The ID of the caseload';
COMMENT ON COLUMN offender_payment_profiles.comment_text IS E'General comment text';
COMMENT ON COLUMN offender_payment_profiles.end_date IS E'The end date';
COMMENT ON COLUMN offender_payment_profiles.offender_id IS E'The ID of the offender';
COMMENT ON COLUMN offender_payment_profiles.offender_payment_profile_id IS E'The ID of the offender payment profiles';
COMMENT ON COLUMN offender_payment_profiles.payment_amount IS E'Payment amount';
COMMENT ON COLUMN offender_payment_profiles.payment_mode IS E'The payment mode';
COMMENT ON COLUMN offender_payment_profiles.record_user_id IS E'The user who record ID';
COMMENT ON COLUMN offender_payment_profiles.reference_text IS E'The reference information';
COMMENT ON COLUMN offender_payment_profiles.start_date IS E'The start date';
COMMENT ON COLUMN offender_payment_profiles.txn_type IS E'The payment type';

CREATE TABLE offender_payment_schedules (
	payment_plan_id bigint NOT NULL,
	payment_plan_seq integer NOT NULL DEFAULT 1,
	payment_date timestamp NOT NULL,
	payment_amount decimal(11,2) NOT NULL,
	recursive_amount decimal(11,2),
	paid_amount decimal(11,2),
	paid_recursive_amount decimal(11,2),
	information_number varchar(32),
	offender_deduction_id bigint,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	group_id smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_payment_schedules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_payment_schedules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_payment_schedules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_payment_schedules.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_payroll_txns (
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL DEFAULT 99,
	range_code varchar(12),
	batch_number bigint,
	unit_number decimal(13,2),
	work_assignment_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_payroll_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_payroll_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_payroll_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_payroll_txns.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_payroll_txns.range_code IS E'Reference Code ( PR_RANGE )';

CREATE TABLE offender_penalty_options (
	off_rq_det_id bigint NOT NULL,
	opo_seq bigint NOT NULL,
	penalty_option varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_penalty_options.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_penalty_options.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_penalty_options.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_penalty_options.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_penalty_options.off_rq_det_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_penalty_options.penalty_option IS E'Standard Reference Code';

CREATE TABLE offender_pend_notifications (
	offender_book_id bigint NOT NULL,
	noti_seq integer NOT NULL DEFAULT 1,
	noti_move_seq integer NOT NULL DEFAULT 1,
	movement_type varchar(12) NOT NULL,
	movement_reason_code varchar(12) NOT NULL,
	movement_date timestamp NOT NULL,
	move_schedule_flag varchar(1) NOT NULL,
	schedule_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_pend_notifications.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_pend_notifications.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_pend_notifications.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_pend_notifications.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_pend_notifications.move_schedule_flag IS E' - Retrofitted';
COMMENT ON COLUMN offender_pend_notifications.movement_date IS E' - Retrofitted';
COMMENT ON COLUMN offender_pend_notifications.movement_reason_code IS E' - Retrofitted';
COMMENT ON COLUMN offender_pend_notifications.movement_type IS E' - Retrofitted';
COMMENT ON COLUMN offender_pend_notifications.offender_book_id IS E' - Retrofitted';
COMMENT ON COLUMN offender_pend_notifications.schedule_id IS E' - Retrofitted';

CREATE TABLE offender_person_restricts (
	offender_contact_person_id bigint NOT NULL,
	offender_person_restrict_id bigint NOT NULL,
	restriction_type varchar(12) NOT NULL,
	restriction_effective_date timestamp NOT NULL,
	restriction_expiry_date timestamp,
	authorized_staff_id bigint,
	comment_text varchar(255),
	entered_staff_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_person_restricts IS E'The restriction imposed on offenders'' contact persons';
COMMENT ON COLUMN offender_person_restricts.authorized_staff_id IS E'The staff who authorises the restriction';
COMMENT ON COLUMN offender_person_restricts.comment_text IS E'The general comment Text';
COMMENT ON COLUMN offender_person_restricts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_person_restricts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_person_restricts.entered_staff_id IS E'The staff who enters the restriction';
COMMENT ON COLUMN offender_person_restricts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_person_restricts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_person_restricts.offender_contact_person_id IS E'The ID of the offender person';
COMMENT ON COLUMN offender_person_restricts.offender_person_restrict_id IS E'The ID of the restriction of the person';
COMMENT ON COLUMN offender_person_restricts.restriction_effective_date IS E'The effective date of the restriction';
COMMENT ON COLUMN offender_person_restricts.restriction_expiry_date IS E'The expiry date of the restriction';
COMMENT ON COLUMN offender_person_restricts.restriction_type IS E'The restriction type';

CREATE TABLE offender_physical_attributes (
	offender_book_id bigint NOT NULL,
	attribute_seq integer NOT NULL,
	height_ft integer,
	height_in integer,
	height_cm integer,
	weight_lbs integer,
	weight_kg integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_physical_attributes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_physical_attributes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_physical_attributes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_physical_attributes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_pin_numbers (
	offender_id bigint NOT NULL,
	view_number smallint,
	pin_number bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_pin_numbers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_pin_numbers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_pin_numbers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_pin_numbers.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_placement_scores (
	root_offender_id bigint NOT NULL,
	assessment_date timestamp NOT NULL,
	lifestyle_score integer,
	emotional_score integer,
	attitude_score integer,
	behaviour_score integer,
	education_score integer,
	comment_text varchar(240),
	assessment_staff_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_placement_scores IS E'The offender assessment for placement quality';
COMMENT ON COLUMN offender_placement_scores.assessment_date IS E'The assessment date';
COMMENT ON COLUMN offender_placement_scores.assessment_staff_id IS E'The staff who perfroms the assessment';
COMMENT ON COLUMN offender_placement_scores.attitude_score IS E'The score of attitudes';
COMMENT ON COLUMN offender_placement_scores.behaviour_score IS E'The score of thinking and behaviour';
COMMENT ON COLUMN offender_placement_scores.comment_text IS E'The comment';
COMMENT ON COLUMN offender_placement_scores.education_score IS E'The score of education and employabilities';
COMMENT ON COLUMN offender_placement_scores.emotional_score IS E'The score of emotional well being';
COMMENT ON COLUMN offender_placement_scores.lifestyle_score IS E'The score of life style and assocaites';
COMMENT ON COLUMN offender_placement_scores.root_offender_id IS E'The Offender ID';

CREATE TABLE offender_planed_activities (
	offender_book_id bigint NOT NULL,
	activity_seq integer NOT NULL,
	plan_seq integer,
	activity_code varchar(12),
	first_date timestamp,
	frequency_code varchar(12),
	time timestamp,
	comment_text varchar(240),
	create_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_planed_activities IS E'- Retrofitted';
COMMENT ON COLUMN offender_planed_activities.activity_code IS E'Reference Code ( SUP_ACTIVITY )';
COMMENT ON COLUMN offender_planed_activities.activity_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_planed_activities.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_planed_activities.create_date IS E' - Column already exists';
COMMENT ON COLUMN offender_planed_activities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_planed_activities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_planed_activities.first_date IS E' - Column already exists';
COMMENT ON COLUMN offender_planed_activities.frequency_code IS E'Reference Code ( FREQUENCY )';
COMMENT ON COLUMN offender_planed_activities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_planed_activities.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_planed_activities.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_planed_activities.plan_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_planed_activities.time IS E' - Column already exists';

CREATE TABLE offender_post_dated_txns (
	pend_txn_id bigint NOT NULL,
	offender_book_id bigint,
	payee_name_text varchar(60),
	payee_corporate_id bigint,
	payee_person_id bigint,
	payee_type varchar(1),
	txn_entry_amount decimal(11,2) NOT NULL,
	txn_entry_desc varchar(40),
	txn_type varchar(6) NOT NULL,
	release_date timestamp NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_post_dated_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_post_dated_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_post_dated_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_post_dated_txns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_ppty_containers (
	property_only_flag varchar(1) NOT NULL DEFAULT 'N',
	property_container_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	proposed_disposal_date timestamp,
	comment_text varchar(240),
	internal_location_id bigint,
	container_code varchar(12) NOT NULL,
	expiry_date timestamp,
	seal_mark varchar(20),
	trn_from_agy_loc_id varchar(6),
	trn_to_agy_loc_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	property_storage_id bigint,
	disposed_to varchar(12),
	disposed_to_name varchar(62),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_ppty_containers IS E'Offender Property';
COMMENT ON COLUMN offender_ppty_containers.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_containers.container_code IS E'Reference Code ( PPTY_CNTNR )';
COMMENT ON COLUMN offender_ppty_containers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ppty_containers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ppty_containers.internal_location_id IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_containers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ppty_containers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_ppty_containers.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_containers.property_container_id IS E' - Column already exists';

CREATE TABLE offender_ppty_con_txns (
	property_container_txn_id bigint NOT NULL,
	property_container_id bigint NOT NULL,
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	agy_loc_id varchar(6) NOT NULL,
	action_code varchar(12) NOT NULL,
	comment_text varchar(240),
	seal_mark varchar(20),
	internal_location_id bigint,
	trn_to_agy_loc_id varchar(6),
	trn_from_agy_loc_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_ppty_con_txns IS E'Property Transaction';
COMMENT ON COLUMN offender_ppty_con_txns.action_code IS E'Reference Code ( PPTY_TXN_TYP )';
COMMENT ON COLUMN offender_ppty_con_txns.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_con_txns.create_date IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_con_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ppty_con_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ppty_con_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ppty_con_txns.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_ppty_con_txns.property_container_id IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_con_txns.property_container_txn_id IS E' - Column already exists';

CREATE TABLE offender_ppty_items (
	property_item_seq bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	property_type varchar(12) NOT NULL,
	property_description varchar(40) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	status_code varchar(12) NOT NULL,
	condition_code varchar(12) NOT NULL,
	received_from varchar(12) NOT NULL,
	property_container_id bigint,
	comment_text varchar(240),
	confirm_flag varchar(1) NOT NULL DEFAULT 'N',
	disposed_to_corp_id bigint,
	disposed_to_offender_flag varchar(1),
	disposed_to_person varchar(72),
	disposed_to_person_id bigint,
	color varchar(5),
	make varchar(5),
	serial_no varchar(12),
	quantity smallint NOT NULL DEFAULT 1,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_ppty_items IS E'Offender Property Items';
COMMENT ON COLUMN offender_ppty_items.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_items.condition_code IS E'Reference Code ( PPTY_CONDIT )';
COMMENT ON COLUMN offender_ppty_items.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ppty_items.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ppty_items.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ppty_items.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_ppty_items.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_items.property_container_id IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_items.property_description IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_items.property_type IS E'Reference Code ( PPTY_TYPE )';
COMMENT ON COLUMN offender_ppty_items.status_code IS E'Reference Code ( PPTY_ITM_STS )';

CREATE TABLE offender_ppty_item_events (
	offender_book_id bigint NOT NULL,
	event_seq integer NOT NULL,
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_ppty_item_events.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ppty_item_events.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ppty_item_events.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ppty_item_events.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_ppty_item_txns (
	property_item_txn_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	property_item_seq bigint NOT NULL,
	event_seq integer,
	from_status_code varchar(12),
	to_status_code varchar(12) NOT NULL,
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	comment_text varchar(240),
	agy_loc_id varchar(6) NOT NULL,
	disposed_to_offender_flag varchar(1) DEFAULT 'N',
	verification_flag varchar(1) NOT NULL DEFAULT 'N',
	verify_flag varchar(1) NOT NULL DEFAULT 'N',
	disposed_to_corp_id bigint,
	disposed_to_person varchar(72),
	property_container_id bigint,
	property_container_txn_id bigint,
	to_property_container_id bigint,
	disposed_to_person_id bigint,
	color varchar(5),
	make varchar(5),
	serial_no varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_ppty_item_txns IS E'Property Transaction Objects';
COMMENT ON COLUMN offender_ppty_item_txns.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_item_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ppty_item_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ppty_item_txns.from_status_code IS E' - Column already exists';
COMMENT ON COLUMN offender_ppty_item_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ppty_item_txns.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_ppty_item_txns.property_item_txn_id IS E' - Column already exists';

CREATE TABLE offender_prg_obligations (
	offender_prg_obligation_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	program_id bigint,
	status varchar(12) NOT NULL DEFAULT 'REF',
	offender_sent_cond_act_id bigint,
	start_date timestamp,
	end_date timestamp,
	event_type varchar(12) NOT NULL,
	event_sub_type varchar(12),
	comment_text varchar(240),
	sentence_seq integer,
	length integer,
	length_unit varchar(12),
	offender_sent_condition_id bigint,
	referral_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	status_change_date timestamp,
	status_change_reason varchar(12),
	special_need_flag varchar(1),
	availability_code varchar(12),
	obligation_source varchar(12) NOT NULL DEFAULT 'ORDERED',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	referral_priority varchar(12),
	decision_date timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_prg_obligations IS E'The program obligations of offenders';
COMMENT ON COLUMN offender_prg_obligations.comment_text IS E'The comment of the program obligation';
COMMENT ON COLUMN offender_prg_obligations.end_date IS E'The end date of the program obligations';
COMMENT ON COLUMN offender_prg_obligations.event_sub_type IS E'The event sub type';
COMMENT ON COLUMN offender_prg_obligations.event_type IS E'The event Type of the program obligation.  Reference code(PS_CATEGORY)';
COMMENT ON COLUMN offender_prg_obligations.length IS E'The obligation length';
COMMENT ON COLUMN offender_prg_obligations.length_unit IS E'The obligation length unit';
COMMENT ON COLUMN offender_prg_obligations.offender_book_id IS E'The offender Book ID';
COMMENT ON COLUMN offender_prg_obligations.offender_prg_obligation_id IS E'THE PK of the offender program obligation';
COMMENT ON COLUMN offender_prg_obligations.offender_sent_cond_act_id IS E'The ID offender sentence condition activity';
COMMENT ON COLUMN offender_prg_obligations.offender_sent_condition_id IS E'The offender sentence condition ID';
COMMENT ON COLUMN offender_prg_obligations.program_id IS E'The program obligation ID';
COMMENT ON COLUMN offender_prg_obligations.referral_date IS E'The referral data';
COMMENT ON COLUMN offender_prg_obligations.sentence_seq IS E'The sentence seq of the obligation';
COMMENT ON COLUMN offender_prg_obligations.special_need_flag IS E'?Specai needed';
COMMENT ON COLUMN offender_prg_obligations.start_date IS E'The start date of the program obligation';
COMMENT ON COLUMN offender_prg_obligations.status IS E'The status of the program';
COMMENT ON COLUMN offender_prg_obligations.status_change_date IS E'The date status change';
COMMENT ON COLUMN offender_prg_obligations.status_change_reason IS E'The reason of the status change';

CREATE TABLE offender_prg_obligation_hty (
	offender_prg_obligation_hty_id bigint NOT NULL,
	offender_prg_obligation_id bigint NOT NULL,
	status varchar(12) NOT NULL,
	status_change_date timestamp NOT NULL,
	status_change_reason varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_prg_obligation_hty IS E'The historical change details of offender program obligations';
COMMENT ON COLUMN offender_prg_obligation_hty.offender_prg_obligation_hty_id IS E'The ID of offender program obligation history';
COMMENT ON COLUMN offender_prg_obligation_hty.offender_prg_obligation_id IS E'The offender program obligation ID';
COMMENT ON COLUMN offender_prg_obligation_hty.status IS E'The program status';
COMMENT ON COLUMN offender_prg_obligation_hty.status_change_date IS E'The date when the status change';
COMMENT ON COLUMN offender_prg_obligation_hty.status_change_reason IS E'The reason why the status change';

CREATE TABLE offender_proceedings (
	offender_proceeding_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	proceeding_type varchar(12) NOT NULL,
	start_date timestamp NOT NULL,
	proceeding_agy_loc_id varchar(6) NOT NULL,
	comment_text varchar(240),
	proceeding_status varchar(12),
	outcome_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_proceedings IS E'The legal proceeding of offenders, including both BREACH and RECALL';
COMMENT ON COLUMN offender_proceedings.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_proceedings.offender_proceeding_id IS E'The ID of the proceeding';
COMMENT ON COLUMN offender_proceedings.outcome_date IS E'The date of the outcome';
COMMENT ON COLUMN offender_proceedings.proceeding_agy_loc_id IS E'The Proceeding Court';
COMMENT ON COLUMN offender_proceedings.proceeding_status IS E'The status of the proceeding.  Reference Code(PROCEED_STS)';
COMMENT ON COLUMN offender_proceedings.proceeding_type IS E'The proceeding Type (PROCEEDING)';
COMMENT ON COLUMN offender_proceedings.start_date IS E'The event Date';

CREATE TABLE offender_proceeding_sents (
	offender_proceeding_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_proceeding_sents IS E'The sentences involved in a procedding';
COMMENT ON COLUMN offender_proceeding_sents.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_proceeding_sents.offender_proceeding_id IS E'The offender Proceeding';
COMMENT ON COLUMN offender_proceeding_sents.sentence_seq IS E'The sentence seq';

CREATE TABLE offender_profiles (
	offender_book_id bigint NOT NULL,
	profile_seq integer NOT NULL,
	check_date timestamp NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_profiles IS E'Offender Profiles';
COMMENT ON COLUMN offender_profiles.check_date IS E'Date that the profile information was checked.';
COMMENT ON COLUMN offender_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_profiles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_profiles.offender_book_id IS E'System generated identifier for an offender booking.';
COMMENT ON COLUMN offender_profiles.profile_seq IS E'Sequence number forming part of foreign key.';

CREATE TABLE offender_profile_details (
	offender_book_id bigint NOT NULL,
	profile_seq integer NOT NULL,
	profile_type varchar(12) NOT NULL,
	profile_code varchar(40),
	list_seq integer NOT NULL,
	comment_text varchar(240),
	caseload_type varchar(12),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_profile_details IS E'Offender Profile Details';
COMMENT ON COLUMN offender_profile_details.comment_text IS E'Comment for profile information.';
COMMENT ON COLUMN offender_profile_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_profile_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_profile_details.list_seq IS E'Sequencing on list of values.';
COMMENT ON COLUMN offender_profile_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_profile_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_profile_details.offender_book_id IS E' System generated identifier for an offender booking.';
COMMENT ON COLUMN offender_profile_details.profile_code IS E'Code associated with profile type ie. Hair Colour codes would be Black, Brown..';
COMMENT ON COLUMN offender_profile_details.profile_seq IS E' Sequence number forming part of primary key.';
COMMENT ON COLUMN offender_profile_details.profile_type IS E'The type of profile ie. Hair Colour, Eye Colour, Religion..';

CREATE TABLE offender_program_profiles (
	off_prgref_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	program_id bigint NOT NULL,
	offender_start_date timestamp,
	offender_program_status varchar(12) NOT NULL DEFAULT 'PLAN',
	crs_acty_id bigint,
	referral_priority varchar(12),
	referral_date timestamp,
	referral_comment_text varchar(1000),
	offender_end_reason varchar(12),
	agreed_travel_fare decimal(11,2),
	agreed_travel_hour decimal(6,2),
	offender_end_comment_text varchar(240),
	reject_date timestamp,
	waitlist_decision_code varchar(12),
	referral_staff_id bigint,
	offender_end_date timestamp,
	credit_work_hours decimal(8,2),
	credit_other_hours decimal(8,2),
	suspended_flag varchar(1) DEFAULT 'N',
	reject_reason_code varchar(12),
	agy_loc_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	reviewed_by varchar(32),
	offender_sent_condition_id bigint,
	sentence_seq integer,
	holiday_flag varchar(1) DEFAULT 'Y',
	start_session_no integer,
	parent_off_prgref_id bigint,
	offender_prg_obligation_id bigint,
	program_off_prgref_id bigint,
	profile_class varchar(12) DEFAULT 'PRG',
	completion_date timestamp,
	needed_flag varchar(1) DEFAULT 'Y',
	comment_text varchar(240),
	early_end_reason varchar(12),
	offender_id bigint,
	medical_record_seq integer,
	parameter_1 varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_program_profiles IS E'The offender program/course profile details, including the programme progress strcuture';
COMMENT ON COLUMN offender_program_profiles.agreed_travel_fare IS E'Define the travel fare for the programme';
COMMENT ON COLUMN offender_program_profiles.agreed_travel_hour IS E'Define the hours which is credited to offender who worked for each scheduled appearance';
COMMENT ON COLUMN offender_program_profiles.agy_loc_id IS E'The agency location of the record owner';
COMMENT ON COLUMN offender_program_profiles.comment_text IS E'?If the programme Needed';
COMMENT ON COLUMN offender_program_profiles.completion_date IS E'The Profile Class';
COMMENT ON COLUMN offender_program_profiles.create_user_id IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_program_profiles.credit_other_hours IS E'The other credit hours';
COMMENT ON COLUMN offender_program_profiles.credit_work_hours IS E'The credit work hours';
COMMENT ON COLUMN offender_program_profiles.crs_acty_id IS E'The Course Activity ID';
COMMENT ON COLUMN offender_program_profiles.early_end_reason IS E'The comment text';
COMMENT ON COLUMN offender_program_profiles.holiday_flag IS E'The sentence seq';
COMMENT ON COLUMN offender_program_profiles.modify_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_program_profiles.modify_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_program_profiles.needed_flag IS E'The date the programme completed by the offender';
COMMENT ON COLUMN offender_program_profiles.off_prgref_id IS E'The unique identifier of the offender program profile';
COMMENT ON COLUMN offender_program_profiles.offender_book_id IS E'Offender Book Id';
COMMENT ON COLUMN offender_program_profiles.offender_end_comment_text IS E'The comment on the ending of the assignment';
COMMENT ON COLUMN offender_program_profiles.offender_end_date IS E'The end date of the program assignment';
COMMENT ON COLUMN offender_program_profiles.offender_end_reason IS E'The reason of ending the program assignment.  Reference Codes(PS_END_RSN)';
COMMENT ON COLUMN offender_program_profiles.offender_prg_obligation_id IS E'The structure of the offender programme';
COMMENT ON COLUMN offender_program_profiles.offender_program_status IS E'The Assignment Status.  Reference Codes(OFF_PRG_STS)';
COMMENT ON COLUMN offender_program_profiles.offender_start_date IS E'The Date the Offender is due to start on the Course/Activity';
COMMENT ON COLUMN offender_program_profiles.parent_off_prgref_id IS E'The course session offender starts at';
COMMENT ON COLUMN offender_program_profiles.profile_class IS E'The offender program profile';
COMMENT ON COLUMN offender_program_profiles.program_id IS E'The ID of the program';
COMMENT ON COLUMN offender_program_profiles.program_off_prgref_id IS E'The offender porgram obligation';
COMMENT ON COLUMN offender_program_profiles.referral_comment_text IS E'Comment Text of the referral';
COMMENT ON COLUMN offender_program_profiles.referral_date IS E'The date of the referral';
COMMENT ON COLUMN offender_program_profiles.referral_priority IS E'The Priority Of the Referral.  Reference Codes(PS_PRIORITY)';
COMMENT ON COLUMN offender_program_profiles.referral_staff_id IS E'The staff who makes the referral';
COMMENT ON COLUMN offender_program_profiles.reject_date IS E'The date the referral is rejected';
COMMENT ON COLUMN offender_program_profiles.reject_reason_code IS E'The reason of rejecting the referral';
COMMENT ON COLUMN offender_program_profiles.reviewed_by IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_program_profiles.sentence_seq IS E'The offender sentence condition ID';
COMMENT ON COLUMN offender_program_profiles.start_session_no IS E'?If holidays applied to the offender programme';
COMMENT ON COLUMN offender_program_profiles.suspended_flag IS E'If the program assignment temporarily suspended';
COMMENT ON COLUMN offender_program_profiles.waitlist_decision_code IS E'The decison on the waiting referral.  Reference Codes(PS_ACT_DEC)';

CREATE TABLE offender_prog_profiles_sts_hty (
	profile_sts_hty_id bigint NOT NULL,
	off_prgref_id bigint NOT NULL,
	offender_status varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_prog_profiles_sts_hty IS E'This table contains the offender programme profiles status history ';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.create_date IS E'The date when profile status record got created';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.off_prgref_id IS E'Unique identifier for a Offender Program profiles';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.offender_status IS E'Offender Program profile status information';
COMMENT ON COLUMN offender_prog_profiles_sts_hty.profile_sts_hty_id IS E'Unique identifier for a Offender status history record';

CREATE TABLE offender_prog_sess_trgt_gps (
	crs_acty_id bigint NOT NULL,
	crs_acty_seq integer NOT NULL,
	target_group varchar(12),
	sex_group varchar(12),
	appointment_flag varchar(1) NOT NULL DEFAULT 'N',
	age_group varchar(12),
	exclude_group varchar(12),
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_prog_sess_trgt_gps IS E'Table for Program and Service - Target Offenders for Program...';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.age_group IS E'Foreign key to Reference_codes - PS_SEX...';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.appointment_flag IS E'Appointment Required flag...';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.exclude_group IS E'Foreign key to Reference codes - PS_OFF_GRPS';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.sex_group IS E'Foreign key to Reference_codes - PS_SEX...';
COMMENT ON COLUMN offender_prog_sess_trgt_gps.target_group IS E'Foreign key to Reference codes - PS_OFF_GRPS';

CREATE TABLE offender_property_bundles (
	bundle_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	container_code varchar(12),
	container_mark varchar(20),
	seal_type varchar(12),
	seal_mark varchar(20),
	indent_date timestamp NOT NULL,
	indent_time timestamp NOT NULL,
	property_storage_id bigint,
	comment_text varchar(40),
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_property_bundles IS E'Offender Property Bundle';
COMMENT ON COLUMN offender_property_bundles.bundle_id IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.container_code IS E'Reference Code ( PPTY_CNTNR )';
COMMENT ON COLUMN offender_property_bundles.container_mark IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.create_date IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_property_bundles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_property_bundles.indent_date IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.indent_time IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_property_bundles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_property_bundles.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.property_storage_id IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.seal_mark IS E' - Column already exists';
COMMENT ON COLUMN offender_property_bundles.seal_type IS E'Reference Code ( PPTY_SEAL )';

CREATE TABLE offender_proposed_intlocs (
	offender_book_id bigint NOT NULL,
	location_seq integer NOT NULL,
	from_living_unit_id integer NOT NULL,
	to_living_unit_id integer NOT NULL,
	movement_type varchar(12) NOT NULL,
	movement_reason varchar(12) NOT NULL,
	comment_text varchar(120),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_proposed_mvmnts (
	offender_book_id bigint NOT NULL,
	movement_seq integer NOT NULL,
	from_agy_loc_id varchar(6) NOT NULL,
	to_agy_loc_id varchar(6) NOT NULL,
	movement_type varchar(12) NOT NULL,
	movement_reason varchar(12) NOT NULL,
	event_date timestamp DEFAULT LOCALTIMESTAMP,
	move_by_date timestamp,
	move_allow_date timestamp,
	priority_code varchar(12) DEFAULT 'UNDEF',
	priority_assigned_by varchar(32),
	priority_assigned_date timestamp,
	reason_text varchar(240),
	comment_text varchar(240),
	scheduled_trip_id bigint,
	judge varchar(60),
	alternate_agy_loc_id varchar(6),
	algo_comment varchar(240),
	user_define_flag1 varchar(1),
	user_define_flag2 varchar(1),
	tmp_group_id bigint,
	from_agy_seq integer,
	to_agy_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_ptr (
	ptr_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	ptr_date timestamp NOT NULL,
	from_agy_loc_id varchar(6) NOT NULL,
	to_agy_loc_id varchar(6) NOT NULL,
	report_in_date timestamp NOT NULL,
	ptr_comment varchar(4000),
	ptr_cancel_flag varchar(1) NOT NULL DEFAULT 'N',
	ptr_cancel_staff_id integer,
	ptr_cancel_date timestamp,
	assign_receiv_staff_id integer,
	assign_receiv_staff_date timestamp,
	decision_code varchar(12),
	decision_date timestamp,
	decision_comment varchar(4000),
	decision_staff_id integer,
	transfer_flag varchar(1) NOT NULL DEFAULT 'N',
	transfer_staff_id integer,
	transfer_datetime timestamp,
	transfer_cancel_flag varchar(1) NOT NULL DEFAULT 'N',
	transfer_cancel_staff_id integer,
	transfer_cancel_datetime timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_ptr IS E'Booking context table: offender community pre-transfer requests';
COMMENT ON COLUMN offender_ptr.assign_receiv_staff_date IS E'The date the staff was assigned o look into the pre-transfer request at the receiving office';
COMMENT ON COLUMN offender_ptr.assign_receiv_staff_id IS E'The staff assigned to look into the pre-transfer request at the receiving office';
COMMENT ON COLUMN offender_ptr.decision_code IS E'Decision code (ACCEPT,DECLINED)';
COMMENT ON COLUMN offender_ptr.decision_comment IS E'Decision comment';
COMMENT ON COLUMN offender_ptr.decision_date IS E'Decision Date';
COMMENT ON COLUMN offender_ptr.decision_staff_id IS E'Staff who entered the decision';
COMMENT ON COLUMN offender_ptr.from_agy_loc_id IS E'Sending office';
COMMENT ON COLUMN offender_ptr.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_ptr.ptr_cancel_date IS E'Date the pre-transfer request was canceled';
COMMENT ON COLUMN offender_ptr.ptr_cancel_flag IS E'Pre-transfer cancel flag (''Y'', NULL values)';
COMMENT ON COLUMN offender_ptr.ptr_cancel_staff_id IS E'Staff who cancel the pre-transfer request';
COMMENT ON COLUMN offender_ptr.ptr_comment IS E'Pre-transfer request comment';
COMMENT ON COLUMN offender_ptr.ptr_date IS E'Pre-transfer request Date';
COMMENT ON COLUMN offender_ptr.ptr_id IS E'Unique record  identifier, pre-tranfer request id (sequence based offender_ptr_seq)';
COMMENT ON COLUMN offender_ptr.report_in_date IS E'Date to report to receiving office';
COMMENT ON COLUMN offender_ptr.seal_flag IS E'Seal flag';
COMMENT ON COLUMN offender_ptr.to_agy_loc_id IS E'Receiving office';
COMMENT ON COLUMN offender_ptr.transfer_cancel_datetime IS E'Datetime when the trasfer was canceled';
COMMENT ON COLUMN offender_ptr.transfer_cancel_flag IS E'Flag indicating cancelation of transfer';
COMMENT ON COLUMN offender_ptr.transfer_cancel_staff_id IS E'The staff who canceled the transfer';
COMMENT ON COLUMN offender_ptr.transfer_datetime IS E'Transfer Datetime';
COMMENT ON COLUMN offender_ptr.transfer_flag IS E'Flag indicating the transfer was initiated';
COMMENT ON COLUMN offender_ptr.transfer_staff_id IS E'The Staff who initiates the transfer';

CREATE TABLE offender_ptr_details (
	ptr_id bigint NOT NULL,
	ptr_detail_type varchar(12) NOT NULL,
	ptr_detail_code varchar(12),
	ptr_detail_text varchar(240),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_ptr_details IS E'Pre-transfer request context - pre-transfer inquiry details';
COMMENT ON COLUMN offender_ptr_details.ptr_detail_code IS E'pre-transfer detail code when the detail type has a ''CODE'' format (code as per table PTR_TYPE_CODES)';
COMMENT ON COLUMN offender_ptr_details.ptr_detail_text IS E'pre-transfer detail text when the detail type has a ''TEXT'' format';
COMMENT ON COLUMN offender_ptr_details.ptr_detail_type IS E'Detail type - unique identifier';
COMMENT ON COLUMN offender_ptr_details.ptr_id IS E'Unique record  identifier, pre-tranfer request id (sequence based offender_ptr_seq)';
COMMENT ON COLUMN offender_ptr_details.seal_flag IS E'Seal flag';

CREATE TABLE offender_random_selections (
	random_number bigint,
	offender_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_random_selections.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_random_selections.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_random_selections.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_random_selections.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_referrals (
	offender_book_id bigint NOT NULL,
	referral_seq integer NOT NULL,
	referring_staff_id integer,
	referral_date timestamp NOT NULL,
	comment_text varchar(240),
	due_date timestamp,
	reason_code varchar(12),
	from_acy_loc_id varchar(6),
	decision_date timestamp,
	decision_code varchar(12),
	assigned_to_staff_id integer,
	decision_comment varchar(240),
	disposition_date timestamp,
	order_type varchar(12),
	to_agy_loc_id varchar(6),
	request_date timestamp,
	reporting_date timestamp,
	report_type varchar(12),
	resides_with varchar(80),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_referrals IS E'- Retrofitted';
COMMENT ON COLUMN offender_referrals.assigned_to_staff_id IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_referrals.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_referrals.decision_code IS E'Reference Code ( REFERRAL_DEC )';
COMMENT ON COLUMN offender_referrals.decision_comment IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.decision_date IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.disposition_date IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.due_date IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.from_acy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_referrals.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_referrals.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.reason_code IS E'Reference Code ( REFERRAL_RSN )';
COMMENT ON COLUMN offender_referrals.referral_date IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.referral_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.referring_staff_id IS E'Referring Officer ID';
COMMENT ON COLUMN offender_referrals.report_type IS E'Reference Code ( REFERRAL_RPT )';
COMMENT ON COLUMN offender_referrals.reporting_date IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.request_date IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.resides_with IS E' - Column already exists';
COMMENT ON COLUMN offender_referrals.to_agy_loc_id IS E' - Column already exists';

CREATE TABLE offender_release_details (
	offender_book_id bigint NOT NULL,
	release_date timestamp,
	comment_text varchar(240),
	movement_type varchar(12) NOT NULL,
	movement_reason_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	event_id bigint NOT NULL DEFAULT NULL,
	event_status varchar(12) NOT NULL DEFAULT 'SCH',
	approved_release_date timestamp,
	auto_release_date timestamp,
	dto_approved_date timestamp,
	dto_mid_term_date timestamp,
	verified_flag varchar(1) DEFAULT 'N',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_release_details IS E'The release details of offenders';
COMMENT ON COLUMN offender_release_details.approved_release_date IS E'The approved release date';
COMMENT ON COLUMN offender_release_details.auto_release_date IS E'The auto release date';
COMMENT ON COLUMN offender_release_details.comment_text IS E'The general comment text';
COMMENT ON COLUMN offender_release_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_release_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_release_details.dto_approved_date IS E'The Term approved date';
COMMENT ON COLUMN offender_release_details.dto_mid_term_date IS E'The mid-term date';
COMMENT ON COLUMN offender_release_details.event_id IS E'The Event ID';
COMMENT ON COLUMN offender_release_details.event_status IS E'The event Status';
COMMENT ON COLUMN offender_release_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_release_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_release_details.movement_reason_code IS E'The Movement reason. Reference Code(MOVE_RSN)';
COMMENT ON COLUMN offender_release_details.movement_type IS E'The Movement Type.  Default ''REL''';
COMMENT ON COLUMN offender_release_details.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_release_details.release_date IS E'The Actual Release date';
COMMENT ON COLUMN offender_release_details.verified_flag IS E'?If the release schedule verified';

CREATE TABLE offender_release_notis (
	offender_book_id bigint NOT NULL,
	noti_seq integer NOT NULL DEFAULT 1,
	noti_agency_party_code varchar(12),
	record_status varchar(12),
	noti_corp_id bigint,
	noti_person_id bigint,
	notify_method varchar(12),
	comment_text varchar(240),
	notify_date timestamp,
	expiration_date timestamp,
	expiration_reason varchar(240),
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_release_notis IS E'Notifications palced upon offender record for release purposes.';
COMMENT ON COLUMN offender_release_notis.comment_text IS E'Comment regardijng the release notification.';
COMMENT ON COLUMN offender_release_notis.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_release_notis.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_release_notis.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_release_notis.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_release_notis.noti_agency_party_code IS E'Reference Code ( NOTI_AGY )';
COMMENT ON COLUMN offender_release_notis.noti_corp_id IS E'Agency to notify is linked to corporate table.';
COMMENT ON COLUMN offender_release_notis.noti_person_id IS E'Person to notify stored in persons table.';
COMMENT ON COLUMN offender_release_notis.noti_seq IS E'Sequence number for release notification.';
COMMENT ON COLUMN offender_release_notis.notify_date IS E'Date notification completed.';
COMMENT ON COLUMN offender_release_notis.notify_method IS E'Reference Code ( NOTI_MTHD ) - ie. Letter, Person, Phone..';
COMMENT ON COLUMN offender_release_notis.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_release_notis.record_status IS E'Reference Code ( STATUS ). The status may be Active or Inactive.';

CREATE TABLE offender_requests (
	offender_book_id bigint NOT NULL,
	charge_seq integer NOT NULL,
	request_seq smallint NOT NULL,
	order_type varchar(12),
	order_code varchar(12),
	request_status varchar(12),
	description varchar(40),
	start_date timestamp,
	sentence_expiry_date timestamp,
	date_to_be_fixed varchar(1),
	creation_user varchar(32),
	creation_date timestamp,
	report_due_date timestamp,
	comment_text varchar(240),
	discharge_comment varchar(240),
	discharge_date timestamp,
	discharge_reason varchar(12),
	discharge_authority integer,
	transcript_due_date timestamp,
	court_delivery_date timestamp,
	caseload_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_requests.charge_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_requests.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_requests.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_requests.date_to_be_fixed IS E'If selected the expiry date is non enterable';
COMMENT ON COLUMN offender_requests.discharge_authority IS E'Standard Reference Code';
COMMENT ON COLUMN offender_requests.discharge_comment IS E'Comment Text';
COMMENT ON COLUMN offender_requests.discharge_reason IS E'Standard Reference Code';
COMMENT ON COLUMN offender_requests.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_requests.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_requests.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_requests.order_code IS E'Standard Reference Code';
COMMENT ON COLUMN offender_requests.order_type IS E'Order Type - Reference domain ORDER_TYPE';

CREATE TABLE offender_requests_hty (
	request_event_id bigint NOT NULL,
	offender_book_id bigint,
	charge_seq smallint DEFAULT 99,
	request_seq smallint,
	order_type varchar(12),
	order_code varchar(12),
	request_status varchar(12),
	description varchar(40),
	start_date timestamp,
	sentence_expiry_date timestamp,
	date_to_be_fixed varchar(1),
	creation_user varchar(32),
	creation_date timestamp,
	report_due_date timestamp,
	comment_text varchar(240),
	discharge_comment varchar(240),
	discharge_date timestamp,
	discharge_reason varchar(12),
	discharge_authority varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_requests_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_requests_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_requests_hty.discharge_authority IS E'Standard Reference Code';
COMMENT ON COLUMN offender_requests_hty.discharge_comment IS E'Comment Text';
COMMENT ON COLUMN offender_requests_hty.discharge_reason IS E'Standard Reference Code';
COMMENT ON COLUMN offender_requests_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_requests_hty.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_request_details (
	off_rq_det_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	charge_seq integer DEFAULT 99,
	request_seq smallint DEFAULT 99,
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	requesting_agy_loc_id varchar(6),
	remanded_to_agy_loc_id varchar(6),
	requesting_officer varchar(20),
	off_rq_det_comment varchar(240),
	presentation_type varchar(12),
	registeration_date timestamp,
	legal_representative varchar(40),
	retained_appointed char(1),
	prosecutor varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_request_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_request_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_request_details.creation_user IS E'Database User Account Name';
COMMENT ON COLUMN offender_request_details.legal_representative IS E'Short Description';
COMMENT ON COLUMN offender_request_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_request_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_request_details.off_rq_det_comment IS E'Comments';
COMMENT ON COLUMN offender_request_details.off_rq_det_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_request_details.offender_book_id IS E'Unique identifier for an offender booking';
COMMENT ON COLUMN offender_request_details.presentation_type IS E'Standard Reference Code';
COMMENT ON COLUMN offender_request_details.prosecutor IS E'Short Description';

CREATE TABLE offender_request_recommendatio (
	off_rq_det_id bigint NOT NULL,
	interview_waived varchar(1),
	no_contact varchar(1),
	orr_option varchar(12),
	assessment varchar(12),
	assessment_comment varchar(240),
	disposition varchar(12),
	disposition_comment varchar(240),
	creation_date timestamp,
	creation_user varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_request_recommendatio.assessment IS E'Standard Reference Code';
COMMENT ON COLUMN offender_request_recommendatio.assessment_comment IS E'Comment Text';
COMMENT ON COLUMN offender_request_recommendatio.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_request_recommendatio.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_request_recommendatio.disposition IS E'Standard Reference Code';
COMMENT ON COLUMN offender_request_recommendatio.disposition_comment IS E'Comment Text';
COMMENT ON COLUMN offender_request_recommendatio.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_request_recommendatio.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_request_recommendatio.off_rq_det_id IS E'Standard Number ID';
COMMENT ON COLUMN offender_request_recommendatio.orr_option IS E'Standard Reference Code';

CREATE TABLE offender_residences (
	offender_book_id bigint NOT NULL,
	residence_seq integer NOT NULL,
	root_offender_id bigint,
	address_1 varchar(60),
	address_2 varchar(60),
	city varchar(12),
	prov_state_code varchar(12),
	country_code varchar(12),
	zip_postal_code varchar(12),
	moved_in_date timestamp,
	moved_out_date timestamp,
	contact_name varchar(240),
	mailing_add_from_date timestamp,
	mailing_add_to_date timestamp,
	mailing_address_flag varchar(1) NOT NULL DEFAULT 'N',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_agy_loc_id varchar(6),
	create_date timestamp,
	current_address_flag varchar(1) NOT NULL DEFAULT 'N',
	city_text varchar(30),
	comment_text varchar(240),
	caseload_type varchar(12),
	mailing_in_date timestamp,
	mailing_out_date timestamp,
	partial_mailing_in_flag varchar(1) DEFAULT 'N',
	partial_mailing_out_flag varchar(1) DEFAULT 'N',
	partial_moved_in_flag varchar(1) DEFAULT 'N',
	partial_moved_out_flag varchar(1) DEFAULT 'N',
	residence_comment varchar(240),
	address_type varchar(12),
	registration_flag varchar(1) NOT NULL DEFAULT 'N',
	verified_flag varchar(1) NOT NULL DEFAULT 'N',
	updated_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_residences IS E'The Residence Addresses of an Offender- Retrofitted';
COMMENT ON COLUMN offender_residences.address_1 IS E'First line of offender address. - Retrofitted';
COMMENT ON COLUMN offender_residences.address_2 IS E'Second line of offender address. - Retrofitted';
COMMENT ON COLUMN offender_residences.city IS E'NSW Project : Reference Code ( CITY )City or twon of offender residence. - Retrofitted';
COMMENT ON COLUMN offender_residences.city_text IS E'- Retrofitted';
COMMENT ON COLUMN offender_residences.contact_name IS E'- Column already exists - Retrofitted';
COMMENT ON COLUMN offender_residences.country_code IS E'Reference Code ( COUNTRY )  Country of residence. - Retrofitted';
COMMENT ON COLUMN offender_residences.current_address_flag IS E'Signifies current address for offender. - Retrofitted';
COMMENT ON COLUMN offender_residences.mailing_address_flag IS E'Y/N flag showing whether current addrerss is also mailing address. - Retrofitted';
COMMENT ON COLUMN offender_residences.moved_in_date IS E'Date moved in - (CSS). - Retrofitted';
COMMENT ON COLUMN offender_residences.moved_out_date IS E'Date moved out - (CSS). - Retrofitted';
COMMENT ON COLUMN offender_residences.offender_book_id IS E'System generated identifer for an offender booking. - Retrofitted';
COMMENT ON COLUMN offender_residences.prov_state_code IS E'Reference Code ( PROV_STATE ) State associated with address. - Retrofitted';
COMMENT ON COLUMN offender_residences.residence_seq IS E'Sequence number forming part of primary key. - Retrofitted';
COMMENT ON COLUMN offender_residences.zip_postal_code IS E'Post code of address. - Retrofitted';

CREATE TABLE offender_restrictions (
	offender_book_id bigint NOT NULL,
	offender_restriction_id bigint NOT NULL,
	restriction_type varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	expiry_date timestamp,
	comment_text varchar(240),
	authorised_staff_id bigint,
	entered_staff_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_restrictions IS E'The general restrictions imposed on an offender';
COMMENT ON COLUMN offender_restrictions.authorised_staff_id IS E'The staff who authroises the restriction';
COMMENT ON COLUMN offender_restrictions.comment_text IS E'The general comment text';
COMMENT ON COLUMN offender_restrictions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_restrictions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_restrictions.effective_date IS E'The effective date';
COMMENT ON COLUMN offender_restrictions.entered_staff_id IS E'The staff who enters the restriction';
COMMENT ON COLUMN offender_restrictions.expiry_date IS E'The expiry date of the restrictions';
COMMENT ON COLUMN offender_restrictions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_restrictions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_restrictions.offender_book_id IS E'The offender book ID';
COMMENT ON COLUMN offender_restrictions.offender_restriction_id IS E'The ID of the restriction';
COMMENT ON COLUMN offender_restrictions.restriction_type IS E'The restriction type.  Reference Codes(VIS_RST_TYPE)';

CREATE TABLE offender_risk_predictors (
	offender_risk_predictor_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	first_conviction_age integer,
	current_conviction_age integer,
	no_of_sentences_before_21 integer,
	no_of_sentences_over_21 integer,
	current_violent_offence_flag varchar(1),
	current_sexual_offence_flag varchar(1),
	current_other_offence_flag varchar(1),
	no_of_courts_violent_offence integer,
	no_of_courts_sexual_offence integer,
	no_of_courts_other_offence integer,
	no_of_courts_convicted integer,
	current_offence_type varchar(12),
	risk_of_violence_offence decimal(6,2),
	risk_of_sexual_offence decimal(6,2),
	risk_of_other_offence decimal(6,2),
	risk_of_imprisonment decimal(6,2),
	record_date timestamp NOT NULL,
	record_staff_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	total_sentence bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_risk_predictors IS E'The offender risk predictors';
COMMENT ON COLUMN offender_risk_predictors.current_conviction_age IS E'The age at current conviction';
COMMENT ON COLUMN offender_risk_predictors.current_offence_type IS E'Current offence type';
COMMENT ON COLUMN offender_risk_predictors.current_other_offence_flag IS E'? Is current conviction for other offence';
COMMENT ON COLUMN offender_risk_predictors.current_sexual_offence_flag IS E'? Is current conviction for sexual offence';
COMMENT ON COLUMN offender_risk_predictors.current_violent_offence_flag IS E'? Is current conviction for voilent offence';
COMMENT ON COLUMN offender_risk_predictors.first_conviction_age IS E'The age at first conviction';
COMMENT ON COLUMN offender_risk_predictors.no_of_courts_convicted IS E'Total number of previous court appearance at which convicted';
COMMENT ON COLUMN offender_risk_predictors.no_of_courts_other_offence IS E'Number of previous court appearance at which convicted of other offence';
COMMENT ON COLUMN offender_risk_predictors.no_of_courts_sexual_offence IS E'Number of previous court appearance at which convicted of sexual offence';
COMMENT ON COLUMN offender_risk_predictors.no_of_courts_violent_offence IS E'Number of previous court appearance at whcih convicted of violent offence';
COMMENT ON COLUMN offender_risk_predictors.no_of_sentences_before_21 IS E'Number of previous custodial sentence - under age 21';
COMMENT ON COLUMN offender_risk_predictors.no_of_sentences_over_21 IS E'Number of previous custodial sentence at age 21 or over';
COMMENT ON COLUMN offender_risk_predictors.offender_book_id IS E'The offender book ID';
COMMENT ON COLUMN offender_risk_predictors.record_date IS E'The date of the assessment is carried out';
COMMENT ON COLUMN offender_risk_predictors.record_staff_id IS E'The staff who records the assessments';
COMMENT ON COLUMN offender_risk_predictors.risk_of_imprisonment IS E'Risk of re-conviction for re-imprisonment';
COMMENT ON COLUMN offender_risk_predictors.risk_of_other_offence IS E'Risk of re-convicted for non-violent or non-sexual offence';
COMMENT ON COLUMN offender_risk_predictors.risk_of_sexual_offence IS E'Risk of re-convicted for sexual offence';
COMMENT ON COLUMN offender_risk_predictors.risk_of_violence_offence IS E'Risk of re-conviction for violence';
COMMENT ON COLUMN offender_risk_predictors.total_sentence IS E'Calculated total length of Sentence';

CREATE TABLE offender_samples (
	offender_book_id bigint NOT NULL,
	sample_date timestamp NOT NULL,
	sample_type varchar(12) NOT NULL,
	sample_reason varchar(12) NOT NULL,
	taken_staff_id integer,
	witness_staff_id integer,
	comment_text varchar(240),
	off_cc_id bigint,
	sample_time timestamp,
	seal_flag varchar(1),
	offender_sample_id bigint NOT NULL,
	external_test_agency_flag varchar(1) DEFAULT 'N',
	test_staff_id bigint,
	test_corporate_id bigint,
	sample_test_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_samples.comment_text IS E'The general comment of the sample.';
COMMENT ON COLUMN offender_samples.external_test_agency_flag IS E'If the sample tested by external agency?';
COMMENT ON COLUMN offender_samples.off_cc_id IS E'The ID of the offender cimmunity condition';
COMMENT ON COLUMN offender_samples.offender_book_id IS E'Offender Book ID';
COMMENT ON COLUMN offender_samples.offender_sample_id IS E'The ID of offender sample.';
COMMENT ON COLUMN offender_samples.sample_date IS E'The date when the sample was taken.';
COMMENT ON COLUMN offender_samples.sample_reason IS E'The reason of taking the sample [Domain : SUB_TES_RSN ]';
COMMENT ON COLUMN offender_samples.sample_test_date IS E'The date when the sample was tested.';
COMMENT ON COLUMN offender_samples.sample_time IS E'The time when the sample was taken.';
COMMENT ON COLUMN offender_samples.sample_type IS E'The sample type [domain : SPECIMEN ]';
COMMENT ON COLUMN offender_samples.seal_flag IS E'If the record is sealed.';
COMMENT ON COLUMN offender_samples.taken_staff_id IS E'The staff who collects the the sample.';
COMMENT ON COLUMN offender_samples.test_corporate_id IS E'The external agency which performs the sample test.';
COMMENT ON COLUMN offender_samples.test_staff_id IS E'The staff who performs the sample test.';
COMMENT ON COLUMN offender_samples.witness_staff_id IS E'The staff who witness the sample taken.';

CREATE TABLE offender_sample_substances (
	offender_sample_substance_id bigint NOT NULL,
	offender_sample_id bigint NOT NULL,
	substance_code varchar(12),
	result_code varchar(12),
	disposition_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sample_substances.comment_text IS E'The general comments';
COMMENT ON COLUMN offender_sample_substances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sample_substances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sample_substances.disposition_code IS E'The disposition of the substance [Domain : SUB_TES_DISP ]';
COMMENT ON COLUMN offender_sample_substances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sample_substances.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sample_substances.offender_sample_id IS E'The ID of the offender sample.';
COMMENT ON COLUMN offender_sample_substances.offender_sample_substance_id IS E'The ID of the sample substance.';
COMMENT ON COLUMN offender_sample_substances.result_code IS E'The test result [ Domain : SUB_TES_RSLT ]';
COMMENT ON COLUMN offender_sample_substances.seal_flag IS E'If the record sealed from change.';
COMMENT ON COLUMN offender_sample_substances.substance_code IS E'The susbtance [ Domain : SUBSTANCE ]';

CREATE TABLE offender_sanction_notices (
	sanction_notice_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	sanction_notice_code varchar(12) NOT NULL,
	payment_date timestamp NOT NULL,
	printed_flag varchar(1) NOT NULL DEFAULT 'N',
	pending_print_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_date timestamp NOT NULL,
	amount_owed decimal(11,2) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sanction_notices.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sanction_notices.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sanction_notices.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sanction_notices.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_schedule_persons (
	offender_book_id bigint NOT NULL,
	person_seq integer NOT NULL,
	person_id bigint NOT NULL,
	schedule_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_schedule_persons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_schedule_persons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_schedule_persons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_schedule_persons.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_schedule_persons.offender_book_id IS E' The system generated identifer for an offender booking.';
COMMENT ON COLUMN offender_schedule_persons.person_id IS E'Person Involved';
COMMENT ON COLUMN offender_schedule_persons.schedule_id IS E' - Column already exists';

CREATE TABLE offender_sentences (
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	order_id bigint,
	sentence_calc_type varchar(12) NOT NULL,
	sentence_status varchar(12) NOT NULL,
	consec_to_sentence_seq integer,
	start_date timestamp NOT NULL,
	end_date timestamp,
	comment_text varchar(240),
	termination_reason varchar(12),
	no_of_unexcused_absence integer,
	case_id bigint,
	etd_calculated_date timestamp,
	mtd_calculated_date timestamp,
	ltd_calculated_date timestamp,
	ard_calculated_date timestamp,
	crd_calculated_date timestamp,
	ped_calculated_date timestamp,
	apd_calculated_date timestamp,
	npd_calculated_date timestamp,
	led_calculated_date timestamp,
	sed_calculated_date timestamp,
	prrd_calculated_date timestamp,
	tariff_calculated_date timestamp,
	agg_sentence_seq integer,
	sentence_category varchar(12) NOT NULL,
	fine_amount decimal(11,2),
	hdced_calculated_date timestamp,
	sentence_text varchar(40),
	revoked_date timestamp,
	revoked_staff_id bigint,
	breach_level integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	termination_date timestamp,
	aggregate_term bigint,
	aggregate_adjust_days bigint,
	sentence_level varchar(12) NOT NULL DEFAULT 'IND',
	extended_days integer,
	counts integer,
	discharge_date timestamp,
	status_update_reason varchar(12),
	status_update_comment varchar(400),
	status_update_date timestamp,
	status_update_staff_id bigint,
	charge_seq integer,
	supervision_expiry_date timestamp,
	line_seq integer,
	nomsentdetailref bigint,
	nomconstosentdetailref bigint,
	nomconsfromsentdetailref bigint,
	nomconcwithsentdetailref bigint,
	workflow_id numeric(32),
	seal_flag varchar(1),
	lrd_calculated_date timestamp,
	red_calculated_date timestamp,
	sentence_term varchar(100),
	eligible_remission varchar(50),
	red_bkg_date timestamp,
	adjust_remission varchar(50)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sentences IS E'The offender sentence details';
COMMENT ON COLUMN offender_sentences.agg_sentence_seq IS E'The sentence seq of the Sentence aggregation';
COMMENT ON COLUMN offender_sentences.aggregate_adjust_days IS E'The adjust date of the sentence aggregation';
COMMENT ON COLUMN offender_sentences.aggregate_term IS E'The sentence term of the sentence aggregation';
COMMENT ON COLUMN offender_sentences.apd_calculated_date IS E'Approval Parole Date';
COMMENT ON COLUMN offender_sentences.ard_calculated_date IS E'Automatic Release Date';
COMMENT ON COLUMN offender_sentences.breach_level IS E'The breach level';
COMMENT ON COLUMN offender_sentences.case_id IS E'The Case ID';
COMMENT ON COLUMN offender_sentences.comment_text IS E'The general comment text';
COMMENT ON COLUMN offender_sentences.consec_to_sentence_seq IS E'The sentence consecutive to';
COMMENT ON COLUMN offender_sentences.crd_calculated_date IS E'Condition Release Date';
COMMENT ON COLUMN offender_sentences.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sentences.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sentences.end_date IS E'The end date';
COMMENT ON COLUMN offender_sentences.etd_calculated_date IS E'Early Term Date';
COMMENT ON COLUMN offender_sentences.fine_amount IS E'The fine amount';
COMMENT ON COLUMN offender_sentences.hdced_calculated_date IS E'Home Detention Curfew Eligibility Date';
COMMENT ON COLUMN offender_sentences.led_calculated_date IS E'Licence Expiry Date';
COMMENT ON COLUMN offender_sentences.ltd_calculated_date IS E'Late Term Date';
COMMENT ON COLUMN offender_sentences.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sentences.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sentences.mtd_calculated_date IS E'Mid Term Date';
COMMENT ON COLUMN offender_sentences.no_of_unexcused_absence IS E'Current number of unexcused absence';
COMMENT ON COLUMN offender_sentences.npd_calculated_date IS E'Non Parole Date';
COMMENT ON COLUMN offender_sentences.offender_book_id IS E'The offender Book ID';
COMMENT ON COLUMN offender_sentences.order_id IS E'The ID of the sentence order';
COMMENT ON COLUMN offender_sentences.ped_calculated_date IS E'Parole Eligibility Date';
COMMENT ON COLUMN offender_sentences.prrd_calculated_date IS E'Post Recall Release Date';
COMMENT ON COLUMN offender_sentences.revoked_date IS E'The date of the sentence revoked';
COMMENT ON COLUMN offender_sentences.revoked_staff_id IS E'The staff who revokes the sentence';
COMMENT ON COLUMN offender_sentences.sed_calculated_date IS E'Sentence Expiry Date';
COMMENT ON COLUMN offender_sentences.sentence_calc_type IS E'The sentence calculation type';
COMMENT ON COLUMN offender_sentences.sentence_category IS E'The Sentence Category.  Reference Code(CATEGORY)';
COMMENT ON COLUMN offender_sentences.sentence_level IS E'The Sentence Level.  Reference Code(SENT_LVL) : IND;AGG';
COMMENT ON COLUMN offender_sentences.sentence_seq IS E'The sentence Seq per offender booking';
COMMENT ON COLUMN offender_sentences.sentence_status IS E'The sentence status';
COMMENT ON COLUMN offender_sentences.sentence_text IS E'The Sentence text';
COMMENT ON COLUMN offender_sentences.start_date IS E'The start date';
COMMENT ON COLUMN offender_sentences.status_update_comment IS E'The comment of status updated';
COMMENT ON COLUMN offender_sentences.status_update_date IS E'The date of status updated';
COMMENT ON COLUMN offender_sentences.status_update_reason IS E'The reason of status updated';
COMMENT ON COLUMN offender_sentences.status_update_staff_id IS E'The staff who perform of status updated';
COMMENT ON COLUMN offender_sentences.tariff_calculated_date IS E'Traiff Calculated Date';
COMMENT ON COLUMN offender_sentences.termination_date IS E'The termination Date';
COMMENT ON COLUMN offender_sentences.termination_reason IS E'The reason of termination';

CREATE TABLE offender_sentences_hty (
	sentence_event_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	charge_seq smallint,
	counts smallint,
	jurisdiction_code varchar(12),
	sentence_calc_type varchar(12),
	sentence_status varchar(12),
	description varchar(40),
	term_changed_flag varchar(1) DEFAULT 'N',
	sent_calc_needed_flag varchar(1) DEFAULT 'Y',
	fine_amount decimal(8,2),
	consecutive_count_flag varchar(1) DEFAULT 'Y',
	fine_comment_text varchar(240),
	consec_to_sentence_seq integer,
	aggregate_sentence_seq integer DEFAULT 99,
	sentence_date timestamp,
	effective_date timestamp,
	good_conduct_days integer,
	payment_due_date timestamp,
	default_days smallint,
	paid_date timestamp,
	revocation_date timestamp,
	as_goodtime_type varchar(12),
	start_date timestamp,
	start_time timestamp,
	non_probation_start_date timestamp,
	probable_release_date timestamp,
	probable_release_time timestamp,
	sentence_expiry_date timestamp,
	sentence_expiry_time timestamp,
	sent_closed_date timestamp,
	sent_clos_reason_code varchar(12),
	sent_clos_comment_text varchar(240),
	comment_text varchar(240),
	creation_date timestamp,
	creation_user varchar(32),
	discharge_authority integer,
	discharge_comment varchar(240),
	discharge_date timestamp,
	discharge_reason varchar(12),
	dtbf_flag varchar(1),
	extended_date timestamp,
	extended_flag varchar(1),
	extending_authority varchar(6),
	gap_flag varchar(1),
	installment_details varchar(240),
	order_code varchar(12),
	order_type varchar(12),
	registration_date timestamp,
	report_due_date timestamp,
	supervising_agy_loc_id varchar(6),
	supervision_expiry_date timestamp,
	total_compensation decimal(11,2),
	total_fine decimal(11,2),
	eks_sentence varchar(12),
	applicable_adjust_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sentences_hty IS E'The details associated with specific sentences
 applied to an offender"s record.';
COMMENT ON COLUMN offender_sentences_hty.aggregate_sentence_seq IS E' Sequence number of sentence which this one is consecutive to.';
COMMENT ON COLUMN offender_sentences_hty.as_goodtime_type IS E' Goodtime type - Not used in N.S.W.';
COMMENT ON COLUMN offender_sentences_hty.charge_seq IS E' Sequence number for a charge (Offence).';
COMMENT ON COLUMN offender_sentences_hty.consec_to_sentence_seq IS E'Consecutive number of this sentence in the sequence of consecutive sentences.';
COMMENT ON COLUMN offender_sentences_hty.consecutive_count_flag IS E'Specifies whether multiple counts are consecutive to each other.';
COMMENT ON COLUMN offender_sentences_hty.counts IS E' The number of counts from the charge being handled by sentence line.';
COMMENT ON COLUMN offender_sentences_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sentences_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sentences_hty.default_days IS E' Not used for N.S.W.';
COMMENT ON COLUMN offender_sentences_hty.description IS E' - Column already exists';
COMMENT ON COLUMN offender_sentences_hty.effective_date IS E' The date sentence becomes effective. If a sentence
 is accumulative, then the commencement date field
 should automatically be populated.';
COMMENT ON COLUMN offender_sentences_hty.fine_amount IS E'A fine amount may be associated with a sentence.';
COMMENT ON COLUMN offender_sentences_hty.fine_comment_text IS E'VCL Comment';
COMMENT ON COLUMN offender_sentences_hty.good_conduct_days IS E' Not used for N.S.W.';
COMMENT ON COLUMN offender_sentences_hty.jurisdiction_code IS E'Reference Code ( JURISDICTION)';
COMMENT ON COLUMN offender_sentences_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sentences_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sentences_hty.non_probation_start_date IS E'Date Non proabation sentence term starts - ie. start of Minimum, Additional, Sent, NPP..';
COMMENT ON COLUMN offender_sentences_hty.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_sentences_hty.paid_date IS E'The date of fine payment.';
COMMENT ON COLUMN offender_sentences_hty.payment_due_date IS E'Not used for N.S.W.';
COMMENT ON COLUMN offender_sentences_hty.probable_release_date IS E'In N.S.W. this would be the end of the Minimum term,
 Fixed Term, Non Parole Period etc.';
COMMENT ON COLUMN offender_sentences_hty.probable_release_time IS E'Date sentence term starts - ie. start of Minimum, Additional, Sent, NPP..';
COMMENT ON COLUMN offender_sentences_hty.revocation_date IS E'Parole revocation date.';
COMMENT ON COLUMN offender_sentences_hty.sent_calc_needed_flag IS E' Y/N flag on sentence calculation required.';
COMMENT ON COLUMN offender_sentences_hty.sentence_calc_type IS E'Sentence calculation type in conjunction with jurisdiction, controls the calculation process.';
COMMENT ON COLUMN offender_sentences_hty.sentence_date IS E'The sentence date';
COMMENT ON COLUMN offender_sentences_hty.sentence_expiry_date IS E'In N.S.W., the end of the Additional, Sentence (FED,ACT,INT)
 would be represented by the sentence expiry date.';
COMMENT ON COLUMN offender_sentences_hty.sentence_expiry_time IS E'Date sentence term starts - ie. start of Minimum, Additional, Sent, NPP..';
COMMENT ON COLUMN offender_sentences_hty.sentence_seq IS E' Sequence number identifying the sentence.';
COMMENT ON COLUMN offender_sentences_hty.sentence_status IS E'Reference Code ( SENT_STS ) Sentenece Status';
COMMENT ON COLUMN offender_sentences_hty.start_date IS E'Date sentence term starts - ie. start of Minimum, Additional, Sent, NPP..';
COMMENT ON COLUMN offender_sentences_hty.start_time IS E'Date sentence term starts - ie. start of Minimum, Additional, Sent, NPP..';
COMMENT ON COLUMN offender_sentences_hty.term_changed_flag IS E' Y/N flag on sentence term changed';

CREATE TABLE offender_sentence_adjusts (
	offender_sentence_adjust_id bigint NOT NULL,
	sentence_adjust_code varchar(12) NOT NULL,
	adjust_date timestamp,
	adjust_days integer,
	adjust_status varchar(12),
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	offender_key_date_adjust_id bigint,
	adjust_from_date timestamp,
	adjust_to_date timestamp,
	comment_text varchar(240),
	seal_flag varchar(1),
	adjust_months smallint
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sentence_adjusts.adjust_date IS E'The adjustment code';
COMMENT ON COLUMN offender_sentence_adjusts.adjust_days IS E'The adjustment date';
COMMENT ON COLUMN offender_sentence_adjusts.adjust_from_date IS E'The start date of the adjustment';
COMMENT ON COLUMN offender_sentence_adjusts.adjust_status IS E'No of days for the adjustment';
COMMENT ON COLUMN offender_sentence_adjusts.adjust_to_date IS E'The end date of the adjustment';
COMMENT ON COLUMN offender_sentence_adjusts.comment_text IS E'The comment text';
COMMENT ON COLUMN offender_sentence_adjusts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sentence_adjusts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sentence_adjusts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sentence_adjusts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sentence_adjusts.offender_book_id IS E'The status of the adjustment';
COMMENT ON COLUMN offender_sentence_adjusts.offender_key_date_adjust_id IS E'The ID of the key date adjustment';
COMMENT ON COLUMN offender_sentence_adjusts.offender_sentence_adjust_id IS E'Offender Book ID';
COMMENT ON COLUMN offender_sentence_adjusts.sentence_adjust_code IS E'Offender Book ID';
COMMENT ON COLUMN offender_sentence_adjusts.sentence_seq IS E'The sentence seq';

CREATE TABLE offender_sentence_aggs (
	offender_book_id bigint NOT NULL,
	earliest_sent_start_date timestamp,
	final_sent_exp_date timestamp,
	ovr_sent_exp_date timestamp,
	calc_pos_rel_date timestamp,
	ovr_pos_rel_date timestamp,
	parole_date timestamp,
	parole_review_date timestamp,
	calc_pos_prob_date timestamp,
	ovr_pos_prob_date timestamp,
	calc_prob_effect_date timestamp,
	ovr_prob_effect_date timestamp,
	total_length_years smallint,
	total_length_months smallint,
	total_length_weeks smallint,
	total_length_days smallint,
	total_length_hours smallint,
	calc_prob_exp_date timestamp,
	ovr_prob_exp_date timestamp,
	ovr_prl_exp_date timestamp,
	sent_calc_needed_flag varchar(1) NOT NULL DEFAULT 'Y',
	total_awol_days integer,
	eligible_goodtime_days integer,
	total_served_time integer,
	total_work_time integer,
	goodtime_revoked_days integer,
	revoked_parole_days smallint,
	notification_date timestamp,
	error_code integer,
	sentence_length_text varchar(40),
	total_satisfied_time integer,
	most_serious_sentence_seq integer DEFAULT 99,
	release_reason varchar(12),
	comment_text varchar(240),
	min_term varchar(12),
	max_term varchar(12),
	pending_sent_flag varchar(1) DEFAULT 'N',
	pending_sent_set_date timestamp,
	verified_flag varchar(1) DEFAULT 'N',
	flat_max_date timestamp,
	book_max_date timestamp,
	min_expiration_date timestamp,
	actual_max_date timestamp,
	days_remaining bigint,
	total_attendence_time bigint,
	case_management_date timestamp,
	control_order_id bigint,
	yo_discharge_date timestamp,
	ys_discharge_date timestamp,
	discharge_date timestamp,
	ovr_yo_discharge_date timestamp,
	ovr_ys_discharge_date timestamp,
	ovr_discharge_date timestamp,
	parole_eligiblity_date timestamp,
	ovr_parole_eligiblity_date timestamp,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	ovr_earliest_sent_start_date timestamp,
	printed_flag varchar(1),
	update_flag varchar(1),
	modify_date timestamp,
	ovr_adult_agg_days bigint,
	ovr_you_agg_days bigint,
	int_discharge_date timestamp,
	ovr_int_discharge_date timestamp,
	parole_end_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sentence_aggs IS E'Aggregated sentence information for an offender.';
COMMENT ON COLUMN offender_sentence_aggs.calc_pos_prob_date IS E'pos';
COMMENT ON COLUMN offender_sentence_aggs.calc_pos_rel_date IS E'The earliest release date for all sentences.';
COMMENT ON COLUMN offender_sentence_aggs.calc_prob_effect_date IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.calc_prob_exp_date IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.earliest_sent_start_date IS E'The start date of the earliest sentence.';
COMMENT ON COLUMN offender_sentence_aggs.eligible_goodtime_days IS E'Not used in N.S.W.';
COMMENT ON COLUMN offender_sentence_aggs.error_code IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.final_sent_exp_date IS E'The last date of sentence expiration.';
COMMENT ON COLUMN offender_sentence_aggs.goodtime_revoked_days IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.int_discharge_date IS E'Aggregate calculation of Intermittent Discharge Date';
COMMENT ON COLUMN offender_sentence_aggs.most_serious_sentence_seq IS E'Sequence number for most serious sentence';
COMMENT ON COLUMN offender_sentence_aggs.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_sentence_aggs.ovr_adult_agg_days IS E'Manual entry of Adult Aggregate Days';
COMMENT ON COLUMN offender_sentence_aggs.ovr_int_discharge_date IS E'Manual entry of Intermittent Discharge Date';
COMMENT ON COLUMN offender_sentence_aggs.ovr_pos_prob_date IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.ovr_pos_rel_date IS E'Override on earliest possible release.';
COMMENT ON COLUMN offender_sentence_aggs.ovr_prl_exp_date IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.ovr_prob_effect_date IS E'Probation';
COMMENT ON COLUMN offender_sentence_aggs.ovr_prob_exp_date IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.ovr_sent_exp_date IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.ovr_you_agg_days IS E'Manual entry of Youth Aggregate days';
COMMENT ON COLUMN offender_sentence_aggs.parole_date IS E'Parole Date';
COMMENT ON COLUMN offender_sentence_aggs.parole_end_date IS E'Store parole end date when parole sentence is added to the comunity sentences...';
COMMENT ON COLUMN offender_sentence_aggs.parole_review_date IS E'Parole Review Date';
COMMENT ON COLUMN offender_sentence_aggs.revoked_parole_days IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.sent_calc_needed_flag IS E'Y/N flag on sentence calculation required.';
COMMENT ON COLUMN offender_sentence_aggs.total_awol_days IS E'The total number of escape days applied to a sentence.';
COMMENT ON COLUMN offender_sentence_aggs.total_length_days IS E'The total number of aggregated sentence days.';
COMMENT ON COLUMN offender_sentence_aggs.total_length_hours IS E'The total number of hours in the aggregated sentences.';
COMMENT ON COLUMN offender_sentence_aggs.total_length_months IS E'The total number of months in aggregated sentences.';
COMMENT ON COLUMN offender_sentence_aggs.total_length_weeks IS E'The total number of weeks in aggregated sentences.';
COMMENT ON COLUMN offender_sentence_aggs.total_length_years IS E'The total length in years of aggregated sentences.';
COMMENT ON COLUMN offender_sentence_aggs.total_satisfied_time IS E'- Column already exists';
COMMENT ON COLUMN offender_sentence_aggs.total_served_time IS E'Total Served Days';
COMMENT ON COLUMN offender_sentence_aggs.total_work_time IS E'Total Work Days';

CREATE TABLE offender_sentence_charges (
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	offender_charge_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sentence_charges IS E'The assocation between offender sentences and offender charges';
COMMENT ON COLUMN offender_sentence_charges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sentence_charges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sentence_charges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sentence_charges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sentence_charges.offender_book_id IS E'The offender Book ID';
COMMENT ON COLUMN offender_sentence_charges.offender_charge_id IS E'The offender charge ID';
COMMENT ON COLUMN offender_sentence_charges.sentence_seq IS E'The sentence seq';

CREATE TABLE offender_sentence_hty (
	offender_sentence_hty_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	adjust_reason varchar(12) NOT NULL,
	staff_id bigint,
	no_of_unexcused_absence integer NOT NULL,
	adjust_date timestamp,
	adjust_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sentence_hty.adjust_reason IS E'Reason for the change.  Reference Code(SENT_CHG_RSN)';
COMMENT ON COLUMN offender_sentence_hty.no_of_unexcused_absence IS E'The Original value';
COMMENT ON COLUMN offender_sentence_hty.offender_book_id IS E'The offender Book Id';
COMMENT ON COLUMN offender_sentence_hty.offender_sentence_hty_id IS E'The offender Sentence HTY ID';
COMMENT ON COLUMN offender_sentence_hty.sentence_seq IS E'The sentence se';
COMMENT ON COLUMN offender_sentence_hty.staff_id IS E'The staff who make the change';

CREATE TABLE offender_sentence_statuses (
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	status_update_reason varchar(12) NOT NULL,
	status_update_comment varchar(400),
	status_update_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	status_update_staff_id bigint NOT NULL,
	offender_sentence_status_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sentence_statuses.offender_book_id IS E'The offender Book ID';
COMMENT ON COLUMN offender_sentence_statuses.offender_sentence_status_id IS E'The PK of the status update reason';
COMMENT ON COLUMN offender_sentence_statuses.sentence_seq IS E'The sentence seq';
COMMENT ON COLUMN offender_sentence_statuses.status_update_comment IS E'The comment of the status update';
COMMENT ON COLUMN offender_sentence_statuses.status_update_date IS E'The date of the status date';
COMMENT ON COLUMN offender_sentence_statuses.status_update_reason IS E'The reason of the status update';
COMMENT ON COLUMN offender_sentence_statuses.status_update_staff_id IS E'The staff who update the status';

CREATE TABLE offender_sentence_terms (
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	term_seq integer NOT NULL,
	sentence_term_code varchar(12) NOT NULL,
	years smallint,
	months smallint,
	weeks smallint,
	days integer,
	start_date timestamp NOT NULL,
	end_date timestamp,
	life_sentence_flag varchar(1),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	hours smallint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sentence_terms IS E'The detail of the sentence terms';
COMMENT ON COLUMN offender_sentence_terms.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sentence_terms.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sentence_terms.days IS E'Sentence days type Term 1.';
COMMENT ON COLUMN offender_sentence_terms.end_date IS E'Date sentence term ends ';
COMMENT ON COLUMN offender_sentence_terms.hours IS E'Sentence hours';
COMMENT ON COLUMN offender_sentence_terms.life_sentence_flag IS E'If it is a life sentence ?';
COMMENT ON COLUMN offender_sentence_terms.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sentence_terms.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sentence_terms.months IS E'Sentence months for type Term .';
COMMENT ON COLUMN offender_sentence_terms.offender_book_id IS E'Unique identifier for an offender booking.';
COMMENT ON COLUMN offender_sentence_terms.sentence_seq IS E' Sequence number identifying the sentence.';
COMMENT ON COLUMN offender_sentence_terms.sentence_term_code IS E'REFERENCE CODE ( SENT_TERM )
 The type of sentence term - ie. Minimum, Sentence, Fixed Term..';
COMMENT ON COLUMN offender_sentence_terms.start_date IS E'Date sentence term starts - ie. start of Minimum, Additional, Sent, NPP..';
COMMENT ON COLUMN offender_sentence_terms.term_seq IS E'Sentence Term Sequence';
COMMENT ON COLUMN offender_sentence_terms.weeks IS E'Sentence weeks for type Term 1.';
COMMENT ON COLUMN offender_sentence_terms.years IS E' Sentence years for Term 1 type.';

CREATE TABLE offender_sentence_ua_events (
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	event_id bigint NOT NULL,
	unaccpetable_absence_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	counted_flag varchar(1) NOT NULL,
	event_date timestamp NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sentence_ua_events IS E'The unacceptable absence counter between offender sentence and event';
COMMENT ON COLUMN offender_sentence_ua_events.event_id IS E'The Event ID';
COMMENT ON COLUMN offender_sentence_ua_events.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_sentence_ua_events.sentence_seq IS E'The sentence sequence';
COMMENT ON COLUMN offender_sentence_ua_events.unaccpetable_absence_flag IS E'?If count for unacceptable absence';

CREATE TABLE offender_sent_calculations (
	offender_sent_calculation_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	calculation_date timestamp NOT NULL,
	staff_id bigint,
	comment_text varchar(240),
	hdced_calculated_date timestamp,
	hdced_overrided_date timestamp,
	hdcad_calculated_date timestamp,
	hdcad_overrided_date timestamp,
	etd_calculated_date timestamp,
	etd_overrided_date timestamp,
	mtd_calculated_date timestamp,
	mtd_overrided_date timestamp,
	ltd_calculated_date timestamp,
	ltd_overrided_date timestamp,
	ard_calculated_date timestamp,
	ard_overrided_date timestamp,
	crd_calculated_date timestamp,
	crd_overrided_date timestamp,
	ped_calculated_date timestamp,
	ped_overrided_date timestamp,
	apd_calculated_date timestamp,
	apd_overrided_date timestamp,
	npd_calculated_date timestamp,
	npd_overrided_date timestamp,
	led_calculated_date timestamp,
	led_overrided_date timestamp,
	sed_calculated_date timestamp,
	sed_overrided_date timestamp,
	prrd_calculated_date timestamp,
	prrd_overrided_date timestamp,
	tariff_calculated_date timestamp,
	tariff_overrided_date timestamp,
	calc_reason_code varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	record_datetime timestamp DEFAULT LOCALTIMESTAMP,
	record_user_id varchar(30) DEFAULT 'user',
	message_id varchar(64),
	seal_flag varchar(1),
	lrd_calculated_date timestamp,
	erd_calculated_date timestamp,
	lrd_overrided_date timestamp,
	erd_overrided_date timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sent_calculations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sent_calculations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sent_calculations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sent_calculations.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_sent_conditions (
	sentence_seq integer,
	comm_condition_type varchar(12) NOT NULL,
	comm_condition_code varchar(12) NOT NULL,
	start_date timestamp,
	condition_status varchar(12),
	status_date timestamp,
	offender_book_id bigint NOT NULL,
	expiry_date timestamp,
	list_seq smallint,
	comment_text varchar(240),
	curfew_start_time timestamp,
	curfew_end_time timestamp,
	condition_recommended_flag varchar(1),
	governor_condition_flag varchar(1),
	length integer,
	length_unit varchar(12),
	details_text varchar(240),
	offender_sent_condition_id bigint NOT NULL,
	curfew_provider varchar(12),
	exclusion_code varchar(12),
	residency_address_id bigint,
	mental_health_provider varchar(12),
	alcohol_treatment_provider varchar(12),
	attendance_centre varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	condition_required_flag varchar(1) DEFAULT 'N',
	condition_applied_flag varchar(1) NOT NULL DEFAULT 'N',
	long_comment_text varchar(4000),
	appointment_person_name varchar(240),
	review_code varchar(12),
	supervisor_name varchar(256),
	report_time timestamp,
	report_date timestamp,
	personal_relationship_flag varchar(1),
	vehicle_details_flag varchar(1),
	non_associated_offenders varchar(240),
	drug_testing varchar(240),
	termination_date timestamp,
	status_reason_code varchar(12),
	no_resident_under_age_of integer,
	prohibited_contact varchar(256),
	restricted_child_age_of integer,
	restricted_approval_person varchar(240),
	curfew_tagging_flag varchar(1),
	other_program varchar(240),
	no_work_with_under_age varchar(1),
	no_work_with_under_age_of smallint,
	no_access_to_internet varchar(1),
	no_user_of_computer varchar(1),
	status_update_reason varchar(12),
	status_update_comment varchar(400),
	status_update_date timestamp,
	status_update_staff_id bigint,
	workflow_id numeric(32),
	program_id bigint,
	activity_code varchar(12),
	cond_act_type varchar(12),
	activity_status varchar(12),
	category_type varchar(12),
	non_association_text varchar(240),
	financial_total_amount decimal(11,2),
	seal_flag varchar(1),
	object_id bigint,
	object_type varchar(12),
	board_order_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sent_conditions IS E'The conditions of an offender sentences';
COMMENT ON COLUMN offender_sent_conditions.alcohol_treatment_provider IS E'The provider of the alcohol treatments';
COMMENT ON COLUMN offender_sent_conditions.attendance_centre IS E'The attendance centre';
COMMENT ON COLUMN offender_sent_conditions.comm_condition_code IS E'The sentence seq';
COMMENT ON COLUMN offender_sent_conditions.comm_condition_type IS E'The offender Book ID';
COMMENT ON COLUMN offender_sent_conditions.comment_text IS E'The general comment text';
COMMENT ON COLUMN offender_sent_conditions.condition_applied_flag IS E'?Condition Applied';
COMMENT ON COLUMN offender_sent_conditions.condition_recommended_flag IS E'?if the condition recommended';
COMMENT ON COLUMN offender_sent_conditions.condition_required_flag IS E'?Condition required';
COMMENT ON COLUMN offender_sent_conditions.condition_status IS E'The condition code';
COMMENT ON COLUMN offender_sent_conditions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sent_conditions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sent_conditions.curfew_end_time IS E'The end time of the curfew';
COMMENT ON COLUMN offender_sent_conditions.curfew_provider IS E'The provider of the curfew';
COMMENT ON COLUMN offender_sent_conditions.curfew_start_time IS E'The start time of the curfew';
COMMENT ON COLUMN offender_sent_conditions.details_text IS E'The details of condition';
COMMENT ON COLUMN offender_sent_conditions.exclusion_code IS E'The exclusion';
COMMENT ON COLUMN offender_sent_conditions.expiry_date IS E'The expiry date of the condition';
COMMENT ON COLUMN offender_sent_conditions.governor_condition_flag IS E'?if the condition recommended by Governor';
COMMENT ON COLUMN offender_sent_conditions.length IS E'The length of the condtion';
COMMENT ON COLUMN offender_sent_conditions.length_unit IS E'The length unit of condition';
COMMENT ON COLUMN offender_sent_conditions.list_seq IS E'The order of listing';
COMMENT ON COLUMN offender_sent_conditions.mental_health_provider IS E'The provider of the mental health services';
COMMENT ON COLUMN offender_sent_conditions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sent_conditions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sent_conditions.offender_book_id IS E'The status of the condition';
COMMENT ON COLUMN offender_sent_conditions.offender_sent_condition_id IS E'The ID of the offender sentence condition';
COMMENT ON COLUMN offender_sent_conditions.residency_address_id IS E'The address of the residency';
COMMENT ON COLUMN offender_sent_conditions.sentence_seq IS E'The date of status set/reset';
COMMENT ON COLUMN offender_sent_conditions.start_date IS E'The conditon type';
COMMENT ON COLUMN offender_sent_conditions.status_date IS E'Start date of the condition';

CREATE TABLE offender_sent_conditions_bkup (
	sentence_seq integer NOT NULL,
	comm_condition_type varchar(12) NOT NULL,
	comm_condition_code varchar(12) NOT NULL,
	start_date timestamp,
	condition_status varchar(12),
	status_date timestamp,
	offender_book_id bigint NOT NULL,
	expiry_date timestamp,
	list_seq smallint,
	comment_text varchar(240),
	curfew_start_time timestamp,
	curfew_end_time timestamp,
	condition_recommended_flag varchar(1),
	governor_condition_flag varchar(1),
	length integer,
	length_unit varchar(12),
	details_text varchar(240),
	offender_sent_condition_id bigint NOT NULL,
	curfew_provider varchar(12),
	exclusion_code varchar(12),
	residency_address_id bigint,
	mental_health_provider varchar(12),
	alcohol_treatment_provider varchar(12),
	attendance_centre varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	modify_user_id varchar(32),
	condition_required_flag varchar(1),
	condition_applied_flag varchar(1) NOT NULL,
	long_comment_text varchar(4000),
	appointment_person_name varchar(240),
	review_code varchar(12),
	supervisor_name varchar(256),
	report_time timestamp,
	report_date timestamp,
	personal_relationship_flag varchar(1),
	vehicle_details_flag varchar(1),
	non_associated_offenders varchar(240),
	drug_testing varchar(240),
	termination_date timestamp,
	status_reason_code varchar(12),
	no_resident_under_age_of integer,
	prohibited_contact varchar(256),
	restricted_child_age_of integer,
	restricted_approval_person varchar(240),
	curfew_tagging_flag varchar(1),
	other_program varchar(240),
	no_work_with_under_age varchar(1),
	no_work_with_under_age_of smallint,
	no_access_to_internet varchar(1),
	no_user_of_computer varchar(1),
	status_update_reason varchar(12),
	status_update_comment varchar(400),
	status_update_date timestamp,
	status_update_staff_id bigint,
	workflow_id numeric(32),
	program_id bigint,
	activity_code varchar(12),
	cond_act_type varchar(12),
	activity_status varchar(12),
	category_type varchar(12),
	non_association_text varchar(240),
	financial_total_amount decimal(11,2),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_sent_cond_acts (
	offender_sent_condition_id bigint NOT NULL,
	activity_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	offender_sent_cond_act_id bigint NOT NULL,
	cond_act_type varchar(12),
	details varchar(240),
	age integer,
	activity_status varchar(12),
	program_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sent_cond_acts IS E'The activity details required for the sentence condition';
COMMENT ON COLUMN offender_sent_cond_acts.activity_code IS E'Condition Activity Reference(COND_ACT)';
COMMENT ON COLUMN offender_sent_cond_acts.comment_text IS E'The general comment text';
COMMENT ON COLUMN offender_sent_cond_acts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sent_cond_acts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sent_cond_acts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sent_cond_acts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_sent_cond_acts.offender_sent_condition_id IS E'The Sentence condition ID';

CREATE TABLE offender_sent_cond_statuses (
	offender_sent_condition_id bigint NOT NULL,
	status_update_reason varchar(12) NOT NULL,
	status_update_comment varchar(400),
	status_update_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	status_update_staff_id bigint NOT NULL,
	offender_sent_cond_status_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_sent_cond_statuses IS E'The histry of the status updated reasons';
COMMENT ON COLUMN offender_sent_cond_statuses.offender_sent_cond_status_id IS E'The ID of the status update record';
COMMENT ON COLUMN offender_sent_cond_statuses.offender_sent_condition_id IS E'The sentence condition';
COMMENT ON COLUMN offender_sent_cond_statuses.status_update_comment IS E'The comment of the update reason';
COMMENT ON COLUMN offender_sent_cond_statuses.status_update_date IS E'The update date';
COMMENT ON COLUMN offender_sent_cond_statuses.status_update_reason IS E'The update reason';
COMMENT ON COLUMN offender_sent_cond_statuses.status_update_staff_id IS E'The staff who perform the update';

CREATE TABLE offender_sent_obligations (
	obligation_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	count_no integer NOT NULL,
	court_info_id varchar(12) NOT NULL,
	deduction_type varchar(6) NOT NULL,
	information_number varchar(32) NOT NULL,
	amount decimal(11,2) NOT NULL,
	caseload_id varchar(12) NOT NULL,
	order_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_skip_defer_payments (
	payment_plan_id bigint NOT NULL,
	payment_plan_seq integer NOT NULL DEFAULT 1,
	skip_defer_code varchar(12) NOT NULL,
	skip_defer_date timestamp NOT NULL,
	defer_limit_date timestamp,
	new_payment_date timestamp NOT NULL,
	new_payment_amount decimal(11,2) NOT NULL,
	authorized_date timestamp NOT NULL,
	authorized_time timestamp NOT NULL,
	staff_id integer NOT NULL,
	skip_defer_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_skip_defer_payments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_skip_defer_payments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_skip_defer_payments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_skip_defer_payments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_skip_defer_payments.skip_defer_code IS E'DOMAIN = "CF_SKIP_DEF"';

CREATE TABLE offender_stg_affiliations (
	offender_book_id bigint NOT NULL,
	stg_seq integer NOT NULL,
	effective_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	stg_id bigint NOT NULL,
	reason_code varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expired_by varchar(32),
	expiry_date timestamp,
	expiry_reason_code varchar(12),
	notified_date timestamp,
	notified_by varchar(32),
	appeal_date timestamp,
	comment_text varchar(2000),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_stg_associations (
	offender_book_id bigint NOT NULL,
	stg_seq integer NOT NULL,
	effective_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	group_code varchar(300) NOT NULL,
	reason_code varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	expired_by varchar(32),
	comment_text varchar(1000),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_stg_details (
	offender_book_id bigint NOT NULL,
	stg_seq integer NOT NULL,
	detail_seq integer NOT NULL,
	val_date timestamp NOT NULL,
	action_code varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	reason_code varchar(12) NOT NULL,
	comment_text varchar(1000),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_stock_item_limits (
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	stock_item_cat varchar(12) NOT NULL,
	stock_item_id bigint,
	quantity_limit_per_sale integer,
	comment_text varchar(240),
	seal_flag varchar(1),
	amount_limit_per_sale decimal(6,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_substance_abuses (
	offender_book_id bigint NOT NULL,
	substance_type varchar(12) NOT NULL,
	age_first_used decimal(11,2),
	creation_date timestamp NOT NULL,
	creation_user varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_substance_abuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_substance_abuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_substance_abuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_substance_abuses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_substance_abuses.offender_book_id IS E' The system generated identifier for an offender booking.';

CREATE TABLE offender_substance_details (
	offender_book_id bigint NOT NULL,
	root_offender_id bigint NOT NULL,
	substance_type varchar(12) NOT NULL,
	seq_number smallint NOT NULL,
	use_period varchar(32),
	use_level varchar(12) NOT NULL,
	caseload_type varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	comment_text varchar(240),
	source_of_info varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_substance_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_substance_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_substance_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_substance_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_substance_treatments (
	offender_book_id bigint NOT NULL,
	treatment_seq integer NOT NULL DEFAULT 1,
	substance_type varchar(12) NOT NULL,
	treatment_from_date timestamp NOT NULL,
	from_date_flag varchar(1) NOT NULL DEFAULT 'Y',
	root_offender_id bigint NOT NULL,
	caseload_type varchar(12),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	to_date_flag varchar(1) NOT NULL DEFAULT 'Y',
	treatment_to_date timestamp,
	treatment_code varchar(12) NOT NULL,
	comment_text varchar(240),
	treatment_place varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_substance_treatments IS E'Offender substancel Treatments';
COMMENT ON COLUMN offender_substance_treatments.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_substance_treatments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_substance_treatments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_substance_treatments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_substance_treatments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_substance_treatments.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_substance_treatments.treatment_code IS E'Reference Code ( MED_TREAT ) : Medical Treatment';
COMMENT ON COLUMN offender_substance_treatments.treatment_from_date IS E' - Column already exists';
COMMENT ON COLUMN offender_substance_treatments.treatment_place IS E' - Column already exists';
COMMENT ON COLUMN offender_substance_treatments.treatment_seq IS E' - Column already exists';

CREATE TABLE offender_substance_uses (
	offender_book_id bigint NOT NULL,
	root_offender_id bigint NOT NULL,
	substance_type varchar(12) NOT NULL,
	age_used smallint,
	caseload_type varchar(12),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_substance_uses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_substance_uses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_substance_uses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_substance_uses.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_sub_accounts (
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	trust_account_code integer NOT NULL,
	balance decimal(11,2),
	minimum_balance decimal(11,2),
	hold_balance decimal(11,2),
	last_txn_id bigint,
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer DEFAULT 99,
	ind_date timestamp,
	ind_days integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sub_accounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sub_accounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sub_accounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sub_accounts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_sub_ac_shadows (
	transfered_amount decimal(11,2),
	trust_account_code varchar(12) NOT NULL,
	balance decimal(11,2),
	offender_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_sub_ac_shadows.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_sub_ac_shadows.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_sub_ac_shadows.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_sub_ac_shadows.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_supervising_courts (
	offender_book_id bigint NOT NULL,
	court_agy_loc_id varchar(6) NOT NULL,
	record_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	offender_supervising_court_id bigint NOT NULL,
	seal_flag varchar(1)
) ;
COMMENT ON TABLE offender_supervising_courts IS E'The historical details of offender supervising courts';
COMMENT ON COLUMN offender_supervising_courts.court_agy_loc_id IS E'The court ID';
COMMENT ON COLUMN offender_supervising_courts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_supervising_courts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_supervising_courts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_supervising_courts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_supervising_courts.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_supervising_courts.offender_supervising_court_id IS E'The ID of the record';
COMMENT ON COLUMN offender_supervising_courts.record_date IS E'The record date';

CREATE TABLE offender_supervision_levels (
	offender_book_id bigint NOT NULL,
	supervision_level_type varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	comment_text varchar(30),
	agy_loc_id varchar(6) NOT NULL,
	create_date timestamp NOT NULL,
	create_time timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_supervision_levels IS E'- Retrofitted';
COMMENT ON COLUMN offender_supervision_levels.active_flag IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_levels.agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_levels.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_levels.create_date IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_levels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_supervision_levels.create_time IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_levels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_supervision_levels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_supervision_levels.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_supervision_levels.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_levels.supervision_level_type IS E'Reference Code ( SUP_LVL_TYPE )';

CREATE TABLE offender_supervision_plans (
	offender_book_id bigint NOT NULL,
	plan_seq integer NOT NULL,
	supervision_level_type varchar(12) NOT NULL,
	supervision_type varchar(12) NOT NULL,
	expiry_date timestamp,
	plan_status varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_supervision_plans IS E'- Retrofitted';
COMMENT ON COLUMN offender_supervision_plans.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_supervision_plans.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_supervision_plans.effective_date IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_plans.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_supervision_plans.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_supervision_plans.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_plans.plan_status IS E'Reference Code ( STATUS )';
COMMENT ON COLUMN offender_supervision_plans.supervision_level_type IS E'Reference Code ( SUP_LVL_TYPE )';
COMMENT ON COLUMN offender_supervision_plans.supervision_type IS E'Reference Code ( SUPERV_TYPE )';

CREATE TABLE offender_supervision_rates (
	offender_book_id bigint NOT NULL,
	supervision_type varchar(12) NOT NULL,
	rate_seq integer NOT NULL,
	charge_code varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	expiry_date timestamp,
	charge_amount decimal(12,2),
	exemption_code varchar(12),
	closing_reason_code varchar(12),
	comment_text varchar(240),
	authorize_staff_id integer,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_supervision_rates IS E'- Retrofitted';
COMMENT ON COLUMN offender_supervision_rates.authorize_staff_id IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.charge_amount IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.charge_code IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.closing_reason_code IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_supervision_rates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_supervision_rates.effective_date IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.exemption_code IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.modify_date IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_supervision_rates.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_supervision_rates.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_supervision_rates.supervision_type IS E'Reference Code (SUPERV_TYPE )';

CREATE TABLE offender_tax_profiles (
	offender_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	tax_type varchar(12) NOT NULL,
	tax_code varchar(12) NOT NULL,
	additional_deduction decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_tax_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_tax_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_tax_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_tax_profiles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_ta_schedules (
	offender_book_id bigint NOT NULL,
	ta_id bigint NOT NULL,
	cancel_reason_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_ta_schedules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_ta_schedules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_ta_schedules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_ta_schedules.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_team_assignments (
	offender_book_id bigint NOT NULL,
	function_type varchar(12) NOT NULL,
	team_id bigint NOT NULL,
	assignment_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_team_assignments IS E'The offender function assignment - to team ';
COMMENT ON COLUMN offender_team_assignments.assignment_date IS E'The assignment date';
COMMENT ON COLUMN offender_team_assignments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_team_assignments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_team_assignments.function_type IS E'Fuctions served by the team.  Reference Codes(FUNCTION)';
COMMENT ON COLUMN offender_team_assignments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_team_assignments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_team_assignments.offender_book_id IS E'The Offender Book ID';
COMMENT ON COLUMN offender_team_assignments.team_id IS E'The Team ID';

CREATE TABLE offender_team_assign_hty (
	offender_book_id bigint NOT NULL,
	function_type varchar(12) NOT NULL,
	team_id bigint NOT NULL,
	expiry_date timestamp,
	assign_date timestamp NOT NULL,
	offender_team_assign_hty_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_team_assign_hty IS E'The history of the offender Team Assignment';
COMMENT ON COLUMN offender_team_assign_hty.assign_date IS E'The assignment date';
COMMENT ON COLUMN offender_team_assign_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_team_assign_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_team_assign_hty.expiry_date IS E'The expiry date';
COMMENT ON COLUMN offender_team_assign_hty.function_type IS E'The function';
COMMENT ON COLUMN offender_team_assign_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_team_assign_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_team_assign_hty.offender_book_id IS E'The offender ID';
COMMENT ON COLUMN offender_team_assign_hty.offender_team_assign_hty_id IS E'The ID of the offender team assignment history';
COMMENT ON COLUMN offender_team_assign_hty.team_id IS E'The team ID';

CREATE TABLE offender_temporary_absences (
	offender_book_id bigint NOT NULL,
	absence_seq integer NOT NULL,
	approval_staff_id integer,
	application_date timestamp NOT NULL,
	temp_absence_type varchar(12),
	condition_code varchar(12),
	from_date timestamp,
	to_date timestamp,
	scheduled_week_day varchar(12),
	time_out integer,
	time_in integer,
	reason_code varchar(12),
	disposition_date timestamp,
	ta_status varchar(12),
	comment_text varchar(240),
	approval_authority varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_temporary_absences IS E'The Temporary Absence Details of an Offender';
COMMENT ON COLUMN offender_temporary_absences.absence_seq IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.application_date IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.approval_authority IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.approval_staff_id IS E'Approval Officer ID';
COMMENT ON COLUMN offender_temporary_absences.comment_text IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.condition_code IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_temporary_absences.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_temporary_absences.disposition_date IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.from_date IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_temporary_absences.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_temporary_absences.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.reason_code IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.scheduled_week_day IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.ta_status IS E'Reference Code ( TA_STATUS )';
COMMENT ON COLUMN offender_temporary_absences.temp_absence_type IS E'Reference Code ( TA_REASON )';
COMMENT ON COLUMN offender_temporary_absences.time_in IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.time_out IS E' - Column already exists';
COMMENT ON COLUMN offender_temporary_absences.to_date IS E' - Column already exists';

CREATE TABLE offender_temp_doc (
	id bigint NOT NULL,
	document_name varchar(100),
	template_name varchar(30),
	file_data bytea,
	ext_app_user varchar(20),
	record_creator varchar(20),
	off_book_id varchar(20),
	off_book_no varchar(20),
	off_display_id varchar(20),
	dob varchar(20),
	document_id varchar(20),
	ext varchar(5),
	status varchar(10),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE offender_test_selections (
	offender_book_id bigint NOT NULL,
	rtp_id bigint NOT NULL,
	test_selection_type varchar(1) NOT NULL,
	test_selection_no integer NOT NULL,
	tested_flag varchar(1),
	reason_not_tested varchar(12),
	notes varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_test_selections.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_test_selections.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_test_selections.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_test_selections.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_test_selections.notes IS E'Notes';
COMMENT ON COLUMN offender_test_selections.offender_book_id IS E'Offender Book Id';
COMMENT ON COLUMN offender_test_selections.reason_not_tested IS E'Reason not tested';
COMMENT ON COLUMN offender_test_selections.rtp_id IS E'Id of random testing programme';
COMMENT ON COLUMN offender_test_selections.test_selection_no IS E'No of selection';
COMMENT ON COLUMN offender_test_selections.test_selection_type IS E'Type of selection: (M)ain or (R)eserve';
COMMENT ON COLUMN offender_test_selections.tested_flag IS E'Tested Flag, Y or N';

CREATE TABLE offender_tier_txn_fee_amounts (
	offender_deduction_id bigint NOT NULL,
	from_amount decimal(11,2) NOT NULL,
	to_amount decimal(11,2) NOT NULL,
	percentage smallint,
	fee_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_tier_txn_fee_amounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_tier_txn_fee_amounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_tier_txn_fee_amounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_tier_txn_fee_amounts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_tmp_rel_schedules (
	offender_book_id bigint NOT NULL,
	session_id bigint NOT NULL,
	offender_id_display varchar(10),
	last_name varchar(35),
	first_name varchar(35),
	column_four_date timestamp,
	column_five_date timestamp,
	column_six_date timestamp,
	release_date timestamp,
	comment_text varchar(240),
	movement_type varchar(12),
	movement_reason_code varchar(12),
	column_seven_date timestamp,
	column_eight_date timestamp,
	column_nine_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_tmp_rel_schedules.column_eight_date IS E'Dynamic column';
COMMENT ON COLUMN offender_tmp_rel_schedules.column_five_date IS E'Dynamic column';
COMMENT ON COLUMN offender_tmp_rel_schedules.column_four_date IS E'Dynamic column';
COMMENT ON COLUMN offender_tmp_rel_schedules.column_seven_date IS E'Dynamic column';
COMMENT ON COLUMN offender_tmp_rel_schedules.column_six_date IS E'Dynamic column';
COMMENT ON COLUMN offender_tmp_rel_schedules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_tmp_rel_schedules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_tmp_rel_schedules.first_name IS E'First name of offender.';
COMMENT ON COLUMN offender_tmp_rel_schedules.last_name IS E'Last name of offender.';
COMMENT ON COLUMN offender_tmp_rel_schedules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_tmp_rel_schedules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_tmp_rel_schedules.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN offender_tmp_rel_schedules.offender_id_display IS E'The unique identifier number for the offender.';

CREATE TABLE offender_transactions (
	txn_id bigint NOT NULL,
	txn_entry_seq integer NOT NULL DEFAULT 99,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	offender_book_id bigint,
	txn_posting_type varchar(12) NOT NULL,
	txn_type varchar(6) NOT NULL,
	txn_entry_desc varchar(240),
	txn_entry_amount decimal(11,2) NOT NULL,
	txn_entry_date timestamp NOT NULL,
	sub_account_type varchar(12) NOT NULL,
	txn_reference_number varchar(12),
	modify_date timestamp NOT NULL,
	receipt_number varchar(13),
	slip_printed_flag varchar(1) NOT NULL DEFAULT 'Y',
	transfer_caseload_id varchar(6),
	receipt_printed_flag varchar(1),
	pre_withhold_amount decimal(11,2),
	deduction_flag varchar(1) DEFAULT 'Y',
	closing_cheque_number varchar(12),
	remitter_name varchar(60),
	payee_code varchar(12),
	payee_name_text varchar(60),
	payee_corporate_id bigint,
	payee_person_id bigint,
	adjust_txn_id bigint,
	adjust_txn_entry_id integer DEFAULT 99,
	adjust_offender_id bigint,
	adjust_account_code integer,
	txn_adjusted_flag varchar(1) DEFAULT 'Y',
	deduction_type varchar(6),
	info_number varchar(32),
	hold_clear_flag varchar(1) DEFAULT 'Y',
	hold_until_date timestamp,
	hold_number integer,
	gross_amount decimal(11,2),
	gross_net_flag varchar(1),
	remitter_id bigint,
	apply_spending_limit_amount decimal(12,2),
	receipt_pending_print_flag varchar(1),
	seal_flag varchar(1),
	org_txn_type varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
) ;
COMMENT ON TABLE offender_transactions IS E'- Retrofitted';
COMMENT ON COLUMN offender_transactions.offender_book_id IS E'Offender Book ID';
COMMENT ON COLUMN offender_transactions.offender_id IS E'Offender ID';

CREATE TABLE offender_trust_accounts (
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	account_closed_flag varchar(1) NOT NULL DEFAULT 'Y',
	hold_balance decimal(11,2),
	current_balance decimal(11,2),
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer DEFAULT 99,
	notify_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_trust_accounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_trust_accounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_trust_accounts.modify_date IS E'Modify Date';
COMMENT ON COLUMN offender_trust_accounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_trust_accounts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_trust_accounts_temp (
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	session_id bigint NOT NULL,
	account_closed_flag varchar(1) NOT NULL DEFAULT 'Y',
	hold_balance decimal(11,2),
	current_balance decimal(11,2),
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer DEFAULT 99,
	notify_date timestamp,
	offender_book_id bigint,
	last_name varchar(35),
	first_name varchar(35),
	movement_date timestamp,
	agy_loc_id varchar(6),
	offender_id_display varchar(10),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_trust_accounts_temp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_trust_accounts_temp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_trust_accounts_temp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_trust_accounts_temp.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_trust_transfers (
	txn_id bigint NOT NULL,
	from_caseload varchar(6) NOT NULL,
	to_caseload varchar(6) NOT NULL,
	amount decimal(11,2) NOT NULL,
	transfer_date timestamp NOT NULL,
	posted_flag varchar(1) NOT NULL DEFAULT 'N',
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_trust_transfers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_trust_transfers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_trust_transfers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_trust_transfers.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_txn_fee_details (
	offender_deduction_id bigint NOT NULL,
	receipt_deduction_type varchar(6) NOT NULL,
	list_seq smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_txn_fee_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_txn_fee_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_txn_fee_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_txn_fee_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_unpaid_work_adj (
	offender_unpaid_work_adj_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	sentence_seq integer NOT NULL,
	adjustment_date timestamp NOT NULL,
	adjustment_minutes integer NOT NULL,
	adjustment_type varchar(1) NOT NULL,
	reason_code varchar(12) NOT NULL,
	comment_text varchar(256),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_unpaid_work_adj IS E'This table holds the manual unpaid work project adjustment related to a sentence';
COMMENT ON COLUMN offender_unpaid_work_adj.adjustment_date IS E'The adjustment date for the adjustment record';
COMMENT ON COLUMN offender_unpaid_work_adj.adjustment_minutes IS E'The adjustment value for the adjustment record displayed as HH24:MM';
COMMENT ON COLUMN offender_unpaid_work_adj.adjustment_type IS E'The adjustment type, either Credit or Debit';
COMMENT ON COLUMN offender_unpaid_work_adj.comment_text IS E'Free text commnet text for the adjustment';
COMMENT ON COLUMN offender_unpaid_work_adj.offender_book_id IS E'The offender bok identifier';
COMMENT ON COLUMN offender_unpaid_work_adj.offender_unpaid_work_adj_id IS E'This column is a surrogate key';
COMMENT ON COLUMN offender_unpaid_work_adj.reason_code IS E'The adjustment reason code for the adjustment';
COMMENT ON COLUMN offender_unpaid_work_adj.sentence_seq IS E'The associated sentence sequence for the adjustment record';

CREATE TABLE offender_versions (
	offender_book_id bigint NOT NULL,
	ver_seq smallint NOT NULL,
	offender_date_recd timestamp,
	offender_recorded_by varchar(60),
	offender_summary varchar(2000),
	official_date_recd timestamp,
	source varchar(6),
	official_summary varchar(2000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_versions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_versions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_versions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_versions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offender_victims (
	victim_seq bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	person_id bigint,
	corporate_id bigint,
	case_info_number varchar(60),
	relationship_code varchar(12) NOT NULL,
	comment_text varchar(2000),
	caseload_type varchar(12),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	notification_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_victims.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_victims.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_victims.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_victims.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_victims.notification_flag IS E'record of requested notifications';

CREATE TABLE offender_visits (
	offender_visit_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	comment_text varchar(240),
	raised_incident_type varchar(12),
	raised_incident_number bigint,
	visit_date timestamp NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp NOT NULL,
	event_outcome varchar(12),
	visit_type varchar(12) NOT NULL,
	visit_status varchar(12) NOT NULL,
	outcome_reason_code varchar(12),
	visit_internal_location_id bigint,
	agency_visit_slot_id bigint,
	agy_loc_id varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	record_user_id varchar(30) NOT NULL DEFAULT 'USER',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_visits IS E'This table will store all the visit orders for an offender.';
COMMENT ON COLUMN offender_visits.comment_text IS E'Free text entry to stores comments against a Visit Order.';
COMMENT ON COLUMN offender_visits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_visits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_visits.end_time IS E'The end Time of the visit';
COMMENT ON COLUMN offender_visits.event_outcome IS E'The outcome of the visit event.  REference Codes (VIS_COMPLETE)';
COMMENT ON COLUMN offender_visits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_visits.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_visits.offender_book_id IS E'A unique ID for each offender booking.';
COMMENT ON COLUMN offender_visits.offender_visit_id IS E'A unique ID for each Visit Order.';
COMMENT ON COLUMN offender_visits.outcome_reason_code IS E'The reason of the event outcome.  Reference Codes(MOVE_CANC_RS)';
COMMENT ON COLUMN offender_visits.raised_incident_number IS E'The reference number of the raised incident';
COMMENT ON COLUMN offender_visits.raised_incident_type IS E'Reference Code(INC_TYPE)';
COMMENT ON COLUMN offender_visits.start_time IS E'The start time of the visit';
COMMENT ON COLUMN offender_visits.visit_date IS E'The date of the visit';
COMMENT ON COLUMN offender_visits.visit_status IS E'The status of visit arrangements.  Reference Codes (VIS_STS)';
COMMENT ON COLUMN offender_visits.visit_type IS E'The visit type.  Reference Codes(VISIT_TYPE)';

CREATE TABLE offender_visit_visitors (
	offender_visit_id bigint NOT NULL,
	person_id bigint,
	group_leader_flag varchar(1) NOT NULL DEFAULT 'N',
	offender_visit_visitor_id bigint NOT NULL,
	assisted_visit_flag varchar(1) NOT NULL DEFAULT 'N',
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	event_outcome varchar(12),
	outcome_reason_code varchar(12),
	offender_book_id bigint,
	event_id bigint,
	event_status varchar(12) DEFAULT 'SCH',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_visit_visitors IS E'The visitors details of offender visits';
COMMENT ON COLUMN offender_visit_visitors.assisted_visit_flag IS E'?If assisted visited applied';
COMMENT ON COLUMN offender_visit_visitors.comment_text IS E'The comment of the visitor';
COMMENT ON COLUMN offender_visit_visitors.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_visit_visitors.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_visit_visitors.event_id IS E'The Offender event ID';
COMMENT ON COLUMN offender_visit_visitors.event_outcome IS E'The event out come.  Reference Code(OUTCOMES)';
COMMENT ON COLUMN offender_visit_visitors.event_status IS E'The status of the event.  Reference Code(EVENT_STS)';
COMMENT ON COLUMN offender_visit_visitors.group_leader_flag IS E'?If the person the group leader';
COMMENT ON COLUMN offender_visit_visitors.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_visit_visitors.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_visit_visitors.offender_book_id IS E'The offender Book ID';
COMMENT ON COLUMN offender_visit_visitors.offender_visit_id IS E'The visit ID';
COMMENT ON COLUMN offender_visit_visitors.offender_visit_visitor_id IS E'The visit Visitor ID';
COMMENT ON COLUMN offender_visit_visitors.outcome_reason_code IS E'The reaon of the outcome';
COMMENT ON COLUMN offender_visit_visitors.person_id IS E'The ID of the person';

CREATE TABLE offender_vital_signs (
	vital_sign_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	medication_seq integer,
	measurement_datetime timestamp NOT NULL,
	temperature decimal(4,1),
	blood_pr_sys smallint,
	blood_pr_dia smallint,
	respiraton smallint,
	pulse smallint,
	bp_position varchar(12),
	pain_code varchar(12),
	weight_lbs integer,
	weight_kg integer,
	off_mar_pass_id varchar(12),
	vs_notes varchar(2000),
	medical_record_seq integer,
	temp_location varchar(12),
	pulse_location varchar(12),
	pain smallint,
	pain_location varchar(12),
	height_ft integer,
	height_in integer,
	height_cms integer,
	wound_size integer,
	mass_size integer,
	pulse_ox integer,
	peak_flow integer,
	left_right varchar(1),
	fluid_in_ml integer,
	fluid_in_floz integer,
	fluid_out_ml integer,
	fluid_out_floz integer,
	offender_book_id bigint,
	intake_screening_seq integer,
	seal_flag varchar(1),
	error_user_id varchar(32),
	error_datetime timestamp,
	peak_flow_1 integer,
	peak_flow_2 integer,
	peak_flow_3 integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	error varchar(1) NOT NULL DEFAULT 'N'
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_vital_signs.error IS E'Electronic Health Record Error Flag (Y error, N otherwise)';
COMMENT ON COLUMN offender_vital_signs.error_datetime IS E'Date and Time(includes seconds) when the record was marked as EHR error record';
COMMENT ON COLUMN offender_vital_signs.error_user_id IS E'User who marked the record as EHR error record';

CREATE TABLE offender_works (
	offender_work_id bigint NOT NULL,
	work_assignment_id bigint NOT NULL,
	trust_caseload_id varchar(6) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	work_code varchar(6) NOT NULL,
	pay_start_date timestamp NOT NULL,
	pay_end_date timestamp NOT NULL,
	pay_range_code varchar(12) NOT NULL,
	unit_code varchar(12) NOT NULL,
	compensation_code varchar(12) NOT NULL,
	performance_code varchar(12) NOT NULL,
	generated_flag varchar(1) NOT NULL DEFAULT 'Y',
	reject_flag varchar(1) NOT NULL DEFAULT 'N',
	processed_flag varchar(1) NOT NULL DEFAULT 'N',
	number_of_units decimal(9,2) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	clock_in_datetime timestamp,
	clock_out_datetime timestamp,
	sch_performance_code varchar(12),
	sch_compensation_code varchar(12),
	sch_number_of_units decimal(9,2),
	payroll_batch_id bigint,
	work_rate decimal(11,2),
	payroll_amount decimal(11,2),
	txn_id bigint,
	comment_text varchar(240),
	txn_entry_seq integer DEFAULT 1,
	reject_reason_text varchar(240),
	offender_book_id bigint NOT NULL,
	sch_start_time timestamp,
	sch_end_time timestamp,
	work_type varchar(12) NOT NULL,
	confirm_flag varchar(1),
	summary_offender_work_id bigint,
	last_name varchar(30),
	first_name varchar(30),
	posted_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE offender_works IS E'Created from Entity OFFENDER WORK DETAIL by FOUAD on 08-JUN-94- Retrofitted';
COMMENT ON COLUMN offender_works.caseload_id IS E'Caseload';
COMMENT ON COLUMN offender_works.clock_in_datetime IS E'Actual Work Start Time';
COMMENT ON COLUMN offender_works.clock_out_datetime IS E'Actual Work Start Time';
COMMENT ON COLUMN offender_works.comment_text IS E'Comment Text';
COMMENT ON COLUMN offender_works.compensation_code IS E'Reference Code ( COMPENSATION )';
COMMENT ON COLUMN offender_works.confirm_flag IS E'Processed ?';
COMMENT ON COLUMN offender_works.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_works.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_works.generated_flag IS E'Generated ?';
COMMENT ON COLUMN offender_works.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_works.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offender_works.number_of_units IS E'Number Of Units';
COMMENT ON COLUMN offender_works.offender_book_id IS E'Booking ID';
COMMENT ON COLUMN offender_works.offender_id IS E'Offender ID';
COMMENT ON COLUMN offender_works.offender_work_id IS E'Offender Work ID';
COMMENT ON COLUMN offender_works.pay_end_date IS E'Payroll End Date';
COMMENT ON COLUMN offender_works.pay_range_code IS E'Reference Code ( PAY_RANGE )';
COMMENT ON COLUMN offender_works.pay_start_date IS E'Payroll Start Date';
COMMENT ON COLUMN offender_works.payroll_amount IS E'Payroll Amount';
COMMENT ON COLUMN offender_works.payroll_batch_id IS E'Payroll Batch ID';
COMMENT ON COLUMN offender_works.performance_code IS E'Reference Code ( PERFORMANCE )';
COMMENT ON COLUMN offender_works.processed_flag IS E'Processed ?';
COMMENT ON COLUMN offender_works.reject_flag IS E'Rejected';
COMMENT ON COLUMN offender_works.reject_reason_text IS E'Reject Reason Text';
COMMENT ON COLUMN offender_works.sch_compensation_code IS E'Reference Code ( COMPENSATION )';
COMMENT ON COLUMN offender_works.sch_number_of_units IS E'Schedule number of units';
COMMENT ON COLUMN offender_works.sch_performance_code IS E'Reference Code ( PERFORMANCE )';
COMMENT ON COLUMN offender_works.summary_offender_work_id IS E'Offender Work ID';
COMMENT ON COLUMN offender_works.trust_caseload_id IS E'Caseload';
COMMENT ON COLUMN offender_works.txn_entry_seq IS E'Transaction Entry Sequence';
COMMENT ON COLUMN offender_works.txn_id IS E'Transaction ID';
COMMENT ON COLUMN offender_works.unit_code IS E'Reference Code ( UNIT )';
COMMENT ON COLUMN offender_works.work_assignment_id IS E'Work Assignment ID';
COMMENT ON COLUMN offender_works.work_code IS E'Work Code';
COMMENT ON COLUMN offender_works.work_rate IS E'Work Rate';
COMMENT ON COLUMN offender_works.work_type IS E'Reference Code ( WORK_TYPE )';

CREATE TABLE offender_work_assignments (
	offass_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	component varchar(12) NOT NULL,
	status varchar(12),
	offender_book_id bigint,
	request_seq smallint,
	role varchar(12),
	sentence_seq integer,
	offender_book_id_request bigint,
	charge_seq bigint,
	from_date timestamp,
	position varchar(12),
	sac_staff_id integer,
	cal_agy_loc_id varchar(6),
	offass_comment varchar(240),
	creation_date timestamp,
	creation_user varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN offender_work_assignments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offender_work_assignments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offender_work_assignments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offender_work_assignments.modify_user_id IS E'The user who modifies the record';

CREATE TABLE offices (
	office_code varchar(6) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	office_name varchar(40) NOT NULL,
	bail_office_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE offices IS E'- Retrofitted';
COMMENT ON COLUMN offices.agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN offices.bail_office_flag IS E' - Column already exists';
COMMENT ON COLUMN offices.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN offices.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN offices.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN offices.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN offices.office_code IS E' - Column already exists';
COMMENT ON COLUMN offices.office_name IS E' - Column already exists';

CREATE TABLE off_assmnt_assmnt_statuses (
	off_assmnt_assmnt_status_id bigint NOT NULL,
	off_assmnt_booklet_id bigint NOT NULL,
	assessment_id bigint NOT NULL,
	status varchar(10),
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE off_assmnt_assmnt_statuses IS E'The table stores Assignment Booklet scale Assignments.';
COMMENT ON COLUMN off_assmnt_assmnt_statuses.off_assmnt_assmnt_status_id IS E'Primary key field of the table';
COMMENT ON COLUMN off_assmnt_assmnt_statuses.off_assmnt_booklet_id IS E'This field contain the Associated Booklet id';

CREATE TABLE off_case_note_recipients (
	case_note_id bigint NOT NULL,
	team_id bigint NOT NULL,
	staff_id bigint,
	off_case_note_recipient_id bigint NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
) ;
COMMENT ON TABLE off_case_note_recipients IS E'The recipients of the case notes';
COMMENT ON COLUMN off_case_note_recipients.case_note_id IS E'The PK of the case note';
COMMENT ON COLUMN off_case_note_recipients.comment_text IS E'The general comment';
COMMENT ON COLUMN off_case_note_recipients.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN off_case_note_recipients.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN off_case_note_recipients.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN off_case_note_recipients.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN off_case_note_recipients.off_case_note_recipient_id IS E'The PK of the record';
COMMENT ON COLUMN off_case_note_recipients.staff_id IS E'The PK of a staff';
COMMENT ON COLUMN off_case_note_recipients.team_id IS E'The PK of a team';

CREATE TABLE off_observation_periods (
	offender_book_id bigint NOT NULL,
	obs_period_id bigint NOT NULL,
	observation_type varchar(12) NOT NULL,
	start_date timestamp NOT NULL,
	end_reason_code varchar(12),
	end_date timestamp,
	status_code varchar(12),
	frequency bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE off_obs_add_check_details (
	offender_book_id bigint NOT NULL,
	obs_period_id bigint NOT NULL,
	check_id bigint NOT NULL,
	detail_type varchar(12) NOT NULL,
	detail varchar(1000),
	detail_date timestamp,
	reported_user varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	off_obs_profile_code_id bigint
)  TABLESPACE TAG_DATA;

CREATE TABLE off_obs_add_details (
	observation_type varchar(12) NOT NULL,
	profile_type varchar(12) NOT NULL,
	description varchar(40),
	format_type varchar(12),
	list_seq bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE off_obs_characteristics (
	observation_type varchar(12) NOT NULL,
	characteristics_code varchar(12) NOT NULL,
	frequency bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE off_obs_period_checks (
	offender_book_id bigint NOT NULL,
	obs_period_id bigint NOT NULL,
	check_id bigint NOT NULL,
	check_date timestamp,
	schedule_date timestamp,
	characteristics_code varchar(12),
	overdue_flag varchar(1),
	user_id varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE off_obs_prd_characteristics (
	offender_book_id bigint NOT NULL,
	obs_period_id bigint NOT NULL,
	observation_type varchar(12) NOT NULL,
	characteristics_code varchar(12) NOT NULL,
	start_date timestamp NOT NULL,
	end_reason_code varchar(12),
	end_date timestamp,
	status_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	obs_prd_char_id bigint NOT NULL
)  TABLESPACE TAG_DATA;

CREATE TABLE off_obs_profile_codes (
	off_obs_profile_code_id bigint NOT NULL,
	profile_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE off_obs_zone_details (
	agy_loc_id varchar(10) NOT NULL,
	zone_code varchar(12) NOT NULL,
	internal_location_id bigint NOT NULL,
	location_code varchar(12) NOT NULL,
	sensor_id varchar(100),
	list_seq bigint NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE off_victim_notifications_hty (
	notification_hty_id bigint NOT NULL,
	trg_event_id bigint NOT NULL,
	event_date timestamp NOT NULL,
	offender_book_id bigint NOT NULL,
	notification_code varchar(12) NOT NULL,
	associated_party_id bigint,
	off_name varchar(92),
	party_id varchar(10),
	party_type varchar(12),
	relationship_code varchar(12),
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1),
	notif_recipient_type varchar(12) NOT NULL,
	notif_recipient_id varchar(10) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE oic_hearings (
	oic_hearing_id bigint NOT NULL,
	oic_hearing_type varchar(12),
	oic_incident_id bigint NOT NULL,
	schedule_date timestamp,
	schedule_time timestamp,
	hearing_date timestamp,
	hearing_time timestamp,
	hearing_staff_id integer,
	visit_justice_text varchar(40),
	comment_text varchar(240),
	tape_number varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	internal_location_id bigint,
	representative_text varchar(240),
	event_id bigint,
	event_status varchar(12) DEFAULT 'SCH',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE oic_hearings IS E'Information pertaining to the hearing for an OIC.';
COMMENT ON COLUMN oic_hearings.comment_text IS E'Comment of the OIC Hearing';
COMMENT ON COLUMN oic_hearings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_hearings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oic_hearings.hearing_date IS E'Hearing Date.';
COMMENT ON COLUMN oic_hearings.hearing_staff_id IS E'Hearing Staff ID.';
COMMENT ON COLUMN oic_hearings.hearing_time IS E'Hearing time.';
COMMENT ON COLUMN oic_hearings.internal_location_id IS E'FK to agency internal locations.';
COMMENT ON COLUMN oic_hearings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_hearings.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oic_hearings.oic_hearing_id IS E'The Hearing ID of OIC Hearing';
COMMENT ON COLUMN oic_hearings.oic_hearing_type IS E'Reference Code [ OIC_HEAR]';
COMMENT ON COLUMN oic_hearings.oic_incident_id IS E'FK to agency incident parties';
COMMENT ON COLUMN oic_hearings.representative_text IS E'other represnetative text of the offender';
COMMENT ON COLUMN oic_hearings.schedule_date IS E'The date scheduled for the OIC hearing.';
COMMENT ON COLUMN oic_hearings.schedule_time IS E'Schedule Time for hearing.';
COMMENT ON COLUMN oic_hearings.visit_justice_text IS E'Visiting Justice hearing case - if applicable.';

CREATE TABLE oic_hearing_comments (
	oic_hearing_id bigint NOT NULL,
	hearing_comment_seq integer NOT NULL DEFAULT 1,
	comment_text varchar(4000) NOT NULL,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE oic_hearing_comments IS E'The comment of an OIC Hearing';
COMMENT ON COLUMN oic_hearing_comments.comment_text IS E'The user who creates the record';
COMMENT ON COLUMN oic_hearing_comments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_hearing_comments.create_user_id IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_hearing_comments.hearing_comment_seq IS E'The comment seq as part of the PK';
COMMENT ON COLUMN oic_hearing_comments.modify_datetime IS E'The comment';
COMMENT ON COLUMN oic_hearing_comments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oic_hearing_comments.oic_hearing_id IS E'FK to OIC Hearings';

CREATE TABLE oic_hearing_notices (
	oic_hearing_id bigint NOT NULL,
	oic_notice_seq integer NOT NULL,
	delivery_date timestamp,
	delivery_time timestamp,
	delivery_staff_id integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	comment_text varchar(240),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN oic_hearing_notices.comment_text IS E'The comment text';
COMMENT ON COLUMN oic_hearing_notices.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_hearing_notices.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oic_hearing_notices.delivery_date IS E'The date of delivery';
COMMENT ON COLUMN oic_hearing_notices.delivery_staff_id IS E'FK to Staff_Members. The staff who delivers the notices';
COMMENT ON COLUMN oic_hearing_notices.delivery_time IS E'The time of delivery';
COMMENT ON COLUMN oic_hearing_notices.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_hearing_notices.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oic_hearing_notices.oic_hearing_id IS E'FK to OIC Hearings';
COMMENT ON COLUMN oic_hearing_notices.oic_notice_seq IS E'The notice seq as part of the PK';

CREATE TABLE oic_hearing_results (
	oic_hearing_id bigint NOT NULL,
	result_seq integer NOT NULL,
	agency_incident_id bigint NOT NULL,
	charge_seq integer NOT NULL,
	plea_finding_code varchar(12) NOT NULL,
	finding_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	oic_offence_id bigint NOT NULL,
	seal_flag varchar(1),
	oic_result_offence_id bigint NOT NULL
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE oic_hearing_results IS E'The results recorded during the OIC hearing.';
COMMENT ON COLUMN oic_hearing_results.agency_incident_id IS E'System generated seqential log number for the incident.';
COMMENT ON COLUMN oic_hearing_results.charge_seq IS E'Sequential number for charge.';
COMMENT ON COLUMN oic_hearing_results.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_hearing_results.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oic_hearing_results.finding_code IS E'Reference Code ( FINDING )';
COMMENT ON COLUMN oic_hearing_results.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_hearing_results.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oic_hearing_results.oic_hearing_id IS E'System generated primary key for hearing.';
COMMENT ON COLUMN oic_hearing_results.oic_result_offence_id IS E'Resulting charge id.';
COMMENT ON COLUMN oic_hearing_results.plea_finding_code IS E'Reference Code ( FINDING ). The offender"s plea on this charge.';
COMMENT ON COLUMN oic_hearing_results.result_seq IS E'Sequential number for hearing results.';

CREATE TABLE oic_hearing_reviews (
	oic_hearing_id bigint NOT NULL,
	review_seq integer NOT NULL,
	review_date timestamp NOT NULL,
	review_time timestamp NOT NULL,
	finding_code varchar(12) NOT NULL,
	govener_staff_id integer NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE oic_hearing_reviews IS E'- Retrofitted';
COMMENT ON COLUMN oic_hearing_reviews.comment_text IS E'Review Comment - Column already exists';
COMMENT ON COLUMN oic_hearing_reviews.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_hearing_reviews.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oic_hearing_reviews.finding_code IS E'Reference Code ( FINDING ) - Column already exists';
COMMENT ON COLUMN oic_hearing_reviews.govener_staff_id IS E'Govenor - Column already exists';
COMMENT ON COLUMN oic_hearing_reviews.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_hearing_reviews.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oic_hearing_reviews.oic_hearing_id IS E'The Hearing ID of OIC Hearing - Column already exists';
COMMENT ON COLUMN oic_hearing_reviews.review_date IS E'Review date - Column already exists';
COMMENT ON COLUMN oic_hearing_reviews.review_seq IS E'Sequence number on sanction reviews forming part of primary key. - Column already exists';
COMMENT ON COLUMN oic_hearing_reviews.review_time IS E'Review Time - Column already exists';

CREATE TABLE oic_offences (
	oic_offence_code varchar(12) NOT NULL,
	description varchar(240) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	oic_offence_category varchar(12),
	oic_offence_type varchar(12),
	max_penalty_months smallint,
	max_penalty_days smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	oic_offence_id bigint NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE oic_offences IS E'Offence in Custody Offences.';
COMMENT ON COLUMN oic_offences.active_flag IS E'An active code will display on list of values. If
 the active flag is set to "N", then the Expiry Date
 field will be populated with the system date.
 If the flag is subsequently set to "Y" the Expiry
 Date field will be cleared.';
COMMENT ON COLUMN oic_offences.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_offences.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oic_offences.description IS E'Description associated with offence code.';
COMMENT ON COLUMN oic_offences.expiry_date IS E'Deactivation date for code.';
COMMENT ON COLUMN oic_offences.list_seq IS E'Ordering for list of values.';
COMMENT ON COLUMN oic_offences.max_penalty_days IS E'Max penalty in days';
COMMENT ON COLUMN oic_offences.max_penalty_months IS E'Max penalty in months';
COMMENT ON COLUMN oic_offences.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_offences.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oic_offences.oic_offence_category IS E'Reference Code ( OIC_OFN_CAT ). The category or grouping for OIC offences.';
COMMENT ON COLUMN oic_offences.oic_offence_code IS E'The code associated with the OIC charge.';
COMMENT ON COLUMN oic_offences.oic_offence_type IS E'Reference Code (OIC_OFN_TYPE) The type of offence (FULL, PD)';
COMMENT ON COLUMN oic_offences.update_allowed_flag IS E'Protected flag for code.';

CREATE TABLE oic_offence_indicators (
	oic_offence_indicator_id bigint NOT NULL,
	indicator_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	oic_offence_id bigint NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN oic_offence_indicators.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_offence_indicators.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oic_offence_indicators.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_offence_indicators.modify_user_id IS E'The user who modifies the record';

CREATE TABLE oic_sanction_limits (
	oic_hearing_type varchar(12) NOT NULL,
	oic_sanction_code varchar(12) NOT NULL,
	description varchar(40),
	max_month smallint,
	max_days smallint,
	compensation_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE oic_sanction_limits IS E'The sanction limits for different OIC hearing types';
COMMENT ON COLUMN oic_sanction_limits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oic_sanction_limits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oic_sanction_limits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oic_sanction_limits.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oic_sanction_limits.oic_hearing_type IS E'Reference Code ( OIC_HEAR )';
COMMENT ON COLUMN oic_sanction_limits.oic_sanction_code IS E'Reference Code ( OIC_SANCT )';

CREATE TABLE oirrndsl_data_tmp (
	session_id bigint NOT NULL,
	offender_id_display varchar(10) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE omitted_sanction_notices_tmp (
	offender_id bigint NOT NULL,
	payment_plan_id bigint,
	sac_staff_id integer,
	sanction_notice_code varchar(12),
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	payment_plan_seq integer,
	case_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE omitted_sanction_notices_tmp IS E'TABLE TO STORE RECORDS WHICH PROBATION OFFICER DOESN"T WANT SANTION NOTICES TO BE PRINTED';

CREATE TABLE oms_deleted_rows (
	table_name varchar(40),
	xid bytea,
	scn bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE oms_incident_securities (
	role_id bigint NOT NULL,
	access_type varchar(25) NOT NULL,
	access_level varchar(14) NOT NULL,
	view_in_lov varchar(1),
	view_record varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE oms_modules (
	module_name varchar(20) NOT NULL,
	description varchar(100),
	module_type varchar(10),
	print_format_code varchar(12),
	preview_flag varchar(1),
	default_copy smallint,
	appln_code varchar(40),
	help_directory varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	output_type varchar(12)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN oms_modules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oms_modules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oms_modules.description IS E' - Column already exists';
COMMENT ON COLUMN oms_modules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oms_modules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oms_modules.module_name IS E' - Column already exists';
COMMENT ON COLUMN oms_modules.module_type IS E'Reference Code ( Module Type )';
COMMENT ON COLUMN oms_modules.output_type IS E'Output type for the report.';
COMMENT ON COLUMN oms_modules.preview_flag IS E'Preview';
COMMENT ON COLUMN oms_modules.print_format_code IS E'Reference Code ( PRINT_FORMAT )';

CREATE TABLE oms_modules_base_help_url (
	id bigint,
	base_help_pdf_url varchar(2000),
	base_help_video_url varchar(2000),
	base_help_html_url varchar(2000),
	status varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE oms_modules_help (
	module_name varchar(200) NOT NULL,
	help_type varchar(20),
	help_url varchar(2000),
	help_desc varchar(2000)
)  TABLESPACE TAG_DATA;

CREATE TABLE oms_modules_rem_space (
	module_name varchar(20) NOT NULL,
	description varchar(100),
	module_type varchar(10),
	print_format_code varchar(12),
	preview_flag varchar(1),
	default_copy smallint,
	appln_code varchar(40),
	help_directory varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE oms_modules_space (
	module_name varchar(20) NOT NULL,
	description varchar(100),
	module_type varchar(10),
	print_format_code varchar(12),
	preview_flag varchar(1),
	default_copy smallint,
	appln_code varchar(40),
	help_directory varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE oms_module_parameters (
	module_name varchar(20) NOT NULL,
	parameter_seq integer NOT NULL DEFAULT 99,
	parameter_code varchar(20) DEFAULT 'N',
	parameter_name varchar(40) NOT NULL,
	parameter_type varchar(12) NOT NULL,
	parameter_domain varchar(12),
	optional_flag varchar(1) NOT NULL,
	comment_text varchar(240) NOT NULL,
	multivalue_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	parameter_lov_select varchar(2000),
	parameter_lov_title varchar(30),
	parameter_lov_group varchar(2000),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN oms_module_parameters.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oms_module_parameters.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oms_module_parameters.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oms_module_parameters.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oms_module_parameters.module_name IS E' - Column already exists';
COMMENT ON COLUMN oms_module_parameters.optional_flag IS E'Option';
COMMENT ON COLUMN oms_module_parameters.parameter_code IS E'Code';
COMMENT ON COLUMN oms_module_parameters.parameter_domain IS E'The Domain';
COMMENT ON COLUMN oms_module_parameters.parameter_lov_select IS E'The select statement  is retrive LOV columns';
COMMENT ON COLUMN oms_module_parameters.parameter_lov_title IS E'The title is for dynamic LOV';
COMMENT ON COLUMN oms_module_parameters.parameter_type IS E'Reference Code ( VALUE_TYPE) such as Integer, Code, Date ..';

CREATE TABLE oms_requests (
	request_id bigint NOT NULL,
	module_name varchar(20) NOT NULL,
	number_of_copy integer NOT NULL DEFAULT 99,
	request_status varchar(12) NOT NULL,
	printer_id varchar(12),
	display_flag varchar(1) DEFAULT 'Y',
	request_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	request_user_id varchar(32) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN oms_requests.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oms_requests.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oms_requests.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oms_requests.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oms_requests.module_name IS E' - Column already exists';
COMMENT ON COLUMN oms_requests.printer_id IS E'Maintains printer idenfication ie. hp4, hp3p,qms..';
COMMENT ON COLUMN oms_requests.request_date IS E'Request Date.';
COMMENT ON COLUMN oms_requests.request_status IS E'Reference Code ( REQUEST_STS )';

CREATE TABLE oms_request_parameters (
	request_id bigint NOT NULL,
	param_seq integer NOT NULL DEFAULT 99,
	parameter_text varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN oms_request_parameters.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oms_request_parameters.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oms_request_parameters.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oms_request_parameters.modify_user_id IS E'The user who modifies the record';

CREATE TABLE oms_roles (
	role_id bigint NOT NULL,
	role_name varchar(30) NOT NULL,
	role_seq smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	role_code varchar(30) NOT NULL,
	parent_role_code varchar(30),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE oms_roles IS E'The TAG application roles ';
COMMENT ON COLUMN oms_roles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN oms_roles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN oms_roles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN oms_roles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN oms_roles.parent_role_code IS E'The parent of the system role (for grouping';
COMMENT ON COLUMN oms_roles.role_code IS E'The system role (as Oracle database role)';
COMMENT ON COLUMN oms_roles.role_id IS E'PK Of the role';
COMMENT ON COLUMN oms_roles.role_name IS E'The description of the role';
COMMENT ON COLUMN oms_roles.role_seq IS E'The listing order';

CREATE TABLE oodosale_reserve_txns (
	session_id bigint,
	caseload_id varchar(6),
	stock_loc_id varchar(6),
	stock_item_id bigint,
	indigent_pkg_item_id bigint,
	sales_item_seq integer,
	quantity bigint,
	avg_item_cost numeric(19,6),
	user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE orders (
	order_id bigint NOT NULL,
	offender_book_id bigint NOT NULL,
	case_id bigint,
	court_date timestamp NOT NULL,
	order_type varchar(12) NOT NULL,
	issuing_agy_loc_id varchar(6) NOT NULL,
	court_info_id varchar(60),
	order_status varchar(12),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	due_date timestamp,
	court_seriousness_level varchar(12),
	order_seriousness_level varchar(12),
	request_date timestamp,
	staff_work_id integer,
	event_id bigint,
	complete_date timestamp,
	complete_staff_id integer,
	intervention_tier_code varchar(12),
	non_report_flag varchar(1),
	cps_received_date timestamp,
	comment_text varchar(2000),
	issue_date timestamp,
	message_id varchar(64),
	workflow_id numeric(32),
	offender_proceeding_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE orders IS E'The Legal Offender_legal_orders, including court reports such as Pre-Sentence reports';
COMMENT ON COLUMN orders.case_id IS E'FK to the Offender Case';
COMMENT ON COLUMN orders.comment_text IS E'The general comment text of the order';
COMMENT ON COLUMN orders.complete_date IS E'The date of completion';
COMMENT ON COLUMN orders.complete_staff_id IS E'The Intervention tier';
COMMENT ON COLUMN orders.court_date IS E' Latest scheduled date of the court appearance.';
COMMENT ON COLUMN orders.court_info_id IS E' A number assigned to the order by the court.';
COMMENT ON COLUMN orders.court_seriousness_level IS E'Reference Code (ORD_SERIOUS) The seriousness level from court''s view';
COMMENT ON COLUMN orders.cps_received_date IS E'The date CPS is received';
COMMENT ON COLUMN orders.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN orders.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN orders.due_date IS E'The due date of the order (Report)';
COMMENT ON COLUMN orders.event_id IS E'FK to Court Events';
COMMENT ON COLUMN orders.intervention_tier_code IS E'The level of intervention Reference Code (INTV_TIER)';
COMMENT ON COLUMN orders.issuing_agy_loc_id IS E'Court issuing the legal order.';
COMMENT ON COLUMN orders.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN orders.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN orders.non_report_flag IS E'If the order an non-report.';
COMMENT ON COLUMN orders.offender_book_id IS E'System generated primary key for offender booking.';
COMMENT ON COLUMN orders.order_id IS E'A system generated identifer for an order.';
COMMENT ON COLUMN orders.order_seriousness_level IS E'Reference Code (ORD_SERIOUS) The seriousness level from the order''s view';
COMMENT ON COLUMN orders.order_status IS E'Reference Code ( ORDER_STS ) THE CURRENT ORDER STATUS - ACTIVE, INACTIVE,EXPIRED..';
COMMENT ON COLUMN orders.order_type IS E' The Reference Code ( ORDER_TYPE )type of legal order - ie. Remand, Detainer,Sentence ...';
COMMENT ON COLUMN orders.request_date IS E'The request date (Reports)';
COMMENT ON COLUMN orders.staff_work_id IS E'FK to Staff Work';

CREATE TABLE orders_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	order_id bigint,
	offender_book_id bigint,
	case_id bigint,
	court_date timestamp,
	order_type varchar(12),
	issuing_agy_loc_id varchar(6),
	court_info_id varchar(60),
	order_status varchar(12),
	create_user_id varchar(32),
	modify_user_id varchar(32),
	due_date timestamp,
	court_seriousness_level varchar(12),
	order_seriousness_level varchar(12),
	request_date timestamp,
	staff_work_id integer,
	event_id bigint,
	complete_date timestamp,
	complete_staff_id integer,
	intervention_tier_code varchar(12),
	non_report_flag varchar(1),
	cps_received_date timestamp,
	comment_text varchar(2000),
	issue_date timestamp,
	message_id varchar(64),
	workflow_id numeric(32),
	offender_proceeding_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE order_block_fields (
	order_id bigint NOT NULL,
	order_blocks varchar(40) NOT NULL,
	order_fields varchar(40) NOT NULL,
	field_required varchar(1) NOT NULL,
	modify_allowed varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN order_block_fields.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN order_block_fields.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN order_block_fields.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN order_block_fields.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN order_block_fields.order_blocks IS E'Short Description';
COMMENT ON COLUMN order_block_fields.order_fields IS E'Short Description';

CREATE TABLE order_case_statuses (
	order_type varchar(12) NOT NULL,
	case_status_code varchar(12) NOT NULL,
	sustained_offence_flag varchar(1) NOT NULL,
	resultant_status_code varchar(12),
	default_flag varchar(1),
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN order_case_statuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN order_case_statuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN order_case_statuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN order_case_statuses.modify_user_id IS E'The user who modifies the record';

CREATE TABLE order_info_requests (
	order_id bigint NOT NULL,
	staff_id bigint NOT NULL,
	request_datetime timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE order_info_requests IS E'The requests to courts for more information by either court works or report writers.   ';
COMMENT ON COLUMN order_info_requests.order_id IS E'FK to Orders';
COMMENT ON COLUMN order_info_requests.request_datetime IS E'The request date time';
COMMENT ON COLUMN order_info_requests.staff_id IS E'The staff who makes the request';

CREATE TABLE order_modules (
	order_id bigint NOT NULL,
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	order_screen varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN order_modules.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN order_modules.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN order_modules.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN order_modules.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN order_modules.order_code IS E'Standard Reference Code';
COMMENT ON COLUMN order_modules.order_screen IS E'Standard Reference Code';
COMMENT ON COLUMN order_modules.order_type IS E'Standard Reference Code';

CREATE TABLE order_module_blocks (
	order_id bigint NOT NULL,
	order_blocks varchar(40) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN order_module_blocks.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN order_module_blocks.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN order_module_blocks.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN order_module_blocks.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN order_module_blocks.order_blocks IS E'Short Description';

CREATE TABLE order_ppsl_cond_activities (
	order_proposal_condition_id bigint NOT NULL,
	condition_activity_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	order_ppsl_cond_activity_id bigint NOT NULL,
	program_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE order_ppsl_cond_activities IS E'The details of the condition activities. ';
COMMENT ON COLUMN order_ppsl_cond_activities.comment_text IS E'The comment text';
COMMENT ON COLUMN order_ppsl_cond_activities.condition_activity_code IS E'Reference Code(COND_ACT) ';
COMMENT ON COLUMN order_ppsl_cond_activities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN order_ppsl_cond_activities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN order_ppsl_cond_activities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN order_ppsl_cond_activities.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN order_ppsl_cond_activities.order_proposal_condition_id IS E'FK to order proposal conditions';

CREATE TABLE order_proposals (
	order_id bigint NOT NULL,
	order_proposal_code varchar(12) NOT NULL,
	sentence_calc_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	sentence_category varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE order_proposals IS E'The proposals of an order';
COMMENT ON COLUMN order_proposals.order_id IS E'FK to Orders';
COMMENT ON COLUMN order_proposals.order_proposal_code IS E'Reference Code(ORD_PROPOSAL)';
COMMENT ON COLUMN order_proposals.sentence_calc_type IS E'Reference Code(SENTENCE)';
COMMENT ON COLUMN order_proposals.sentence_category IS E'The sentence category.  Reference Codes(CATEGORY)';

CREATE TABLE order_proposal_conditions (
	order_proposal_condition_id bigint NOT NULL,
	order_id bigint NOT NULL,
	order_proposal_code varchar(12),
	comm_condition_type varchar(12) NOT NULL,
	comm_condition_code varchar(12) NOT NULL,
	length bigint,
	length_unit_code varchar(12),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	category_type varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE order_proposal_conditions IS E'The conditions of the an order proposal';
COMMENT ON COLUMN order_proposal_conditions.comm_condition_code IS E'The condition code';
COMMENT ON COLUMN order_proposal_conditions.comm_condition_type IS E'The condition type';
COMMENT ON COLUMN order_proposal_conditions.comment_text IS E'The general comment text';
COMMENT ON COLUMN order_proposal_conditions.length IS E'The length of the condition';
COMMENT ON COLUMN order_proposal_conditions.length_unit_code IS E'Reference Code(UNIT)';
COMMENT ON COLUMN order_proposal_conditions.order_id IS E'FK to Orders';
COMMENT ON COLUMN order_proposal_conditions.order_proposal_code IS E'Reference Code(ORD_PROPOSAL)';
COMMENT ON COLUMN order_proposal_conditions.order_proposal_condition_id IS E'The PK of the order proposal conditione';

CREATE TABLE order_purposes (
	order_id bigint NOT NULL,
	order_party_code varchar(12) NOT NULL,
	purpose_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE order_purposes IS E'The purposes of an order';
COMMENT ON COLUMN order_purposes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN order_purposes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN order_purposes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN order_purposes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN order_purposes.order_id IS E'FK to Orders';
COMMENT ON COLUMN order_purposes.order_party_code IS E'Reference Code (ORDER_PARTY)';
COMMENT ON COLUMN order_purposes.purpose_code IS E'Reference Code (ORDER_PUR)';

CREATE TABLE order_types (
	order_type varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	youth_order_flag varchar(1) NOT NULL DEFAULT 'Y',
	custody_flag varchar(1) NOT NULL DEFAULT 'Y',
	time_sensitive_flag varchar(1) NOT NULL DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	schedule_flag varchar(1) NOT NULL DEFAULT 'Y',
	charges_flag varchar(1) NOT NULL DEFAULT 'Y',
	severity_rank smallint,
	caseload_type varchar(12),
	no_of_hold_days integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	order_category varchar(12),
	custody_days smallint,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE order_types IS E'Order Types';
COMMENT ON COLUMN order_types.active_flag IS E' - Column already exists';
COMMENT ON COLUMN order_types.charges_flag IS E' - Column already exists';
COMMENT ON COLUMN order_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN order_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN order_types.custody_days IS E' Defines the number of days for which
the order type authorises custody';
COMMENT ON COLUMN order_types.custody_flag IS E' - Column already exists';
COMMENT ON COLUMN order_types.description IS E' - Column already exists';
COMMENT ON COLUMN order_types.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN order_types.list_seq IS E' - Column already exists';
COMMENT ON COLUMN order_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN order_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN order_types.order_category IS E'category of the order.  Reference Codes(ORD_CATEGORY)';
COMMENT ON COLUMN order_types.order_type IS E' - Column already exists';
COMMENT ON COLUMN order_types.schedule_flag IS E' - Column already exists';
COMMENT ON COLUMN order_types.severity_rank IS E' - Column already exists';
COMMENT ON COLUMN order_types.time_sensitive_flag IS E' - Column already exists';
COMMENT ON COLUMN order_types.update_allowed_flag IS E' - Column already exists';
COMMENT ON COLUMN order_types.youth_order_flag IS E' - Column already exists';

CREATE TABLE or_audit (
	action_type varchar(1),
	agy_loc_id varchar(6),
	offender_id_display varchar(10),
	booking_no varchar(14),
	booking_begin_date timestamp,
	first_name varchar(35),
	middle_name varchar(35),
	last_name varchar(35),
	birth_date timestamp,
	race_code varchar(12),
	sex_code varchar(12),
	release_date timestamp,
	rel_reason_code varchar(12),
	offender_id bigint,
	modified_date timestamp,
	offender_book_id bigint,
	release_time timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE other_privileges_levels (
	privilege_code varchar(12) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	iep_level varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	user_id varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN other_privileges_levels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN other_privileges_levels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN other_privileges_levels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN other_privileges_levels.modify_user_id IS E'The user who modifies the record';

CREATE TABLE out_jurisdiction_transfers (
	ojt_id bigint NOT NULL,
	offender_id bigint,
	off_last_name varchar(60) NOT NULL,
	off_first_name varchar(60) NOT NULL,
	off_sex varchar(12) NOT NULL,
	transfer_from varchar(12) NOT NULL,
	noticed_date timestamp NOT NULL,
	off_date_of_birth timestamp,
	transfer_date timestamp,
	transfer_priority varchar(12),
	off_ssn varchar(12),
	transfer_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN out_jurisdiction_transfers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN out_jurisdiction_transfers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN out_jurisdiction_transfers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN out_jurisdiction_transfers.modify_user_id IS E'The user who modifies the record';

CREATE TABLE parole_commission_sittings (
	parole_sitting_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	parole_commission_code varchar(12) NOT NULL,
	sitting_date timestamp NOT NULL,
	notes varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE parole_commission_sittings IS E'- Retrofitted';
COMMENT ON COLUMN parole_commission_sittings.agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN parole_commission_sittings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN parole_commission_sittings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN parole_commission_sittings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN parole_commission_sittings.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN parole_commission_sittings.notes IS E' - Column already exists';
COMMENT ON COLUMN parole_commission_sittings.parole_commission_code IS E'Reference Code ( PAROLE COMM )';
COMMENT ON COLUMN parole_commission_sittings.sitting_date IS E' - Column already exists';

CREATE TABLE parole_decisions (
	offender_book_id bigint NOT NULL,
	parole_location_seq integer NOT NULL,
	parole_decision_seq integer NOT NULL,
	decision_date timestamp NOT NULL,
	issuing_board_code varchar(12) NOT NULL,
	decision_code varchar(12) NOT NULL,
	result_date timestamp,
	all_remission_flag varchar(1) NOT NULL DEFAULT 'N',
	recredited_days smallint,
	document_flag varchar(1) NOT NULL DEFAULT 'N',
	phone_authorization_flag varchar(1) NOT NULL DEFAULT 'N',
	contact_name varchar(40),
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN parole_decisions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN parole_decisions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN parole_decisions.decision_code IS E'domain = "PAR_DECI_TYP"';
COMMENT ON COLUMN parole_decisions.issuing_board_code IS E'domain = "PAR_BRD_LOC"';
COMMENT ON COLUMN parole_decisions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN parole_decisions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE parole_decision_reasons (
	parole_decision_type varchar(12) NOT NULL,
	parole_dec_reason_code varchar(12) NOT NULL,
	description varchar(80),
	date_required_flag varchar(1) NOT NULL DEFAULT 'Y',
	action_date_label varchar(20),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer DEFAULT 99,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	parole_hearing_type varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE parole_decision_reasons IS E'Reason associated with the parole decision type. This column was called sub-type in version 3.0
 of OMS.';
COMMENT ON COLUMN parole_decision_reasons.action_date_label IS E'The Label of the action date in the Offender Parole Parole Decisions';
COMMENT ON COLUMN parole_decision_reasons.active_flag IS E'Flag on activity of code.';
COMMENT ON COLUMN parole_decision_reasons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN parole_decision_reasons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN parole_decision_reasons.date_required_flag IS E'Date associated with parole reason.';
COMMENT ON COLUMN parole_decision_reasons.description IS E' Description of parole decision reason.';
COMMENT ON COLUMN parole_decision_reasons.expiry_date IS E'Deactivation date for code.';
COMMENT ON COLUMN parole_decision_reasons.list_seq IS E'List of values sequencing.';
COMMENT ON COLUMN parole_decision_reasons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN parole_decision_reasons.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN parole_decision_reasons.parole_dec_reason_code IS E'REference Code (PRL_DEC_RSN)Reason code associated with parole decision type.';
COMMENT ON COLUMN parole_decision_reasons.parole_decision_type IS E' Reference COde (PRL_DEC_TYPE) Type of parole decision.';
COMMENT ON COLUMN parole_decision_reasons.update_allowed_flag IS E'Flag on protection of code.';

CREATE TABLE parole_decision_types (
	parole_hearing_type varchar(6) NOT NULL,
	parole_decision_type varchar(12) NOT NULL,
	description varchar(80),
	date_required_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'N',
	list_seq smallint,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	final_decision_flag varchar(1) DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE parole_decision_types IS E'- Retrofitted';
COMMENT ON COLUMN parole_decision_types.active_flag IS E' - Column already exists';
COMMENT ON COLUMN parole_decision_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN parole_decision_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN parole_decision_types.date_required_flag IS E' - Column already exists';
COMMENT ON COLUMN parole_decision_types.description IS E' - Column already exists';
COMMENT ON COLUMN parole_decision_types.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN parole_decision_types.list_seq IS E' - Column already exists';
COMMENT ON COLUMN parole_decision_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN parole_decision_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN parole_decision_types.parole_decision_type IS E' - Column already exists';
COMMENT ON COLUMN parole_decision_types.parole_hearing_type IS E'Reference Code ( PAROLE_HEAR )';
COMMENT ON COLUMN parole_decision_types.update_allowed_flag IS E' - Column already exists';

CREATE TABLE parole_hearing_waivers (
	offender_book_id bigint NOT NULL,
	parole_location_seq integer NOT NULL,
	parole_hearing_seq integer NOT NULL,
	waiver_code varchar(12) NOT NULL,
	signed_date timestamp,
	notified_date timestamp,
	staff_id bigint,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE parole_hearing_waivers IS E'This table is created for Ontario specific Parole module.';
COMMENT ON COLUMN parole_hearing_waivers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN parole_hearing_waivers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN parole_hearing_waivers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN parole_hearing_waivers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN parole_hearing_waivers.waiver_code IS E'domain = "PAR_WAIV_TYP"';

CREATE TABLE parole_sitting_attendances (
	parole_sitting_id bigint NOT NULL,
	person_id bigint NOT NULL,
	session_type varchar(12),
	attending_flag varchar(1) DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE parole_sitting_attendances IS E'Tracks attendance of parole commission members at sittings.';
COMMENT ON COLUMN parole_sitting_attendances.attending_flag IS E'Y/N flag on attendance at parole hearing.';
COMMENT ON COLUMN parole_sitting_attendances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN parole_sitting_attendances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN parole_sitting_attendances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN parole_sitting_attendances.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN parole_sitting_attendances.parole_sitting_id IS E'Identifier for a parole sitting.';
COMMENT ON COLUMN parole_sitting_attendances.person_id IS E'Identifier for a person.';
COMMENT ON COLUMN parole_sitting_attendances.session_type IS E'Reference Code ( SESSION ). Parol hearing session ie. Morning, Afternoon, All Day..';

CREATE TABLE payable_attendance_outcomes (
	payable_attendance_outcomes_id bigint NOT NULL,
	event_type varchar(12) NOT NULL,
	outcome_code varchar(12) NOT NULL,
	pay_flag varchar(1) DEFAULT 'N',
	authorised_absence_flag varchar(1) DEFAULT 'N',
	start_date timestamp NOT NULL,
	end_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE payee_account_balances (
	payee_balance_id bigint NOT NULL,
	payee_corporate_id bigint,
	payee_person_id bigint,
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	end_txn_id bigint,
	start_txn_id bigint,
	current_balance decimal(11,2) NOT NULL,
	account_code integer NOT NULL,
	caseload_id varchar(6) NOT NULL,
	memo_text varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN payee_account_balances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN payee_account_balances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN payee_account_balances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN payee_account_balances.modify_user_id IS E'The user who modifies the record';

CREATE TABLE payment_plan_transactions (
	payment_plan_id bigint NOT NULL,
	payment_plan_seq integer NOT NULL,
	payment_date timestamp NOT NULL,
	transaction_seq integer NOT NULL,
	transaction_date timestamp NOT NULL,
	transaction_amount decimal(11,2) NOT NULL,
	information_number varchar(32) NOT NULL,
	group_id smallint,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN payment_plan_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN payment_plan_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN payment_plan_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN payment_plan_transactions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE payroll_batches (
	payroll_batch_id bigint NOT NULL,
	caseload_id varchar(6),
	work_code varchar(6),
	rejected_flag varchar(1) DEFAULT 'N',
	offender_id bigint,
	end_date timestamp NOT NULL,
	processed_flag varchar(1) NOT NULL DEFAULT 'N',
	batch_description varchar(50),
	batch_generated_date timestamp,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	work_type varchar(12),
	txn_type varchar(6) NOT NULL,
	txn_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE payroll_batches IS E'Created from Entity PAYROLL BATCH by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN payroll_batches.batch_description IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.batch_generated_date IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.caseload_id IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN payroll_batches.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN payroll_batches.end_date IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN payroll_batches.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN payroll_batches.offender_id IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.payroll_batch_id IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.processed_flag IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.rejected_flag IS E' - Retrofitted';
COMMENT ON COLUMN payroll_batches.work_code IS E' - Retrofitted';

CREATE TABLE personal_identifications (
	staff_id integer NOT NULL,
	identification_number varchar(25) NOT NULL,
	identification_type varchar(12) NOT NULL,
	text_from varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN personal_identifications.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN personal_identifications.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN personal_identifications.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN personal_identifications.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN personal_identifications.staff_id IS E'System generated number associated with user account';

CREATE TABLE personnel_identifications (
	staff_id bigint NOT NULL,
	identification_type varchar(12) NOT NULL,
	identification_number varchar(32) NOT NULL,
	text_from varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN personnel_identifications.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN personnel_identifications.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN personnel_identifications.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN personnel_identifications.modify_user_id IS E'The user who modifies the record';

CREATE TABLE personnel_issued_cards (
	staff_id bigint NOT NULL,
	issued_caseload_id varchar(6) NOT NULL,
	issued_card_type varchar(12) NOT NULL,
	issued_number bigint NOT NULL,
	issued_date timestamp DEFAULT LOCALTIMESTAMP,
	expiry_date timestamp,
	status varchar(12) NOT NULL DEFAULT 'A',
	reason varchar(12),
	printed_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN personnel_issued_cards.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN personnel_issued_cards.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN personnel_issued_cards.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN personnel_issued_cards.modify_user_id IS E'The user who modifies the record';

CREATE TABLE persons (
	person_id bigint NOT NULL,
	last_name varchar(35) NOT NULL,
	first_name varchar(35) NOT NULL,
	middle_name varchar(35),
	birthdate timestamp,
	occupation_code varchar(12),
	criminal_history_text varchar(240),
	name_type varchar(12),
	alias_person_id bigint,
	root_person_id bigint,
	language_code varchar(12),
	comprehend_english_flag varchar(1),
	sex varchar(12),
	birth_place varchar(25),
	employer varchar(60),
	profile_code varchar(12),
	interpreter_required varchar(1),
	primary_language_code varchar(12),
	memo_text varchar(40),
	suspended_flag varchar(1),
	marital_status varchar(12),
	citizenship varchar(12),
	deceased_date timestamp,
	coroner_number varchar(32),
	attention varchar(40),
	care_of varchar(40),
	suspended_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	staff_flag varchar(1) DEFAULT 'N',
	remitter_flag varchar(1),
	last_name_soundex varchar(6),
	first_name_key varchar(35),
	middle_name_key varchar(35),
	last_name_key varchar(35),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE persons IS E'This entity store all kinds of persons, including
1. Person
2. Offender : person with active bookings
3. Staff       :  person with system user account
';
COMMENT ON COLUMN persons.alias_person_id IS E'FK to Persons';
COMMENT ON COLUMN persons.attention IS E'The name of the attendtion';
COMMENT ON COLUMN persons.birth_place IS E'Place where the offender was born.';
COMMENT ON COLUMN persons.birthdate IS E'The birthdate';
COMMENT ON COLUMN persons.care_of IS E'The name of the care of';
COMMENT ON COLUMN persons.citizenship IS E'Reference Code(COUNTRY)';
COMMENT ON COLUMN persons.comprehend_english_flag IS E'If the person can comprehed English';
COMMENT ON COLUMN persons.coroner_number IS E'Coroner reference number';
COMMENT ON COLUMN persons.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN persons.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN persons.criminal_history_text IS E'The criminal history';
COMMENT ON COLUMN persons.deceased_date IS E'The deceased date of the record';
COMMENT ON COLUMN persons.employer IS E'The name of the employer';
COMMENT ON COLUMN persons.first_name IS E'Indicates the first name fo the offender.';
COMMENT ON COLUMN persons.interpreter_required IS E'Interpreter required';
COMMENT ON COLUMN persons.language_code IS E'Reference Code (LANG)';
COMMENT ON COLUMN persons.last_name IS E'Last name of the offender';
COMMENT ON COLUMN persons.marital_status IS E'Reference Code(MARITAL_STAT)';
COMMENT ON COLUMN persons.memo_text IS E'General momo text';
COMMENT ON COLUMN persons.middle_name IS E'Indicates middle name of the offender.';
COMMENT ON COLUMN persons.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN persons.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN persons.name_type IS E'Reference Code ( NAME_TYPE ) : Name qualifier - Given Name, Maiden Name ..';
COMMENT ON COLUMN persons.occupation_code IS E'Reference Code(OCCUPATION)';
COMMENT ON COLUMN persons.person_id IS E'Primary Key of the Person';
COMMENT ON COLUMN persons.primary_language_code IS E'The primary language of the person';
COMMENT ON COLUMN persons.root_person_id IS E'Point to the same person with different name';
COMMENT ON COLUMN persons.sex IS E'Reference Code (SEX)';
COMMENT ON COLUMN persons.staff_flag IS E'If the person a staff member?';
COMMENT ON COLUMN persons.suspended_date IS E'The date of the record suspension';
COMMENT ON COLUMN persons.suspended_flag IS E'If the person record supsended';

CREATE TABLE person_employments (
	person_id bigint NOT NULL,
	employment_seq integer NOT NULL DEFAULT 1,
	occupation_code varchar(12),
	employer_name varchar(60),
	hours_week integer,
	schedule_type varchar(12),
	wage varchar(10),
	wage_period_code varchar(12),
	supervisor_name varchar(40),
	address_1 varchar(40),
	address_2 varchar(40),
	city varchar(12),
	prov_state_code varchar(12),
	contact_number varchar(32),
	contact_type varchar(12),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	employment_date timestamp,
	comment_text varchar(240),
	termination_date timestamp,
	phone_area varchar(4),
	phone_ext varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	active_flag varchar(1),
	address varchar(240),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN person_employments.active_flag IS E'If person employment is a active one ?';
COMMENT ON COLUMN person_employments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN person_employments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN person_employments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN person_employments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN person_employments.phone_area IS E'Phone Area Code for standard format phone number.';
COMMENT ON COLUMN person_employments.phone_ext IS E'Phone Extension for standard format phone number.';

CREATE TABLE person_identifiers (
	person_id bigint NOT NULL,
	id_seq integer NOT NULL,
	identifier_type varchar(12) NOT NULL,
	identifier varchar(20) NOT NULL,
	issued_authority_text varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	issued_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE person_identifiers IS E'Person"s Identifiers';
COMMENT ON COLUMN person_identifiers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN person_identifiers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN person_identifiers.id_seq IS E' - Column already exists';
COMMENT ON COLUMN person_identifiers.identifier IS E' - Column already exists';
COMMENT ON COLUMN person_identifiers.identifier_type IS E'Reference Code ( ID_TYPE )';
COMMENT ON COLUMN person_identifiers.issued_authority_text IS E' - Column already exists';
COMMENT ON COLUMN person_identifiers.issued_date IS E'The issue date of the document';
COMMENT ON COLUMN person_identifiers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN person_identifiers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN person_identifiers.person_id IS E' - Column already exists';

CREATE TABLE person_profiles (
	person_profile_id bigint NOT NULL,
	person_id bigint NOT NULL,
	profile_type varchar(12) NOT NULL,
	profile_code varchar(40),
	display_seq integer,
	modify_user_id varchar(32),
	profile_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN person_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN person_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN person_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN person_profiles.modify_user_id IS E'The user who modifies the record';

CREATE TABLE phones (
	phone_id bigint NOT NULL,
	owner_class varchar(12) NOT NULL,
	owner_id bigint,
	owner_seq integer,
	owner_code varchar(12),
	phone_type varchar(12) NOT NULL,
	phone_no varchar(40) NOT NULL,
	ext_no varchar(7),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE phones IS E'The comment table for telephone numbers';
COMMENT ON COLUMN phones.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN phones.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN phones.ext_no IS E'The extension no of the phone';
COMMENT ON COLUMN phones.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN phones.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN phones.owner_class IS E'Ref Domain (owner_Class): ADDR-Address ; PER-Person ; OFF-Offender_Booking';
COMMENT ON COLUMN phones.owner_code IS E'The code of the owner when owner has varchar PK';
COMMENT ON COLUMN phones.owner_id IS E'FK to the PK of the phone owner';
COMMENT ON COLUMN phones.owner_seq IS E'The sequence number of Owner class ';
COMMENT ON COLUMN phones.phone_id IS E'PK of the phone number';
COMMENT ON COLUMN phones.phone_no IS E'The phone number';
COMMENT ON COLUMN phones.phone_type IS E'Ref Domain (PHONE_TYPE)';

CREATE TABLE physical_count_tmp (
	stock_item_id bigint,
	physical_count bigint,
	confirm_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE placement_durations (
	placement_type varchar(12) NOT NULL,
	duration_type varchar(12) NOT NULL,
	minimum_duration bigint,
	maximum_duration bigint,
	list_seq integer,
	active_flag varchar(1) DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE placement_durations IS E'Ontario - Care In Placement Maintenance Screen';

CREATE TABLE plan_details (
	offender_book_id bigint NOT NULL,
	case_plan_id bigint NOT NULL,
	detail_seq bigint NOT NULL,
	goal_type varchar(12) NOT NULL,
	goal_sub_type varchar(12) NOT NULL,
	target_date timestamp,
	pla_det_comment varchar(4000),
	condition_codes varchar(12),
	off_cc_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	completion_date timestamp,
	status varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN plan_details.case_plan_id IS E'Standard Number ID';
COMMENT ON COLUMN plan_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN plan_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN plan_details.detail_seq IS E'Standard Number ID';
COMMENT ON COLUMN plan_details.goal_sub_type IS E'Standard Reference Code - domain CASEPLAN_GOT';
COMMENT ON COLUMN plan_details.goal_type IS E'Standard Reference Code - domain CASEPLAN_GOT';
COMMENT ON COLUMN plan_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN plan_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN plan_details.offender_book_id IS E' The system generated identifier for an offender booking.';
COMMENT ON COLUMN plan_details.pla_det_comment IS E'Comment Text';
COMMENT ON COLUMN plan_details.target_date IS E'The Target date to acieve the goal';

CREATE TABLE possible_recommendations (
	report_type varchar(12) NOT NULL,
	recommend_code varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE possible_recommendations IS E'- Retrofitted';
COMMENT ON COLUMN possible_recommendations.active_flag IS E' - Column already exists';
COMMENT ON COLUMN possible_recommendations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN possible_recommendations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN possible_recommendations.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN possible_recommendations.list_seq IS E' - Column already exists';
COMMENT ON COLUMN possible_recommendations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN possible_recommendations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN possible_recommendations.recommend_code IS E' - Column already exists';
COMMENT ON COLUMN possible_recommendations.report_type IS E' - Column already exists';
COMMENT ON COLUMN possible_recommendations.update_allowed_flag IS E' - Column already exists';

CREATE TABLE pot_accumulate_to_types (
	eod_id bigint NOT NULL,
	eod_id_accumulate_to bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN pot_accumulate_to_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN pot_accumulate_to_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN pot_accumulate_to_types.eod_id IS E'Standard Number ID';
COMMENT ON COLUMN pot_accumulate_to_types.eod_id_accumulate_to IS E'Standard Number ID';
COMMENT ON COLUMN pot_accumulate_to_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN pot_accumulate_to_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE pot_calculations (
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	cso_or_period varchar(12) NOT NULL,
	max_sentence_unit varchar(12) NOT NULL,
	max_sentence decimal(8,2) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN pot_calculations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN pot_calculations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN pot_calculations.cso_or_period IS E'Standard Reference Code';
COMMENT ON COLUMN pot_calculations.max_sentence_unit IS E'Standard Reference Code';
COMMENT ON COLUMN pot_calculations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN pot_calculations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN pot_calculations.order_code IS E'Standard Reference Code';
COMMENT ON COLUMN pot_calculations.order_type IS E'Standard Reference Code';

CREATE TABLE pot_concurrencies (
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	order_type_concurrent_to varchar(12) NOT NULL,
	order_code_concurrent_to varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN pot_concurrencies.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN pot_concurrencies.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN pot_concurrencies.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN pot_concurrencies.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN pot_concurrencies.order_code IS E'Order Code';
COMMENT ON COLUMN pot_concurrencies.order_code_concurrent_to IS E'Order Code';
COMMENT ON COLUMN pot_concurrencies.order_type IS E'Order Type - Reference domain ORDER_TYPE';
COMMENT ON COLUMN pot_concurrencies.order_type_concurrent_to IS E'Order Type - Reference domain ORDER_TYPE';

CREATE TABLE pot_ranges (
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	hours_from integer NOT NULL,
	hours_to integer NOT NULL,
	expiry_period decimal(4,2) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN pot_ranges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN pot_ranges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN pot_ranges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN pot_ranges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN pot_ranges.order_code IS E'Standard Reference Code';
COMMENT ON COLUMN pot_ranges.order_type IS E'Standard Reference Code';

CREATE TABLE pot_weightings (
	pot_wgt_id smallint NOT NULL DEFAULT 99,
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	component varchar(12) NOT NULL,
	offender_danger_rating varchar(12),
	range_code varchar(12),
	weighting decimal(5,2) NOT NULL DEFAULT 99,
	active varchar(1) NOT NULL,
	court_type varchar(12),
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN pot_weightings.component IS E'Standard Reference Code';
COMMENT ON COLUMN pot_weightings.court_type IS E'Standard Reference Code';
COMMENT ON COLUMN pot_weightings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN pot_weightings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN pot_weightings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN pot_weightings.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN pot_weightings.offender_danger_rating IS E'Standard Reference Code';
COMMENT ON COLUMN pot_weightings.order_code IS E'Standard Reference Code';
COMMENT ON COLUMN pot_weightings.order_type IS E'Order Type - Reference domain ORDER_TYPE';
COMMENT ON COLUMN pot_weightings.range_code IS E'Standard Reference Code';
COMMENT ON COLUMN pot_weightings.weighting IS E'The short sequence for making up Primary Key';

CREATE TABLE pre_commit_tmp (
	session_id bigint NOT NULL,
	seq_no bigint,
	module_name varchar(20) NOT NULL,
	last_name varchar(30),
	first_name varchar(30),
	offender_id_display varchar(10),
	amount decimal(11,2),
	txn_type varchar(10),
	payee_name varchar(60),
	receipt_number varchar(13),
	txn_description varchar(40),
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE printers (
	printer_id varchar(12) NOT NULL,
	printer_type varchar(12),
	description varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE printers IS E'Printer deifinitions.';
COMMENT ON COLUMN printers.active_flag IS E'Only active values appear on list of values.';
COMMENT ON COLUMN printers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN printers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN printers.description IS E' Printer description.';
COMMENT ON COLUMN printers.expiry_date IS E' Deactivation date.';
COMMENT ON COLUMN printers.list_seq IS E'Sequencing for list of values.';
COMMENT ON COLUMN printers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN printers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN printers.printer_id IS E'Maintains printer idenfication ie. hp4, hp3p,qms..';
COMMENT ON COLUMN printers.printer_type IS E'The type of printer ie. HPLT - HP Laserjet with letter tray.
 ';
COMMENT ON COLUMN printers.update_allowed_flag IS E' Values may be protected from update.';

CREATE TABLE printer_aliases (
	printer_alias_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE printer_aliases IS E'Printer Alias Deifinitions.';
COMMENT ON COLUMN printer_aliases.active_flag IS E'Only active values appear on list of values.';
COMMENT ON COLUMN printer_aliases.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN printer_aliases.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN printer_aliases.description IS E' Printer Alias description.';
COMMENT ON COLUMN printer_aliases.expiry_date IS E' Deactivation date.';
COMMENT ON COLUMN printer_aliases.list_seq IS E'Sequencing for list of values.';
COMMENT ON COLUMN printer_aliases.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN printer_aliases.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN printer_aliases.printer_alias_code IS E'Maintains printer alias  idenfication.';

CREATE TABLE printer_types (
	printer_type varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	text_flag varchar(1) NOT NULL DEFAULT 'Y',
	colour_flag varchar(1) DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE printer_types IS E'Maintains types of printers available.';
COMMENT ON COLUMN printer_types.active_flag IS E'Only active values appear in list of values.';
COMMENT ON COLUMN printer_types.colour_flag IS E'Is this a colour printer?';
COMMENT ON COLUMN printer_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN printer_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN printer_types.description IS E'Description associated with printer type.';
COMMENT ON COLUMN printer_types.expiry_date IS E'Deactivation date.';
COMMENT ON COLUMN printer_types.list_seq IS E'Sequencing for list of values.';
COMMENT ON COLUMN printer_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN printer_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN printer_types.printer_type IS E'Identifier for printer type ie. HPLT - HP Laserjet with letter tray...';
COMMENT ON COLUMN printer_types.text_flag IS E'Indicates can handle non-prostcript text.';
COMMENT ON COLUMN printer_types.update_allowed_flag IS E' - Column already exists';

CREATE TABLE printing_abilities (
	printer_type varchar(12) NOT NULL,
	print_format_code varchar(12) NOT NULL,
	setup_filename varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE printing_abilities IS E'- Retrofitted';
COMMENT ON COLUMN printing_abilities.active_flag IS E' - Column already exists';
COMMENT ON COLUMN printing_abilities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN printing_abilities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN printing_abilities.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN printing_abilities.list_seq IS E' - Column already exists';
COMMENT ON COLUMN printing_abilities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN printing_abilities.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN printing_abilities.print_format_code IS E'Reference Code ( PRINT_FORMAT )';
COMMENT ON COLUMN printing_abilities.printer_type IS E' - Column already exists';
COMMENT ON COLUMN printing_abilities.setup_filename IS E' - Column already exists';
COMMENT ON COLUMN printing_abilities.update_allowed_flag IS E' - Column already exists';

CREATE TABLE print_receipts_tmp (
	module_name varchar(12) NOT NULL,
	txn_id bigint,
	offender_id bigint,
	receipt_number varchar(13) NOT NULL,
	session_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN print_receipts_tmp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN print_receipts_tmp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN print_receipts_tmp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN print_receipts_tmp.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN print_receipts_tmp.session_id IS E'To store Session ID of the user, so that mutiple instances of receipts printing are allowed.';

CREATE TABLE probation_order_types (
	order_type varchar(12) NOT NULL,
	order_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	report_due_days bigint,
	display_hours_summary varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL,
	update_flag varchar(1) NOT NULL,
	list_seq smallint,
	expiry_date timestamp,
	hearing_type varchar(12),
	close_case_flag varchar(1) DEFAULT 'N',
	populate_status varchar(12),
	sustained_offence_flag varchar(1),
	allow_send_work varchar(1) DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE probation_order_types IS E'- Retrofitted';
COMMENT ON COLUMN probation_order_types.active_flag IS E'Active? - Retrofitted';
COMMENT ON COLUMN probation_order_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN probation_order_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN probation_order_types.description IS E'Short Description - Retrofitted';
COMMENT ON COLUMN probation_order_types.display_hours_summary IS E'Should this Order Type/Code combination be displayed on the Community Service Requirements Screen - Retrofitted';
COMMENT ON COLUMN probation_order_types.expiry_date IS E'The Date the order type became inactive - Retrofitted';
COMMENT ON COLUMN probation_order_types.hearing_type IS E'- Retrofitted';
COMMENT ON COLUMN probation_order_types.list_seq IS E'Sequence for display purposes only - Retrofitted';
COMMENT ON COLUMN probation_order_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN probation_order_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN probation_order_types.order_code IS E'The Order Code - Retrofitted';
COMMENT ON COLUMN probation_order_types.order_type IS E'Order Type - Reference domain ORDER_TYPE - Retrofitted';
COMMENT ON COLUMN probation_order_types.populate_status IS E'DEFINES THE STATUS ON HEADER';
COMMENT ON COLUMN probation_order_types.report_due_days IS E'Enter the number of days until a report is due - Retrofitted';
COMMENT ON COLUMN probation_order_types.sustained_offence_flag IS E'Rquires Sustained Offence';
COMMENT ON COLUMN probation_order_types.update_flag IS E'Update Allowed? - Retrofitted';

CREATE TABLE process_payroll_txns (
	process_payroll_txns_id bigint NOT NULL,
	payroll_batch_id bigint NOT NULL,
	offender_id bigint NOT NULL,
	txn_id bigint,
	txn_entry_seq integer,
	comment_text varchar(2000),
	record_number integer,
	reject_flag varchar(1),
	compensation_code varchar(12),
	pay_range_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN process_payroll_txns.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN process_payroll_txns.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN process_payroll_txns.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN process_payroll_txns.modify_user_id IS E'The user who modifies the record';

CREATE TABLE profile_categories (
	profile_category varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	recheck_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE profile_categories IS E'Profile Category';
COMMENT ON COLUMN profile_categories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN profile_categories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN profile_categories.description IS E'Profile Category Description';
COMMENT ON COLUMN profile_categories.list_seq IS E'Listing Sequence';
COMMENT ON COLUMN profile_categories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN profile_categories.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN profile_categories.profile_category IS E'Offender Profile Category (Such as Physical Appearance, Background)';
COMMENT ON COLUMN profile_categories.recheck_flag IS E'If the Profile Category Need Recheck ?';

CREATE TABLE profile_codes (
	profile_type varchar(12) NOT NULL,
	profile_code varchar(12) NOT NULL,
	description varchar(40),
	list_seq integer NOT NULL,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	user_id varchar(32) NOT NULL,
	modified_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE profile_codes IS E'Profile Codes';
COMMENT ON COLUMN profile_codes.active_flag IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN profile_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN profile_codes.description IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.list_seq IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.modified_date IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN profile_codes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN profile_codes.profile_code IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.profile_type IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.update_allowed_flag IS E' - Column already exists';
COMMENT ON COLUMN profile_codes.user_id IS E' - Column already exists';

CREATE TABLE profile_types (
	profile_type varchar(12) NOT NULL,
	profile_category varchar(12),
	description varchar(40),
	list_seq integer NOT NULL,
	mandatory_flag varchar(1) NOT NULL DEFAULT 'Y',
	updated_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	code_value_type varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	modified_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE profile_types IS E'Profile_type';
COMMENT ON COLUMN profile_types.active_flag IS E' - Column already exists';
COMMENT ON COLUMN profile_types.code_value_type IS E'Reference Code ( VALUE_TYPE)';
COMMENT ON COLUMN profile_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN profile_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN profile_types.description IS E' - Column already exists';
COMMENT ON COLUMN profile_types.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN profile_types.list_seq IS E' - Column already exists';
COMMENT ON COLUMN profile_types.mandatory_flag IS E' - Column already exists';
COMMENT ON COLUMN profile_types.modified_date IS E' - Column already exists';
COMMENT ON COLUMN profile_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN profile_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN profile_types.profile_category IS E' - Column already exists';
COMMENT ON COLUMN profile_types.profile_type IS E' - Column already exists';
COMMENT ON COLUMN profile_types.updated_allowed_flag IS E' - Column already exists';

CREATE TABLE program_assessments (
	program_id bigint NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	assessment_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN program_assessments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN program_assessments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN program_assessments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN program_assessments.modify_user_id IS E'The user who modifies the record';

CREATE TABLE program_contacts (
	program_id bigint NOT NULL,
	staff_id integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN program_contacts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN program_contacts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN program_contacts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN program_contacts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN program_contacts.program_id IS E'Program Id';
COMMENT ON COLUMN program_contacts.staff_id IS E'Staff Id';

CREATE TABLE program_questionnaires (
	question_id bigint NOT NULL,
	question_category_id bigint NOT NULL,
	questionnaire_code varchar(12),
	description varchar(60) NOT NULL,
	sequence_number integer DEFAULT 1,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	efective_date timestamp,
	update_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	modify_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN program_questionnaires.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN program_questionnaires.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN program_questionnaires.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN program_questionnaires.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN program_questionnaires.question_category_id IS E'Reference Code ( QUE_NAIR_CAT)
 e.g. (Meidcal, Historical..)';

CREATE TABLE program_services (
	program_id bigint NOT NULL,
	program_category varchar(12),
	program_code varchar(40),
	description varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	comment_text varchar(240),
	program_class varchar(12) NOT NULL,
	parent_program_id bigint,
	contact_method varchar(80),
	no_of_sessions integer,
	no_of_allowable_restarts integer,
	no_of_allowable_absences integer,
	capacity integer,
	session_length integer,
	completion_flag varchar(1),
	module_flag varchar(1),
	module_type varchar(12),
	break_allowed_flag varchar(1),
	start_flag varchar(1) DEFAULT 'N',
	no_of_weekly_sessions integer,
	program_status varchar(12),
	list_seq integer,
	phase_type varchar(12),
	start_date timestamp,
	end_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	function_type varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE program_services IS E'The Program Services details (includes Program Phases and Program Modules)';
COMMENT ON COLUMN program_services.active_flag IS E'Is the Program/Service Active';
COMMENT ON COLUMN program_services.break_allowed_flag IS E'?Allow break';
COMMENT ON COLUMN program_services.capacity IS E'The capacity';
COMMENT ON COLUMN program_services.comment_text IS E'The general comment text';
COMMENT ON COLUMN program_services.completion_flag IS E'The phase which decide when the services is considered as completed';
COMMENT ON COLUMN program_services.contact_method IS E'Method of contact in free text';
COMMENT ON COLUMN program_services.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN program_services.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN program_services.description IS E'Program/Service Description';
COMMENT ON COLUMN program_services.end_date IS E'The End date';
COMMENT ON COLUMN program_services.expiry_date IS E'Set to date on which the P/S becomes inactive';
COMMENT ON COLUMN program_services.list_seq IS E'The listing order';
COMMENT ON COLUMN program_services.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN program_services.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN program_services.module_flag IS E'If there are module for the program phase';
COMMENT ON COLUMN program_services.module_type IS E'The module type of the program phase. Reference Code(PS_MOD_TYPE)';
COMMENT ON COLUMN program_services.no_of_allowable_absences IS E'Number of allowable absence for the program';
COMMENT ON COLUMN program_services.no_of_allowable_restarts IS E'Number of allowable restart for the program';
COMMENT ON COLUMN program_services.no_of_sessions IS E'Number of weekly sessions';
COMMENT ON COLUMN program_services.no_of_weekly_sessions IS E'No of session per week';
COMMENT ON COLUMN program_services.parent_program_id IS E'The parent of the program class';
COMMENT ON COLUMN program_services.phase_type IS E'The phase type.  Reference Code(PS_PHS_TYPE)';
COMMENT ON COLUMN program_services.program_category IS E'Program category derived from reference code "PS_CATEGORY"';
COMMENT ON COLUMN program_services.program_class IS E'Reference Code(PRG_CLS), such as services, programs, program phases, prgram module';
COMMENT ON COLUMN program_services.program_code IS E'User enterable free-form text';
COMMENT ON COLUMN program_services.program_id IS E'Unique ID across the table';
COMMENT ON COLUMN program_services.program_status IS E'Reference Code(PS_STATUS)';
COMMENT ON COLUMN program_services.session_length IS E'The session length in hours';
COMMENT ON COLUMN program_services.start_date IS E'The start date';
COMMENT ON COLUMN program_services.start_flag IS E'?Can start at this module';

CREATE TABLE program_services_profiles (
	program_id bigint NOT NULL,
	program_profile_type varchar(12) NOT NULL,
	program_profile_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN program_services_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN program_services_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN program_services_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN program_services_profiles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN program_services_profiles.program_id IS E'The ID of the program services';
COMMENT ON COLUMN program_services_profiles.program_profile_code IS E'Various profile code based on the program services profile type';
COMMENT ON COLUMN program_services_profiles.program_profile_type IS E'Program Profile type : Reference (PRG_PROF)';

CREATE TABLE program_sessions (
	session_id bigint NOT NULL,
	program_provider_id bigint NOT NULL,
	corp_location_id bigint NOT NULL,
	area_served_code varchar(12) NOT NULL,
	attendance_code varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	corp_location_seq integer DEFAULT 1,
	expire_date timestamp,
	start_date timestamp NOT NULL,
	end_date timestamp NOT NULL,
	starting_time timestamp,
	ending_time timestamp,
	capacity smallint NOT NULL,
	capacity_used smallint,
	fees decimal(7,2),
	uom varchar(12),
	description varchar(60) NOT NULL,
	special_needs_code varchar(12),
	target_age varchar(15),
	monday_flag varchar(1) NOT NULL DEFAULT 'N',
	tuesday_flag varchar(1) NOT NULL DEFAULT 'N',
	wednesday_flag varchar(1) NOT NULL DEFAULT 'N',
	thursday_flag varchar(1) NOT NULL DEFAULT 'N',
	friday_flag varchar(1) NOT NULL DEFAULT 'N',
	saturday_flag varchar(1) NOT NULL DEFAULT 'N',
	sunday_flag varchar(1) NOT NULL DEFAULT 'N',
	evaluation_type varchar(12),
	target_sex_code varchar(12),
	appointment_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE program_sessions IS E'- Retrofitted';
COMMENT ON COLUMN program_sessions.capacity IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.corp_location_id IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.end_date IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.expire_date IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.fees IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.program_provider_id IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.session_id IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.special_needs_code IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.start_date IS E' - Retrofitted';
COMMENT ON COLUMN program_sessions.target_age IS E' - Retrofitted';

CREATE TABLE property_groups (
	group_id varchar(20) NOT NULL,
	group_name varchar(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE property_group_items (
	property_item_id numeric(20) NOT NULL,
	group_id varchar(20) NOT NULL,
	property_description varchar(20),
	property_type_code varchar(10),
	sequence bigint NOT NULL,
	received_from varchar(20) NOT NULL,
	condition_code varchar(20) NOT NULL,
	quantity bigint NOT NULL
)  TABLESPACE TAG_DATA;

CREATE TABLE property_storages (
	property_storage_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	property_storage_type varchar(12) NOT NULL,
	property_storage_code varchar(20) NOT NULL,
	description varchar(40),
	capacity integer NOT NULL,
	list_seq integer NOT NULL,
	parent_storage_id bigint,
	user_desc varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE property_storages IS E'Property Storage';
COMMENT ON COLUMN property_storages.agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN property_storages.capacity IS E' - Column already exists';
COMMENT ON COLUMN property_storages.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN property_storages.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN property_storages.description IS E' - Column already exists';
COMMENT ON COLUMN property_storages.list_seq IS E' - Column already exists';
COMMENT ON COLUMN property_storages.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN property_storages.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN property_storages.parent_storage_id IS E' - Column already exists';
COMMENT ON COLUMN property_storages.property_storage_code IS E' - Column already exists';
COMMENT ON COLUMN property_storages.property_storage_id IS E' - Column already exists';
COMMENT ON COLUMN property_storages.property_storage_type IS E' - Column already exists';

CREATE TABLE property_transactions (
	property_txn_id bigint NOT NULL,
	bundle_id bigint,
	ppty_txn_date timestamp NOT NULL,
	ppty_txn_type varchar(12) NOT NULL,
	reason_code varchar(12),
	property_txn_status varchar(12) NOT NULL,
	method_code varchar(12),
	comment_text varchar(40),
	from_agy_loc_id varchar(6),
	to_agy_loc_id varchar(6),
	receive_person_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE property_transactions IS E'Property Transaction';
COMMENT ON COLUMN property_transactions.bundle_id IS E' - Column already exists';
COMMENT ON COLUMN property_transactions.comment_text IS E' - Column already exists';
COMMENT ON COLUMN property_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN property_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN property_transactions.method_code IS E' - Column already exists';
COMMENT ON COLUMN property_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN property_transactions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN property_transactions.ppty_txn_date IS E' - Column already exists';
COMMENT ON COLUMN property_transactions.ppty_txn_type IS E'Reference Code ( PPTY_TXN_TYP )';
COMMENT ON COLUMN property_transactions.property_txn_id IS E' - Column already exists';
COMMENT ON COLUMN property_transactions.property_txn_status IS E'Reference Code ( PPTY_TXN_STS )';
COMMENT ON COLUMN property_transactions.reason_code IS E'Reference Code ( PPTY_TXN_RSN )';
COMMENT ON COLUMN property_transactions.receive_person_id IS E' - Column already exists';

CREATE TABLE ptr_detail_types (
	type varchar(12) NOT NULL,
	description varchar(240) NOT NULL,
	list_seq smallint,
	format_type varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE ptr_detail_types IS E'Pre-transfer detail options';
COMMENT ON COLUMN ptr_detail_types.active_flag IS E'Active flag';
COMMENT ON COLUMN ptr_detail_types.description IS E'Detail type description';
COMMENT ON COLUMN ptr_detail_types.expiry_date IS E'Expiry date';
COMMENT ON COLUMN ptr_detail_types.format_type IS E'Detail format type(valid values are ''CODE'', ''TEXT'')';
COMMENT ON COLUMN ptr_detail_types.list_seq IS E'List sequence';
COMMENT ON COLUMN ptr_detail_types.seal_flag IS E'Seal flag';
COMMENT ON COLUMN ptr_detail_types.type IS E'Detail type - unique identifier';

CREATE TABLE ptr_type_codes (
	type varchar(12) NOT NULL,
	code varchar(12) NOT NULL,
	description varchar(240) NOT NULL,
	list_seq smallint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE ptr_type_codes IS E'Option codes for pre-transfer requests types with format type ''CODE''';
COMMENT ON COLUMN ptr_type_codes.active_flag IS E'Active flag';
COMMENT ON COLUMN ptr_type_codes.code IS E'Option code description';
COMMENT ON COLUMN ptr_type_codes.description IS E'Option code description';
COMMENT ON COLUMN ptr_type_codes.expiry_date IS E'Expiry Date';
COMMENT ON COLUMN ptr_type_codes.list_seq IS E'List sequence';
COMMENT ON COLUMN ptr_type_codes.seal_flag IS E'Seal flag';
COMMENT ON COLUMN ptr_type_codes.type IS E'Detail type - unique identifier';

CREATE TABLE purchase_orders (
	purchase_order_id bigint NOT NULL,
	vendor_corporate_id bigint,
	order_date timestamp NOT NULL,
	po_type varchar(12) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	comment_text varchar(240),
	printed_flag varchar(1) NOT NULL DEFAULT 'N',
	vendor_invoice_number varchar(20),
	estimatd_arrival_date timestamp,
	expiry_date timestamp,
	max_amount decimal(11,2),
	shipping_cost decimal(9,2),
	tax_1_amount decimal(9,2),
	tax_2_amount decimal(9,2),
	tax_3_amount smallint,
	invoice_deposit_cost decimal(9,2),
	po_total_amount decimal(9,2),
	puchase_order_status varchar(12),
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE purchase_orders IS E'- Retrofitted';
COMMENT ON COLUMN purchase_orders.caseload_id IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.comment_text IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN purchase_orders.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN purchase_orders.estimatd_arrival_date IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.invoice_deposit_cost IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.max_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN purchase_orders.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN purchase_orders.order_date IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.po_total_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.po_type IS E'Reference Code ( PO_TYPE )';
COMMENT ON COLUMN purchase_orders.printed_flag IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.puchase_order_status IS E'Reference Code ( PO_STS )';
COMMENT ON COLUMN purchase_orders.purchase_order_id IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.shipping_cost IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.stock_loc_id IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.tax_1_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.tax_2_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.tax_3_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.vendor_corporate_id IS E' - Column already exists';
COMMENT ON COLUMN purchase_orders.vendor_invoice_number IS E' - Column already exists';

CREATE TABLE purchase_order_items (
	purchase_order_id bigint NOT NULL,
	stock_item_id bigint NOT NULL,
	vendor_item_reference varchar(30),
	po_item_quantity integer,
	po_item_quantity_rec integer,
	tax_1_amount decimal(12,2),
	tax_2_amount decimal(12,2),
	tax_3_amount decimal(12,2),
	unit_cost bigint,
	cost_on_invoice decimal(9,2),
	unit_deposit_cost decimal(9,2),
	po_item_status varchar(12) DEFAULT 'BOOK',
	po_item_quantity_canc integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE purchase_order_items IS E'- Retrofitted';
COMMENT ON COLUMN purchase_order_items.cost_on_invoice IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN purchase_order_items.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN purchase_order_items.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN purchase_order_items.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN purchase_order_items.po_item_quantity IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.po_item_status IS E'Reference Code ( POI_STS )';
COMMENT ON COLUMN purchase_order_items.purchase_order_id IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.stock_item_id IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.tax_1_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.tax_2_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.tax_3_amount IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.unit_cost IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.unit_deposit_cost IS E' - Column already exists';
COMMENT ON COLUMN purchase_order_items.vendor_item_reference IS E' - Column already exists';

CREATE TABLE purged_offender_histories (
	root_offender_id bigint NOT NULL,
	offender_book_id varchar(10) NOT NULL,
	offender_id_display varchar(10) NOT NULL,
	last_name varchar(35) NOT NULL,
	first_name varchar(35),
	purge_date timestamp NOT NULL,
	staff_id integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN purged_offender_histories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN purged_offender_histories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN purged_offender_histories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN purged_offender_histories.modify_user_id IS E'The user who modifies the record';

CREATE TABLE purge_tables (
	table_name varchar(30),
	constraint_name varchar(30),
	hierarchy_level integer NOT NULL,
	dml_type varchar(6) NOT NULL,
	dml_sql varchar(2000),
	child_hierarchy_level integer,
	dml_criteria_dependency varchar(2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE purge_tables IS E'Purge offender specific records from the TAG system';
COMMENT ON COLUMN purge_tables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN purge_tables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN purge_tables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN purge_tables.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN purge_tables.table_name IS E'Stores table names';

CREATE TABLE qm_activities (
	activity_id bigint NOT NULL,
	name varchar(20) NOT NULL,
	description varchar(255),
	sequence integer,
	allocated_time bigint NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	process_id bigint NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_activities IS E'Activity definition. For offender queue manager it is group. The activity is well defined task which has name, start and end. It has defined allocated time (duration) for execution. Activity is always defined under the process. The Activity has assigned team for each menaging agancy (qm_managers).';
COMMENT ON COLUMN qm_activities.active_flag IS E'It could be Y/N depending is the activity definition is valid - applicable. ';
COMMENT ON COLUMN qm_activities.activity_id IS E'id for activity definition';
COMMENT ON COLUMN qm_activities.allocated_time IS E'Allocated time on seconds for the activity. The time can be allocated for team to execute the activity and that time overwrite activity allocated time.
Format for the screen will be considered in the next project.';
COMMENT ON COLUMN qm_activities.create_datetime IS E'create time';
COMMENT ON COLUMN qm_activities.create_user_id IS E'create user';
COMMENT ON COLUMN qm_activities.description IS E'activity description';
COMMENT ON COLUMN qm_activities.expiry_date IS E'used with active flag';
COMMENT ON COLUMN qm_activities.modify_datetime IS E'modify time';
COMMENT ON COLUMN qm_activities.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_activities.name IS E'activity name';
COMMENT ON COLUMN qm_activities.process_id IS E'process which define the activity';
COMMENT ON COLUMN qm_activities.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_activities.sequence IS E'Activity sequence inside process.
In case of sequence process execution type  this is order in which we will instanciate activities (only the first record in qm_activities will be created when we start process, the next record will be created when the first is activity is finished) .
In case of parallel process execution type this is not execution order but we can use it for any report order';

CREATE TABLE qm_activities_ins (
	activity_ins_id bigint NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp,
	qm_act_ins_status_domain varchar(12) NOT NULL,
	qm_act_ins_status_code varchar(12) NOT NULL,
	team_id bigint NOT NULL,
	staff_id integer,
	process_ins_id bigint NOT NULL,
	activity_id bigint NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_activities_ins IS E'Activity instance for process instance. It has start time, end time, team who is resposible and staff_member who is running the activity.
The activity has statuses defined as reference domain ACT_INS_STATUS.
The statuses are:
READY
RUNNING
FINISHED
The READY status activity has when it is created but not started
The RUNNING status activity has when it is started (start time populated)
The  FINISHED status activity has when it is ended. In the FINISHED status Staff Member is mandatory.
';
COMMENT ON COLUMN qm_activities_ins.activity_id IS E'id for activity definition';
COMMENT ON COLUMN qm_activities_ins.activity_ins_id IS E'id for activity instance';
COMMENT ON COLUMN qm_activities_ins.create_datetime IS E'create time';
COMMENT ON COLUMN qm_activities_ins.create_user_id IS E'create user';
COMMENT ON COLUMN qm_activities_ins.end_time IS E'activity instance end time';
COMMENT ON COLUMN qm_activities_ins.modify_datetime IS E'modify time';
COMMENT ON COLUMN qm_activities_ins.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_activities_ins.process_ins_id IS E'ID of process instance';
COMMENT ON COLUMN qm_activities_ins.qm_act_ins_status_code IS E'Reference code for domain QM_ACT_INS_STATUS';
COMMENT ON COLUMN qm_activities_ins.qm_act_ins_status_domain IS E'The domain of the reference code QM_ACT_INS_STATUS';
COMMENT ON COLUMN qm_activities_ins.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_activities_ins.staff_id IS E'Staff member executed activity';
COMMENT ON COLUMN qm_activities_ins.start_time IS E'activity instance start time';
COMMENT ON COLUMN qm_activities_ins.team_id IS E'Team responsible for activity execution';

CREATE TABLE qm_activities_ins_hist (
	activity_ins_id bigint NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp,
	qm_act_ins_status_domain varchar(12) NOT NULL,
	qm_act_ins_status_code varchar(12) NOT NULL,
	team_id bigint NOT NULL,
	staff_id integer,
	process_ins_id bigint NOT NULL,
	activity_id bigint NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_activities_ins_hist IS E'History for activity instyance.
It can have onlu activities in FINISHED state. Archived only when process archived.';
COMMENT ON COLUMN qm_activities_ins_hist.activity_id IS E'activity definition';
COMMENT ON COLUMN qm_activities_ins_hist.activity_ins_id IS E'Activiti instance id';
COMMENT ON COLUMN qm_activities_ins_hist.create_datetime IS E'create time';
COMMENT ON COLUMN qm_activities_ins_hist.create_user_id IS E'create user';
COMMENT ON COLUMN qm_activities_ins_hist.end_time IS E'Activity instance end time';
COMMENT ON COLUMN qm_activities_ins_hist.modify_datetime IS E'modyfy time';
COMMENT ON COLUMN qm_activities_ins_hist.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_activities_ins_hist.process_ins_id IS E'process instance ID';
COMMENT ON COLUMN qm_activities_ins_hist.qm_act_ins_status_code IS E'Reference code fior domain QM_ACT_INS_STATUS';
COMMENT ON COLUMN qm_activities_ins_hist.qm_act_ins_status_domain IS E'The domain of the reference code QM_ACT_INS_STATUS';
COMMENT ON COLUMN qm_activities_ins_hist.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_activities_ins_hist.staff_id IS E'Staff member executed activity instance';
COMMENT ON COLUMN qm_activities_ins_hist.start_time IS E'Activity instance start time';
COMMENT ON COLUMN qm_activities_ins_hist.team_id IS E'team responsible for execution';

CREATE TABLE qm_compositions (
	composition_id bigint NOT NULL,
	managing_agy_loc_id varchar(6) NOT NULL,
	event_type_agy_loc_id varchar(6),
	process_id bigint NOT NULL,
	event_type varchar(20) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_compositions IS E'Managing agency location compose which processes would like to use and manage. It define event (represented by event_type - name used in table trigger) and event location (event_type_agy_loc_id used in table trigger) which will trigger process for that managing agency. When some event happend on particular location we will start all defined processes.';
COMMENT ON COLUMN qm_compositions.active_flag IS E'Active Y/N';
COMMENT ON COLUMN qm_compositions.composition_id IS E'Composition ID';
COMMENT ON COLUMN qm_compositions.create_datetime IS E'time when record is created ';
COMMENT ON COLUMN qm_compositions.create_user_id IS E'user who created record';
COMMENT ON COLUMN qm_compositions.event_type IS E'Event_type copied from process to avoid join. In the future we can use one on the process as default event_type and this one as chosen one.';
COMMENT ON COLUMN qm_compositions.event_type_agy_loc_id IS E'The ID of the event type agency location - location where event heppend which will trigger process execution. ';
COMMENT ON COLUMN qm_compositions.expiry_date IS E'date when record became inactive';
COMMENT ON COLUMN qm_compositions.managing_agy_loc_id IS E'The ID of the agency location which use and manage process execution. ';
COMMENT ON COLUMN qm_compositions.modify_datetime IS E'time when record is modified';
COMMENT ON COLUMN qm_compositions.modify_user_id IS E'user who modified record';
COMMENT ON COLUMN qm_compositions.process_id IS E'Process to execute when event happend on defined location (if event location is not defined that mean on any event location)';
COMMENT ON COLUMN qm_compositions.seal_flag IS E'SEAL_FLAG';

CREATE TABLE qm_con_activity_teams (
	man_act_team_id bigint NOT NULL,
	composition_id bigint NOT NULL,
	activity_id bigint NOT NULL,
	team_id bigint,
	allocated_time bigint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_con_activity_teams IS E'Define many-to many elation between qm_activities and teams for each qm_composition.';
COMMENT ON COLUMN qm_con_activity_teams.active_flag IS E'It could be Y/N depending is the activity is valid - applicable for the Managing Facility. If active flag is N than defined activity will not be executed (there will be record in the qm_activity_ins but status will be set up to SKIP or we can just not create record in qm_activity_ins) and the next activity to excute will be determined as skipped activity is finished (or not exist in process definition).';
COMMENT ON COLUMN qm_con_activity_teams.activity_id IS E'Activity for which qmanager want to assign team.';
COMMENT ON COLUMN qm_con_activity_teams.allocated_time IS E'Allocated time on seconds for the team to execute the activity. The time is allocated for activity on qm_activity level and it is in effect only of team activity time is not set up. So allocated time for team to execute the activity overwrite activity allocated time.
Format for the screen will be considered in the next project.';
COMMENT ON COLUMN qm_con_activity_teams.composition_id IS E'Composition ID';
COMMENT ON COLUMN qm_con_activity_teams.create_datetime IS E'create time';
COMMENT ON COLUMN qm_con_activity_teams.create_user_id IS E'create user';
COMMENT ON COLUMN qm_con_activity_teams.expiry_date IS E'Date for activity flag change';
COMMENT ON COLUMN qm_con_activity_teams.man_act_team_id IS E'ID for qm manager activity team';
COMMENT ON COLUMN qm_con_activity_teams.modify_datetime IS E'modify time';
COMMENT ON COLUMN qm_con_activity_teams.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_con_activity_teams.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_con_activity_teams.team_id IS E'Team assigned to activity by qmanager';

CREATE TABLE qm_messages_ins (
	messages_ins_id bigint NOT NULL,
	from_id bigint NOT NULL,
	to_id bigint NOT NULL,
	from_type varchar(12) NOT NULL,
	to_type varchar(12) NOT NULL,
	msg_date timestamp NOT NULL,
	subject varchar(50),
	workflow_id numeric(32),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_messages_ins IS E'Message sent/received beteen processes, activities, Teams and Staff_members. From_id and to_id are id value of message sender/receiver and from_type and to_type are type of the message sender/receiver (processes, activities, Teams and Staff_members).
Workflow_id is id of the message in the workflow.  ';
COMMENT ON COLUMN qm_messages_ins.create_datetime IS E'create date time';
COMMENT ON COLUMN qm_messages_ins.create_user_id IS E'crete user';
COMMENT ON COLUMN qm_messages_ins.from_id IS E'sender id ';
COMMENT ON COLUMN qm_messages_ins.from_type IS E'Sender type could be: PROCESS (qm_processes_ins table), ACTIVITY (qm_activities_ins table), TEAM (teams table), STAFFMEM (staff_members table). Use reference domain QM_MESSAGE_FROMTO';
COMMENT ON COLUMN qm_messages_ins.modify_datetime IS E'modify date time';
COMMENT ON COLUMN qm_messages_ins.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_messages_ins.msg_date IS E'message create datetime';
COMMENT ON COLUMN qm_messages_ins.seal_flag IS E'seal flag';
COMMENT ON COLUMN qm_messages_ins.subject IS E'Message subject';
COMMENT ON COLUMN qm_messages_ins.to_id IS E'receiver id';
COMMENT ON COLUMN qm_messages_ins.to_type IS E'Message receiver type could be: PROCESS (qm_processes_ins table), ACTIVITY (qm_activities_ins table), TEAM (teams table), STAFFMEM (staff_members table). Use reference domain QM_MESSAGE_FROMTO';
COMMENT ON COLUMN qm_messages_ins.workflow_id IS E'Id used in Workflow queue for memo/e-mail.';

CREATE TABLE qm_objects (
	object_id bigint NOT NULL,
	name varchar(20) NOT NULL,
	description varchar(255),
	process_id bigint NOT NULL,
	qm_data_type_domain varchar(12) NOT NULL,
	qm_data_type_code varchar(12) NOT NULL,
	purpose varchar(12),
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp NOT NULL
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_objects IS E'Object is definition of data field or atribute we need in order to run process or as outcome of process. All process activities can see and update defined objects. For offender queue process we could define  Offender_bookingID as object, but we can define any other number of objects for one process like OffenderID, First Name, Last Name..
The object has data type defined in reference codes. The object could be IN, OUT and EVENT. IN object is imput object we should or have to have before process execution. OUT object is object we should or have to have at the end of the process. EVENT objects are IN objects received from event.
When process is instanciated all object for the process will be instanciated in qm_objects_ins.';
COMMENT ON COLUMN qm_objects.create_datetime IS E'time when record is created';
COMMENT ON COLUMN qm_objects.create_user_id IS E'user created record';
COMMENT ON COLUMN qm_objects.description IS E'Object description';
COMMENT ON COLUMN qm_objects.modify_datetime IS E'time when the record is modified ';
COMMENT ON COLUMN qm_objects.modify_user_id IS E'user last modify the record';
COMMENT ON COLUMN qm_objects.name IS E'Object name';
COMMENT ON COLUMN qm_objects.object_id IS E'object ID';
COMMENT ON COLUMN qm_objects.process_id IS E'Process for which we defined object';
COMMENT ON COLUMN qm_objects.purpose IS E'IN - for objects we need to have befor process start
OUT - for objects we need to produce when process finish
EVENT - for objects we received from event';
COMMENT ON COLUMN qm_objects.qm_data_type_code IS E'Reference code fro QM_DATA_TYPE domain representing data type for object';
COMMENT ON COLUMN qm_objects.qm_data_type_domain IS E'The domain of the reference code for object data type. The name of domain we have to define is QM_DATA_TYPE.
The values for the domain are:
NUMBER,
VARCHAR2
DATE';
COMMENT ON COLUMN qm_objects.seal_flag IS E'SEAL_FLAG';

CREATE TABLE qm_object_ins (
	object_ins_id bigint NOT NULL,
	value varchar(999),
	process_ins_id bigint NOT NULL,
	object_id bigint NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_object_ins IS E'Instanciated value for object for the process instance';
COMMENT ON COLUMN qm_object_ins.create_datetime IS E'create time';
COMMENT ON COLUMN qm_object_ins.create_user_id IS E'create user';
COMMENT ON COLUMN qm_object_ins.modify_datetime IS E'modify time';
COMMENT ON COLUMN qm_object_ins.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_object_ins.object_id IS E'object ID ';
COMMENT ON COLUMN qm_object_ins.object_ins_id IS E'id for object instance';
COMMENT ON COLUMN qm_object_ins.process_ins_id IS E'ID of process instance';
COMMENT ON COLUMN qm_object_ins.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_object_ins.value IS E'value for object instance';

CREATE TABLE qm_object_ins_hist (
	object_ins_id bigint NOT NULL,
	value varchar(999),
	object_id bigint NOT NULL,
	process_ins_id bigint NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_object_ins_hist IS E'History object for object instance
Archived only when process archived.';
COMMENT ON COLUMN qm_object_ins_hist.create_datetime IS E'create time';
COMMENT ON COLUMN qm_object_ins_hist.create_user_id IS E'create user';
COMMENT ON COLUMN qm_object_ins_hist.modify_datetime IS E'modify time';
COMMENT ON COLUMN qm_object_ins_hist.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_object_ins_hist.object_id IS E'Object definition';
COMMENT ON COLUMN qm_object_ins_hist.object_ins_id IS E'object inst id';
COMMENT ON COLUMN qm_object_ins_hist.process_ins_id IS E'process instance ';
COMMENT ON COLUMN qm_object_ins_hist.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_object_ins_hist.value IS E'object instance value';

CREATE TABLE qm_processes (
	process_id bigint NOT NULL,
	name varchar(18) NOT NULL,
	description varchar(255),
	execution_type varchar(12) NOT NULL,
	location_type varchar(18) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	event_type varchar(20) NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_processes IS E'Process definition. The process is set of activity defined to run in parallel or sequence order. In order to finish execution of defined process end activity needs to be finished including all other activity needed to reach end activity.
Process could be defined to run activities in many location or to run activities only inside one location.
The same process could be used and managed in many locations.
Process has zero many objects to receive or send data.
Process can be run (instanciated) many times.';
COMMENT ON COLUMN qm_processes.active_flag IS E'Active Y/N';
COMMENT ON COLUMN qm_processes.create_datetime IS E'create time';
COMMENT ON COLUMN qm_processes.create_user_id IS E'create user';
COMMENT ON COLUMN qm_processes.description IS E'process description';
COMMENT ON COLUMN qm_processes.event_type IS E'Default Event_type which triggers process execution. The event_type is used in the table trigger during quiing in Oracle Adveance Queue.';
COMMENT ON COLUMN qm_processes.execution_type IS E'''PARALELL''  if all activities will be executed in parallel (immediately). Sequence is optional just for report purpose.
''SEQUENCE'' if activities will be executed one by one in sequence. Sequence is mandatory for activity execution.';
COMMENT ON COLUMN qm_processes.expiry_date IS E'used together with active flag ';
COMMENT ON COLUMN qm_processes.location_type IS E'SINGLE - for process execuluon in one location - all activities will be run inside one agency location
MULTY - for process execution in multy locations - activities will be run inside different agancy location';
COMMENT ON COLUMN qm_processes.modify_datetime IS E'modify time';
COMMENT ON COLUMN qm_processes.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_processes.name IS E'process name';
COMMENT ON COLUMN qm_processes.process_id IS E'ID for process';
COMMENT ON COLUMN qm_processes.seal_flag IS E'SEAL_FLAG';

CREATE TABLE qm_processes_ins (
	process_ins_id bigint NOT NULL,
	detail varchar(255) NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp,
	qm_proc_ins_status_domain varchar(12) NOT NULL,
	qm_proc_ins_status_code varchar(12) NOT NULL,
	process_id bigint NOT NULL,
	composition_id bigint NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_processes_ins IS E'Process instance is process we run';
COMMENT ON COLUMN qm_processes_ins.composition_id IS E'qm_manager who requested process run ';
COMMENT ON COLUMN qm_processes_ins.create_datetime IS E'create time';
COMMENT ON COLUMN qm_processes_ins.create_user_id IS E'create user';
COMMENT ON COLUMN qm_processes_ins.detail IS E'Process instance descriptor string used to differenciate process instancess.';
COMMENT ON COLUMN qm_processes_ins.end_time IS E'Process instance end time';
COMMENT ON COLUMN qm_processes_ins.modify_datetime IS E'modify time';
COMMENT ON COLUMN qm_processes_ins.modify_user_id IS E'modify user';
COMMENT ON COLUMN qm_processes_ins.process_id IS E'process definition';
COMMENT ON COLUMN qm_processes_ins.process_ins_id IS E'ID of process instance';
COMMENT ON COLUMN qm_processes_ins.qm_proc_ins_status_code IS E'Reference code for process instance domain';
COMMENT ON COLUMN qm_processes_ins.qm_proc_ins_status_domain IS E'The domain of the reference code for domain name QM_PROC_INS_STATUS.
The values for the domain are:
CREATED
READY
RUNNING
FINISHED
Process are in CREATED when record is inserted in  qm_process_ins but object are not created.
When all objects are created in qm_objects then process status is READY
When the first activity is started the process status is RUNNING
When the end activity is finished the process status is FINISHED';
COMMENT ON COLUMN qm_processes_ins.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_processes_ins.start_time IS E'Process instance start time.';

CREATE TABLE qm_processes_ins_hist (
	process_ins_id bigint NOT NULL,
	detail varchar(255) NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp,
	qm_proc_ins_status_domain varchar(12) NOT NULL,
	qm_proc_ins_status_code varchar(12) NOT NULL,
	process_id bigint NOT NULL,
	composition_id bigint NOT NULL,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE qm_processes_ins_hist IS E'History object for Process instance.
It can have only processes in FINISHED state ';
COMMENT ON COLUMN qm_processes_ins_hist.composition_id IS E'QM manager required process execution';
COMMENT ON COLUMN qm_processes_ins_hist.create_datetime IS E'cretae time';
COMMENT ON COLUMN qm_processes_ins_hist.create_user_id IS E'create user';
COMMENT ON COLUMN qm_processes_ins_hist.detail IS E'Process instance descriptor string used to differenciate process instancess.';
COMMENT ON COLUMN qm_processes_ins_hist.end_time IS E'Process instance end time';
COMMENT ON COLUMN qm_processes_ins_hist.modify_datetime IS E'Modify time';
COMMENT ON COLUMN qm_processes_ins_hist.modify_user_id IS E'Modify user';
COMMENT ON COLUMN qm_processes_ins_hist.process_id IS E'process definition';
COMMENT ON COLUMN qm_processes_ins_hist.process_ins_id IS E'process instance ID';
COMMENT ON COLUMN qm_processes_ins_hist.qm_proc_ins_status_code IS E'Reference code for domain QM_PROC_INS_STATUS';
COMMENT ON COLUMN qm_processes_ins_hist.qm_proc_ins_status_domain IS E'The domain of the reference code QM_PROC_INS_STATUS';
COMMENT ON COLUMN qm_processes_ins_hist.seal_flag IS E'SEAL_FLAG';
COMMENT ON COLUMN qm_processes_ins_hist.start_time IS E'process instance start time';

CREATE TABLE qm_queuetable (
	q_name varchar(30),
	msgid bytea NOT NULL,
	corrid varchar(128),
	priority bigint,
	state bigint,
	delay timestamp,
	expiration bigint,
	time_manager_info timestamp,
	local_order_no bigint,
	chain_no bigint,
	cscn bigint,
	dscn bigint,
	enq_time timestamp,
	enq_uid varchar(30),
	enq_tid varchar(30),
	deq_time timestamp,
	deq_uid varchar(30),
	deq_tid varchar(30),
	retry_count bigint,
	exception_qschema varchar(30),
	exception_queue varchar(30),
	step_no bigint,
	recipient_key bigint,
	dequeue_msgid bytea,
	sender_name varchar(30),
	sender_address varchar(1024),
	sender_protocol bigint,
	user_data varchar(4000),
	user_prop varchar(4000)
)  TABLESPACE TAG_WF;

CREATE TABLE questionnaires (
	questionnaire_id bigint NOT NULL,
	questionnaire_category varchar(12) NOT NULL,
	code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	description varchar(120),
	list_seq integer NOT NULL,
	expiry_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE questionnaires IS E'The questionniare for such as incident cases.  ';
COMMENT ON COLUMN questionnaires.active_flag IS E'? if the questionnaire active';
COMMENT ON COLUMN questionnaires.code IS E'questionnaire Code for different parts of questionnaire ie.  Type, Section, Category, Indicator.';
COMMENT ON COLUMN questionnaires.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN questionnaires.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN questionnaires.description IS E'Description of the questionnaire';
COMMENT ON COLUMN questionnaires.expiry_date IS E'expiry date of the questionnaire';
COMMENT ON COLUMN questionnaires.list_seq IS E'The listing order';
COMMENT ON COLUMN questionnaires.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN questionnaires.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN questionnaires.questionnaire_category IS E'Reference Code [ QUE_CLS ] : QUESTIONNAIRE Class Such as (Category, type, Question, Answer/response)';
COMMENT ON COLUMN questionnaires.questionnaire_id IS E'System generated identifier for an questionnaire.';

CREATE TABLE questionnaire_answers (
	questionnaire_ans_id bigint NOT NULL,
	questionnaire_que_id bigint NOT NULL,
	next_questionnaire_que_id bigint,
	ans_seq integer NOT NULL,
	description varchar(80) NOT NULL,
	list_seq integer NOT NULL DEFAULT 1,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	date_required_flag varchar(1) DEFAULT 'N',
	comment_required_flag varchar(1) DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	score integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE questionnaire_answers IS E'Template for performing offender questionnaire_answers.';
COMMENT ON COLUMN questionnaire_answers.active_flag IS E'If the code active ?';
COMMENT ON COLUMN questionnaire_answers.ans_seq IS E'The answer code such as 1,2,3 or a,b,c';
COMMENT ON COLUMN questionnaire_answers.comment_required_flag IS E'Should the answer include Comment?';
COMMENT ON COLUMN questionnaire_answers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN questionnaire_answers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN questionnaire_answers.date_required_flag IS E'Should the answer include date information?';
COMMENT ON COLUMN questionnaire_answers.description IS E'Description of QUESTIONNAIRE code.';
COMMENT ON COLUMN questionnaire_answers.expiry_date IS E'Effective date for QUESTIONNAIRE type.';
COMMENT ON COLUMN questionnaire_answers.list_seq IS E'Listing Order ( 0 imply Default Value )';
COMMENT ON COLUMN questionnaire_answers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN questionnaire_answers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN questionnaire_answers.next_questionnaire_que_id IS E'Next questionnaire question';
COMMENT ON COLUMN questionnaire_answers.questionnaire_ans_id IS E'FK to the questionnaire question';
COMMENT ON COLUMN questionnaire_answers.questionnaire_que_id IS E'PK of the questionnaire Answer';

CREATE TABLE questionnaire_questions (
	questionnaire_que_id bigint NOT NULL,
	questionnaire_id bigint NOT NULL,
	que_seq integer NOT NULL,
	description varchar(120) NOT NULL,
	list_seq integer NOT NULL DEFAULT 1,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	multiple_answer_flag varchar(1) DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE questionnaire_questions IS E'Template for performing offender questionnaire_questions.';
COMMENT ON COLUMN questionnaire_questions.active_flag IS E'If the code active ?';
COMMENT ON COLUMN questionnaire_questions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN questionnaire_questions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN questionnaire_questions.description IS E'Description of QUESTIONNAIRE code.';
COMMENT ON COLUMN questionnaire_questions.expiry_date IS E'Effective date for QUESTIONNAIRE type.';
COMMENT ON COLUMN questionnaire_questions.list_seq IS E'Listing Order ( 0 imply Default Value )';
COMMENT ON COLUMN questionnaire_questions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN questionnaire_questions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN questionnaire_questions.multiple_answer_flag IS E'If the question allows multiple answers';
COMMENT ON COLUMN questionnaire_questions.que_seq IS E'The question code such as 1,2,3 or a,b,c';
COMMENT ON COLUMN questionnaire_questions.questionnaire_id IS E'System generated identifier for an questionnaire.';
COMMENT ON COLUMN questionnaire_questions.questionnaire_que_id IS E'PK of the questionnaire question';

CREATE TABLE questionnaire_roles (
	questionnaire_id bigint NOT NULL,
	participation_role varchar(12) NOT NULL,
	single_role_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	list_seq integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE questionnaire_roles IS E'The party roles on a questionnaire';
COMMENT ON COLUMN questionnaire_roles.active_flag IS E'If the record active';
COMMENT ON COLUMN questionnaire_roles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN questionnaire_roles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN questionnaire_roles.expiry_date IS E'The expiry if the record is inactive';
COMMENT ON COLUMN questionnaire_roles.list_seq IS E'The listing order';
COMMENT ON COLUMN questionnaire_roles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN questionnaire_roles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN questionnaire_roles.participation_role IS E'Reference Code (IR_OFF_ROLE)';
COMMENT ON COLUMN questionnaire_roles.questionnaire_id IS E'Reference Code (IR_TYPE)';
COMMENT ON COLUMN questionnaire_roles.single_role_flag IS E'If a single party can have this role in the incident case';

CREATE TABLE questionnair_categories (
	question_category_id bigint NOT NULL,
	question_type varchar(12) NOT NULL,
	question_sub_type varchar(12) NOT NULL,
	category_sequence integer DEFAULT 1,
	category_active_flag varchar(1) NOT NULL DEFAULT 'Y',
	description varchar(60) NOT NULL,
	expiry_date timestamp,
	update_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN questionnair_categories.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN questionnair_categories.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN questionnair_categories.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN questionnair_categories.modify_user_id IS E'The user who modifies the record';

CREATE TABLE questionnair_types (
	question_type varchar(12) NOT NULL,
	question_sub_type varchar(12) NOT NULL,
	sequence_number integer DEFAULT 1,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	update_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN questionnair_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN questionnair_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN questionnair_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN questionnair_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE quick_book_living_units_tmp (
	living_unit_id integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE quick_book_living_units_tmp IS E'A temporary table used in Offender Quick Book Screen for validating the living unit capacity.';

CREATE TABLE quick_book_parameters (
	caseload_id varchar(12) NOT NULL,
	sex_code varchar(12) NOT NULL,
	birth_date timestamp NOT NULL,
	birth_country_code varchar(12) NOT NULL,
	booking_no varchar(12) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	living_unit_id varchar(6) NOT NULL,
	trust_account_flag varchar(1) NOT NULL,
	txn_entry_amount decimal(11,2) NOT NULL,
	id_source_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE random_testing_programs (
	rtp_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	rtp_date timestamp NOT NULL,
	main_percentage smallint NOT NULL,
	reserve_percentage smallint NOT NULL,
	selections_count integer,
	eligible_count integer,
	reserve_count integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN random_testing_programs.caseload_id IS E'The caseload of the programme';
COMMENT ON COLUMN random_testing_programs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN random_testing_programs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN random_testing_programs.eligible_count IS E'Number of eligible offenders at generation of random list';
COMMENT ON COLUMN random_testing_programs.main_percentage IS E'Required % for main selection';
COMMENT ON COLUMN random_testing_programs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN random_testing_programs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN random_testing_programs.reserve_count IS E'Number of selections on reserve list';
COMMENT ON COLUMN random_testing_programs.reserve_percentage IS E'Required % for reserve selection';
COMMENT ON COLUMN random_testing_programs.rtp_date IS E'Date of random testing programme';
COMMENT ON COLUMN random_testing_programs.rtp_id IS E'Id of random testing programme';
COMMENT ON COLUMN random_testing_programs.selections_count IS E'Number of selections on main list';

CREATE TABLE receipt_num_tmp (
	receipt_num bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE recommendations (
	recommend_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	list_seq integer,
	youth_adult_code varchar(12),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE recommendations IS E'- Retrofitted';
COMMENT ON COLUMN recommendations.active_flag IS E' - Column already exists';
COMMENT ON COLUMN recommendations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN recommendations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN recommendations.description IS E' - Column already exists';
COMMENT ON COLUMN recommendations.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN recommendations.list_seq IS E' - Column already exists';
COMMENT ON COLUMN recommendations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN recommendations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN recommendations.recommend_code IS E' - Column already exists';
COMMENT ON COLUMN recommendations.update_allowed_flag IS E' - Column already exists';
COMMENT ON COLUMN recommendations.youth_adult_code IS E'Reference Code ( YOUTH_ADULT )';

CREATE TABLE reference_codes (
	domain varchar(12) NOT NULL,
	code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	system_data_flag varchar(1) NOT NULL DEFAULT 'Y',
	modify_user_id varchar(32),
	expired_date timestamp,
	new_code varchar(12),
	parent_code varchar(12),
	parent_domain varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE reference_codes IS E'The reference codes- Retrofitted- Retrofitted';
COMMENT ON COLUMN reference_codes.active_flag IS E'Is the code active ?';
COMMENT ON COLUMN reference_codes.code IS E'Reference code';
COMMENT ON COLUMN reference_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN reference_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN reference_codes.description IS E'Description of the code';
COMMENT ON COLUMN reference_codes.domain IS E'The domain of the reference code';
COMMENT ON COLUMN reference_codes.expired_date IS E'The date which the code is no longer used';
COMMENT ON COLUMN reference_codes.list_seq IS E'Listing order of the code (It for controlling the order of listing in LOV).  If the value is "0", then it is taken as the default for this domain';
COMMENT ON COLUMN reference_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN reference_codes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN reference_codes.new_code IS E'The new code used for replacing this code';
COMMENT ON COLUMN reference_codes.parent_code IS E'Parent Code in hierarchical structure';
COMMENT ON COLUMN reference_codes.system_data_flag IS E'If the code system data ? (if yes, code value can not be changed) ';

CREATE TABLE reference_domains (
	domain varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	domain_status varchar(12) NOT NULL,
	owner_code varchar(12) NOT NULL,
	appln_code varchar(12) NOT NULL,
	old_code_table varchar(40),
	parent_domain varchar(12),
	code_length smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	super_set_domain varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE reference_domains IS E'The reference doamin- Retrofitted- Retrofitted';
COMMENT ON COLUMN reference_domains.appln_code IS E'Reference Code ( APPLN ) Business Application Which uses the Domain';
COMMENT ON COLUMN reference_domains.code_length IS E'The length of the code in previous version';
COMMENT ON COLUMN reference_domains.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN reference_domains.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN reference_domains.description IS E'Description of the Domain';
COMMENT ON COLUMN reference_domains.domain IS E'Domain of the Reference Code';
COMMENT ON COLUMN reference_domains.domain_status IS E'Reference Code ( DOMAIN_STS ) Status of the Domain';
COMMENT ON COLUMN reference_domains.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN reference_domains.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN reference_domains.old_code_table IS E'The name of the old table in Previous Version';
COMMENT ON COLUMN reference_domains.owner_code IS E'Reference Code ( USER_CLS ) : Domain Owner Type (Party who have the right to modify codes)';
COMMENT ON COLUMN reference_domains.parent_domain IS E'The parent domain of this domain (It is for modeling hierachical structure of domain)';

CREATE TABLE referral_staff_categories (
	ref_staff_cat_id integer NOT NULL,
	staff_category varchar(12) NOT NULL,
	status varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE release_date_labels (
	label_field smallint NOT NULL,
	date_label varchar(32) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32) DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE release_date_labels IS E'Ontario Release Schedule Date Labels setup.';
COMMENT ON COLUMN release_date_labels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN release_date_labels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN release_date_labels.date_label IS E'User-Definable label for date fields';
COMMENT ON COLUMN release_date_labels.label_field IS E'System assigns a Sequence number (1,2,3 or 4) after Date Label is commited; these Sequence #"s correspond to the 4th, 5th, 6th, and 7th fields of the 2nd block of OIDRELSO.';
COMMENT ON COLUMN release_date_labels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN release_date_labels.modify_user_id IS E'The user who modifies the record';

CREATE TABLE release_date_label_details (
	label_field smallint NOT NULL,
	priority_seq smallint NOT NULL,
	label_seq smallint NOT NULL,
	table_name varchar(30) NOT NULL,
	column_name varchar(30) NOT NULL,
	column_earliest_flag varchar(1) NOT NULL DEFAULT 'Y',
	column_latest_flag varchar(1) NOT NULL DEFAULT 'N',
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE release_date_label_details IS E'user enters table and column from which the field is to draw the date.';
COMMENT ON COLUMN release_date_label_details.column_earliest_flag IS E'defaults to checked; means that if > 1 date  has been returned for that particular column in that particular table, the earliest of that dates retrieved; if user unchecks this, the  latest of that dates retrieved.';
COMMENT ON COLUMN release_date_label_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN release_date_label_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN release_date_label_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN release_date_label_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE release_date_label_priorities (
	label_field smallint NOT NULL,
	priority_seq smallint NOT NULL,
	column_earliest_flag varchar(1) NOT NULL DEFAULT 'N',
	column_latest_flag varchar(1) NOT NULL DEFAULT 'N',
	modify_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32) DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN release_date_label_priorities.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN release_date_label_priorities.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN release_date_label_priorities.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN release_date_label_priorities.modify_user_id IS E'The user who modifies the record';

CREATE TABLE release_plans (
	release_plan_id bigint NOT NULL,
	case_manager_id bigint,
	offender_book_id bigint,
	parole_agent_id bigint,
	plan_status varchar(12),
	memo_text varchar(100),
	address_id bigint,
	housing_comment varchar(100),
	employ_seq bigint,
	employment_status varchar(12),
	employment_comment varchar(100),
	agent_recommend varchar(4000),
	assessment_seq bigint,
	proposed_housing varchar(1000),
	proposed_employment varchar(1000),
	address_type varchar(40),
	updated_by varchar(32),
	ta_type varchar(12),
	sponsor varchar(240),
	proposed_start_date timestamp,
	proposed_end_date timestamp,
	create_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE remitters (
	remitter_id bigint NOT NULL,
	last_name varchar(35) NOT NULL,
	first_name varchar(35) NOT NULL,
	middle_name varchar(30),
	address varchar(40),
	city varchar(25),
	country_code varchar(12),
	prov_state_code varchar(12),
	zip_state_code varchar(12),
	home_phone varchar(8),
	home_phone_area varchar(4),
	home_phone_ext varchar(4),
	bus_phone varchar(8),
	bus_phone_area varchar(4),
	bus_phone_ext varchar(4),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN remitters.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN remitters.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN remitters.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN remitters.modify_user_id IS E'The user who modifies the record';

CREATE TABLE rep (
	rep_num bigint NOT NULL,
	rep_name varchar(100) NOT NULL,
	rep_title varchar(256) NOT NULL,
	rep_server varchar(100),
	rep_destype varchar(20) NOT NULL DEFAULT 'CACHE',
	rep_desname varchar(256),
	rep_desformat varchar(20) NOT NULL DEFAULT 'PDF',
	rep_exec_mode varchar(30) NOT NULL DEFAULT 'ASYNCHRONOUS',
	rep_comm_mode varchar(15) NOT NULL DEFAULT 'BATCH',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN rep.rep_comm_mode IS E'Report communication mode';
COMMENT ON COLUMN rep.rep_desformat IS E'Report destination format';
COMMENT ON COLUMN rep.rep_desname IS E'Report destination name';
COMMENT ON COLUMN rep.rep_destype IS E'Report destination type';
COMMENT ON COLUMN rep.rep_exec_mode IS E'Report execution mode';
COMMENT ON COLUMN rep.rep_name IS E'Report name';
COMMENT ON COLUMN rep.rep_num IS E'Report number';
COMMENT ON COLUMN rep.rep_server IS E'Report server name';
COMMENT ON COLUMN rep.rep_title IS E'Report title';

CREATE TABLE reports (
	report_id bigint NOT NULL,
	rep_code varchar(12) NOT NULL,
	rule_base varchar(12) NOT NULL,
	condition_flag bigint NOT NULL DEFAULT 1,
	tph1 varchar(4000),
	tph2 varchar(4000),
	tph3 varchar(4000),
	tph4 varchar(4000),
	tph5 varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE reports IS E'Lists all pre-defined Licence Reports data definition or any future reports';
COMMENT ON COLUMN reports.condition_flag IS E'Optional Condition for the report ';
COMMENT ON COLUMN reports.rep_code IS E'Report code, e.g. LICENCE ';
COMMENT ON COLUMN reports.report_id IS E'PK field';
COMMENT ON COLUMN reports.rule_base IS E'Report rule, e.g. AC ';
COMMENT ON COLUMN reports.tph1 IS E'Long piece of text 1 used to populate header or footer of the report, e.g. Title';
COMMENT ON COLUMN reports.tph2 IS E'Long piece of text 2 used to populate header or footer of the report, e.g. Sub-Title';
COMMENT ON COLUMN reports.tph3 IS E'Long piece of text 3 used to populate header or footer of the report, e.g. Footer-comment1';
COMMENT ON COLUMN reports.tph4 IS E'Long piece of text 4 used to populate header or footer of the report, e.g. Footer-comment2';
COMMENT ON COLUMN reports.tph5 IS E'Long piece of text 5 used to populate header or footer of the report, e.g. Footer-comment3';

CREATE TABLE report_paragraphs (
	paragraph_id bigint NOT NULL,
	report_id bigint,
	parent_paragraph_id bigint,
	extra_condition varchar(12),
	mandatory_condition bigint DEFAULT 0,
	repeated bigint NOT NULL DEFAULT 0,
	content_hjust bigint DEFAULT 3,
	content_font varchar(12) DEFAULT 'Arial',
	paragraph_type varchar(12) DEFAULT 'AUTO',
	bullet varchar(12) DEFAULT '=',
	bullet_separator varchar(12) DEFAULT '.',
	content_text1 varchar(4000),
	content_text2 varchar(4000),
	content_text3 varchar(4000),
	content_text4 varchar(4000),
	content_text5 varchar(4000),
	content_text6 varchar(4000),
	content_text7 varchar(4000),
	content_text8 varchar(4000),
	content_text9 varchar(4000),
	content_text10 varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE report_paragraphs IS E'Lists all paragraphs and sub-paragraphs within a pre-defined Licence Report';
COMMENT ON COLUMN report_paragraphs.bullet IS E'bullet character, displayed normally in Webdings font';
COMMENT ON COLUMN report_paragraphs.bullet_separator IS E'concatenated to bullet if required, e.g. fullstop character';
COMMENT ON COLUMN report_paragraphs.content_font IS E'Boilertext Font, Arial or Webdings (used for bullet)';
COMMENT ON COLUMN report_paragraphs.content_hjust IS E'Boilertext horizontal adjustement: Left=0, Center=1, Right=2, Flush=3';
COMMENT ON COLUMN report_paragraphs.content_text1 IS E'paragraph content 1: contents 1 to 5 exist in the Licence reports with different font formats';
COMMENT ON COLUMN report_paragraphs.content_text10 IS E'paragraph content 10';
COMMENT ON COLUMN report_paragraphs.content_text2 IS E'paragraph content 2';
COMMENT ON COLUMN report_paragraphs.content_text3 IS E'paragraph content 3';
COMMENT ON COLUMN report_paragraphs.content_text4 IS E'paragraph content 4';
COMMENT ON COLUMN report_paragraphs.content_text5 IS E'paragraph content 5';
COMMENT ON COLUMN report_paragraphs.content_text6 IS E'paragraph content 6';
COMMENT ON COLUMN report_paragraphs.content_text7 IS E'paragraph content 7';
COMMENT ON COLUMN report_paragraphs.content_text8 IS E'paragraph content 8';
COMMENT ON COLUMN report_paragraphs.content_text9 IS E'paragraph content 9';
COMMENT ON COLUMN report_paragraphs.extra_condition IS E'Used to match Licence conditions (performed in PL/SQL TAG_REPORTS package)';
COMMENT ON COLUMN report_paragraphs.mandatory_condition IS E'0: optional, validated in TAG_REPORTS, 1: always displayed in the report ';
COMMENT ON COLUMN report_paragraphs.paragraph_id IS E'PK field';
COMMENT ON COLUMN report_paragraphs.paragraph_type IS E'AUTO, REP_BULLETS, BULLET, NORMAL: bulleted paragraph or plain paragraph';
COMMENT ON COLUMN report_paragraphs.parent_paragraph_id IS E'FK to REPORT_PARAGRAPHS PK, e.g. used for sub-paragraphs of a paragraph';
COMMENT ON COLUMN report_paragraphs.repeated IS E'0: No, the paragraph is read only once, 1: Yes, the paragraph is repeated for each found record';
COMMENT ON COLUMN report_paragraphs.report_id IS E'FK to REPORTS PK';

CREATE TABLE report_placeholders (
	mapping_id bigint NOT NULL,
	paragraph_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE report_placeholders IS E'Attach placeholder mapping fields to identified report paragraphs';
COMMENT ON COLUMN report_placeholders.mapping_id IS E'PK field, FK to REPORT_PLACEHOLDER_MAPPING PK';
COMMENT ON COLUMN report_placeholders.paragraph_id IS E'PK field, FK to REPORT_PARAGRAPH';

CREATE TABLE report_placeholder_mappings (
	mapping_id bigint NOT NULL,
	field_name varchar(40),
	placeholder varchar(80),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE report_placeholder_mappings IS E'Lists all placeholder to data fields mapping data used throughout all the reports';
COMMENT ON COLUMN report_placeholder_mappings.field_name IS E'Name or alias used at runtime in SQL query';
COMMENT ON COLUMN report_placeholder_mappings.mapping_id IS E'PK field';
COMMENT ON COLUMN report_placeholder_mappings.placeholder IS E'Placeholder within the REPORT_PARAGRAPH content_text(1 to 10) fields';

CREATE TABLE rep_param (
	rep_num bigint NOT NULL,
	rep_par_rep_name varchar(30) NOT NULL,
	rep_par_order smallint NOT NULL DEFAULT 1,
	rep_par_title varchar(256) NOT NULL,
	rep_par_type varchar(20) NOT NULL DEFAULT 'CHAR',
	rep_par_lov varchar(2000),
	rep_par_validation varchar(512),
	rep_par_default varchar(256),
	rep_par_hint varchar(128),
	rep_par_errmsg varchar(256),
	rep_par_case varchar(1) NOT NULL DEFAULT 'M',
	rep_par_format_mask varchar(50),
	rep_par_required varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN rep_param.rep_num IS E'Report number';
COMMENT ON COLUMN rep_param.rep_par_case IS E'Report parameter case';
COMMENT ON COLUMN rep_param.rep_par_default IS E'Report parameter default value';
COMMENT ON COLUMN rep_param.rep_par_errmsg IS E'Report parameter error message';
COMMENT ON COLUMN rep_param.rep_par_format_mask IS E'Report parameter format mask';
COMMENT ON COLUMN rep_param.rep_par_hint IS E'Report parameter hint';
COMMENT ON COLUMN rep_param.rep_par_lov IS E'Report parameter Select order for LOV';
COMMENT ON COLUMN rep_param.rep_par_order IS E'Report parameter order by';
COMMENT ON COLUMN rep_param.rep_par_rep_name IS E'Report parameter name';
COMMENT ON COLUMN rep_param.rep_par_required IS E'Report parameter is required';
COMMENT ON COLUMN rep_param.rep_par_title IS E'Report parameter title';
COMMENT ON COLUMN rep_param.rep_par_type IS E'Report parameter datatype';
COMMENT ON COLUMN rep_param.rep_par_validation IS E'Report parameter validation rule';

CREATE TABLE request_inst_tmp (
	agy_loc_id varchar(6),
	living_unit_id_1 bigint,
	living_unit_id_2 bigint,
	living_unit_id_3 bigint,
	living_unit_id_4 bigint,
	req_status varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN request_inst_tmp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN request_inst_tmp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN request_inst_tmp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN request_inst_tmp.modify_user_id IS E'The user who modifies the record';

CREATE TABLE reserve_bed_locations (
	agy_loc_id varchar(6) NOT NULL,
	living_unit_id bigint NOT NULL,
	reserve_until_date timestamp NOT NULL,
	remove_reason varchar(6),
	comment_text varchar(240),
	offender_id bigint,
	reserve_bed_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN reserve_bed_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN reserve_bed_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN reserve_bed_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN reserve_bed_locations.modify_user_id IS E'The user who modifies the record';

CREATE TABLE response_authority_locations (
	response_auth_loc_id bigint NOT NULL,
	response_authurity_code varchar(12) NOT NULL,
	response_location_id varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN response_authority_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN response_authority_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN response_authority_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN response_authority_locations.modify_user_id IS E'The user who modifies the record';

CREATE TABLE response_authurity_members (
	response_auth_member_id bigint NOT NULL,
	response_authurity_code varchar(12) NOT NULL,
	response_member_id integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN response_authurity_members.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN response_authurity_members.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN response_authurity_members.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN response_authurity_members.modify_user_id IS E'The user who modifies the record';

CREATE TABLE response_authurity_times (
	response_auth_time_id bigint NOT NULL,
	response_authurity_code varchar(12) NOT NULL,
	response_time_slot timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN response_authurity_times.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN response_authurity_times.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN response_authurity_times.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN response_authurity_times.modify_user_id IS E'The user who modifies the record';

CREATE TABLE results_system_profiles_codes (
	module_name varchar(40) NOT NULL,
	profile_type varchar(20) NOT NULL,
	profile_code varchar(20) NOT NULL,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE risk_assessment_parameters (
	risk_assessment_parameter_id smallint NOT NULL,
	factor varchar(20) NOT NULL,
	category varchar(2) NOT NULL,
	response varchar(1),
	upper_limit integer,
	current_offence varchar(10),
	parameter_value decimal(8,5) NOT NULL,
	multiplier_value decimal(8,5) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE role_inaccessible_ref_codes (
	role_id bigint NOT NULL,
	domain varchar(12) NOT NULL,
	code varchar(12) NOT NULL,
	module_name varchar(20) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN role_inaccessible_ref_codes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN role_inaccessible_ref_codes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN role_inaccessible_ref_codes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN role_inaccessible_ref_codes.modify_user_id IS E'The user who modifies the record';

CREATE TABLE routes (
	route_name varchar(20) NOT NULL,
	travel_time varchar(6),
	remarks varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	description varchar(40),
	expiry_date timestamp,
	no_stops smallint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	stop_agy_loc_id varchar(6),
	start_agy_loc_id varchar(6)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE routes IS E'- Retrofitted';
COMMENT ON COLUMN routes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN routes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN routes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN routes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN routes.remarks IS E'Remarks - Retrofitted';
COMMENT ON COLUMN routes.route_name IS E'Route Name - Retrofitted';
COMMENT ON COLUMN routes.travel_time IS E'Total Travel Time - Retrofitted';

CREATE TABLE route_legs (
	route_name varchar(20) NOT NULL,
	route_leg_seq integer NOT NULL,
	from_location_id varchar(12) NOT NULL,
	to_location_id varchar(12) NOT NULL,
	schedule_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE route_legs IS E'- Retrofitted';
COMMENT ON COLUMN route_legs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN route_legs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN route_legs.from_location_id IS E'From - Retrofitted';
COMMENT ON COLUMN route_legs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN route_legs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN route_legs.route_leg_seq IS E'Leg Sequence - Retrofitted';
COMMENT ON COLUMN route_legs.route_name IS E'Route Name - Retrofitted';
COMMENT ON COLUMN route_legs.to_location_id IS E'To - Retrofitted';

CREATE TABLE route_stop_details (
	route_name varchar(12) NOT NULL,
	leg_id smallint NOT NULL,
	leg_seq smallint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	count_flag varchar(1) NOT NULL DEFAULT 'N',
	intake_loc_flag varchar(1) NOT NULL DEFAULT 'N',
	overnight_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE rp_other_occupants (
	rp_other_occupant_id bigint NOT NULL,
	release_plan_id bigint,
	offender_contact_person_id bigint,
	contacted_flag varchar(1),
	rp_comment varchar(240),
	primary_flag varchar(1),
	contact_phone varchar(40),
	ext_no varchar(7),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE safe_floor_plan (
	floor_plan_id numeric(20) NOT NULL,
	image_id bigint,
	root_floor_plan char(1),
	parent_floor_plan numeric(20),
	agy_loc_id varchar(20),
	bread_crumb_nav_id numeric(20)
)  TABLESPACE TAG_DATA;

CREATE TABLE sales_maintenances (
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	pass_quantity_field_flag varchar(1) NOT NULL DEFAULT 'N',
	group_like_item_flag varchar(1) NOT NULL DEFAULT 'N',
	sound_alert_flag varchar(1) NOT NULL DEFAULT 'Y',
	user_acknowledge_flag varchar(1) NOT NULL DEFAULT 'Y',
	exception_recorded_flag varchar(1) NOT NULL DEFAULT 'N',
	auto_sale_receipt_flag varchar(1) NOT NULL DEFAULT 'Y',
	sale_receipt_name varchar(20) NOT NULL DEFAULT 'OOROSREC',
	sale_receipt_copy smallint NOT NULL DEFAULT 2,
	display_receipt_comment_flag varchar(1) NOT NULL DEFAULT 'Y',
	print_receipt_balance_flag varchar(1) NOT NULL DEFAULT 'Y',
	auto_return_receipt_flag varchar(1) NOT NULL DEFAULT 'Y',
	return_receipt_name varchar(20) NOT NULL DEFAULT 'OORORREC',
	return_receipt_copy smallint NOT NULL DEFAULT 2,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN sales_maintenances.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sales_maintenances.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sales_maintenances.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sales_maintenances.modify_user_id IS E'The user who modifies the record';

CREATE TABLE sales_orders (
	sales_order_id bigint NOT NULL,
	offender_id bigint,
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	person_id bigint,
	trust_account_code integer,
	offender_begin_balance decimal(11,2),
	sale_date timestamp NOT NULL,
	needs_to_be_filled_flag varchar(1) NOT NULL DEFAULT 'Y',
	sale_type varchar(12) NOT NULL,
	sale_txn_type varchar(12),
	debt_amount decimal(11,2),
	comment_text varchar(240),
	sale_loc_id varchar(6),
	spending_limit_balance decimal(11,2),
	sale_time timestamp,
	trust_caseload_id varchar(6),
	txn_id bigint,
	txn_entry_seq integer DEFAULT 1,
	seal_flag varchar(1),
	login_barcode integer,
	staff_barcode integer,
	picklist_datetime timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE sales_orders IS E'- Retrofitted';
COMMENT ON COLUMN sales_orders.caseload_id IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.needs_to_be_filled_flag IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.offender_begin_balance IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.offender_id IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.person_id IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.sale_date IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.sale_type IS E'Reference Code ( SALES_TYPE )';
COMMENT ON COLUMN sales_orders.sales_order_id IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.stock_loc_id IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.trust_account_code IS E' - Column already exists';
COMMENT ON COLUMN sales_orders.trust_caseload_id IS E'centralized commissary modification';
COMMENT ON COLUMN sales_orders.txn_entry_seq IS E'centralized commissary modification';
COMMENT ON COLUMN sales_orders.txn_id IS E'centralized commissary modification';

CREATE TABLE sales_order_items (
	sales_order_id bigint NOT NULL,
	sales_item_seq integer NOT NULL,
	trust_account_code integer,
	stock_item_id bigint NOT NULL,
	quantity smallint NOT NULL,
	unit_price decimal(9,2) NOT NULL,
	tax_1_amount decimal(12,2),
	tax_2_amount decimal(12,2),
	tax_3_amount decimal(12,2),
	unit_cost bigint NOT NULL,
	quantity_returned smallint,
	unit_deposit_cost decimal(9,2),
	indigent_flag varchar(1) NOT NULL,
	comment_text varchar(40),
	seal_flag varchar(1),
	picklist_qty_returned smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE sales_order_items_picklist_tmp (
	sales_order_id bigint NOT NULL,
	sales_item_seq integer NOT NULL,
	trust_account_code integer,
	stock_item_id bigint NOT NULL,
	quantity smallint NOT NULL,
	unit_price decimal(9,2) NOT NULL,
	tax_1_amount decimal(12,2),
	tax_2_amount decimal(12,2),
	tax_3_amount decimal(12,2),
	unit_cost decimal(9,2) NOT NULL,
	quantity_returned smallint,
	unit_deposit_cost decimal(9,2),
	indigent_flag varchar(1) NOT NULL,
	comment_text varchar(40),
	picklist_qty_returned smallint,
	stock_item_code varchar(13),
	upc_code varchar(40),
	item_name varchar(40),
	pick_slip_flag varchar(1),
	session_id bigint,
	stock_item_location1 varchar(15),
	txn_upc_code varchar(14),
	txn_qty_picked smallint,
	txn_qty_returned smallint,
	seal_flag varchar(1),
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	create_datetime timestamp DEFAULT CURRENT_TIMESTAMP
)  TABLESPACE TAG_DATA;

CREATE TABLE sale_receipt_comments (
	sales_order_id bigint,
	stock_item_id bigint NOT NULL,
	message_number integer NOT NULL,
	message_parameter_1 varchar(240),
	message_parameter_2 varchar(240),
	stock_item_code varchar(13),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN sale_receipt_comments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sale_receipt_comments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sale_receipt_comments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sale_receipt_comments.modify_user_id IS E'The user who modifies the record';

CREATE TABLE sample (
	stg_id bigint NOT NULL,
	seq integer NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE sanction_notices (
	sanction_notice_code varchar(12) NOT NULL,
	late_days integer NOT NULL,
	description varchar(40) NOT NULL,
	active_flag varchar(1) DEFAULT 'Y',
	seq_num smallint NOT NULL,
	update_allowed_flag varchar(1) DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN sanction_notices.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sanction_notices.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sanction_notices.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sanction_notices.modify_user_id IS E'The user who modifies the record';

CREATE TABLE scheduled_trips (
	scheduled_trip_id bigint NOT NULL,
	trip_code varchar(6) NOT NULL,
	route_name varchar(12) NOT NULL,
	departure_date timestamp NOT NULL,
	completion_date timestamp NOT NULL,
	cancel_flag varchar(1) NOT NULL DEFAULT 'N',
	cancel_by varchar(32),
	cancel_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	est_departure_time timestamp,
	est_completion_time timestamp,
	status varchar(12),
	act_departure_time timestamp,
	act_completion_time timestamp,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE scheduled_trip_assignments (
	scheduled_trip_id bigint NOT NULL,
	assignment_type varchar(12) NOT NULL,
	assigned_id bigint NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE scheduled_trip_details (
	scheduled_trip_id bigint NOT NULL,
	action_type varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	seal_flag varchar(1),
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE scheduled_trip_parameters (
	trip_code varchar(6) NOT NULL,
	week_no smallint NOT NULL,
	sunday varchar(12),
	monday varchar(12),
	tuesday varchar(12),
	wednesday varchar(12),
	thursday varchar(12),
	friday varchar(12),
	saturday varchar(12),
	est_departure_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE security_threat_groups (
	stg_id bigint NOT NULL,
	stg_level varchar(12) NOT NULL,
	stg_code varchar(20) NOT NULL,
	description varchar(100) NOT NULL,
	parent_stg_id bigint,
	list_seq integer,
	effective_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	history_text varchar(4000),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	expiry_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE security_threat_groups_hty (
	stg_id bigint NOT NULL,
	hty_seq integer NOT NULL,
	list_seq integer,
	effective_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	action varchar(10) NOT NULL,
	from_stg_level varchar(12) NOT NULL,
	to_stg_level varchar(12) NOT NULL,
	from_p_stg_id bigint NOT NULL,
	to_p_stg_id bigint NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE sentence_adjustments (
	sentence_adjust_code varchar(12) NOT NULL,
	description varchar(80) NOT NULL,
	debit_credit_code varchar(12),
	usage_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	expiry_date timestamp,
	active_flag varchar(1) DEFAULT 'Y',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE sentence_adjustments IS E'This Table stores the details of the Sentence Adjustment Types';
COMMENT ON COLUMN sentence_adjustments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sentence_adjustments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sentence_adjustments.debit_credit_code IS E'Either CR or DR';
COMMENT ON COLUMN sentence_adjustments.description IS E'Description of the Adjustment code';
COMMENT ON COLUMN sentence_adjustments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sentence_adjustments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN sentence_adjustments.sentence_adjust_code IS E'Adjustment Code';
COMMENT ON COLUMN sentence_adjustments.usage_code IS E'The source code for the adjustment Refence Domain : [ADJ_SRC]';

CREATE TABLE sentence_calc_types (
	sentence_calc_type varchar(12) NOT NULL,
	description varchar(240) NOT NULL,
	expiry_date timestamp,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer DEFAULT 99,
	sentence_category varchar(12) NOT NULL,
	sentence_type varchar(12) NOT NULL,
	program_method varchar(12),
	header_seq bigint,
	header_label varchar(6),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	function_type varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE sentence_calc_types IS E'The sentence calculation Types';
COMMENT ON COLUMN sentence_calc_types.active_flag IS E'?If the sentence calculation type valid';
COMMENT ON COLUMN sentence_calc_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sentence_calc_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sentence_calc_types.description IS E'The description of the sentence calculation';
COMMENT ON COLUMN sentence_calc_types.expiry_date IS E'The date which the code is no longer used';
COMMENT ON COLUMN sentence_calc_types.header_label IS E'The label of header in form';
COMMENT ON COLUMN sentence_calc_types.header_seq IS E'sequence of header in form';
COMMENT ON COLUMN sentence_calc_types.list_seq IS E'The order of the listing';
COMMENT ON COLUMN sentence_calc_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sentence_calc_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN sentence_calc_types.program_method IS E'The program method';
COMMENT ON COLUMN sentence_calc_types.sentence_calc_type IS E'The sentence Calculation Type';
COMMENT ON COLUMN sentence_calc_types.sentence_category IS E'The sentence category.  Reference Code(CATEGORY)';
COMMENT ON COLUMN sentence_calc_types.sentence_type IS E'The Sentence Type';

CREATE TABLE sentence_terms (
	sentence_calc_type varchar(12) NOT NULL,
	term_code varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	sentence_category varchar(12) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN sentence_terms.active_flag IS E'?If the record active for use';
COMMENT ON COLUMN sentence_terms.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sentence_terms.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sentence_terms.expiry_date IS E'Expiry date';
COMMENT ON COLUMN sentence_terms.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sentence_terms.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN sentence_terms.sentence_calc_type IS E'The Sentence calculation type';
COMMENT ON COLUMN sentence_terms.sentence_category IS E'The sentence category. Reference Code(Category)';
COMMENT ON COLUMN sentence_terms.term_code IS E'The sentence term. Reference Code(SENT_TERM)';

CREATE TABLE sentence_term_adjustments (
	sentence_calc_type varchar(12) NOT NULL,
	term_code varchar(12) NOT NULL,
	adjust_code varchar(12) NOT NULL,
	active_flag varchar(1),
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	description varchar(80),
	sentence_category varchar(12) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN sentence_term_adjustments.active_flag IS E'?If the adjustment active';
COMMENT ON COLUMN sentence_term_adjustments.adjust_code IS E'The sentence adjustment code';
COMMENT ON COLUMN sentence_term_adjustments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sentence_term_adjustments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sentence_term_adjustments.description IS E'The description';
COMMENT ON COLUMN sentence_term_adjustments.expiry_date IS E'Expiry date';
COMMENT ON COLUMN sentence_term_adjustments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sentence_term_adjustments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN sentence_term_adjustments.sentence_calc_type IS E'The sentence Calcluation type';
COMMENT ON COLUMN sentence_term_adjustments.sentence_category IS E'The sentence Category';
COMMENT ON COLUMN sentence_term_adjustments.term_code IS E'The sentence term code';

CREATE TABLE sentence_update_reasons (
	sentence_category varchar(12) NOT NULL,
	sentence_calc_type varchar(12) NOT NULL,
	update_reason_code varchar(12) NOT NULL,
	description varchar(80),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	legal_class varchar(12) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN sentence_update_reasons.active_flag IS E'?If the update reason active';
COMMENT ON COLUMN sentence_update_reasons.description IS E'The description';
COMMENT ON COLUMN sentence_update_reasons.expiry_date IS E'The expiry_date';
COMMENT ON COLUMN sentence_update_reasons.sentence_calc_type IS E'The sentecne calc type';
COMMENT ON COLUMN sentence_update_reasons.sentence_category IS E'The sentence category.';
COMMENT ON COLUMN sentence_update_reasons.update_reason_code IS E'The legal update reason';

CREATE TABLE shipments (
	shipment_id bigint NOT NULL,
	shipment_ref_no varchar(40) NOT NULL,
	vendor_corp_id bigint NOT NULL,
	vendor_invoice_number varchar(20),
	invoice_id bigint,
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	receipt_date timestamp NOT NULL,
	tax_1_amount decimal(9,2),
	tax_2_amount decimal(9,2),
	tax_3_amount decimal(9,2),
	deposit_cost decimal(9,2),
	shipment_cost decimal(9,2),
	shipment_total decimal(9,2),
	shipment_status varchar(12) NOT NULL,
	comment_text varchar(240),
	discount_amount varchar(9),
	invoice_enter_date timestamp,
	check_generated_flag varchar(1),
	txn_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN shipments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN shipments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN shipments.deposit_cost IS E' - Column already exists';
COMMENT ON COLUMN shipments.invoice_id IS E' - Column already exists';
COMMENT ON COLUMN shipments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN shipments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN shipments.receipt_date IS E' - Column already exists';
COMMENT ON COLUMN shipments.shipment_cost IS E' - Column already exists';
COMMENT ON COLUMN shipments.shipment_id IS E' - Column already exists';
COMMENT ON COLUMN shipments.shipment_status IS E'Reference Code (DOmain = SHIP_STS )';
COMMENT ON COLUMN shipments.shipment_total IS E' - Column already exists';
COMMENT ON COLUMN shipments.tax_1_amount IS E' - Column already exists';
COMMENT ON COLUMN shipments.tax_2_amount IS E' - Column already exists';
COMMENT ON COLUMN shipments.tax_3_amount IS E' - Column already exists';
COMMENT ON COLUMN shipments.vendor_corp_id IS E' - Column already exists';
COMMENT ON COLUMN shipments.vendor_invoice_number IS E' - Column already exists';

CREATE TABLE shipment_items (
	shipment_item_id bigint NOT NULL,
	shipment_id bigint NOT NULL,
	stock_item_id bigint NOT NULL,
	purchase_order_id bigint,
	shipment_quantity integer NOT NULL,
	on_backorder_flag varchar(1) NOT NULL DEFAULT 'Y',
	tax_1_amount decimal(12,2),
	tax_2_amount decimal(12,2),
	tax_3_amount decimal(12,2),
	unit_cost decimal(12,2),
	unit_desposit_cost decimal(12,2),
	shipment_item_amount decimal(12,2),
	cost_on_invoice decimal(9,2),
	receive_date timestamp,
	return_quantity integer,
	return_date timestamp,
	return_reason_text varchar(240),
	item_count integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN shipment_items.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN shipment_items.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN shipment_items.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN shipment_items.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN shipment_items.on_backorder_flag IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.purchase_order_id IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.return_quantity IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.return_reason_text IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.shipment_item_amount IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.shipment_quantity IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.stock_item_id IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.tax_1_amount IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.tax_2_amount IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.tax_3_amount IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.unit_cost IS E' - Column already exists';
COMMENT ON COLUMN shipment_items.unit_desposit_cost IS E' - Column already exists';

CREATE TABLE staff_accessible_caseloads (
	caseload_id varchar(6) NOT NULL,
	staff_id integer NOT NULL,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE staff_accessible_caseloads IS E'Staff"s accessible Caseloads';
COMMENT ON COLUMN staff_accessible_caseloads.caseload_id IS E' Identifier for a caseload.';
COMMENT ON COLUMN staff_accessible_caseloads.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_accessible_caseloads.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_accessible_caseloads.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_accessible_caseloads.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_accessible_caseloads.staff_id IS E'System generated identifier for staff memeber.';
COMMENT ON COLUMN staff_accessible_caseloads.update_allowed_flag IS E'Does user account have update capability on caseload?';

CREATE TABLE staff_accessible_stock_locs (
	staff_id integer NOT NULL,
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN staff_accessible_stock_locs.caseload_id IS E' Identifier for a caseload.';
COMMENT ON COLUMN staff_accessible_stock_locs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_accessible_stock_locs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_accessible_stock_locs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_accessible_stock_locs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_accessible_stock_locs.staff_id IS E'System generated identifier for staff memeber.';
COMMENT ON COLUMN staff_accessible_stock_locs.stock_loc_id IS E' - Column already exists';
COMMENT ON COLUMN staff_accessible_stock_locs.update_allowed_flag IS E'Does user account have update capability on caseload?';

CREATE TABLE staff_location_roles (
	cal_agy_loc_id varchar(6) NOT NULL,
	sac_staff_id integer NOT NULL,
	from_date timestamp NOT NULL,
	to_date timestamp,
	position varchar(12) NOT NULL,
	role varchar(12) NOT NULL,
	schedule_type varchar(12),
	hours_per_week decimal(4,2),
	supervisor_agy_loc_id varchar(6),
	supervisor_staff_id integer,
	supervisor_from_date timestamp,
	supervisor_position varchar(12),
	supervisor_role varchar(12),
	staff_unit varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN staff_location_roles.cal_agy_loc_id IS E' The location residing within an agency.';
COMMENT ON COLUMN staff_location_roles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_location_roles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_location_roles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_location_roles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_location_roles.position IS E'Standard Reference Code';
COMMENT ON COLUMN staff_location_roles.role IS E'Standard Reference Code';
COMMENT ON COLUMN staff_location_roles.sac_staff_id IS E'System generated number associated with user account';
COMMENT ON COLUMN staff_location_roles.schedule_type IS E'Standard Reference Code';

CREATE TABLE staff_members (
	staff_id integer NOT NULL,
	assigned_caseload_id varchar(6),
	working_stock_loc_id varchar(6),
	working_caseload_id varchar(6),
	user_id varchar(32),
	badge_id varchar(20),
	last_name varchar(35) NOT NULL,
	first_name varchar(35) NOT NULL,
	middle_name varchar(35),
	abbreviation varchar(15),
	position varchar(25),
	birthdate timestamp,
	termination_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	default_printer_id bigint,
	suspended_flag varchar(1),
	supervisor_staff_id integer,
	comm_receipt_printer_id varchar(12),
	personnel_type varchar(12),
	as_of_date timestamp,
	emergency_contact varchar(20),
	role varchar(12),
	sex_code varchar(12),
	status varchar(12),
	suspension_date timestamp,
	suspension_reason varchar(12),
	force_password_change_flag varchar(1),
	last_password_change_date timestamp,
	license_code varchar(12),
	license_expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	title varchar(12),
	name_sequence varchar(12),
	queue_cluster_id integer,
	first_logon_flag varchar(1) DEFAULT 'Y',
	suffix varchar(12),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE staff_members IS E'Captures information on the staff member and assigns ORACLE access as well as Caseload access.';
COMMENT ON COLUMN staff_members.abbreviation IS E' Abbreviation of staff member"s name.';
COMMENT ON COLUMN staff_members.assigned_caseload_id IS E' Caseload staff member assigned to.';
COMMENT ON COLUMN staff_members.badge_id IS E'Officer Badge No.';
COMMENT ON COLUMN staff_members.birthdate IS E' Satff member"s birth date.';
COMMENT ON COLUMN staff_members.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_members.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_members.default_printer_id IS E' Default printer for the staff member.';
COMMENT ON COLUMN staff_members.first_logon_flag IS E'? If it is the first logon of the staff';
COMMENT ON COLUMN staff_members.first_name IS E' First name of staff member.';
COMMENT ON COLUMN staff_members.last_name IS E' Last name of staff member.';
COMMENT ON COLUMN staff_members.middle_name IS E' Middle name of staff member.';
COMMENT ON COLUMN staff_members.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_members.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_members.position IS E' Staff member"s job position.';
COMMENT ON COLUMN staff_members.staff_id IS E'System generated number associated with user account';
COMMENT ON COLUMN staff_members.supervisor_staff_id IS E' Supervisor"s staff id.';
COMMENT ON COLUMN staff_members.suspended_flag IS E'Allows for the temporary suspension of the staff member"s user account.';
COMMENT ON COLUMN staff_members.termination_date IS E' Date staff member terminated from job.';
COMMENT ON COLUMN staff_members.title IS E'The title of the staff';
COMMENT ON COLUMN staff_members.update_allowed_flag IS E' Should user have update capability on caseload (Y/N)?';
COMMENT ON COLUMN staff_members.user_id IS E' User Account Id for the staff member.';
COMMENT ON COLUMN staff_members.working_caseload_id IS E' Caseload staff member is currently working on.';
COMMENT ON COLUMN staff_members.working_stock_loc_id IS E' Commissary location where stock items are kept.';

CREATE TABLE staff_member_roles (
	staff_id integer NOT NULL,
	role_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	role_code varchar(30) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE staff_member_roles IS E'The staff members'' system role in TAG system';
COMMENT ON COLUMN staff_member_roles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_member_roles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_member_roles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_member_roles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_member_roles.role_code IS E'The system role (Oracle DB role)';
COMMENT ON COLUMN staff_member_roles.role_id IS E'The ID of the OMS Role';
COMMENT ON COLUMN staff_member_roles.staff_id IS E'The ID of the staff member';

CREATE TABLE staff_skills (
	staff_id integer NOT NULL,
	skill_type varchar(12) NOT NULL,
	sub_type varchar(12) NOT NULL,
	as_of_date timestamp NOT NULL,
	stsk_comment varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	program_id bigint,
	staff_skill_id bigint,
	active_flag varchar(1) DEFAULT 'Y',
	expiry_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN staff_skills.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_skills.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_skills.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_skills.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_skills.skill_type IS E'Standard Reference Code';
COMMENT ON COLUMN staff_skills.staff_id IS E'System generated number associated with user account';
COMMENT ON COLUMN staff_skills.stsk_comment IS E'Comment Text';
COMMENT ON COLUMN staff_skills.sub_type IS E'Standard Reference Code';

CREATE TABLE staff_user_accounts (
	username varchar(30) NOT NULL,
	staff_id integer NOT NULL,
	staff_user_type varchar(12) NOT NULL,
	id_source varchar(12) NOT NULL,
	working_caseload_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE staff_works (
	staff_work_id bigint NOT NULL,
	workflow_type varchar(12) NOT NULL,
	work_type varchar(12) NOT NULL,
	work_sub_type varchar(12) NOT NULL,
	offender_book_id bigint,
	work_date timestamp NOT NULL,
	due_date timestamp,
	details varchar(240),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	team_code varchar(20) NOT NULL,
	completed_flag varchar(1) NOT NULL DEFAULT 'N',
	assigned_flag varchar(1) NOT NULL DEFAULT 'N',
	reference_key varchar(240) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	complete_reason_code varchar(12),
	complete_comment_text varchar(240),
	complete_date timestamp,
	complete_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN staff_works.complete_comment_text IS E'Comment text for completion';
COMMENT ON COLUMN staff_works.complete_date IS E'The complete date of the task';
COMMENT ON COLUMN staff_works.complete_reason_code IS E'Reference Code(COMPL_RSN)';
COMMENT ON COLUMN staff_works.complete_user_id IS E'The user who completes the task';
COMMENT ON COLUMN staff_works.completed_flag IS E'''Y'' indicates the work is completed.';
COMMENT ON COLUMN staff_works.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_works.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_works.details IS E'Details of the work';
COMMENT ON COLUMN staff_works.due_date IS E'Due date of the work';
COMMENT ON COLUMN staff_works.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_works.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_works.staff_work_id IS E'Oracle sequence';
COMMENT ON COLUMN staff_works.team_code IS E'Name of team';
COMMENT ON COLUMN staff_works.work_date IS E'Date the work is created';
COMMENT ON COLUMN staff_works.work_sub_type IS E'Subtype of the work';
COMMENT ON COLUMN staff_works.work_type IS E'Type of the work';
COMMENT ON COLUMN staff_works.workflow_type IS E'Type of workflow job. ALERT or TASK or CASENOTE';

CREATE TABLE staff_work_assignments (
	staff_work_id bigint NOT NULL,
	complete_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	completed_flag varchar(1) NOT NULL DEFAULT 'N',
	team_member_id integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	complete_user_id varchar(32),
	complete_reason_code varchar(12),
	complete_comment_text varchar(240),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN staff_work_assignments.complete_date IS E'Completion date of the work';
COMMENT ON COLUMN staff_work_assignments.complete_user_id IS E'The user who completes the task';
COMMENT ON COLUMN staff_work_assignments.completed_flag IS E'Flag indicates that the work is completed';
COMMENT ON COLUMN staff_work_assignments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN staff_work_assignments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN staff_work_assignments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN staff_work_assignments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN staff_work_assignments.staff_work_id IS E'Oracle Sequence';
COMMENT ON COLUMN staff_work_assignments.team_member_id IS E'ID which links to the Team Members table';

CREATE TABLE statutes (
	statute_code varchar(12) NOT NULL,
	description varchar(240) NOT NULL,
	legislating_body_code varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	list_seq integer,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE statutes IS E'The statute of law';
COMMENT ON COLUMN statutes.active_flag IS E'?If the statute active';
COMMENT ON COLUMN statutes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN statutes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN statutes.description IS E'The description of the statute';
COMMENT ON COLUMN statutes.expiry_date IS E'The expiry date of the statute';
COMMENT ON COLUMN statutes.legislating_body_code IS E'Reference Code ( LEGISL BODY )';
COMMENT ON COLUMN statutes.list_seq IS E'Listing order';
COMMENT ON COLUMN statutes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN statutes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN statutes.statute_code IS E'The statute code';
COMMENT ON COLUMN statutes.update_allowed_flag IS E'?If update operation allowed to this record';

CREATE TABLE stf_mod_printers (
	printer_alias_code varchar(12) NOT NULL,
	user_id varchar(32) NOT NULL,
	module_name varchar(20) NOT NULL,
	report_id varchar(20) NOT NULL,
	num_copy smallint,
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stg_case_notes (
	stg_id bigint NOT NULL,
	note_seq integer NOT NULL,
	note_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	note_time timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	note_type varchar(12) NOT NULL,
	note_subtype varchar(12) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	text varchar(4000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stg_identifiers (
	stg_id bigint NOT NULL,
	identifier_seq integer NOT NULL,
	profile_type varchar(12) NOT NULL,
	detail varchar(100),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	image_data bytea,
	image_size integer,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stg_identifying_words (
	stg_id bigint NOT NULL,
	word_seq integer NOT NULL,
	code varchar(40) NOT NULL,
	description varchar(100) NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stg_locations (
	stg_id bigint NOT NULL,
	location_seq integer NOT NULL,
	city_code varchar(12) NOT NULL,
	prov_state varchar(12),
	country varchar(12),
	comment_text varchar(240),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stg_relationships (
	stg_id bigint NOT NULL,
	relationship_seq integer NOT NULL,
	relationship_type varchar(12) NOT NULL,
	related_stg_id bigint NOT NULL,
	reason varchar(40) NOT NULL,
	effective_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	expired_by varchar(32),
	comment_text varchar(256),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stg_validations (
	stg_id bigint NOT NULL,
	validation_seq integer NOT NULL,
	validation_date timestamp NOT NULL,
	action varchar(12) NOT NULL,
	designation varchar(12) NOT NULL,
	reason varchar(12) NOT NULL,
	review_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	comment_text varchar(1000),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stock_category_item_limits (
	stock_loc_id varchar(6) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	living_unit_id bigint,
	stock_item_cat varchar(12) NOT NULL,
	period_type varchar(12) NOT NULL,
	quantity smallint,
	stock_item_id bigint,
	seal_flag varchar(1),
	amount decimal(6,2),
	indigent_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;

CREATE TABLE stock_category_restrictions (
	caseload_id varchar(6),
	agy_loc_id varchar(6),
	living_unit_1 bigint,
	living_unit_2 bigint,
	living_unit_3 bigint,
	living_unit_4 bigint,
	stock_item_cat varchar(12),
	restriction_code varchar(12),
	message_number varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN stock_category_restrictions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN stock_category_restrictions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN stock_category_restrictions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN stock_category_restrictions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE stock_items (
	stock_item_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	stock_item_code varchar(13) NOT NULL,
	product_type varchar(12),
	stock_item_cat varchar(12) NOT NULL,
	primary_vendor_id bigint NOT NULL,
	secondary_vendor_id bigint,
	item_name varchar(40) NOT NULL,
	current_count integer,
	reorder_point integer,
	selling_price decimal(9,2) NOT NULL,
	taxable_1_flag varchar(1) NOT NULL DEFAULT 'Y',
	taxable_2_flag varchar(1) NOT NULL DEFAULT 'Y',
	taxable_3_flag varchar(1) NOT NULL DEFAULT 'Y',
	indigent_flag varchar(1) NOT NULL DEFAULT 'Y',
	on_order_flag varchar(1) NOT NULL DEFAULT 'Y',
	avg_item_cost bigint,
	new_selling_price decimal(9,2),
	min_items_to_order integer,
	new_price_eff_date timestamp,
	max_items_to_order integer,
	inventory_taken_date timestamp,
	primary_vendor_item_code varchar(12),
	secondary_vendor_item_code varchar(12),
	container_code varchar(6),
	min_purchase_age smallint,
	contains_metal_flag varchar(1) NOT NULL DEFAULT 'Y',
	max_sales_quantity integer,
	unit_deposit_cost decimal(9,2),
	current_cost decimal(9,2),
	caselot_stock_item_id bigint,
	items_per_caselot integer,
	markup_percentage decimal(6,2),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	lead_time varchar(40),
	quantity_on_order integer,
	confirmed_date timestamp,
	limit_period_type varchar(12),
	period_quantity_limit smallint,
	stock_item_location1 varchar(15),
	stock_item_location2 varchar(15),
	sex_code varchar(12),
	substitute_item_id bigint,
	spendable_limit_flag varchar(1),
	substitute_item_code varchar(12),
	inventory_overdraft_flag varchar(1),
	seal_flag varchar(1),
	pick_slip_flag varchar(1) NOT NULL DEFAULT 'Y',
	upc_code varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE stock_items IS E'- Retrofitted';
COMMENT ON COLUMN stock_items.avg_item_cost IS E' - Column already exists';
COMMENT ON COLUMN stock_items.caseload_id IS E' - Column already exists';
COMMENT ON COLUMN stock_items.caselot_stock_item_id IS E' - Column already exists';
COMMENT ON COLUMN stock_items.container_code IS E' - Column already exists';
COMMENT ON COLUMN stock_items.contains_metal_flag IS E' - Column already exists';
COMMENT ON COLUMN stock_items.current_cost IS E' - Column already exists';
COMMENT ON COLUMN stock_items.current_count IS E' - Column already exists';
COMMENT ON COLUMN stock_items.indigent_flag IS E' - Column already exists';
COMMENT ON COLUMN stock_items.inventory_taken_date IS E' - Column already exists';
COMMENT ON COLUMN stock_items.item_name IS E' - Column already exists';
COMMENT ON COLUMN stock_items.items_per_caselot IS E' - Column already exists';
COMMENT ON COLUMN stock_items.max_items_to_order IS E' - Column already exists';
COMMENT ON COLUMN stock_items.max_sales_quantity IS E' - Column already exists';
COMMENT ON COLUMN stock_items.min_items_to_order IS E' - Column already exists';
COMMENT ON COLUMN stock_items.min_purchase_age IS E' - Column already exists';
COMMENT ON COLUMN stock_items.new_price_eff_date IS E' - Column already exists';
COMMENT ON COLUMN stock_items.new_selling_price IS E' - Column already exists';
COMMENT ON COLUMN stock_items.on_order_flag IS E' - Column already exists';
COMMENT ON COLUMN stock_items.primary_vendor_id IS E' - Column already exists';
COMMENT ON COLUMN stock_items.primary_vendor_item_code IS E' - Column already exists';
COMMENT ON COLUMN stock_items.product_type IS E' - Column already exists';
COMMENT ON COLUMN stock_items.reorder_point IS E' - Column already exists';
COMMENT ON COLUMN stock_items.secondary_vendor_id IS E' - Column already exists';
COMMENT ON COLUMN stock_items.secondary_vendor_item_code IS E' - Column already exists';
COMMENT ON COLUMN stock_items.selling_price IS E' - Column already exists';
COMMENT ON COLUMN stock_items.stock_item_cat IS E'Reference Code (STK_ITEM_CAT )';
COMMENT ON COLUMN stock_items.stock_item_code IS E' - Column already exists';
COMMENT ON COLUMN stock_items.stock_loc_id IS E' - Column already exists';
COMMENT ON COLUMN stock_items.taxable_1_flag IS E' - Column already exists';
COMMENT ON COLUMN stock_items.taxable_2_flag IS E' - Column already exists';
COMMENT ON COLUMN stock_items.taxable_3_flag IS E' - Column already exists';
COMMENT ON COLUMN stock_items.unit_deposit_cost IS E'Not Required';

CREATE TABLE stock_items_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	stock_item_id bigint,
	caseload_id varchar(6),
	stock_loc_id varchar(6),
	stock_item_code varchar(13),
	product_type varchar(12),
	stock_item_cat varchar(12),
	primary_vendor_id bigint,
	secondary_vendor_id bigint,
	item_name varchar(40),
	current_count integer,
	reorder_point integer,
	selling_price decimal(9,2),
	taxable_1_flag varchar(1),
	taxable_2_flag varchar(1),
	taxable_3_flag varchar(1),
	indigent_flag varchar(1),
	on_order_flag varchar(1),
	avg_item_cost numeric(19,6),
	new_selling_price decimal(9,2),
	min_items_to_order integer,
	new_price_eff_date timestamp,
	max_items_to_order integer,
	inventory_taken_date timestamp,
	primary_vendor_item_code varchar(12),
	secondary_vendor_item_code varchar(12),
	container_code varchar(6),
	min_purchase_age smallint,
	contains_metal_flag varchar(1),
	max_sales_quantity integer,
	unit_deposit_cost decimal(9,2),
	current_cost decimal(9,2),
	caselot_stock_item_id bigint,
	items_per_caselot integer,
	markup_percentage decimal(6,2),
	active_flag varchar(1),
	lead_time varchar(40),
	quantity_on_order integer,
	confirmed_date timestamp,
	limit_period_type varchar(12),
	period_quantity_limit smallint,
	stock_item_location1 varchar(15),
	stock_item_location2 varchar(15),
	sex_code varchar(12),
	substitute_item_id bigint,
	spendable_limit_flag varchar(1),
	substitute_item_code varchar(12),
	inventory_overdraft_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stock_item_alerts (
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	stock_item_id bigint NOT NULL,
	alert_type varchar(12) NOT NULL,
	alert_code varchar(12) NOT NULL,
	create_date timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE stock_item_alerts IS E'- Retrofitted';
COMMENT ON COLUMN stock_item_alerts.alert_code IS E'Reference Code (ALERT_CODE )';
COMMENT ON COLUMN stock_item_alerts.alert_type IS E'Reference Code ( ALERT )';
COMMENT ON COLUMN stock_item_alerts.caseload_id IS E' - Column already exists';
COMMENT ON COLUMN stock_item_alerts.create_date IS E' - Column already exists';
COMMENT ON COLUMN stock_item_alerts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN stock_item_alerts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN stock_item_alerts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN stock_item_alerts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN stock_item_alerts.stock_item_id IS E' - Column already exists';
COMMENT ON COLUMN stock_item_alerts.stock_loc_id IS E' - Column already exists';

CREATE TABLE stock_item_audits (
	stock_item_id bigint NOT NULL,
	stock_item_audit_seq bigint NOT NULL,
	module_name varchar(20) NOT NULL,
	current_count integer,
	total_amount decimal(11,2),
	old_avg_item_cost bigint,
	new_avg_item_cost bigint,
	old_current_cost decimal(9,2),
	new_current_cost decimal(9,2),
	create_date timestamp DEFAULT LOCALTIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN stock_item_audits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN stock_item_audits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN stock_item_audits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN stock_item_audits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE stock_item_categories (
	stock_item_cat varchar(12) NOT NULL,
	description varchar(40),
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	sales_override_ac integer,
	cogs_override_ac integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE stock_item_transactions (
	stock_item_txn_id bigint NOT NULL,
	sales_order_id bigint,
	sales_item_seq integer,
	shipment_item_id bigint,
	stock_item_txn_type varchar(12) NOT NULL,
	stock_item_id bigint NOT NULL,
	number_of_container integer,
	items_per_container integer,
	unit_item_cost bigint,
	total_items integer,
	comment_text varchar(240),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	caseload_id varchar(6),
	stock_loc_id varchar(6),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE stock_item_transactions IS E'- Retrofitted';
COMMENT ON COLUMN stock_item_transactions.comment_text IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN stock_item_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN stock_item_transactions.items_per_container IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN stock_item_transactions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN stock_item_transactions.number_of_container IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.sales_item_seq IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.sales_order_id IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.stock_item_id IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.stock_item_txn_id IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.stock_item_txn_type IS E'Reference Code (STK_ITEM_TXN )';
COMMENT ON COLUMN stock_item_transactions.total_items IS E' - Column already exists';
COMMENT ON COLUMN stock_item_transactions.unit_item_cost IS E' - Column already exists';

CREATE TABLE stock_locations (
	caseload_id varchar(6) NOT NULL,
	stock_loc_id varchar(6) NOT NULL,
	description varchar(40),
	list_seq integer DEFAULT 99,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	modified_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE stock_locations IS E'- Retrofitted';
COMMENT ON COLUMN stock_locations.active_flag IS E' - Column already exists';
COMMENT ON COLUMN stock_locations.caseload_id IS E' - Column already exists';
COMMENT ON COLUMN stock_locations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN stock_locations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN stock_locations.description IS E' - Column already exists';
COMMENT ON COLUMN stock_locations.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN stock_locations.list_seq IS E' - Column already exists';
COMMENT ON COLUMN stock_locations.modified_user_id IS E' - Column already exists';
COMMENT ON COLUMN stock_locations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN stock_locations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN stock_locations.stock_loc_id IS E' - Column already exists';
COMMENT ON COLUMN stock_locations.update_allowed_flag IS E' - Column already exists';

CREATE TABLE stock_locations_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	caseload_id varchar(6),
	stock_loc_id varchar(6),
	description varchar(40),
	list_seq integer DEFAULT 99,
	update_allowed_flag varchar(1) DEFAULT 'Y',
	expiry_date timestamp,
	active_flag varchar(1) DEFAULT 'Y',
	modified_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;
COMMENT ON TABLE stock_locations_jn IS E'Journal table for stock_locations';

CREATE TABLE substance_samples (
	offender_book_id bigint NOT NULL,
	sample_seq integer NOT NULL,
	date_taken timestamp NOT NULL,
	test_type varchar(12) NOT NULL,
	test_reason varchar(12) NOT NULL,
	substance varchar(12),
	taken_by integer,
	witness integer,
	comment_text varchar(240),
	off_cc_id bigint,
	agy_loc_id varchar(6),
	time_taken timestamp,
	line_number smallint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN substance_samples.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN substance_samples.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN substance_samples.line_number IS E'To enter a sample that is NOT tied to a condtion. Upon Commit, the system does not populate the OFF_CC_ID in the table.';
COMMENT ON COLUMN substance_samples.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN substance_samples.modify_user_id IS E'The user who modifies the record';

CREATE TABLE substance_tests (
	offender_book_id bigint NOT NULL,
	sample_seq integer NOT NULL,
	test_seq integer NOT NULL,
	date_tested timestamp NOT NULL,
	tested_by integer,
	witness integer,
	results varchar(12),
	disposition varchar(12),
	comment_text varchar(240),
	time_tested timestamp,
	subtance_test_type varchar(12),
	test_number integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN substance_tests.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN substance_tests.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN substance_tests.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN substance_tests.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN substance_tests.subtance_test_type IS E'Reference domain SUB_TES_RSLT and exists in Substance_Test_Types.';

CREATE TABLE substance_test_results (
	offender_book_id bigint NOT NULL,
	sample_seq integer NOT NULL,
	test_seq integer NOT NULL,
	result_seq integer NOT NULL,
	substance varchar(12) NOT NULL,
	result_code varchar(12) NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN substance_test_results.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN substance_test_results.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN substance_test_results.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN substance_test_results.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN substance_test_results.substance IS E'Reference domain SUBSTANCE and exists in Substance_Test_Types.';

CREATE TABLE substance_test_types (
	substance varchar(12) NOT NULL,
	substance_test_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN substance_test_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN substance_test_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN substance_test_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN substance_test_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN substance_test_types.substance IS E'Reference code domain (SUBSTANCE)';
COMMENT ON COLUMN substance_test_types.substance_test_type IS E'Reference code domain (SUB_TES_TYPE)';

CREATE TABLE sub_account_views (
	account_code integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN sub_account_views.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sub_account_views.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sub_account_views.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sub_account_views.modify_user_id IS E'The user who modifies the record';

CREATE TABLE sub_acc_view_params (
	view_seconds smallint,
	no_of_times smallint,
	pin_required_flag varchar(1) NOT NULL,
	view_minutes smallint,
	view_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN sub_acc_view_params.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN sub_acc_view_params.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN sub_acc_view_params.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN sub_acc_view_params.modify_user_id IS E'The user who modifies the record';

CREATE TABLE supervision_charges (
	supervision_type varchar(12) NOT NULL,
	charge_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	modify_user_id varchar(32),
	modified_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE supervision_charges IS E'- Retrofitted';
COMMENT ON COLUMN supervision_charges.charge_code IS E' - Column already exists';
COMMENT ON COLUMN supervision_charges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN supervision_charges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN supervision_charges.description IS E' - Column already exists';
COMMENT ON COLUMN supervision_charges.modified_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_charges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN supervision_charges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN supervision_charges.supervision_type IS E' - Column already exists';

CREATE TABLE supervision_conditions (
	order_id bigint NOT NULL,
	condition_seq integer NOT NULL,
	amount decimal(10,2),
	amount_unit_code varchar(12),
	condition_code varchar(12) NOT NULL,
	due_date timestamp,
	updated_flag varchar(1) NOT NULL DEFAULT 'Y',
	comment_text varchar(720),
	set_date timestamp,
	compliance_flag varchar(1) NOT NULL DEFAULT 'Y',
	details varchar(40),
	completion_date timestamp,
	bail_flag varchar(1) NOT NULL DEFAULT 'Y',
	recorded_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE supervision_conditions IS E'- Retrofitted';
COMMENT ON COLUMN supervision_conditions.amount IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.amount_unit_code IS E'Reference Code ( PERIOD_TYPE )';
COMMENT ON COLUMN supervision_conditions.bail_flag IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.comment_text IS E'Comment Text';
COMMENT ON COLUMN supervision_conditions.completion_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.compliance_flag IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.condition_code IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.condition_seq IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN supervision_conditions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN supervision_conditions.details IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.due_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN supervision_conditions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN supervision_conditions.order_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.recorded_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.set_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_conditions.updated_flag IS E' - Column already exists';

CREATE TABLE supervision_rates (
	supervision_type varchar(12) NOT NULL,
	charge_code varchar(12) NOT NULL,
	charge_seq integer NOT NULL,
	effective_date timestamp NOT NULL,
	expiry_date timestamp,
	charge_method_code varchar(12) NOT NULL,
	charge_amount decimal(12,2),
	charge_percentage decimal(5,4),
	first_month_prorate_mthd_code varchar(12) NOT NULL,
	last_month_prorate_mthd_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE supervision_rates IS E'- Retrofitted';
COMMENT ON COLUMN supervision_rates.charge_amount IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.charge_code IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.charge_method_code IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.charge_percentage IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.charge_seq IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN supervision_rates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN supervision_rates.effective_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.expiry_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.first_month_prorate_mthd_code IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.last_month_prorate_mthd_code IS E' - Column already exists';
COMMENT ON COLUMN supervision_rates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN supervision_rates.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN supervision_rates.supervision_type IS E' - Column already exists';

CREATE TABLE supervision_transactions (
	cost_txn_id bigint NOT NULL,
	cost_txn_type varchar(12),
	txn_date timestamp,
	original_amount decimal(12,2) NOT NULL,
	agy_loc_id varchar(6),
	offender_book_id bigint,
	supvison_rate_effective_date timestamp,
	related_sup_invoice_id bigint,
	related_invoice_date timestamp,
	related_txn_date timestamp,
	related_txn_id bigint,
	amount_paid decimal(12,2),
	cheque_number varchar(20),
	description varchar(40),
	superv_txn_type varchar(12),
	written_off_amount decimal(12,2),
	balance_amount decimal(12,2),
	payment_type varchar(12),
	adjust_reason_code varchar(12),
	receipt_number varchar(20),
	txn_account_period_id integer,
	batch_number bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE supervision_transactions IS E'- Retrofitted';
COMMENT ON COLUMN supervision_transactions.adjust_reason_code IS E'Reference Code ( ADJ_RSN )';
COMMENT ON COLUMN supervision_transactions.agy_loc_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.amount_paid IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.balance_amount IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.batch_number IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.cheque_number IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.cost_txn_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.cost_txn_type IS E'Reference Code (COS_TXN_TYPE )';
COMMENT ON COLUMN supervision_transactions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN supervision_transactions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN supervision_transactions.description IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN supervision_transactions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN supervision_transactions.offender_book_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.original_amount IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.payment_type IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.receipt_number IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.related_invoice_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.related_sup_invoice_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.related_txn_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.related_txn_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.superv_txn_type IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.supvison_rate_effective_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.txn_account_period_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.txn_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_transactions.written_off_amount IS E' - Column already exists';

CREATE TABLE supervision_violations (
	order_id bigint NOT NULL,
	condition_seq integer NOT NULL,
	violation_seq integer NOT NULL,
	violation_date timestamp NOT NULL,
	recorded_date timestamp NOT NULL,
	crown_action_flag varchar(1) NOT NULL DEFAULT 'Y',
	recommendation varchar(240),
	charge_laid_date timestamp,
	description varchar(40),
	number_of_breaches smallint,
	crown_notified_flag varchar(1) NOT NULL DEFAULT 'Y',
	sanction_code varchar(12),
	violation_type varchar(12) NOT NULL,
	warrant_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE supervision_violations IS E'- Retrofitted';
COMMENT ON COLUMN supervision_violations.charge_laid_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.condition_seq IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN supervision_violations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN supervision_violations.crown_action_flag IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.crown_notified_flag IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.description IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN supervision_violations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN supervision_violations.number_of_breaches IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.order_id IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.recommendation IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.recorded_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.sanction_code IS E'Reference Code ( SANCTION )';
COMMENT ON COLUMN supervision_violations.violation_date IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.violation_seq IS E' - Column already exists';
COMMENT ON COLUMN supervision_violations.violation_type IS E'Reference Code ( VIOLATION )';
COMMENT ON COLUMN supervision_violations.warrant_type IS E'Refernce Code ( WARRENT )';

CREATE TABLE suspend_deductions (
	suspend_deduction_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN suspend_deductions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN suspend_deductions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN suspend_deductions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN suspend_deductions.modify_user_id IS E'The user who modifies the record';

CREATE TABLE suspend_deduction_types (
	suspend_deduction_id bigint NOT NULL,
	deduction_type varchar(6) NOT NULL,
	suspended_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN suspend_deduction_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN suspend_deduction_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN suspend_deduction_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN suspend_deduction_types.modify_user_id IS E'The user who modifies the record';

CREATE TABLE system_events (
	event_type varchar(12) NOT NULL,
	event_seq integer NOT NULL DEFAULT 99,
	description varchar(40),
	event_date timestamp NOT NULL,
	modify_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	event_end_date timestamp,
	modify_user_id varchar(32),
	system_event_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN system_events.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN system_events.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN system_events.description IS E'Description of the Profile Code';
COMMENT ON COLUMN system_events.event_date IS E'The Event Date';
COMMENT ON COLUMN system_events.event_end_date IS E'The Event End Date';
COMMENT ON COLUMN system_events.event_seq IS E'Event Number';
COMMENT ON COLUMN system_events.event_type IS E'Reference Code (SYS_EVENT ) : Event Type';
COMMENT ON COLUMN system_events.modify_date IS E'The Date User Modify the Record';
COMMENT ON COLUMN system_events.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN system_events.modify_user_id IS E'The user who modifies the record';

CREATE TABLE system_events_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	event_type varchar(12),
	event_seq integer DEFAULT 99,
	description varchar(40),
	event_date timestamp,
	modify_date timestamp DEFAULT LOCALTIMESTAMP,
	event_end_date timestamp,
	modify_user_id varchar(32),
	system_event_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;

CREATE TABLE system_interface_logs (
	interface_log_id bigint,
	process_date timestamp,
	application varchar(12) NOT NULL,
	processed_records bigint,
	loaded_records bigint,
	module_name varchar(20) NOT NULL,
	comment_text varchar(240),
	log_file varchar(40),
	status varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE INTERFACE;
COMMENT ON COLUMN system_interface_logs.status IS E'Reference COde ( INTERF_STS)';

CREATE TABLE system_labels (
	label_id bigint NOT NULL,
	module_name varchar(100),
	msg_key varchar(100),
	msg_value varchar(4000),
	msg_type varchar(10),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE system_messages (
	appln_code varchar(12) NOT NULL,
	message_number bigint NOT NULL,
	message_type varchar(12),
	message_text varchar(240),
	action_text varchar(240),
	response_list varchar(20),
	default_response smallint,
	system_remarks_text varchar(240),
	modify_user_id varchar(32) DEFAULT '(user)',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE system_messages IS E'- Retrofitted';
COMMENT ON COLUMN system_messages.action_text IS E'Recommended Action For This Message';
COMMENT ON COLUMN system_messages.appln_code IS E'Reference Code ( APPLN ) Application of the message';
COMMENT ON COLUMN system_messages.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN system_messages.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN system_messages.default_response IS E'Recommended Action For This Message';
COMMENT ON COLUMN system_messages.message_number IS E'Message Number';
COMMENT ON COLUMN system_messages.message_text IS E'Message Details';
COMMENT ON COLUMN system_messages.message_type IS E'Reference Code ( MESSAGE_TYPE ) : Message Type';
COMMENT ON COLUMN system_messages.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN system_messages.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN system_messages.response_list IS E'Response Action List For This Message';
COMMENT ON COLUMN system_messages.system_remarks_text IS E'System user comment text which is target for techincal people instead of user';

CREATE TABLE system_profiles (
	profile_type varchar(12) NOT NULL,
	profile_code varchar(12) NOT NULL,
	description varchar(80),
	profile_value varchar(100),
	profile_value_2 varchar(12),
	modify_user_id varchar(32),
	old_table_name varchar(50),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE system_profiles IS E'System Profiles Such as Details Currency, Display Format, Installed Applications';
COMMENT ON COLUMN system_profiles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN system_profiles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN system_profiles.description IS E'Description of the Profile Code';
COMMENT ON COLUMN system_profiles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN system_profiles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN system_profiles.old_table_name IS E'Old Table Name Used in Previous OMS Version';
COMMENT ON COLUMN system_profiles.profile_code IS E'Profile Code Value of the Profile Type(Such as Label for Prov, Default Currency Code)';
COMMENT ON COLUMN system_profiles.profile_type IS E'Reference Code ( PROFILE_TYPE ) : Profile Type Such as (Label, Default Code Value ..)';
COMMENT ON COLUMN system_profiles.profile_value IS E'Profile Code Value(Such as Default Currency Code = USD)';
COMMENT ON COLUMN system_profiles.profile_value_2 IS E'The second value of the profile code (If there is one)';

CREATE TABLE system_profiles_backup (
	profile_type varchar(12) NOT NULL,
	profile_code varchar(12) NOT NULL,
	description varchar(80),
	profile_value varchar(40),
	profile_value_2 varchar(12),
	modify_user_id varchar(32),
	old_table_name varchar(50),
	create_datetime timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE system_profiles_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	profile_type varchar(12),
	profile_code varchar(12),
	description varchar(80),
	profile_value varchar(100),
	profile_value_2 varchar(12),
	modify_user_id varchar(32),
	old_table_name varchar(50),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;
COMMENT ON TABLE system_profiles_jn IS E'Journal table for system_profiles';

CREATE TABLE system_sequence_numbers (
	sequence_name varchar(20) NOT NULL,
	current_number bigint NOT NULL,
	increment_number smallint,
	check_digit_flag varchar(1) DEFAULT 'Y',
	modify_user_id varchar(32),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE system_sequence_numbers IS E'THE SYSTEM GENERATED SEQUENCE NUMBERS (Not Used for Oracle Database )';
COMMENT ON COLUMN system_sequence_numbers.check_digit_flag IS E'If Check digit should be added to the sequence number';
COMMENT ON COLUMN system_sequence_numbers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN system_sequence_numbers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN system_sequence_numbers.current_number IS E'The last number used';
COMMENT ON COLUMN system_sequence_numbers.increment_number IS E'The increment of the number';
COMMENT ON COLUMN system_sequence_numbers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN system_sequence_numbers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN system_sequence_numbers.sequence_name IS E'Name of the Sequence';

CREATE TABLE tag_baseline_mb (
	object_name varchar(100),
	accurev_version varchar(30),
	object_type varchar(30),
	accurev_stream varchar(100)
)  TABLESPACE TAG_DATA;

CREATE TABLE tag_error_logs (
	tag_error_id bigint NOT NULL,
	sid bigint,
	module_name varchar(20),
	procedure_name varchar(60),
	error_message varchar(512),
	error_location varchar(512),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	user_module varchar(70),
	user_location varchar(12),
	user_message varchar(200),
	user_error_code integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE tag_error_logs IS E'tracking of run time errors of TAG system';
COMMENT ON COLUMN tag_error_logs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN tag_error_logs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN tag_error_logs.error_location IS E'location of the error originated from...';
COMMENT ON COLUMN tag_error_logs.error_message IS E'Sql error message';
COMMENT ON COLUMN tag_error_logs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN tag_error_logs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN tag_error_logs.module_name IS E'Name of module that caused the exception.';
COMMENT ON COLUMN tag_error_logs.procedure_name IS E'Name of the procedure that caused the exception.';
COMMENT ON COLUMN tag_error_logs.sid IS E'Session Id';
COMMENT ON COLUMN tag_error_logs.tag_error_id IS E'Sequence to find out the error';
COMMENT ON COLUMN tag_error_logs.user_error_code IS E'The error code';
COMMENT ON COLUMN tag_error_logs.user_location IS E'The user location';
COMMENT ON COLUMN tag_error_logs.user_message IS E'The message text';
COMMENT ON COLUMN tag_error_logs.user_module IS E'The user module name';

CREATE TABLE tag_images (
	tag_image_id bigint NOT NULL,
	image_object_type varchar(12) NOT NULL,
	image_object_id bigint NOT NULL,
	image_object_seq integer,
	capture_datetime timestamp NOT NULL,
	set_name varchar(12),
	image_view_type varchar(12),
	orientation_type varchar(12) NOT NULL,
	full_size_image bytea,
	thumbnail_image bytea,
	active_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE tag_images IS E'The images of TAG system ';
COMMENT ON COLUMN tag_images.active_flag IS E'Flag to identify if the image record is currently active or not.';
COMMENT ON COLUMN tag_images.capture_datetime IS E'The timestamp when the image is taken';
COMMENT ON COLUMN tag_images.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN tag_images.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN tag_images.full_size_image IS E'The full size image (MUGSHOT) of the offender stored as jpeg format.';
COMMENT ON COLUMN tag_images.image_object_id IS E'The ID of the object.';
COMMENT ON COLUMN tag_images.image_object_seq IS E'The seq of the object (2nd column of the PK).';
COMMENT ON COLUMN tag_images.image_object_type IS E'The object type of the image.';
COMMENT ON COLUMN tag_images.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN tag_images.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN tag_images.orientation_type IS E'The orientation type ';
COMMENT ON COLUMN tag_images.tag_image_id IS E'Unique sequence identifying each image - Oracle Sequence - (PK)';
COMMENT ON COLUMN tag_images.thumbnail_image IS E'The thumbnail size image (MUGSHOT) of the offender stored as jpeg format.';

CREATE TABLE task_assignment_hty (
	task_assignment_hty_id bigint NOT NULL,
	task_assignment_id bigint,
	offender_book_id bigint NOT NULL,
	work_id bigint NOT NULL,
	assignment_date timestamp NOT NULL DEFAULT date_trunc('day', LOCALTIMESTAMP),
	assignment_status varchar(12) DEFAULT 'PEN',
	team_id bigint NOT NULL,
	staff_id bigint,
	team_member_id bigint,
	due_date timestamp,
	details varchar(4000),
	completion_date timestamp,
	complete_reason_code varchar(12),
	complete_comment_text varchar(240),
	complete_user_id varchar(30),
	message_id varchar(64),
	original_message_id varchar(64),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	trigger_name varchar(12),
	workflow_history_id numeric(32),
	event_date timestamp,
	function_type varchar(12),
	seal_flag varchar(1)
) ;
COMMENT ON TABLE task_assignment_hty IS E'The historical details of the task assignment';
COMMENT ON COLUMN task_assignment_hty.assignment_date IS E'The work assignment date';
COMMENT ON COLUMN task_assignment_hty.assignment_status IS E'The status of work assignment.  Reference Code(';
COMMENT ON COLUMN task_assignment_hty.complete_comment_text IS E'The comment of the completion';
COMMENT ON COLUMN task_assignment_hty.complete_reason_code IS E'The reason of the completion';
COMMENT ON COLUMN task_assignment_hty.complete_user_id IS E'User who complete the task';
COMMENT ON COLUMN task_assignment_hty.completion_date IS E'The completion date';
COMMENT ON COLUMN task_assignment_hty.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN task_assignment_hty.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN task_assignment_hty.details IS E'The details';
COMMENT ON COLUMN task_assignment_hty.due_date IS E'The due date of the work assignment';
COMMENT ON COLUMN task_assignment_hty.message_id IS E'The Message ID';
COMMENT ON COLUMN task_assignment_hty.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN task_assignment_hty.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN task_assignment_hty.offender_book_id IS E'The PK of the Offender Booking';
COMMENT ON COLUMN task_assignment_hty.original_message_id IS E'The orginal message ID';
COMMENT ON COLUMN task_assignment_hty.staff_id IS E'The assigned Staff';
COMMENT ON COLUMN task_assignment_hty.task_assignment_hty_id IS E'The ID of the task assignment history';
COMMENT ON COLUMN task_assignment_hty.task_assignment_id IS E'The PK of the work assignment';
COMMENT ON COLUMN task_assignment_hty.team_id IS E'The assigned Team';
COMMENT ON COLUMN task_assignment_hty.team_member_id IS E'The assigned Team Member';
COMMENT ON COLUMN task_assignment_hty.work_id IS E'The PK of the Work Item';

CREATE TABLE tax_rates (
	tax_type varchar(12) NOT NULL,
	tax_code varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	start_tax_range decimal(11,2) NOT NULL,
	end_tax_range decimal(11,2) NOT NULL,
	expiry_date timestamp,
	percentage decimal(5,2),
	dollar_value decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN tax_rates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN tax_rates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN tax_rates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN tax_rates.modify_user_id IS E'The user who modifies the record';

CREATE TABLE tax_type_effective_date (
	effective_date timestamp NOT NULL,
	tax_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN tax_type_effective_date.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN tax_type_effective_date.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN tax_type_effective_date.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN tax_type_effective_date.modify_user_id IS E'The user who modifies the record';

CREATE TABLE teams (
	team_code varchar(20) NOT NULL,
	description varchar(40) NOT NULL,
	category varchar(12) NOT NULL,
	list_seq integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	team_id bigint NOT NULL,
	area_code varchar(12),
	agy_loc_id varchar(6),
	queue_cluster_id integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN teams.category IS E'Category of the team';
COMMENT ON COLUMN teams.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN teams.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN teams.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN teams.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN teams.team_code IS E'Name of the team';
COMMENT ON COLUMN teams.team_id IS E'PK of the team';

CREATE TABLE team_functions (
	team_id bigint NOT NULL,
	function_type varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE team_functions IS E'The function served by a team';
COMMENT ON COLUMN team_functions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN team_functions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN team_functions.function_type IS E'Function served by the team';
COMMENT ON COLUMN team_functions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN team_functions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN team_functions.team_id IS E'The team ID';

CREATE TABLE team_members (
	team_id bigint NOT NULL,
	staff_id integer NOT NULL,
	loc_role_from_date timestamp NOT NULL,
	position varchar(12) NOT NULL,
	role varchar(12) NOT NULL,
	team_member_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	no_of_tasks integer DEFAULT 0,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE team_members IS E'Membership of a team';
COMMENT ON COLUMN team_members.agy_loc_id IS E'Agency Location';
COMMENT ON COLUMN team_members.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN team_members.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN team_members.loc_role_from_date IS E'From date from staff_location_roles table';
COMMENT ON COLUMN team_members.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN team_members.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN team_members.position IS E'Position of the staff';
COMMENT ON COLUMN team_members.role IS E'Role of the staff';
COMMENT ON COLUMN team_members.staff_id IS E'STAFF ID from STAFF_MEMBERS table';
COMMENT ON COLUMN team_members.team_member_id IS E'Oracle Sequence';

CREATE TABLE template_cursor_selections (
	template_code varchar(24) NOT NULL,
	table_name varchar(30) NOT NULL,
	column_name varchar(30) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_IWP;
COMMENT ON COLUMN template_cursor_selections.column_name IS E'stores names of columns for template cursors...';
COMMENT ON COLUMN template_cursor_selections.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN template_cursor_selections.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN template_cursor_selections.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN template_cursor_selections.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN template_cursor_selections.table_name IS E'stores names of tables for template cursors...';
COMMENT ON COLUMN template_cursor_selections.template_code IS E'Template code derived from the document_templates table...';

CREATE TABLE template_types (
	module_name varchar(20) NOT NULL,
	template_code varchar(24) NOT NULL,
	event_type varchar(12) NOT NULL,
	event_code varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE temp_absence_groups (
	ta_id bigint NOT NULL,
	ta_group varchar(12) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	start_date timestamp NOT NULL,
	end_date timestamp NOT NULL,
	description varchar(80),
	reason_code varchar(12),
	agy_loc_id varchar(6),
	city_code varchar(12),
	escort_code varchar(12),
	cancel_reason_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN temp_absence_groups.city_code IS E'Reference Code (CITY)';
COMMENT ON COLUMN temp_absence_groups.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN temp_absence_groups.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN temp_absence_groups.escort_code IS E'Reference Code (ESCORT)';
COMMENT ON COLUMN temp_absence_groups.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN temp_absence_groups.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN temp_absence_groups.ta_id IS E'Temporary Absence ID';

CREATE TABLE temp_absence_group_dtls (
	ta_id bigint NOT NULL,
	ta_gd_seq integer NOT NULL DEFAULT 1,
	week_no integer NOT NULL,
	out_day varchar(12) NOT NULL,
	out_time timestamp NOT NULL,
	in_day varchar(12) NOT NULL,
	in_time timestamp NOT NULL,
	agy_loc_id varchar(6),
	city_code varchar(12),
	in_week_no integer NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN temp_absence_group_dtls.city_code IS E'Reference Code (CITY)';
COMMENT ON COLUMN temp_absence_group_dtls.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN temp_absence_group_dtls.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN temp_absence_group_dtls.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN temp_absence_group_dtls.modify_user_id IS E'The user who modifies the record';

CREATE TABLE temp_absence_time_tables (
	ta_id bigint NOT NULL,
	ta_tt_seq integer NOT NULL DEFAULT 1,
	out_date timestamp NOT NULL,
	out_time timestamp,
	in_date timestamp,
	in_time timestamp,
	agy_loc_id varchar(6),
	city_code varchar(12),
	cancel_reason_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	temp_abs_sch_id bigint NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE temp_absence_time_tables IS E'The temporary absence group schedule details';
COMMENT ON COLUMN temp_absence_time_tables.agy_loc_id IS E'The agency location of the temporay absence arragement';
COMMENT ON COLUMN temp_absence_time_tables.cancel_reason_code IS E'The reason for cancellation';
COMMENT ON COLUMN temp_absence_time_tables.city_code IS E'The City code';
COMMENT ON COLUMN temp_absence_time_tables.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN temp_absence_time_tables.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN temp_absence_time_tables.in_date IS E'The date return to the agency';
COMMENT ON COLUMN temp_absence_time_tables.in_time IS E'The time return to the agency';
COMMENT ON COLUMN temp_absence_time_tables.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN temp_absence_time_tables.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN temp_absence_time_tables.out_date IS E'The date out of the agency';
COMMENT ON COLUMN temp_absence_time_tables.out_time IS E'The time out of the agency';
COMMENT ON COLUMN temp_absence_time_tables.ta_id IS E'The ID of the tempory absence group';
COMMENT ON COLUMN temp_absence_time_tables.ta_tt_seq IS E'The second seq for the PK';
COMMENT ON COLUMN temp_absence_time_tables.temp_abs_sch_id IS E'The UK of the temporary absence schedule';

CREATE TABLE temp_oidcount (
	session_id bigint NOT NULL,
	reporting_loc_id bigint,
	count_type_id bigint,
	agy_seq integer,
	agy_loc_id varchar(6),
	count_type_code varchar(12),
	scheduled_time varchar(5),
	location_description varchar(60),
	location_type varchar(12),
	list_seq smallint,
	actual_count integer,
	reported_count integer,
	discrepancy_count integer,
	date_submitted timestamp,
	entered_by_userid varchar(32),
	lowest_location_id bigint,
	out_total integer,
	total_male integer,
	total_female integer,
	total_other integer,
	total_male_out integer,
	total_female_out integer,
	total_other_out integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE temp_otrcheck_log (
	session_id bigint,
	seq_no bigint,
	trigger_block_name varchar(12),
	cursor_block_name varchar(12),
	proc_name varchar(24),
	comment_text varchar(200),
	os_user_id varchar(32),
	modify_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'User',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE temp_weightings (
	tmp_wei_id bigint,
	book_id bigint,
	line smallint DEFAULT 99,
	order_type varchar(12),
	order_code varchar(12),
	charge_seq smallint DEFAULT 99,
	component varchar(12),
	calculated_weighting decimal(8,2),
	overridden_by bigint,
	weighting decimal(8,2),
	session_id bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN temp_weightings.book_id IS E'The offender book id from the order or request';
COMMENT ON COLUMN temp_weightings.calculated_weighting IS E'The calculated weighting following concurrency comparisons';
COMMENT ON COLUMN temp_weightings.charge_seq IS E'The charge sequence from the request';
COMMENT ON COLUMN temp_weightings.component IS E'The assigned component';
COMMENT ON COLUMN temp_weightings.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN temp_weightings.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN temp_weightings.line IS E'The sentence/request sequence';
COMMENT ON COLUMN temp_weightings.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN temp_weightings.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN temp_weightings.order_code IS E'The Order Code';
COMMENT ON COLUMN temp_weightings.order_type IS E'The Order type';
COMMENT ON COLUMN temp_weightings.overridden_by IS E'The link to the record that overrided the weighting for this reco';
COMMENT ON COLUMN temp_weightings.session_id IS E'Session ID';
COMMENT ON COLUMN temp_weightings.tmp_wei_id IS E'Unique id will form the primary key';
COMMENT ON COLUMN temp_weightings.weighting IS E'The weighting for this component';

CREATE TABLE test (
	test_col timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE testt (
	a bigint,
	b bigint,
	create_datetime timestamp NOT NULL,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE testt1 (
	a bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE tiered_fee_amounts (
	caseload_id varchar(6) NOT NULL,
	deduction_type varchar(6) NOT NULL,
	receipt_txn_type varchar(6) NOT NULL,
	from_amount decimal(11,2) NOT NULL,
	to_amount decimal(11,2) NOT NULL,
	percentage smallint,
	fee_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN tiered_fee_amounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN tiered_fee_amounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN tiered_fee_amounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN tiered_fee_amounts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE tiered_transaction_fee_amounts (
	caseload_id varchar(6) NOT NULL,
	deduction_type varchar(6) NOT NULL,
	from_amount decimal(11,2) NOT NULL,
	to_amount decimal(11,2) NOT NULL,
	percentage smallint,
	fee_amount decimal(11,2),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN tiered_transaction_fee_amounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN tiered_transaction_fee_amounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN tiered_transaction_fee_amounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN tiered_transaction_fee_amounts.modify_user_id IS E'The user who modifies the record';

CREATE TABLE timer_events (
	proc_name varchar(50),
	run_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN timer_events.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN timer_events.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN timer_events.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN timer_events.modify_user_id IS E'The user who modifies the record';

CREATE TABLE time_served_ranges (
	range_code varchar(12) NOT NULL,
	description varchar(40) NOT NULL,
	low_val smallint NOT NULL DEFAULT 99,
	high_val smallint DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN time_served_ranges.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN time_served_ranges.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN time_served_ranges.description IS E'Short Description';
COMMENT ON COLUMN time_served_ranges.high_val IS E'The short sequence for making up Primary Key';
COMMENT ON COLUMN time_served_ranges.low_val IS E'The short sequence for making up Primary Key';
COMMENT ON COLUMN time_served_ranges.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN time_served_ranges.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN time_served_ranges.range_code IS E'Standard Reference Code';

CREATE TABLE tmp_route_names (
	route_name varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE transaction_fee_details (
	caseload_id varchar(6) NOT NULL,
	deduction_type varchar(6) NOT NULL,
	receipt_deduction_type varchar(6) NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq smallint DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE transaction_fee_details IS E'Details the percentage deduction against receipt types for each deduction type.';
COMMENT ON COLUMN transaction_fee_details.caseload_id IS E'Unique identifier for a caseload.';
COMMENT ON COLUMN transaction_fee_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN transaction_fee_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN transaction_fee_details.deduction_type IS E' The type of deduction.';
COMMENT ON COLUMN transaction_fee_details.modify_date IS E'Modify Date';
COMMENT ON COLUMN transaction_fee_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN transaction_fee_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN transaction_fee_details.receipt_deduction_type IS E' Deductions are appled against specific receipt transaction types.';

CREATE TABLE transaction_operations (
	module_name varchar(20) NOT NULL,
	txn_type varchar(6) NOT NULL,
	txn_operation_seq integer NOT NULL DEFAULT 99,
	dr_account_code integer,
	cr_account_code integer,
	bank_dr_account_code integer,
	bank_cr_account_code integer,
	invalid_accounts_flag varchar(1) DEFAULT 'Y',
	cheque_production_flag varchar(1) NOT NULL DEFAULT 'Y',
	receipt_production_flag varchar(1) NOT NULL DEFAULT 'Y',
	cheque_payee_type varchar(12),
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	txn_operation_type varchar(12),
	txn_item_code varchar(12),
	modify_date timestamp NOT NULL,
	modify_user_id varchar(32),
	list_seq integer DEFAULT 99,
	caseload_id varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE transaction_operations IS E'Specifies the transactions associated with each module as well as posting logic.';
COMMENT ON COLUMN transaction_operations.bank_cr_account_code IS E'Transaction may involve movement of funds between banks.';
COMMENT ON COLUMN transaction_operations.bank_dr_account_code IS E'Transaction may involve movement of funds between banks.';
COMMENT ON COLUMN transaction_operations.cheque_payee_type IS E'Reference Code ( PAYEE_TYPE )';
COMMENT ON COLUMN transaction_operations.cheque_production_flag IS E'Flag signalling check production.';
COMMENT ON COLUMN transaction_operations.cr_account_code IS E'Credit for specified transaction.';
COMMENT ON COLUMN transaction_operations.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN transaction_operations.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN transaction_operations.dr_account_code IS E'Debit account for specified trnsaction.';
COMMENT ON COLUMN transaction_operations.modify_date IS E'Modify Date';
COMMENT ON COLUMN transaction_operations.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN transaction_operations.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN transaction_operations.module_name IS E'Short name for module.';
COMMENT ON COLUMN transaction_operations.receipt_production_flag IS E'Flag siganlling receipt production for transaction.';
COMMENT ON COLUMN transaction_operations.txn_item_code IS E'Reference Code ( TXN_ITEM )';
COMMENT ON COLUMN transaction_operations.txn_operation_seq IS E'Controls the sequencing of multiple posting transactions.';
COMMENT ON COLUMN transaction_operations.txn_type IS E'Trust accounting transaction type.';
COMMENT ON COLUMN transaction_operations.update_allowed_flag IS E'Update allowed flag.';

CREATE TABLE transaction_payees (
	txn_type varchar(6) NOT NULL,
	payee_seq smallint NOT NULL,
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	default_payee_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN transaction_payees.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN transaction_payees.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN transaction_payees.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN transaction_payees.modify_user_id IS E'The user who modifies the record';

CREATE TABLE transaction_payees_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	txn_type varchar(6),
	payee_seq smallint,
	payee_person_id bigint,
	payee_corporate_id bigint,
	modify_user_id varchar(32),
	modify_date timestamp,
	default_payee_flag varchar(1) DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;
COMMENT ON TABLE transaction_payees_jn IS E'Journal table for transaction_payees';

CREATE TABLE transaction_types (
	txn_type varchar(6) NOT NULL,
	description varchar(40) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	txn_usage varchar(12) NOT NULL,
	all_caseload_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	update_allowed_flag varchar(1) NOT NULL DEFAULT 'Y',
	manual_invoice_flag varchar(1) NOT NULL DEFAULT 'Y',
	credit_obligation_type varchar(6),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	gross_net_flag varchar(1),
	caseload_type varchar(12),
	seal_flag varchar(1),
	days bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE transaction_types IS E'Defines transaction types which feed the majority of data entry screens.';
COMMENT ON COLUMN transaction_types.active_flag IS E'Flag showing whether code is active or inactive.';
COMMENT ON COLUMN transaction_types.all_caseload_flag IS E'Flag indicating whether all caseloads will use transaction type.';
COMMENT ON COLUMN transaction_types.days IS E'Number of days for the automated hold procedure.';
COMMENT ON COLUMN transaction_types.description IS E'Transaction description.';
COMMENT ON COLUMN transaction_types.expiry_date IS E' Date of code expiration.';
COMMENT ON COLUMN transaction_types.list_seq IS E' Sequencing for list of values.';
COMMENT ON COLUMN transaction_types.txn_type IS E'Transaction type';
COMMENT ON COLUMN transaction_types.txn_usage IS E'The usage for the transaction ie. Receipt, Disbursement, Commissary..';
COMMENT ON COLUMN transaction_types.update_allowed_flag IS E' Flag on record protection.';

CREATE TABLE transaction_types_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	txn_type varchar(6),
	description varchar(40),
	active_flag varchar(1) DEFAULT 'Y',
	txn_usage varchar(12),
	all_caseload_flag varchar(1) DEFAULT 'Y',
	expiry_date timestamp,
	update_allowed_flag varchar(1) DEFAULT 'Y',
	manual_invoice_flag varchar(1) DEFAULT 'Y',
	credit_obligation_type varchar(6),
	modify_user_id varchar(32),
	modify_date timestamp,
	list_seq smallint DEFAULT 99,
	gross_net_flag varchar(1) DEFAULT 'G',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;
COMMENT ON TABLE transaction_types_jn IS E'Journal table for transaction_types';

CREATE TABLE transfer_booking_tables (
	table_name varchar(30) NOT NULL,
	application_code varchar(12),
	pk_type varchar(12),
	process_method varchar(12),
	root_flag varchar(2),
	completed_flag varchar(1),
	seq_column varchar(30),
	object_class varchar(12),
	transfer_date_column varchar(200),
	booking_id_column varchar(30),
	offender_id_column varchar(30),
	parent_off_id_column varchar(30),
	parent_seq_column varchar(30),
	surrogate_key_column varchar(30),
	filter_column varchar(30),
	transfer_seq bigint,
	update_clause varchar(200),
	pk_first_column varchar(30),
	pk_second_column varchar(30),
	booking_where_clause varchar(200),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE transfer_booking_tables IS E'This table describe the table properties for generating Transfer Bookng SQLs  ';
COMMENT ON COLUMN transfer_booking_tables.application_code IS E'The application which the table belongs to';
COMMENT ON COLUMN transfer_booking_tables.booking_id_column IS E'The column which stores Offender_Book_ID';
COMMENT ON COLUMN transfer_booking_tables.booking_where_clause IS E'The where clause of the table in transfer booking module';
COMMENT ON COLUMN transfer_booking_tables.completed_flag IS E'If the table properties are completely defined for rule-based engine ?';
COMMENT ON COLUMN transfer_booking_tables.filter_column IS E'The logic column used to filter records [ Offender_ID / Offender_Book_ID]';
COMMENT ON COLUMN transfer_booking_tables.object_class IS E'The object class of the record in common object tables such as Addresses, Phonese etc...';
COMMENT ON COLUMN transfer_booking_tables.offender_id_column IS E'The column which stores the Offender_ID';
COMMENT ON COLUMN transfer_booking_tables.parent_off_id_column IS E'For recursive tables, the column which points to the Offender_ID column of its parent records';
COMMENT ON COLUMN transfer_booking_tables.parent_seq_column IS E'For recursive tables, the column which points to the sequence column of its parent records';
COMMENT ON COLUMN transfer_booking_tables.pk_first_column IS E'The first column of the primary key';
COMMENT ON COLUMN transfer_booking_tables.pk_second_column IS E'The second column of the primary key';
COMMENT ON COLUMN transfer_booking_tables.pk_type IS E'The type of the table primary key';
COMMENT ON COLUMN transfer_booking_tables.process_method IS E'The process method for the table.  [RULE : handled by rule-based SQLs, CUSTOM : customized ]';
COMMENT ON COLUMN transfer_booking_tables.root_flag IS E'If the table considered as the root table by the rule-based engine ?';
COMMENT ON COLUMN transfer_booking_tables.seq_column IS E'The column which requires re-sequencing the Transfer Booking';
COMMENT ON COLUMN transfer_booking_tables.surrogate_key_column IS E'The column name of the surrogate key';
COMMENT ON COLUMN transfer_booking_tables.table_name IS E'The name of the table';
COMMENT ON COLUMN transfer_booking_tables.transfer_date_column IS E'The column which will be used with Offender_ID column to determine if the record should be transfered or not.';
COMMENT ON COLUMN transfer_booking_tables.transfer_seq IS E'The processing order of the table in the Transfer Booking Status.  (Could be important for table with multiple parent tables)';
COMMENT ON COLUMN transfer_booking_tables.update_clause IS E'The details of the update clause';

CREATE TABLE transfer_table_relationships (
	parent_table varchar(30) NOT NULL,
	child_table varchar(30) NOT NULL,
	fk_offender_id_column varchar(30),
	fk_seq_column varchar(30),
	fk_pk_type varchar(12) NOT NULL,
	active_flag varchar(1) DEFAULT 'Y',
	relationship_seq bigint DEFAULT 1,
	child_update_clause varchar(200),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	pre_processing_rule varchar(80),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE transfer_table_relationships IS E'The table which store the relationships between tables in Transfer Booking module.';
COMMENT ON COLUMN transfer_table_relationships.active_flag IS E'If the relationship active for Transfer Booking module ?';
COMMENT ON COLUMN transfer_table_relationships.child_table IS E'The name of the child table';
COMMENT ON COLUMN transfer_table_relationships.child_update_clause IS E'The details of the update clause';
COMMENT ON COLUMN transfer_table_relationships.fk_offender_id_column IS E'The Offender_ID column in the foreign key';
COMMENT ON COLUMN transfer_table_relationships.fk_pk_type IS E'The type of FK';
COMMENT ON COLUMN transfer_table_relationships.fk_seq_column IS E'The sequence column in the foreign key';
COMMENT ON COLUMN transfer_table_relationships.parent_table IS E'The name of the parent table';
COMMENT ON COLUMN transfer_table_relationships.relationship_seq IS E'The order of the relationship in Transfer Booking module';

CREATE TABLE trips (
	trip_code varchar(6) NOT NULL,
	route_name varchar(20),
	vehicle_id integer,
	start_date timestamp,
	start_time timestamp,
	end_date timestamp,
	end_time timestamp,
	status varchar(12),
	comment_text varchar(240),
	vehicle_use_code varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	list_seq smallint,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	trip_type varchar(40),
	description varchar(40),
	expiry_date timestamp
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE trips IS E'- Retrofitted';
COMMENT ON COLUMN trips.comment_text IS E'Comments - Retrofitted';
COMMENT ON COLUMN trips.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN trips.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN trips.end_date IS E'End Date - Retrofitted';
COMMENT ON COLUMN trips.end_time IS E'End Time - Retrofitted';
COMMENT ON COLUMN trips.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN trips.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN trips.route_name IS E'Route Name - Retrofitted';
COMMENT ON COLUMN trips.start_date IS E'Start Date - Retrofitted';
COMMENT ON COLUMN trips.start_time IS E'Start Date - Retrofitted';
COMMENT ON COLUMN trips.status IS E'Reference Code (TRP_STS) - Retrofitted';
COMMENT ON COLUMN trips.trip_code IS E'Oracle Sequence TRIP ID - Retrofitted';
COMMENT ON COLUMN trips.vehicle_id IS E'Vehicle - Retrofitted';

CREATE TABLE trip_incidents (
	trip_id bigint NOT NULL,
	incident_seq integer NOT NULL,
	incident_type varchar(12) NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN trip_incidents.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN trip_incidents.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN trip_incidents.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN trip_incidents.modify_user_id IS E'The user who modifies the record';

CREATE TABLE trip_legs (
	trip_id bigint NOT NULL,
	trip_leg_seq integer NOT NULL,
	from_location_id varchar(12) NOT NULL,
	to_location_id varchar(12) NOT NULL,
	travel_time timestamp NOT NULL,
	extra_travel_time timestamp,
	schedule_time timestamp,
	actual_time timestamp,
	confirm_flag varchar(1) NOT NULL DEFAULT 'N',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN trip_legs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN trip_legs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN trip_legs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN trip_legs.modify_user_id IS E'The user who modifies the record';

CREATE TABLE trip_passengers (
	trip_passenger_id bigint NOT NULL,
	trip_id bigint,
	offender_book_id bigint NOT NULL,
	pickup_date timestamp,
	pickup_time timestamp,
	round_trip_flag varchar(1) NOT NULL DEFAULT 'N',
	schedule_id bigint,
	movement_type varchar(12) NOT NULL,
	from_location_id varchar(12) NOT NULL,
	to_location_id varchar(12) NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN trip_passengers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN trip_passengers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN trip_passengers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN trip_passengers.modify_user_id IS E'The user who modifies the record';

CREATE TABLE trip_staffs (
	trip_id bigint NOT NULL,
	staff_id integer NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE trip_staffs IS E'- Retrofitted';
COMMENT ON COLUMN trip_staffs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN trip_staffs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN trip_staffs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN trip_staffs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN trip_staffs.staff_id IS E'Staff ID - Retrofitted';
COMMENT ON COLUMN trip_staffs.trip_id IS E'Trip ID - Retrofitted';

CREATE TABLE trust_audits (
	txn_id bigint NOT NULL,
	module_name varchar(20) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE trust_audits IS E'table for storing module_names with txn_id.';
COMMENT ON COLUMN trust_audits.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN trust_audits.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN trust_audits.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN trust_audits.modify_user_id IS E'The user who modifies the record';

CREATE TABLE trust_audits_tmp (
	module_name varchar(20) NOT NULL,
	sid bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE trust_audits_tmp IS E'Temporary table for storing module_names with session id.';
COMMENT ON COLUMN trust_audits_tmp.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN trust_audits_tmp.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN trust_audits_tmp.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN trust_audits_tmp.modify_user_id IS E'The user who modifies the record';

CREATE TABLE txn_ops_invalid_accounts (
	module_name varchar(20) NOT NULL,
	txn_type varchar(6) NOT NULL,
	invalid_account_code integer NOT NULL,
	modify_user_id varchar(32),
	modify_date timestamp NOT NULL,
	list_seq integer DEFAULT 99,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE txn_ops_invalid_accounts IS E'Specifies the GL Accounts which are invalid for this transaction type and OMS module.';
COMMENT ON COLUMN txn_ops_invalid_accounts.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN txn_ops_invalid_accounts.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN txn_ops_invalid_accounts.invalid_account_code IS E'Debit account for specified trnsaction.';
COMMENT ON COLUMN txn_ops_invalid_accounts.modify_date IS E'Modify Date';
COMMENT ON COLUMN txn_ops_invalid_accounts.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN txn_ops_invalid_accounts.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN txn_ops_invalid_accounts.module_name IS E'Short name for module.';
COMMENT ON COLUMN txn_ops_invalid_accounts.txn_type IS E'Trust accounting transaction type.';

CREATE TABLE user_accessible_caseloads (
	caseload_id varchar(6) NOT NULL,
	username varchar(30) NOT NULL,
	start_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE user_accessible_case_notes (
	role_id bigint NOT NULL,
	uac_type varchar(12) NOT NULL,
	reason varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN user_accessible_case_notes.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN user_accessible_case_notes.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN user_accessible_case_notes.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN user_accessible_case_notes.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN user_accessible_case_notes.reason IS E'Standard Reference Code';
COMMENT ON COLUMN user_accessible_case_notes.uac_type IS E'Standard Reference Code';

CREATE TABLE user_caseload_roles (
	role_id integer NOT NULL,
	username varchar(30) NOT NULL,
	caseload_id varchar(6) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE vehicles (
	asset_id bigint NOT NULL,
	vehicle_id integer NOT NULL,
	plate_no varchar(12),
	fuel_type varchar(12),
	licence_class varchar(12),
	capacity smallint NOT NULL,
	remarks varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	optimal_capacity smallint NOT NULL
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE vehicles IS E'Vehicle Details- Retrofitted';
COMMENT ON COLUMN vehicles.asset_id IS E' - Retrofitted';
COMMENT ON COLUMN vehicles.capacity IS E'Vehicle Capacity';
COMMENT ON COLUMN vehicles.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN vehicles.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN vehicles.fuel_type IS E'Refrence Domain (VEH_FUEL)';
COMMENT ON COLUMN vehicles.licence_class IS E'Licence Requirement Class - Retrofitted';
COMMENT ON COLUMN vehicles.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN vehicles.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN vehicles.remarks IS E'Remarks - Retrofitted';
COMMENT ON COLUMN vehicles.vehicle_id IS E'Oracle Sequence Vehicle ID - Retrofitted';

CREATE TABLE vehicle_mileages (
	asset_id bigint NOT NULL,
	mileage_date timestamp NOT NULL,
	mileage_no bigint,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE vehicle_mileages IS E'Vehicle Maleage History- Retrofitted';
COMMENT ON COLUMN vehicle_mileages.asset_id IS E' - Retrofitted';
COMMENT ON COLUMN vehicle_mileages.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN vehicle_mileages.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN vehicle_mileages.mileage_date IS E' - Retrofitted';
COMMENT ON COLUMN vehicle_mileages.mileage_no IS E' - Retrofitted';
COMMENT ON COLUMN vehicle_mileages.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN vehicle_mileages.modify_user_id IS E'The user who modifies the record';

CREATE TABLE version_controls (
	file_name varchar(20) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN version_controls.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN version_controls.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN version_controls.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN version_controls.modify_user_id IS E'The user who modifies the record';

CREATE TABLE version_control_details (
	file_name varchar(20) NOT NULL,
	client_directory varchar(40) NOT NULL,
	version varchar(6),
	version_information varchar(2000) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON COLUMN version_control_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN version_control_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN version_control_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN version_control_details.modify_user_id IS E'The user who modifies the record';

CREATE TABLE video_review_sections (
	section_code varchar(12) NOT NULL,
	video_review_summary_id bigint NOT NULL,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE video_review_sections IS E'The video review section record';
COMMENT ON COLUMN video_review_sections.comment_text IS E'The section code under review comment';
COMMENT ON COLUMN video_review_sections.section_code IS E'The section code under review';
COMMENT ON COLUMN video_review_sections.video_review_summary_id IS E'The key value for the parent VIDEO_REVIEW_SUMMARY';

CREATE TABLE video_review_subsections (
	video_review_summary_id bigint NOT NULL,
	section_code varchar(12) NOT NULL,
	subsection_code varchar(12) NOT NULL,
	facilitator_a_score decimal(2,1),
	facilitator_b_score decimal(2,1),
	facilitator_c_score decimal(2,1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE video_review_subsections IS E'The video review section record';
COMMENT ON COLUMN video_review_subsections.facilitator_a_score IS E'The score for facilitator A';
COMMENT ON COLUMN video_review_subsections.facilitator_b_score IS E'The score for facilitator B';
COMMENT ON COLUMN video_review_subsections.facilitator_c_score IS E'The score for facilitator C';
COMMENT ON COLUMN video_review_subsections.section_code IS E'The section code under review';
COMMENT ON COLUMN video_review_subsections.subsection_code IS E'The sub section code under review';
COMMENT ON COLUMN video_review_subsections.video_review_summary_id IS E'The key value for the parent VIDEO_REVIEW_SUMMARY';

CREATE TABLE video_review_summaries (
	video_review_summary_id bigint NOT NULL,
	crs_sch_id bigint NOT NULL,
	review_date timestamp NOT NULL,
	reviewer_staff_id integer NOT NULL,
	facilitator_a_staff_id integer NOT NULL,
	facilitator_b_staff_id integer,
	facilitator_c_staff_id integer,
	facilitator_a_strength varchar(1000),
	facilitator_b_strength varchar(1000),
	facilitator_c_strength varchar(1000),
	facilitator_a_response varchar(1000),
	facilitator_b_response varchar(1000),
	facilitator_c_response varchar(1000),
	facilitator_a_development varchar(1000),
	facilitator_b_development varchar(1000),
	facilitator_c_development varchar(1000),
	comment_text varchar(4000),
	picture_quality_code varchar(12),
	sound_quality_code varchar(12),
	section_session_sampled varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE video_review_summaries IS E'The video review summary record';
COMMENT ON COLUMN video_review_summaries.comment_text IS E'The video review summary record comment text';
COMMENT ON COLUMN video_review_summaries.crs_sch_id IS E'Key field value for the associated COURSE_SCHEDULES';
COMMENT ON COLUMN video_review_summaries.facilitator_a_development IS E'The facilitator staff development path comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_a_response IS E'The facilitator staff response comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_a_staff_id IS E'The facilitator staff id for the staff member under review';
COMMENT ON COLUMN video_review_summaries.facilitator_a_strength IS E'The facilitator staff strength comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_b_development IS E'The facilitator staff development path comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_b_response IS E'The facilitator staff response comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_b_staff_id IS E'The facilitator staff id for the staff member under review';
COMMENT ON COLUMN video_review_summaries.facilitator_b_strength IS E'The facilitator staff strength comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_c_development IS E'The facilitator staff development path comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_c_response IS E'The facilitator staff response comment text';
COMMENT ON COLUMN video_review_summaries.facilitator_c_staff_id IS E'The facilitator staff id for the staff member under review';
COMMENT ON COLUMN video_review_summaries.facilitator_c_strength IS E'The facilitator staff strength comment text';
COMMENT ON COLUMN video_review_summaries.picture_quality_code IS E'The video review summary image quality';
COMMENT ON COLUMN video_review_summaries.review_date IS E'The review date for the video summary';
COMMENT ON COLUMN video_review_summaries.reviewer_staff_id IS E'The review staff id for the staff member taken the video summary';
COMMENT ON COLUMN video_review_summaries.section_session_sampled IS E'The section that was reviews';
COMMENT ON COLUMN video_review_summaries.video_review_summary_id IS E'Primary sarrogate key field';

CREATE TABLE vine_errors (
	error_text varchar(600),
	offender_id_display varchar(10),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE vine_log (
	log_data varchar(1200),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE vine_seeding_source (
	offender_id_display varchar(10),
	last_name varchar(35),
	first_name varchar(35),
	sex_code varchar(12),
	race_code varchar(12),
	offender_id bigint,
	middle_name varchar(35),
	suffix varchar(12),
	birth_date timestamp,
	offender_book_id bigint,
	booking_no varchar(14),
	agy_loc_id varchar(6),
	booking_begin_date timestamp,
	seal_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp,
	modify_user_id varchar(32)
)  TABLESPACE TAG_DATA;

CREATE TABLE visiting_groups (
	group_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	visit_date timestamp NOT NULL,
	start_time timestamp NOT NULL,
	end_time timestamp,
	group_name varchar(40),
	no_visitors smallint,
	group_purpose varchar(12),
	approved_by_id integer,
	escorted_by_id integer,
	comment_text varchar(240),
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE visiting_groups IS E'ncmcdoc_i_vis_r_groups_tours';
COMMENT ON COLUMN visiting_groups.approved_by_id IS E'staff_members.staff_id';
COMMENT ON COLUMN visiting_groups.escorted_by_id IS E'staff_members.staff_id';
COMMENT ON COLUMN visiting_groups.group_purpose IS E'Reference_code.group_purpose';

CREATE TABLE visiting_members (
	group_id bigint NOT NULL,
	member_seq integer NOT NULL,
	last_name varchar(32) NOT NULL,
	first_name varchar(32) NOT NULL,
	dob timestamp,
	id_type varchar(12),
	identifier varchar(32),
	comment_text varchar(240),
	verified_flag varchar(1) NOT NULL DEFAULT 'N',
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE visiting_members IS E'ncmcdoc_i_vis_r_groups_tours';

CREATE TABLE visitor_restrictions (
	person_id bigint,
	visit_restriction_type varchar(12) NOT NULL,
	effective_date timestamp NOT NULL,
	expiry_date timestamp,
	comment_txt varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	visitor_restriction_id bigint NOT NULL,
	entered_staff_id bigint,
	offender_id bigint,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE visitor_restrictions IS E'Restrictions applied to a visitor.';
COMMENT ON COLUMN visitor_restrictions.comment_txt IS E'The detail surrounding the reason for placing the alert on visitor.';
COMMENT ON COLUMN visitor_restrictions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN visitor_restrictions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN visitor_restrictions.effective_date IS E' The date the restriction was placed on the visitor"s record.';
COMMENT ON COLUMN visitor_restrictions.entered_staff_id IS E'The staff member who enters the restriction';
COMMENT ON COLUMN visitor_restrictions.expiry_date IS E' The visitor restriction will remain in effect until this date.';
COMMENT ON COLUMN visitor_restrictions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN visitor_restrictions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN visitor_restrictions.offender_id IS E'The ID of the offender';
COMMENT ON COLUMN visitor_restrictions.person_id IS E' System generated identifier for a person having contact with an offender.';
COMMENT ON COLUMN visitor_restrictions.visit_restriction_type IS E' Reference Code ( VST_RST_TYPE ) : The type of restriction being entered against a visitor.';
COMMENT ON COLUMN visitor_restrictions.visitor_restriction_id IS E'System generated sequence number.';

CREATE TABLE visit_allowance_levels (
	iep_level varchar(12) NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	visit_type varchar(12) NOT NULL,
	remand_visits smallint,
	weekends smallint,
	hours smallint,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	user_id varchar(40),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE visit_allowance_levels IS E'The default visit allownaces for the combination of agency location and IEP levels';
COMMENT ON COLUMN visit_allowance_levels.active_flag IS E'? If the record active';
COMMENT ON COLUMN visit_allowance_levels.agy_loc_id IS E'The ID of the agency location';
COMMENT ON COLUMN visit_allowance_levels.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN visit_allowance_levels.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN visit_allowance_levels.expiry_date IS E'Expriy date of the record';
COMMENT ON COLUMN visit_allowance_levels.hours IS E'The number of hours';
COMMENT ON COLUMN visit_allowance_levels.iep_level IS E'The IEP Level';
COMMENT ON COLUMN visit_allowance_levels.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN visit_allowance_levels.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN visit_allowance_levels.remand_visits IS E'The number of remand visits';
COMMENT ON COLUMN visit_allowance_levels.user_id IS E'The user ID of the staff who enteres the record';
COMMENT ON COLUMN visit_allowance_levels.visit_type IS E'The Visit Type';
COMMENT ON COLUMN visit_allowance_levels.weekends IS E'The number of weekends';

CREATE TABLE visit_cycle_limits (
	visit_cycle_limit_id bigint NOT NULL,
	agy_loc_id varchar(6) NOT NULL,
	sec_level varchar(12) NOT NULL,
	cycle_type varchar(12) NOT NULL,
	tot_hrs decimal(6,2),
	tot_visits integer,
	start_day varchar(12) NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE visit_type_limits (
	visit_cycle_limit_id bigint NOT NULL,
	visit_type varchar(12) NOT NULL,
	max_hrs_type decimal(6,2),
	max_visits_type integer,
	max_visitors_type integer,
	reinstate_flag varchar(1) NOT NULL DEFAULT 'Y',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE workflow_folders (
	workflow_code varchar(12) NOT NULL,
	description varchar(100),
	workflow_seq integer DEFAULT 1,
	modify_user_id varchar(32) DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	caseload_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE workflow_folders IS E'V1.0 Workflow Menu...';
COMMENT ON COLUMN workflow_folders.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN workflow_folders.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN workflow_folders.description IS E'Description of oms_module name...';
COMMENT ON COLUMN workflow_folders.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN workflow_folders.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN workflow_folders.workflow_code IS E'reference code "code"..';

CREATE TABLE workflow_functions (
	workflow_type varchar(12) NOT NULL,
	work_type varchar(12) NOT NULL,
	work_sub_type varchar(12) NOT NULL,
	function_type varchar(12) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN workflow_functions.create_date IS E'SYSDATE';
COMMENT ON COLUMN workflow_functions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN workflow_functions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN workflow_functions.function_type IS E'Functions carried out by the trigger';
COMMENT ON COLUMN workflow_functions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN workflow_functions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN workflow_functions.work_sub_type IS E'Subtype of the work';
COMMENT ON COLUMN workflow_functions.work_type IS E'Type of the work';
COMMENT ON COLUMN workflow_functions.workflow_type IS E'Type of workflow job. ALERT or TASK or CASENOTE';

CREATE TABLE workflow_history (
	workflow_history_id numeric(32) NOT NULL,
	request_date timestamp NOT NULL,
	status varchar(1) NOT NULL,
	key varchar(64) NOT NULL,
	work_trigger varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'USER',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	orig_original_msgid varchar(64),
	orig_sender_id varchar(30),
	orig_team_id bigint,
	orig_staff_id integer,
	orig_team_member_id bigint,
	orig_work_trigger varchar(12),
	orig_trigger_reason varchar(12),
	orig_work_id bigint,
	orig_offender_book_id bigint,
	orig_complete_reason_code varchar(12),
	orig_complete_comment_text varchar(240),
	orig_complete_user_id varchar(30),
	orig_due_date_period smallint,
	orig_assignment_date timestamp,
	orig_due_date timestamp,
	orig_override_due_date timestamp,
	orig_message_text varchar(4000),
	orig_workflow_type varchar(12),
	orig_days integer,
	orig_note_source_code varchar(12),
	orig_event_id bigint,
	orig_spare_text varchar(40),
	orig_spare_number bigint,
	orig_spare_date timestamp,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;

CREATE TABLE workflow_screens (
	workflow_code varchar(12) NOT NULL,
	module_name varchar(20) NOT NULL,
	description varchar(100),
	workflow_seq integer DEFAULT 1,
	modify_user_id varchar(32) DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	caseload_type varchar(12),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE workflow_screens IS E'V1.0  Workflow screens within workflow menu..';
COMMENT ON COLUMN workflow_screens.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN workflow_screens.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN workflow_screens.description IS E'Description of oms_module name...';
COMMENT ON COLUMN workflow_screens.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN workflow_screens.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN workflow_screens.module_name IS E'Module name from oms_modules';
COMMENT ON COLUMN workflow_screens.workflow_code IS E'reference code "code"..';

CREATE TABLE workflow_triggers (
	trigger_name varchar(12) NOT NULL,
	workflow_type varchar(12) NOT NULL,
	work_type varchar(12) NOT NULL,
	work_sub_type varchar(12) NOT NULL,
	days integer,
	due integer,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN workflow_triggers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN workflow_triggers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN workflow_triggers.days IS E'Some triggers may need to reference this field to determine when to fire';
COMMENT ON COLUMN workflow_triggers.due IS E'Some triggers may need to reference this field to determine when work is due';
COMMENT ON COLUMN workflow_triggers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN workflow_triggers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN workflow_triggers.trigger_name IS E'Name of the trigger';
COMMENT ON COLUMN workflow_triggers.work_sub_type IS E'Subtype of the work';
COMMENT ON COLUMN workflow_triggers.work_type IS E'Type of the work';
COMMENT ON COLUMN workflow_triggers.workflow_type IS E'Type of workflow job. ALERT or TASK or CASENOTE';

CREATE TABLE workflow_work_types (
	workflow_type varchar(12) NOT NULL,
	work_type varchar(12) NOT NULL,
	work_sub_type varchar(12) NOT NULL,
	manual_close_flag varchar(1) NOT NULL DEFAULT 'N',
	module_name varchar(20),
	iwp_flag varchar(1) NOT NULL DEFAULT 'N',
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_date timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON COLUMN workflow_work_types.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN workflow_work_types.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN workflow_work_types.manual_close_flag IS E'Flag to control wether to close the job automatically or not';
COMMENT ON COLUMN workflow_work_types.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN workflow_work_types.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN workflow_work_types.module_name IS E'Name of the module which will carry out the task';
COMMENT ON COLUMN workflow_work_types.work_sub_type IS E'Subtype of the work';
COMMENT ON COLUMN workflow_work_types.work_type IS E'Type of the work';
COMMENT ON COLUMN workflow_work_types.workflow_type IS E'Type of workflow job. ALERT or TASK or CASENOTE';

CREATE TABLE works (
	work_id bigint NOT NULL,
	workflow_type varchar(12) NOT NULL,
	work_type varchar(12) NOT NULL,
	work_sub_type varchar(12) NOT NULL,
	manual_close_flag varchar(1) NOT NULL DEFAULT 'N',
	module_name varchar(20),
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	caseload_type varchar(12),
	manual_select_flag varchar(1),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1),
	email_subject varchar(240),
	email_body varchar(4000)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE works IS E'The unit of work for staff (TASK/MESSAGE) ';
COMMENT ON COLUMN works.active_flag IS E'If the record active';
COMMENT ON COLUMN works.caseload_type IS E'The agency location type Reference Code(AGY_LOC_TYPE)';
COMMENT ON COLUMN works.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN works.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN works.expiry_date IS E'Expriy date of the records';
COMMENT ON COLUMN works.manual_close_flag IS E'Flag to control wether to close the job automatically or not';
COMMENT ON COLUMN works.manual_select_flag IS E'? If it is manudal select for Case notes';
COMMENT ON COLUMN works.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN works.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN works.module_name IS E'Name of the module which will carry out the task';
COMMENT ON COLUMN works.work_id IS E'PK of the work';
COMMENT ON COLUMN works.work_sub_type IS E'Subtype of the work. Reference (Code(TASK_SUBTYPE)';
COMMENT ON COLUMN works.work_type IS E'Type of the work. Reference Code(TASK_TYPE)';
COMMENT ON COLUMN works.workflow_type IS E'Type of workflow job. ALERT or TASK or CASENOTE. Reference Code (ALERT_TASK)';

CREATE TABLE work_assignments (
	work_assignment_id bigint NOT NULL,
	work_assignment_date timestamp NOT NULL,
	offender_book_id bigint NOT NULL,
	caseload_id varchar(6) NOT NULL,
	offender_id bigint NOT NULL,
	work_code varchar(6) NOT NULL,
	pay_range_code varchar(12) NOT NULL,
	sch_assignment_code varchar(12) NOT NULL,
	pay_range_review_date timestamp,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	last_status_modify_date timestamp NOT NULL,
	last_status_modify_time timestamp NOT NULL,
	work_assign_status varchar(12) NOT NULL,
	work_group_id varchar(6),
	last_confirm_date timestamp,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE work_assignments IS E'Created from Entity OFFENDER WORK ASSIGNMENT by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN work_assignments.caseload_id IS E'Caseload';
COMMENT ON COLUMN work_assignments.comment_text IS E'Comment text';
COMMENT ON COLUMN work_assignments.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_assignments.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_assignments.last_confirm_date IS E'Last confirm date';
COMMENT ON COLUMN work_assignments.last_status_modify_date IS E'Last status modified time';
COMMENT ON COLUMN work_assignments.last_status_modify_time IS E'last status modified time';
COMMENT ON COLUMN work_assignments.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_assignments.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_assignments.offender_book_id IS E'Booking ID';
COMMENT ON COLUMN work_assignments.offender_id IS E'Offender ID';
COMMENT ON COLUMN work_assignments.pay_range_code IS E'Pay range';
COMMENT ON COLUMN work_assignments.pay_range_review_date IS E' - Retrofitted';
COMMENT ON COLUMN work_assignments.sch_assignment_code IS E'Reference Code ( ASSIGNMENT )';
COMMENT ON COLUMN work_assignments.work_assign_status IS E'Reference Code ( WRK_ASG_STS )';
COMMENT ON COLUMN work_assignments.work_assignment_date IS E' - Retrofitted';
COMMENT ON COLUMN work_assignments.work_assignment_id IS E'Work Assignment ID';
COMMENT ON COLUMN work_assignments.work_code IS E'Work Code';
COMMENT ON COLUMN work_assignments.work_group_id IS E'work group';

CREATE TABLE work_assignments_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	work_assignment_id bigint,
	work_assignment_date timestamp,
	offender_book_id bigint,
	caseload_id varchar(6),
	offender_id bigint,
	work_code varchar(6),
	pay_range_code varchar(12),
	sch_assignment_code varchar(12),
	pay_range_review_date timestamp,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	last_status_modify_date timestamp,
	last_status_modify_time timestamp,
	work_assign_status varchar(12),
	work_group_id varchar(6),
	last_confirm_date timestamp,
	comment_text varchar(240),
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;

CREATE TABLE work_assignment_details (
	work_assignment_id bigint NOT NULL,
	week_no smallint NOT NULL,
	day_code varchar(12) NOT NULL,
	number_of_units decimal(9,2) NOT NULL,
	compensation_code varchar(12) NOT NULL,
	performance_code varchar(12) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	start_time timestamp NOT NULL,
	end_time timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE work_assignment_details IS E'Created from Entity OFFENDER ASSIGNMENT SCHEDULE by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN work_assignment_details.compensation_code IS E'Reference Code ( COMPENSATION )';
COMMENT ON COLUMN work_assignment_details.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_assignment_details.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_assignment_details.day_code IS E'Reference Code ( DAY )';
COMMENT ON COLUMN work_assignment_details.end_time IS E'End Time';
COMMENT ON COLUMN work_assignment_details.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_assignment_details.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_assignment_details.number_of_units IS E'Number Of Units';
COMMENT ON COLUMN work_assignment_details.performance_code IS E'Refrerence Code ( PERFORMANCE )';
COMMENT ON COLUMN work_assignment_details.start_time IS E'Start Time';
COMMENT ON COLUMN work_assignment_details.week_no IS E'Week No';
COMMENT ON COLUMN work_assignment_details.work_assignment_id IS E'Work Assignment ID';

CREATE TABLE work_assignment_statuses (
	work_assignment_id bigint NOT NULL,
	status_seq integer NOT NULL DEFAULT 1,
	update_date timestamp NOT NULL,
	update_time timestamp NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	comment_text varchar(240),
	work_assign_status varchar(12) NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE work_assignment_statuses IS E'Created from Entity OFFENDER ASSIGNMENT STATUS HISTORY by FOUAD on 07-JUN-94- Retrofitted';
COMMENT ON COLUMN work_assignment_statuses.comment_text IS E' - Retrofitted';
COMMENT ON COLUMN work_assignment_statuses.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_assignment_statuses.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_assignment_statuses.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_assignment_statuses.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_assignment_statuses.update_date IS E' - Retrofitted';
COMMENT ON COLUMN work_assignment_statuses.update_time IS E' - Retrofitted';
COMMENT ON COLUMN work_assignment_statuses.work_assign_status IS E'Reference Code ( WRK_ASG_STS )';
COMMENT ON COLUMN work_assignment_statuses.work_assignment_id IS E' - Retrofitted';

CREATE TABLE work_flows (
	work_flow_id bigint NOT NULL,
	object_code varchar(12) NOT NULL,
	object_id bigint NOT NULL,
	object_seq integer,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE work_flows IS E'The generic Work Flow Objects';
COMMENT ON COLUMN work_flows.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_flows.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_flows.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_flows.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_flows.object_code IS E'The work flow object ( The Alias of the table)';
COMMENT ON COLUMN work_flows.object_id IS E'The First Key for the Module Objects';
COMMENT ON COLUMN work_flows.object_seq IS E'2rd Component of the Primary Key';

CREATE TABLE work_flow_logs (
	work_flow_id bigint NOT NULL,
	work_flow_seq integer NOT NULL,
	work_action_code varchar(12) NOT NULL,
	work_action_date timestamp,
	action_user_id integer,
	work_flow_status varchar(12) NOT NULL,
	create_date timestamp,
	locate_agy_loc_id varchar(6),
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
COMMENT ON TABLE work_flow_logs IS E'The Detailed Event log of the Wok Flow';
COMMENT ON COLUMN work_flow_logs.action_user_id IS E'User who perform the Action on the Work Flow Object';
COMMENT ON COLUMN work_flow_logs.create_date IS E'Create Date of the Record';
COMMENT ON COLUMN work_flow_logs.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_flow_logs.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_flow_logs.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_flow_logs.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_flow_logs.work_action_code IS E'Action Code on the Object (Such as Verifiy, Review ..)';
COMMENT ON COLUMN work_flow_logs.work_action_date IS E'The Action Date on the Work Flow Objects';
COMMENT ON COLUMN work_flow_logs.work_flow_id IS E'Work Flow Object ID';
COMMENT ON COLUMN work_flow_logs.work_flow_status IS E'The Action of the Status (Requested, Cancelled, Done)';

CREATE TABLE work_functions (
	function_type varchar(12) NOT NULL,
	work_id bigint NOT NULL,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE work_functions IS E'The assoication bewteen works and functions';
COMMENT ON COLUMN work_functions.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_functions.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_functions.function_type IS E'The name of the function';
COMMENT ON COLUMN work_functions.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_functions.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_functions.work_id IS E'Work ID';

CREATE TABLE work_iwp_templates (
	work_id bigint NOT NULL,
	template_id bigint NOT NULL,
	active_flag varchar(1) NOT NULL DEFAULT 'Y',
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	list_seq integer,
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE work_iwp_templates IS E'The assoication between Work and IWP Templates';
COMMENT ON COLUMN work_iwp_templates.active_flag IS E'If the template active for the work';
COMMENT ON COLUMN work_iwp_templates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_iwp_templates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_iwp_templates.list_seq IS E'The listing order sequence';
COMMENT ON COLUMN work_iwp_templates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_iwp_templates.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_iwp_templates.template_id IS E'The ID of the IWP doucemnt template';
COMMENT ON COLUMN work_iwp_templates.work_id IS E'The ID of the work';

CREATE TABLE work_rates (
	pay_range_code varchar(12) NOT NULL,
	unit_code varchar(12) NOT NULL,
	compensation_code varchar(12) NOT NULL,
	performance_code varchar(12) NOT NULL,
	rate_amount decimal(11,2) NOT NULL,
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL DEFAULT 'user',
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE work_rates IS E'Created from Entity LEVEL RATE by FOUAD on 06-JUN-94- Retrofitted';
COMMENT ON COLUMN work_rates.compensation_code IS E'Reference Code ( COMPENSATION )';
COMMENT ON COLUMN work_rates.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_rates.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_rates.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_rates.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_rates.pay_range_code IS E'Reference Code ( PAY_RANGE )';
COMMENT ON COLUMN work_rates.performance_code IS E'Reference Code ( PERFORMANCE )';
COMMENT ON COLUMN work_rates.rate_amount IS E' - Retrofitted';
COMMENT ON COLUMN work_rates.unit_code IS E'Reference Code ( UNIT )';

CREATE TABLE work_rates_jn (
	jn_operation char(3) NOT NULL,
	jn_oracle_user varchar(30) NOT NULL,
	jn_datetime timestamp NOT NULL,
	jn_notes varchar(240),
	jn_appln varchar(30),
	jn_session numeric(38),
	pay_range_code varchar(12),
	unit_code varchar(12),
	compensation_code varchar(12),
	performance_code varchar(12),
	rate_amount decimal(11,2),
	modify_user_id varchar(32),
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	seal_flag varchar(1)
)  TABLESPACE TAG_JN;

CREATE TABLE work_triggers (
	trigger_name varchar(12) NOT NULL,
	work_id bigint NOT NULL,
	days integer,
	due integer,
	active_flag varchar(1) NOT NULL,
	expiry_date timestamp,
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_SETUP_DATA;
COMMENT ON TABLE work_triggers IS E'The assoication between triggesr and works';
COMMENT ON COLUMN work_triggers.active_flag IS E'?Active setup';
COMMENT ON COLUMN work_triggers.create_datetime IS E'The timestamp when the record is created';
COMMENT ON COLUMN work_triggers.create_user_id IS E'The user who creates the record';
COMMENT ON COLUMN work_triggers.days IS E'Days for the work';
COMMENT ON COLUMN work_triggers.due IS E'Due day';
COMMENT ON COLUMN work_triggers.expiry_date IS E'Expiry date';
COMMENT ON COLUMN work_triggers.modify_datetime IS E'The timestamp when the record is modified ';
COMMENT ON COLUMN work_triggers.modify_user_id IS E'The user who modifies the record';
COMMENT ON COLUMN work_triggers.trigger_name IS E'The name of the trigger';
COMMENT ON COLUMN work_triggers.work_id IS E'The Work ID';

CREATE TABLE work_trigger_executables (
	work_trigger varchar(30) NOT NULL,
	work_context varchar(12) NOT NULL DEFAULT 'DEFAULT',
	trigger_executable varchar(100),
	trigger_executable_type varchar(20) NOT NULL DEFAULT 'PACKAGE PROCEDURE',
	message_template varchar(4000),
	trigger_usage varchar(12) NOT NULL DEFAULT 'CREATE',
	create_datetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	create_user_id varchar(32) NOT NULL,
	modify_datetime timestamp DEFAULT CURRENT_TIMESTAMP,
	modify_user_id varchar(32),
	seal_flag varchar(1)
)  TABLESPACE TAG_DATA;
