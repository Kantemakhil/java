<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="20171013_Anshul_9_rulesets_162_rules"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
   <description>20171013_Anshul_9_rulesets_162_rules</description>
   <rule ref="rulesets/java/codesize.xml/CyclomaticComplexity"/>
   <rule ref="rulesets/plsql/codesize.xml/CyclomaticComplexity"/>
   <rule ref="rulesets/java/codesize.xml/ExcessiveClassLength"/>
   <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength"/>
   <rule ref="rulesets/plsql/codesize.xml/ExcessiveMethodLength"/>
   <rule ref="rulesets/plsql/codesize.xml/ExcessiveObjectLength"/>
   <rule ref="rulesets/plsql/codesize.xml/ExcessivePackageBodyLength"/>
   <rule ref="rulesets/plsql/codesize.xml/ExcessivePackageSpecificationLength"/>
   <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList"/>
   <rule ref="rulesets/plsql/codesize.xml/ExcessiveParameterList"/>
   <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount"/>
   <rule ref="rulesets/plsql/codesize.xml/ExcessiveTypeLength"/>
   <rule ref="rulesets/java/codesize.xml/ModifiedCyclomaticComplexity"/>
   <rule ref="rulesets/java/codesize.xml/NPathComplexity"/>
   <rule ref="rulesets/plsql/codesize.xml/NPathComplexity"/>
   <rule ref="rulesets/java/codesize.xml/NcssConstructorCount"/>
   <rule ref="rulesets/java/codesize.xml/NcssMethodCount"/>
   <rule ref="rulesets/plsql/codesize.xml/NcssMethodCount"/>
   <rule ref="rulesets/plsql/codesize.xml/NcssObjectCount"/>
   <rule ref="rulesets/java/codesize.xml/NcssTypeCount"/>
   <rule ref="rulesets/java/codesize.xml/StdCyclomaticComplexity"/>
   <rule ref="rulesets/java/codesize.xml/TooManyFields"/>
   <rule ref="rulesets/plsql/codesize.xml/TooManyFields"/>
   <rule ref="rulesets/java/codesize.xml/TooManyMethods"/>
   <rule ref="rulesets/plsql/codesize.xml/TooManyMethods"/>
   <rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects"/>
   <rule ref="rulesets/java/coupling.xml/ExcessiveImports"/>
   <rule ref="rulesets/java/coupling.xml/LawOfDemeter"/>
   <rule ref="rulesets/java/coupling.xml/LooseCoupling"/>
   <rule ref="rulesets/java/coupling.xml/LoosePackageCoupling"/>
   <rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod"/>
   <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod"/>
   <rule ref="rulesets/java/design.xml/AccessorClassGeneration"/>
   <rule ref="rulesets/java/design.xml/AccessorMethodGeneration"/>
   <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic"/>
   <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts"/>
   <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause"/>
   <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass"/>
   <rule ref="rulesets/java/design.xml/AvoidProtectedMethodInFinalClassNotExtending"/>
   <rule ref="rulesets/java/design.xml/AvoidReassigningParameters"/>
   <rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel"/>
   <rule ref="rulesets/java/design.xml/BadComparison"/>
   <rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
   <rule ref="rulesets/java/design.xml/CloseResource"/>
   <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals"/>
   <rule ref="rulesets/java/design.xml/ConfusingTernary"/>
   <rule ref="rulesets/java/design.xml/ConstantsInInterface"/>
   <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod"/>
   <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt"/>
   <rule ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
   <rule ref="rulesets/java/design.xml/EqualsNull"/>
   <rule ref="rulesets/java/design.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
   <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic"/>
   <rule ref="rulesets/java/design.xml/GodClass"/>
   <rule ref="rulesets/java/design.xml/IdempotentOperations"/>
   <rule ref="rulesets/java/design.xml/ImmutableField"/>
   <rule ref="rulesets/java/design.xml/InstantiationToGetClass"/>
   <rule ref="rulesets/java/design.xml/LogicInversion"/>
   <rule ref="rulesets/java/design.xml/MissingBreakInSwitch"/>
   <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass"/>
   <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement"/>
   <rule ref="rulesets/java/design.xml/NonStaticInitializer"/>
   <rule ref="rulesets/java/design.xml/NonThreadSafeSingleton"/>
   <rule ref="rulesets/java/design.xml/OptimizableToArrayCall"/>
   <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInCaseInsensitiveComparisons"/>
   <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons"/>
   <rule ref="rulesets/java/design.xml/PreserveStackTrace"/>
   <rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull"/>
   <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale"/>
   <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions"/>
   <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns"/>
   <rule ref="rulesets/java/design.xml/SimplifyConditional"/>
   <rule ref="rulesets/java/design.xml/SingleMethodSingleton"/>
   <rule ref="rulesets/java/design.xml/SingletonClassReturningNewInstance"/>
   <rule ref="rulesets/java/design.xml/SingularField"/>
   <rule ref="rulesets/java/design.xml/SwitchDensity"/>
   <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault"/>
   <rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement"/>
   <rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor"/>
   <rule ref="rulesets/java/design.xml/UncommentedEmptyMethodBody"/>
   <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn"/>
   <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter"/>
   <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty"/>
   <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions"/>
   <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify"/>
   <rule ref="rulesets/java/design.xml/UseUtilityClass"/>
   <rule ref="rulesets/java/design.xml/UseVarargs"/>
   <rule ref="rulesets/java/empty.xml/EmptyCatchBlock"/>
   <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock"/>
   <rule ref="rulesets/java/empty.xml/EmptyIfStmt"/>
   <rule ref="rulesets/java/empty.xml/EmptyInitializer"/>
   <rule ref="rulesets/java/empty.xml/EmptyStatementBlock"/>
   <rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop"/>
   <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer"/>
   <rule ref="rulesets/java/empty.xml/EmptySwitchStatements"/>
   <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock"/>
   <rule ref="rulesets/java/empty.xml/EmptyTryBlock"/>
   <rule ref="rulesets/java/empty.xml/EmptyWhileStmt"/>
   <rule ref="rulesets/java/naming.xml/AbstractNaming"/>
   <rule ref="rulesets/java/naming.xml/AvoidDollarSigns"/>
   <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName"/>
   <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName"/>
   <rule ref="rulesets/java/naming.xml/BooleanGetMethodName"/>
   <rule ref="rulesets/java/naming.xml/ClassNamingConventions"/>
   <rule ref="rulesets/java/naming.xml/GenericsNaming"/>
   <rule ref="rulesets/java/naming.xml/LongVariable"/>
   <rule ref="rulesets/java/naming.xml/MethodNamingConventions"/>
   <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass"/>
   <rule ref="rulesets/java/naming.xml/MisleadingVariableName"/>
   <rule ref="rulesets/java/naming.xml/NoPackage"/>
   <rule ref="rulesets/java/naming.xml/PackageCase"/>
   <rule ref="rulesets/java/naming.xml/ShortClassName"/>
   <rule ref="rulesets/java/naming.xml/ShortMethodName"/>
   <rule ref="rulesets/java/naming.xml/ShortVariable"/>
   <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName"/>
   <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName"/>
   <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName"/>
   <rule ref="rulesets/java/naming.xml/VariableNamingConventions"/>
   <rule ref="rulesets/java/optimizations.xml/AddEmptyString"/>
   <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops"/>
   <rule ref="rulesets/java/optimizations.xml/AvoidInstantiatingObjectsInLoops"/>
   <rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal"/>
   <rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal"/>
   <rule ref="rulesets/java/optimizations.xml/PrematureDeclaration"/>
   <rule ref="rulesets/java/optimizations.xml/RedundantFieldInitializer"/>
   <rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith"/>
   <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
   <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector"/>
   <rule ref="rulesets/java/optimizations.xml/UseArraysAsList"/>
   <rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends"/>
   <rule ref="rulesets/java/strings.xml/AppendCharacterWithChar"/>
   <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals"/>
   <rule ref="rulesets/java/strings.xml/AvoidStringBufferField"/>
   <rule ref="rulesets/java/strings.xml/ConsecutiveAppendsShouldReuse"/>
   <rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends"/>
   <rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck"/>
   <rule ref="rulesets/java/strings.xml/InefficientStringBuffering"/>
   <rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration"/>
   <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar"/>
   <rule ref="rulesets/java/strings.xml/StringInstantiation"/>
   <rule ref="rulesets/java/strings.xml/StringToString"/>
   <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange"/>
   <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings"/>
   <rule ref="rulesets/java/strings.xml/UseIndexOfChar"/>
   <rule ref="rulesets/java/strings.xml/UseStringBufferLength"/>
   <rule ref="rulesets/java/strings.xml/UselessStringValueOf"/>
   <rule ref="rulesets/ecmascript/unnecessary.xml/NoElseReturn"/>
   <rule ref="rulesets/ecmascript/unnecessary.xml/UnnecessaryBlock"/>
   <rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary"/>
   <rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier"/>
   <rule ref="rulesets/java/unnecessary.xml/UnnecessaryModifier"/>
   <rule ref="rulesets/ecmascript/unnecessary.xml/UnnecessaryParentheses"/>
   <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn"/>
   <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals"/>
   <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable"/>
   <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod"/>
   <rule ref="rulesets/java/unnecessary.xml/UselessParentheses"/>
   <rule ref="rulesets/java/unnecessary.xml/UselessQualifiedThis"/>
   <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter"/>
   <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable"/>
   <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField"/>
   <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod"/>
</ruleset>