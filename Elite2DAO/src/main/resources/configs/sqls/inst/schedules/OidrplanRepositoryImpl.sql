
OIDRPLAN_FIND_RGCASEMANAGERS {
 	select LAST_NAME || ', ' || FIRST_NAME STAFF_NAME , STAFF_ID from STAFF_MEMBERS SM where (SM.STATUS = 'ACTIVE' or '' = 'ENTER-QUERY' ) and exists ( select 1 from STAFF_MEMBER_ROLES SMR , SYSTEM_PROFILES SP where SMR.STAFF_ID = SM.STAFF_ID and SMR.ROLE_ID = SP.PROFILE_VALUE_2::bigint and SP.PROFILE_TYPE = 'CLIENT' and SP.PROFILE_CODE = 'RPLAN_INST' ) and exists ( select 1 from STAFF_ACCESSIBLE_CASELOADS where STAFF_ID = SM.STAFF_ID and CASELOAD_ID = :CASELOADID )
}

OIDRPLAN_FIND_RGPAROLEAGENTS {
 	select LAST_NAME || ', ' || FIRST_NAME STAFF_NAME , STAFF_ID from STAFF_MEMBERS SM where (SM.STATUS = 'ACTIVE' or '' = 'ENTER-QUERY' ) and exists ( select 1 from STAFF_MEMBER_ROLES SMR , SYSTEM_PROFILES SP where SMR.STAFF_ID = SM.STAFF_ID and SMR.ROLE_ID = SP.PROFILE_VALUE_2::bigint and SP.PROFILE_TYPE = 'CLIENT' and SP.PROFILE_CODE = 'RPLAN_COMM' ) and exists ( select 1 from STAFF_ACCESSIBLE_CASELOADS where STAFF_ID = SM.STAFF_ID and CASELOAD_ID = :CASELOADID )
}

OIDRPLAN_FIND_RGPLANSTATUS {
select DESCRIPTION , CODE , LIST_SEQ from REFERENCE_CODES RC where domain = 'RPLAN_STS' and ('' = 'ENTER-QUERY' or ACTIVE_FLAG = 'Y' ) and (RC.CODE <> 'APPRV' or exists( select 1 from SYSTEM_PROFILES SP , STAFF_MEMBER_ROLES SMR , STAFF_MEMBERS SM where SM.STAFF_ID = SMR.STAFF_ID and SM.USER_ID = :userName and (SMR.ROLE_ID = PROFILE_VALUE::bigint or SMR.ROLE_ID = PROFILE_VALUE_2::bigint ) and PROFILE_TYPE = 'CLIENT' and PROFILE_CODE = 'RPLAN_APPR' ) ) order by 3
}

OIDRPLAN_FIND_RGEMPLOYMENTSTATUS {
 	SELECT DESCRIPTION , CODE , LIST_SEQ   FROM REFERENCE_CODES WHERE DOMAIN = 'EMPL_CRA'     AND ('' = 'ENTER-QUERY' OR ACTIVE_FLAG = 'Y' ) ORDER BY 3
}

OIDRPLAN_FIND_RGPROPOSEDHOUSING {
select
	ADDR,
	DESCRIPTION,
	ADDRESS_ID
from
	(
	select
		coalesce(STREET_INFORMATION,'') || ' ' || ' #' || coalesce(SUITE_NUMBER,'') || ' ' || coalesce(CITY_NAME,'') || ' ' || coalesce(PROV_STATE_DESC,'') || ' ' || coalesce(ZIP_POSTAL_CODE,'') as ADDR,
		AU.DESCRIPTION,
		VA.ADDRESS_ID
	from
		v_addresses va
	left outer join (
		select
			AU.ADDRESS_ID,
			RC.DESCRIPTION
		from
			ADDRESS_USAGES AU,
			REFERENCE_CODES RC
		where
			RC.DOMAIN = 'ADDRESS_TYPE'
			and RC.CODE = AU.ADDRESS_USAGE
			and coalesce(AU.MODIFY_DATETIME , AU.CREATE_DATETIME ) = (
			select
				MAX(coalesce(AU1.MODIFY_DATETIME , AU1.CREATE_DATETIME ) )
			from
				ADDRESS_USAGES AU1
			where
				AU.ADDRESS_ID = AU1.ADDRESS_ID ) ) au on
		(VA.ADDRESS_ID = AU.ADDRESS_ID)
	where
		VA.OWNER_CLASS = 'OFF'
		and VA.OWNER_ID = :rootOffenderId :: bigint
		and VA.ACTIVE_FLAG = 'Y')A
order by
	UPPER(ADDR);
}
 	select ADDR, DESCRIPTION, ADDRESS_ID from ( select STREET_INFORMATION || ' ' || ' #' || SUITE_NUMBER || ' ' || CITY_NAME || ' ' || PROV_STATE_DESC || ' ' || ZIP_POSTAL_CODE as ADDR, AU.DESCRIPTION, VA.ADDRESS_ID from v_addresses va left outer join ( select AU.ADDRESS_ID, RC.DESCRIPTION from ADDRESS_USAGES AU, REFERENCE_CODES RC where RC.DOMAIN = 'ADDRESS_TYPE' and RC.CODE = AU.ADDRESS_USAGE and coalesce(AU.MODIFY_DATETIME , AU.CREATE_DATETIME ) = ( select MAX(coalesce(AU1.MODIFY_DATETIME , AU1.CREATE_DATETIME ) ) from ADDRESS_USAGES AU1 where AU.ADDRESS_ID = AU1.ADDRESS_ID ) ) au on (VA.ADDRESS_ID = AU.ADDRESS_ID) where VA.OWNER_CLASS = 'OFF' and VA.OWNER_ID = :rootOffenderId :: bigint and VA.ACTIVE_FLAG = 'Y')A order by UPPER(ADDR);

OIDRPLAN_FIND_RGPROPOSEDEMPLOYMENT {
 	SELECT EMPLOYER_NAME||' - '||         OMS_MISCELLANEOUS_GETDESCCODE('OCCUPATION' , OCCUPATIONS_CODE )||' - '||        OMS_MISCELLANEOUS_GETDESCCODE('EMPLOY_STS' , EMPLOYMENT_POST_CODE ) PROPOSED_EMPLOYMENT , 	   EMPLOY_SEQ   FROM OFFENDER_EMPLOYMENTS  WHERE OFFENDER_BOOK_ID = :offenderBookId  ORDER BY PROPOSED_EMPLOYMENT 
}

OIDRPLAN_FIND_RGCHECKLISTANS {
 	SELECT DESCRIPTION , LIST_SEQ, PROFILE_CODE   FROM PROFILE_CODES  WHERE PROFILE_TYPE = :profileType    AND (ACTIVE_FLAG = 'Y' OR '' = 'ENTER-QUERY' )  ORDER BY LIST_SEQ
}

OIDRPLAN_RELEASEPLANS_FIND_RELEASE_PLANS {
 SELECT RP.RELEASE_PLAN_ID ,RP.CASE_MANAGER_ID ,RP.OFFENDER_BOOK_ID ,RP.PAROLE_AGENT_ID , RP.PLAN_STATUS ,RP.MEMO_TEXT ,RP.ADDRESS_ID ,RP.HOUSING_COMMENT ,RP.EMPLOY_SEQ ,RP.EMPLOYMENT_STATUS , RP.EMPLOYMENT_COMMENT ,RP.AGENT_RECOMMEND ,RP.ASSESSMENT_SEQ ,RP.PROPOSED_HOUSING ,RP.PROPOSED_EMPLOYMENT , RP.ADDRESS_TYPE ,RP.UPDATED_BY ,RP.TA_TYPE ,RP.SPONSOR ,RP.PROPOSED_START_DATE ,RP.PROPOSED_END_DATE ,RP.CREATE_DATE , RP.CREATE_DATETIME ,RP.CREATE_USER_ID ,RP.MODIFY_DATETIME ,RP.MODIFY_USER_ID ,RP.SEAL_FLAG, BKG.ROOT_OFFENDER_ID FROM RELEASE_PLANS RP, OFFENDER_BOOKINGS BKG WHERE RP.OFFENDER_BOOK_ID = :offenderBookId AND RP.OFFENDER_BOOK_ID = BKG.OFFENDER_BOOK_ID 
}
OIDRPLAN_RELEASEPLANS_INSERT_RELEASE_PLANS {
	INSERT INTO RELEASE_PLANS(RELEASE_PLAN_ID , CASE_MANAGER_ID , OFFENDER_BOOK_ID , PAROLE_AGENT_ID , PLAN_STATUS , MEMO_TEXT , ADDRESS_ID , HOUSING_COMMENT , EMPLOY_SEQ , EMPLOYMENT_STATUS , EMPLOYMENT_COMMENT , AGENT_RECOMMEND , ASSESSMENT_SEQ , PROPOSED_HOUSING , PROPOSED_EMPLOYMENT , ADDRESS_TYPE , UPDATED_BY , TA_TYPE , SPONSOR , PROPOSED_START_DATE , PROPOSED_END_DATE , CREATE_DATE , CREATE_DATETIME , CREATE_USER_ID  , SEAL_FLAG, MODIFY_USER_ID, MODIFY_DATETIME)
values(:releasePlanId,:caseManagerId,:offenderBookId,:paroleAgentId,:planStatus, :memoText, :addressId, :housingComment , :employSeq , :employmentStatus, :employmentComment, :agentRecommend , :assessmentSeq , :proposedHousing , :proposedEmployment , :addressType , :updatedBy, :taType , :sponsor , :proposedStartDate , :proposedEndDate , :createDate ,current_timestamp, :createUserId , :sealFlag, null, null )
}

OIDRPLAN_RELEASEPLANS_UPDATE_RELEASE_PLANS {
	update RELEASE_PLANS set CASE_MANAGER_ID = :caseManagerId , PAROLE_AGENT_ID = :paroleAgentId , EMPLOY_SEQ = :employSeq, PLAN_STATUS = :planStatus , ADDRESS_ID = :addressId , HOUSING_COMMENT = :housingComment , EMPLOYMENT_STATUS = :employmentStatus , EMPLOYMENT_COMMENT = :employmentComment , AGENT_RECOMMEND = :agentRecommend, PROPOSED_HOUSING = :proposedHousing , PROPOSED_EMPLOYMENT = :proposedEmployment , ADDRESS_TYPE = :addressType, modify_user_id =:modifyUserId, modify_datetime =current_timestamp where RELEASE_PLAN_ID = :releasePlanId and OFFENDER_BOOK_ID = :offenderBookId 
	}

OIDRPLAN_UPDATE_RELEASE_PLANS {
	UPDATE RELEASE_PLANS SET PLAN_STATUS = 'INACT',modify_user_id =:modifyUserId, modify_datetime =current_timestamp WHERE OFFENDER_BOOK_ID = :offenderBookId AND RELEASE_PLAN_ID <>:releasePlanId
}

OIDRPLAN_RELEASEPLANS_DELETE_RELEASE_PLANS { 
	DELETE FROM RELEASE_PLANS WHERE RELEASE_PLAN_ID =:releasePlanId AND OFFENDER_BOOK_ID = :offenderBookId
}

OIDRPLAN_OFFCHECKLISTDET_FIND_OFFENDER_CHECKLIST_DETAILS {
  select
	OFFENDER_CHECKLIST_ID ,
	PROFILE_SEQ ,
	PROFILE_TYPE ,
	CHECKLIST_TYPE ,
	PROFILE_CODE ,
	LIST_SEQ ,
	COMMENT_TEXT ,
	CASELOAD_TYPE ,
	CREATE_DATETIME ,
	CREATE_USER_ID ,
	MODIFY_DATETIME ,
	MODIFY_USER_ID ,
	SEAL_FLAG,
		(select mandatory_flag from PROFILE_TYPES where profile_type =ocd.profile_type and profile_category = ocd.checklist_type) as mandatory_flag,
	(
	select
		count(*)
	from
		PROFILE_CODES
	where
		PROFILE_TYPE = ocd.PROFILE_TYPE
		and (ACTIVE_FLAG = 'Y'
			or '' = 'ENTER-QUERY' )) as COUNT
from
	OFFENDER_CHECKLIST_DETAILS ocd
where
	OFFENDER_CHECKLIST_ID = :offenderChecklistId
order by
	LIST_SEQ;
	
}
OIDRPLAN_OFFCHECKLISTDET_UPDATE_OFFENDER_CHECKLIST_DETAILS {
	update OFFENDER_CHECKLIST_DETAILS set OFFENDER_CHECKLIST_ID = :offenderChecklistId , PROFILE_SEQ = :profileSeq , PROFILE_TYPE = :profileType , CHECKLIST_TYPE = :checklistType , PROFILE_CODE = :profileCode , LIST_SEQ = :listSeq , COMMENT_TEXT = :commentText , CASELOAD_TYPE = :caseloadType , MODIFY_DATETIME = current_timestamp , MODIFY_USER_ID = :modifyUserId , SEAL_FLAG = :sealFlag where OFFENDER_CHECKLIST_ID = :offenderChecklistId and PROFILE_SEQ = :profileSeq and PROFILE_TYPE = :profileType and CHECKLIST_TYPE = :checklistType
}


OIDRPLAN_OFF_BKG_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM RELEASE_PLANS R WHERE R.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OIDRPLAN_RELEASE_PLANS_POSTQUERY {
	SELECT REVIEW_SUP_LEVEL_TYPE, ASSESSMENT_DATE FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :offenderBookId AND ASSESSMENT_SEQ   = :assessmentSeq
}

OIDRPLAN_RELEASE_PLANS_POSTQUERY_OFF_BOOK_ID {
	SELECT OA.ASSESSMENT_SEQ, REVIEW_SUP_LEVEL_TYPE, ASSESSMENT_DATE FROM ASSESSMENTS   ASS, OFFENDER_ASSESSMENTS OA WHERE ASS.ASSESSMENT_ID = OA.ASSESSMENT_TYPE_ID AND OFFENDER_BOOK_ID = :offenderBookId 
	AND ASSESSMENT_CODE = (SELECT PROFILE_VALUE_2 FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'RPLAN_ASSESS') AND ASSESS_STATUS    = 'A' ORDER BY 3 DESC
}

OIDRPLAN_RELEASE_PLANS_POSTQUERY_HOUSING_LOCATION {
	SELECT street_information||' '||
	       ' #'||suite_number||' '||
	       city_name||' '||
	       prov_state_desc||' '||
	       zip_postal_code PROPOSED_HOUSING,
	       address_id
	  	   FROM v_addresses    va
	       WHERE owner_class  = 'OFF'
	       AND owner_id     = :rootOffenderId
	       AND primary_flag = 'Y'
}

OIDRPLAN_RELEASE_PLANS_POSTQUERY_ADDRESS_ID {
select (coalesce(street_information, '') || ' ' || ' #' || coalesce(suite_number, '') || ' ' || coalesce(city_name, '') || ' ' || coalesce(prov_state_desc, '') || ' ' || coalesce(zip_postal_code, '')) as proposedHousing
from v_addresses va   WHERE va.address_id = :ADDRESSID 
}

OIDRPLAN_RELEASE_PLANS_PROPOSED_EMPLOYMENTS_POSTQUERY {
	SELECT EMPLOYER_NAME||' - '|| OMS_MISCELLANEOUS_GETDESCCODE('OCCUPATION', OCCUPATIONS_CODE)||' - '|| OMS_MISCELLANEOUS_GETDESCCODE('EMPLOY_STS', EMPLOYMENT_POST_CODE) PROPOSED_EMPLOYMENT FROM OFFENDER_EMPLOYMENTS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND EMPLOY_SEQ = :EMPLOYSEQ
}

OIDRPLAN_RELEASE_PLANS_ADDRESS_ID_PREINSERT {
	SELECT STREET_INFORMATION||' '|| STREET_DIRECTION_DESC|| ' #'||SUITE_NUMBER||' '|| CITY_NAME||' '|| PROV_STATE_DESC||' '|| ZIP_POSTAL_CODE ADDR, ADDRESS_ID FROM V_ADDRESSES    VA WHERE OWNER_CLASS  = 'OFF' AND OWNER_ID     = :rootOffenderId AND PRIMARY_FLAG = 'Y'
}

OIDRPLAN_RELEASE_PLANS_ADDRESS_TYPE_PREINSERT {
	select RC.DESCRIPTION from ADDRESS_USAGES AU, REFERENCE_CODES RC where AU.ADDRESS_ID = :addressId and AU.ACTIVE_FLAG = 'Y' and RC.DOMAIN = 'ADDRESS_TYPE' and RC.CODE = AU.ADDRESS_USAGE and coalesce(AU.MODIFY_DATETIME, AU.CREATE_DATETIME) = ( select MAX(coalesce(AU1.MODIFY_DATETIME, AU1.CREATE_DATETIME)) from ADDRESS_USAGES AU1 where AU.ADDRESS_ID = AU1.ADDRESS_ID)
}

OIDRPLAN_RELEASE_PLANS_PREINSERTPRE_INSERT {
	SELECT nextval('RELEASE_PLAN_ID') releasePlanId FROM DUAL
}

OIDRPLAN_RELEASE_PLANS_PREUPDATE {
	DELETE FROM RP_OTHER_OCCUPANTS WHERE RELEASE_PLAN_ID = :RELEASEPLANID
}

OIDRPLAN_RELEASE_PLANS_PRERECORD_ {
 select 'Y' from SYSTEM_PROFILES SP, STAFF_MEMBER_ROLES SMR, STAFF_MEMBERS SM where SM.STAFF_ID = SMR.STAFF_ID and SM.USER_ID = user and (SMR.ROLE_ID = PROFILE_VALUE::bigint or SMR.ROLE_ID = PROFILE_VALUE_2::bigint) and PROFILE_TYPE = 'CLIENT' and PROFILE_CODE = 'RPLAN_APPR'
}

OIDRPLAN_RELEASE_PLANS_WHENNEWRECORDINSTANCE_ {
	select 'Y' from STAFF_MEMBERS SM, STAFF_MEMBER_ROLES SMR, SYSTEM_PROFILES SP where SM.USER_ID = user and SMR.STAFF_ID = SM.STAFF_ID and SMR.ROLE_ID = SP.PROFILE_VALUE_2::bigint and SP.PROFILE_TYPE = 'CLIENT' and SP.PROFILE_CODE = 'RPLAN_COMM'
}

OIDRPLAN_RELEASE_PLANS_KEYDELREC_ {
 select 'Y' from OFFENDER_CHECKLIST_DETAILS OCD where OCD.OFFENDER_CHECKLIST_ID = :RELEASEPLANID and OCD.CHECKLIST_TYPE = 'RPLAN' and OCD.PROFILE_CODE is not null
}

OIDRPLAN_RELEASE_PLANS_PREDELETE {
	DELETE FROM OFFENDER_CHECKLIST_DETAILS O WHERE O.OFFENDER_CHECKLIST_ID = :RELEASEPLANID
}

OIDRPLAN_OFF_CHECKLIST_DET_POSTQUERY {
	SELECT DESCRIPTION, CODE_VALUE_TYPE,UPDATED_ALLOWED_FLAG FROM PROFILE_TYPES WHERE PROFILE_CATEGORY = 'RPLAN' AND PROFILE_TYPE = :profileType
}

OIDRPLAN_OFF_CHECKLIST_DET_POSTQUERY_ {
	SELECT DESCRIPTION FROM PROFILE_CODES WHERE PROFILE_TYPE = :PROFILETYPE AND PROFILE_CODE = :PROFILECODE
}

OIDRPLAN_OFF_CHECKLIST_DET_WHENNEWRECORDINSTANCE_ {
	SELECT CODE_VALUE_TYPE, UPDATED_ALLOWED_FLAG FROM PROFILE_TYPES WHERE PROFILE_TYPE = :PROFILETYPE
}

OIDRPLAN_OIDRPLAN_POSTQUERY {
	SELECT 'Y' FROM OFFENDER_SENT_CONDITIONS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND OBJECT_ID = :RELEASEPLANID AND OBJECT_TYPE = 'RELEASE'
}

OIDRPLAN_CHECK_BLOCK_ERRORS_ {
	SELECT TABLE_NAME FROM ALL_CONSTRAINTS WHERE OWNER = 'OMS_OWNER' AND CONSTRAINT_TYPE = 'R' AND CONSTRAINT_NAME = :P_CONSTRAINT_NAME
}

OIDRPLAN_CREATE_FORM_GLOBALSCREATE_FORM_GLOBALS { 
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}

OIDRPLAN_CHK_CONDITION_EXISTS_CUR {
	SELECT CASE WHEN EXISTS 
	(SELECT 'Y' FROM OFFENDER_SENT_CONDITIONS WHERE OFFENDER_BOOK_ID = :offenderBookId AND OBJECT_TYPE = 'RELEASE' AND OBJECT_ID = :releasePlanId) THEN 'Y' ELSE 'N' END Y
	FROM DUAL
}

OIDRPLAN_CHK_OTHER_OCC_EXISTS_CUR {
	SELECT CASE WHEN EXISTS 
	(SELECT 'Y' FROM RP_OTHER_OCCUPANTS WHERE RELEASE_PLAN_ID = :releasePlanId) THEN 'Y' ELSE 'N' END Y
	FROM DUAL
}

OIDRPLAN_CHK_PRIMARY_OCC_EXISTS_CUR {
	SELECT 'Y', P.FIRST_NAME||' '||P.LAST_NAME CONTACT_NAME FROM PERSONS P, OFFENDER_CONTACT_PERSONS  OCP, RP_OTHER_OCCUPANTS ROC WHERE P.PERSON_ID = OCP.PERSON_ID AND OCP.OFFENDER_CONTACT_PERSON_ID = ROC.OFFENDER_CONTACT_PERSON_ID AND RELEASE_PLAN_ID = :releasePlanId AND PRIMARY_FLAG    = 'Y'
}

OIDRPLAN_CHK_PRIM_OCC_CONTACTED_CUR {
	SELECT CASE WHEN EXISTS 
	(SELECT 'Y' FROM RP_OTHER_OCCUPANTS WHERE RELEASE_PLAN_ID = :releasePlanId AND PRIMARY_FLAG    = 'Y' AND CONTACTED_FLAG  = 'Y') THEN 'Y' ELSE 'N' END Y
	FROM DUAL
}

OIDRPLAN_CHK_ALL_MAND_QUES_CUR {
	SELECT PT.DESCRIPTION FROM OFFENDER_CHECKLIST_DETAILS OCD, PROFILE_TYPES PT WHERE OCD.OFFENDER_CHECKLIST_ID = :releasePlanId AND OCD.CHECKLIST_TYPE        = 'RPLAN' AND PT.PROFILE_CATEGORY       = 'RPLAN' AND OCD.PROFILE_TYPE          = PT.PROFILE_TYPE AND PT.MANDATORY_FLAG         = 'N' AND coalesce (OCD.PROFILE_CODE ,'') = ''
}

OIDRPLAN_STAFF_MEMBERS_STAFF_ID {
SELECT LAST_NAME||', '||FIRST_NAME STAFF_NAME , STAFF_ID FROM STAFF_MEMBERS WHERE STAFF_ID = :staffId
}


OIDRPLAN_OFF_BKG_ONCHECKUPDATE {
	SELECT 1 FROM RELEASE_PLANS R WHERE R.OFFENDER_BOOK_ID = :offenderBookId and RELEASE_PLAN_ID =:releasePlanId and PLAN_STATUS IN ('INPRG','SUSP')
}

INSERT_OFFENDER_CHECKLIST_DETAILS {
	insert into offender_checklist_details (offender_checklist_id, profile_seq, profile_type, checklist_type, list_seq, create_user_id, create_datetime,modify_datetime) select :releasePlanId, 1, profile_type, 'RPLAN', list_seq, :createUserId , current_timestamp,NULL from profile_types where profile_category = 'RPLAN' and active_flag = 'Y' 
 }
 OIDRPLAN_DELETE_OFFENDER_CHECKLIST_DETAILS {
    DELETE FROM OFFENDER_CHECKLIST_DETAILS WHERE OFFENDER_CHECKLIST_ID = :releasePlanId
 }
 
