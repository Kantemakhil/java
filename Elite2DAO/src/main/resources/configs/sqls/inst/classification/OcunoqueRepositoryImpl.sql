
OCUNOQUE_FIND_RGRANK {
select
REF_CODE.CODE rank ,
REF_CODE.DESCRIPTION NBT_RANK
from
REFERENCE_CODES REF_CODE
where
domain = 'RANK_VALUES'
and ACTIVE_FLAG = 'Y'
and ((:RECSTATUS = 'QUERY' )
or (REF_CODE
.CODE not in (
select
coalesce (rank ::text ,
'0')
from
OFFENDER_ASSESSMENT_ITEMS B
where
B.OFFENDER_BOOK_ID = :OFFENDERBOOKID
and B.ASSESSMENT_SEQ = :ASSESSMENTSEQ
and B.PARENT_ASSESSMENT_ID = :ASSESSMENTID ) ) )
order by
REF_CODE.LIST_SEQ asc ,
REF_CODE.CODE asc
}

OCUNOQUE_ASSESS_FIND_ASSESSMENTS {
 	SELECT ASSESSMENT_ID ,ASSESSMENT_CLASS ,PARENT_ASSESSMENT_ID ,ASSESSMENT_CODE ,DESCRIPTION ,LIST_SEQ ,ACTIVE_FLAG ,UPDATE_ALLOWED_FLAG ,EFFECTIVE_DATE ,EXPIRY_DATE ,SCORE ,MUTUAL_EXCLUSIVE_FLAG ,DETERMINE_SUP_LEVEL_FLAG ,REQUIRE_EVALUATION_FLAG ,REQUIRE_APPROVAL_FLAG ,REVIEW_CYCLE_DAYS ,CASELOAD_TYPE ,REVIEW_FLAG ,ASSESS_COMMENT ,HIGH_VALUE ,LOW_VALUE ,SEARCH_CRITERIA_FLAG ,OVERRIDEABLE_FLAG ,ASSESSMENT_TYPE ,CALCULATE_TOTAL_FLAG ,MEASURE ,CREATE_USER_ID ,CREATE_DATE ,MODIFY_USER_ID ,MODIFY_DATETIME ,CREATE_DATETIME ,CELL_SHARING_ALERT_FLAG ,TOTAL_PERCENT ,SCREEN_CODE ,SCHEDULE_COMPLETE_DAYS ,SECT_SCORE_INCLUDE_FLAG ,SECT_SCORE_OVERRIDE_FLAG ,MEDICAL_FLAG ,SEAL_FLAG   FROM ASSESSMENTS 
 	 where PARENT_ASSESSMENT_ID = :assessmentId 
 AND assessment_class = 'SECT' AND ACTIVE_FLAG ='Y' order by list_seq asc, assessment_code asc
}

OCUNOQUE_ASSESS_FIND_ASSESSMENTS_QUESTIONS {
 	SELECT ASSESSMENT_ID ,ASSESSMENT_CLASS ,PARENT_ASSESSMENT_ID ,ASSESSMENT_CODE ,DESCRIPTION ,LIST_SEQ ,ACTIVE_FLAG ,UPDATE_ALLOWED_FLAG ,EFFECTIVE_DATE ,EXPIRY_DATE ,SCORE ,MUTUAL_EXCLUSIVE_FLAG ,DETERMINE_SUP_LEVEL_FLAG ,REQUIRE_EVALUATION_FLAG ,REQUIRE_APPROVAL_FLAG ,REVIEW_CYCLE_DAYS ,CASELOAD_TYPE ,REVIEW_FLAG ,ASSESS_COMMENT ,HIGH_VALUE ,LOW_VALUE ,SEARCH_CRITERIA_FLAG ,OVERRIDEABLE_FLAG ,ASSESSMENT_TYPE ,CALCULATE_TOTAL_FLAG ,MEASURE ,CREATE_USER_ID ,CREATE_DATE ,MODIFY_USER_ID ,MODIFY_DATETIME ,CREATE_DATETIME ,CELL_SHARING_ALERT_FLAG ,TOTAL_PERCENT ,SCREEN_CODE ,SCHEDULE_COMPLETE_DAYS ,SECT_SCORE_INCLUDE_FLAG ,SECT_SCORE_OVERRIDE_FLAG ,MEDICAL_FLAG ,SEAL_FLAG, REQUIRED_FLAG   FROM ASSESSMENTS 
 	 WHERE PARENT_ASSESSMENT_ID = :assessmentId 
 AND ASSESSMENTS.ASSESSMENT_CLASS = 'CAT'  AND ACTIVE_FLAG ='Y'order by list_seq asc, assessment_code asc
}

OCUNOQUE_ASSESS_FIND_ASSESSMENTS_ANSWERS {
 	SELECT ASSESSMENT_ID ,ASSESSMENT_CLASS ,PARENT_ASSESSMENT_ID ,ASSESSMENT_CODE ,DESCRIPTION ,LIST_SEQ ,ACTIVE_FLAG ,UPDATE_ALLOWED_FLAG ,EFFECTIVE_DATE ,EXPIRY_DATE ,SCORE ,MUTUAL_EXCLUSIVE_FLAG ,DETERMINE_SUP_LEVEL_FLAG ,REQUIRE_EVALUATION_FLAG ,REQUIRE_APPROVAL_FLAG ,REVIEW_CYCLE_DAYS ,CASELOAD_TYPE ,REVIEW_FLAG ,ASSESS_COMMENT ,HIGH_VALUE ,LOW_VALUE ,SEARCH_CRITERIA_FLAG ,OVERRIDEABLE_FLAG ,ASSESSMENT_TYPE ,CALCULATE_TOTAL_FLAG ,MEASURE ,CREATE_USER_ID ,CREATE_DATE ,MODIFY_USER_ID ,MODIFY_DATETIME ,CREATE_DATETIME ,CELL_SHARING_ALERT_FLAG ,TOTAL_PERCENT ,SCREEN_CODE ,SCHEDULE_COMPLETE_DAYS ,SECT_SCORE_INCLUDE_FLAG ,SECT_SCORE_OVERRIDE_FLAG ,MEDICAL_FLAG ,SEAL_FLAG,BOOKMARK_CONDITION,BOOKMARK_NAME   FROM ASSESSMENTS 
 	 WHERE PARENT_ASSESSMENT_ID = :assessmentId 
 AND assessments.assessment_class = 'IND' AND ACTIVE_FLAG ='Y' order by list_seq asc, assessment_code asc
}

OCUNOQUE_ASSESS_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM ASSESSMENTS A WHERE A.PARENT_ASSESSMENT_ID = :ASSESSMENTID
}

OCUNOQUE_ASSESS1_POSTQUERY {
	SELECT  ASSESSMENT_ID FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID = :ASSESSMENTID
}

OCUNOQUE_ASSESS1_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM ASSESSMENTS A WHERE A.PARENT_ASSESSMENT_ID = :ASSESSMENTID
}

OCUNOQUE_ASSESS1_WHENNEWRECORDINSTANCE_ {
	SELECT ASSESSMENT_ID FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID = :ASSESSMENTID
}

OCUNOQUE_RANK_SUP_LEVEL {
	SELECT SUPERVISION_LEVEL_TYPE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = P_ASSESSMENT_ID ORDER BY MINI_SCORE DESC
}

OCUNOQUE_CHECK_FOR_USER_ANSWER_ {
	SELECT  'Y' ,REQUIRED_FLAG, COMMENT_TEXT, ITEM_SEQ, RANK FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND ASSESSMENT_ID = :ASSESSMENTID AND PARENT_ASSESSMENT_ID = :PARENTASSESSMENTID
}

OCUNOQUE_SET_ROW_LOCK_ {
	SELECT ASSESSMENT_SEQ FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ FOR UPDATE NOWAIT
}

OCUNOQUE_SET_ROW_LOCK_ {
	SELECT ASSESSMENT_SEQ FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ FOR UPDATE NOWAIT
}

OCUNOQUE_ADD_REMOVE_ANSWER_GET_NEXT_ITEM_SEQ_CUR {
	SELECT coalesce(MAX(item_seq),0) + 1 FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :offenderBookId AND ASSESSMENT_SEQ = :asessmentSeq
}

OCUNOQUE_REMOVE_ANSWER {
	DELETE FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :offenderBookId AND ASSESSMENT_SEQ = :assessmentSeq AND ASSESSMENT_ID = :assessmentId AND PARENT_ASSESSMENT_ID = :parentAssessmentId
}

OCUNOQUE_INACTIVATE_PRVIOUS_ASSESSMENT {
	SELECT V_OFFASS.ASSESSMENT_SEQ ,V_OFFASS.REVIEW_SUP_LEVEL_TYPE, V_OFFASS.REQUIRE_APPROVAL_FLAG FROM V_OFFASS_ASS  V_OFFASS WHERE
 V_OFFASS.OFFENDER_BOOK_ID = :offenderBookId AND V_OFFASS.CASELOAD_TYPE = (SELECT CASELOAD_TYPE   FROM CASELOADS  
 WHERE CASELOAD_ID =   (  SELECT WORKING_CASELOAD_ID      FROM STAFF_MEMBERS        WHERE USER_ID = :USERID)) AND V_OFFASS.ASSESSMENT_SEQ =(SELECT MAX(OA2.ASSESSMENT_SEQ)
 FROM V_OFFASS_ASS OA2 WHERE OA2.OFFENDER_BOOK_ID = :offenderBookId
 AND OA2.ASSESS_STATUS = 'A' AND OA2.ASSESSMENT_SEQ < :assessmentSeq AND OA2.CASELOAD_TYPE = (SELECT CASELOAD_TYPE   FROM CASELOADS   WHERE 
CASELOAD_ID =   (  SELECT WORKING_CASELOAD_ID      FROM STAFF_MEMBERS        WHERE USER_ID = :USERID)))
}

OCUNOQUE_CREATE_OFF_INST_REQUEST_REC_ {
	SELECT INT_STS_REASON_CODE FROM INTERNAL_STATUS_REASONS WHERE INTERNAL_STATUS = :ASSESSMENTCODE AND ACTIVE_FLAG = 'Y'
}

OCUNOQUE_INITIATE_SAVE_PROCESS_ {
	SELECT COUNT(*) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ
}

OCUNOQUE_INITIATE_EXIT_PROCESSINITIATE_EXIT_PROCESS {
	DELETE FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ
}

OCUNOQUE_INITIATE_EXIT_PROCESSINITIATE_EXIT_PROCESS {
	DELETE FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS {
	SELECT SUM(SCORE) SCORE FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :offenderBookId AND ASSESSMENT_SEQ = :assessmentSeq
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_ {
	SELECT SUPERVISION_LEVEL_TYPE, MAX_SCORE SCORE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = LV_ASS_TYPE_ID AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y' AND MAX_SCORE = (SELECT MAX(MAX_SCORE) FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = LV_ASS_TYPE_ID AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y')
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_ {
	SELECT SUPERVISION_LEVEL_TYPE, MAX_SCORE SCORE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = LV_ASS_TYPE_ID AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y' AND MINI_SCORE = (SELECT MIN(MINI_SCORE) FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = LV_ASS_TYPE_ID AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y')
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_SUPERVISION_LEVEL_TYPE {
	SELECT SUPERVISION_LEVEL_TYPE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = :assessmentId AND :assessScore BETWEEN MINI_SCORE AND MAX_SCORE AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y'
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMSget_current_total_score_cur {
	SELECT SUPERVISION_LEVEL_TYPE, A.ASSESSMENT_ID ASSESSMENT_ID FROM ASSESSMENT_SUPERVISIONS A, ASSESSMENT_SECTION_SCORES_V1 C WHERE C.PARENT_ASSESSMENT_ID = P_ASS_TYPE_ID AND C.OFFENDER_BOOK_ID = P_OFFENDER_BOOK_ID AND C.ASSESSMENT_SEQ = P_ASSESSMENT_SEQ AND A.ASSESSMENT_ID = C.ASSESSMENT_ID AND SCORE >= MINI_SCORE AND SCORE <= MAX_SCORE AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y'
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_ {
	SELECT 'X' FROM ASSESSMENTS WHERE ASSESSMENT_ID = LV_ASS_TYPE_ID AND ASSESSMENT_CLASS = 'TYPE' AND NVL(CALCULATE_TOTAL_FLAG,'N') = 'N'
}

OCUNOQUE_CALCULATE_RANK_SCORE_ {
	SELECT coalesce(MAX(ITEM_SEQ), 0) + 1 FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ   = :ASSESSMENTSEQ
}

OCUNOQUE_CALCULATE_RANK_SCOREitem_seq_cur {
	DELETE FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND ITEM_SEQ = :NBTITEMSEQ AND ASSESSMENT_ID = :ASSESSMENTID AND PARENT_ASSESSMENT_ID = :ASSESSMENTID
}

OCUNOQUE_CALCULATE_RANK_SCORE_FROM_WVR_ {
	SELECT coalesce(MAX(ITEM_SEQ), 0) + 1 FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ   = :ASSESSMENTSEQ
}

OCUNOQUE_CALCULATE_RANK_SCORE_FROM_WVRitem_seq_cur {
	DELETE FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND ITEM_SEQ = :NBTITEMSEQ AND ASSESSMENT_ID = :ASSESSMENTID AND PARENT_ASSESSMENT_ID = :ASSESSMENTID
}

OCUNOQUE_GET_RANK_SCORE_FROM_LISTVAL_ {
	SELECT coalesce(MAX(ITEM_SEQ), 0) + 1 FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ   = :ASSESSMENTSEQ
}

OCUNOQUE_GET_RANK_SCORE_FROM_LISTVALitem_seq_cur {
	DELETE FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND ITEM_SEQ = :NBTITEMSEQ AND ASSESSMENT_ID = :ASSESSMENTID AND PARENT_ASSESSMENT_ID = :ASSESSMENTID
}

OCUNOQUE_CHECK_RANK_ASSESSMENTS_ {
	IS SELECT 'X' FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID = :ASSESSMENTID AND RANK IS NOT NULL
}

OCUNOQUE_CHECK_RANK_ASSES_FROM_SECTIONS_ {
	IS SELECT 'X' FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID = :PREVASSESS1ID
}

OCUNOQUE_CHK_RANK_ASSES_FROM_QUESTIONS_ {
	IS SELECT 'X' FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID = :QUESTIONPREVASSESSID
}

OCUNOQUE_CHK_RANK_QUES_FROM_DIF_BLK_ {
	IS SELECT 'X' FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID = :QUESTIONPREVASSESSID
}


OCUNOQUE_SAVE_ASSESSMENT_ITEMS_NEW_GET_CURRENT_TOTAL_SCORE_CUR {
	SELECT SUM(SCORE)  FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :offenderBookId 
AND ASSESSMENT_SEQ = :assSeq AND PARENT_ASSESSMENT_ID IN (SELECT ASSESSMENT_ID FROM ASSESSMENTS WHERE PARENT_ASSESSMENT_ID IN
 (SELECT ASSESSMENT_ID  FROM ASSESSMENTS WHERE PARENT_ASSESSMENT_ID =:assessmentTypeId AND SECT_SCORE_INCLUDE_FLAG = 'Y'))
}
OCUNOQUE_SAVE_ASSESSMENT_ITEMS_NEW_GET_MAX_SCORE {
	SELECT SUPERVISION_LEVEL_TYPE, MAX_SCORE MAX_SCORE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = :assessTypeId AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y' AND MAX_SCORE = (SELECT MAX(MAX_SCORE) FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = :assessTypeId AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y')
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_NEW_GET_MIN_SCORE {
  SELECT SUPERVISION_LEVEL_TYPE,MINI_SCORE MINI_SCORE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = :assessTypeId AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y' AND MINI_SCORE = (SELECT MIN(MINI_SCORE) FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = :assessTypeId AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y')

}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_GET_SUPERLEVELTYPE {
	SELECT SUPERVISION_LEVEL_TYPE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = :assessTypeId AND :totalScore BETWEEN MINI_SCORE AND MAX_SCORE AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y'  limit 1
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_NEWget_current_total_score_cur {
	SELECT SUPERVISION_LEVEL_TYPE, A.ASSESSMENT_ID ASSESSMENT_ID FROM ASSESSMENT_SUPERVISIONS A, ASSESSMENT_SECTION_SCORES_V1 C WHERE C.PARENT_ASSESSMENT_ID = P_ASS_TYPE_ID AND C.OFFENDER_BOOK_ID = P_OFFENDER_BOOK_ID AND C.ASSESSMENT_SEQ = P_ASSESSMENT_SEQ AND A.ASSESSMENT_ID = C.ASSESSMENT_ID AND SCORE >= MINI_SCORE AND SCORE <= MAX_SCORE AND EXPIRY_DATE IS NULL AND ACTIVE_FLAG = 'Y'
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_NEW_ {
	SELECT 'X' FROM ASSESSMENTS WHERE ASSESSMENT_ID = LV_ASS_TYPE_ID AND ASSESSMENT_CLASS = 'TYPE' AND NVL(CALCULATE_TOTAL_FLAG,'N') = 'N'
}

OCUNOQUE_SAVE_ASSESSMENT_ITEMS_NEW_ {
	SELECT REQUIRE_APPROVAL_FLAG FROM ASSESSMENTS WHERE ASSESSMENT_ID = LV_ASS_TYPE_ID AND ASSESSMENT_CLASS = 'TYPE'
}

OCUNOQUE_SAVE_PROCESS_FROM_SECTIONS_ {
	SELECT COUNT(*) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ
}

OCUNOQUE_OVERRIDE_FLAG_RULE_ {
	SELECT SUM(SCORE) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID IN( SELECT ASSESSMENT_ID FROM ASSESSMENTS WHERE PARENT_ASSESSMENT_ID = P_ASS_ID)
}

OCUNOQUE_OVERRIDE_FLAG_RULE_ {
	SELECT SUM(SCORE) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ
}

OCUNOQUE_OVERRIDE_FLAG_RULE_ {
	SELECT SUPERVISION_LEVEL_TYPE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = P_ASS_ID AND MINI_SCORE <= P_SCORE AND MAX_SCORE >= P_SCORE
}

OCUNOQUE_OVERRIDE_FLAG_RULEget_sec_score_cur {
	SELECT SUPERVISION_LEVEL_TYPE FROM ASSESSMENT_SUPERVISIONS WHERE ASSESSMENT_ID = :GLOBAL.ASSESSMENT_TYPE_ID AND MINI_SCORE <= P_SCORE AND MAX_SCORE >= P_SCORE
}

OCUNOQUE_OVERRIDE_FLAG_RULE_ {
	SELECT SECT_SCORE_OVERRIDE_FLAG FROM ASSESSMENTS WHERE ASSESSMENT_ID = P_ASS_ID
}

OCUNOQUE_SKIP_SECTION_MSG_ {
	SELECT SUM(SCORE) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID  IN (SELECT ASSESSMENT_ID FROM ASSESSMENTS WHERE ASSESSMENTS .PARENT_ASSESSMENT_ID =  :ASSESSMENTID)
}

OCUNOQUE_SKIP_SECTION_MSG_ {
	SELECT NEXT_SECTION_FLAG,NEXT_ASSESSMENT_ID, MIN_SCORE, MAX_SCORE, MESSAGE_TEXT FROM ASSESS_SECTION_NOTIFICATIONS WHERE ASSESSMENT_ID = :ASSESSMENTID AND SCORE_TYPE = 'SECTION' AND MIN_SCORE <= P_SCORE AND MAX_SCORE >= P_SCORE
}

OCUNOQUE_SKIP_SECTION_TOTAL_ {
	SELECT SUM(SCORE) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ AND PARENT_ASSESSMENT_ID IN (SELECT ASSESSMENT_ID FROM ASSESSMENTS WHERE SECT_SCORE_INCLUDE_FLAG = 'Y' AND PARENT_ASSESSMENT_ID IN (SELECT ASSESSMENT_ID FROM ASSESSMENTS WHERE PARENT_ASSESSMENT_ID = :ASSESSMENTTYPEID))
}

OCUNOQUE_SKIP_SECTION_TOTAL_ {
	SELECT NEXT_SECTION_FLAG,NEXT_ASSESSMENT_ID, MIN_SCORE, MAX_SCORE, MESSAGE_TEXT FROM ASSESS_SECTION_NOTIFICATIONS WHERE ASSESSMENT_ID = :ASSESSMENTID AND SCORE_TYPE = 'TOTAL' AND MIN_SCORE <= P_SCORE AND MAX_SCORE >= P_SCORE
}

OCUNOQUE_CHECK_FOR_ALL_ANSWERS_ {
	SELECT COUNT(*) FROM ASSESSMENTS WHERE PARENT_ASSESSMENT_ID IN (SELECT ASSESSMENT_ID FROM ASSESSMENTS WHERE PARENT_ASSESSMENT_ID = :ASSESSMENTTYPEID AND ASSESSMENT_CLASS = 'SECT' AND ACTIVE_FLAG ='Y'  ) AND ASSESSMENT_CLASS = 'CAT' AND ACTIVE_FLAG = 'Y'
}

OCUNOQUE_CHECK_FOR_ALL_ANSWERS_ {
	SELECT COUNT(*) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ASSESSMENT_SEQ = :ASSESSMENTSEQ
}

OCUNOQUE_INITIATESAVEPROCESS_GET_ANS_COUNT_CUR{

 SELECT COUNT(*) 
	           FROM offender_assessment_items
	          WHERE offender_book_id = :offenderBookId
	           AND assessment_seq = :assessmentSeq
}

GET_ANS_IF_EXISTS_CUR {
 SELECT assessment_id
                      FROM offender_assessment_items
                     WHERE offender_book_id = :offenderBookId
                       AND assessment_seq = :assessmentSeq
                       AND parent_assessment_id = :assessmentId
                       and ITEM_SEQ = :itemSeq
}

OCUNOQUE_CHECK_FOR_USER_ANSWER{
SELECT  'Y' ANSWERED_FLAG,
                 comment_text,
                 item_seq,
                 rank
            FROM offender_assessment_items 
           WHERE offender_book_id = :offenderBookId
             AND assessment_seq = :assessmentSeq
             AND assessment_id = :assessmentId
             AND parent_assessment_id = :parentAssessmentId
}

OCUNOQUE_GET_COMMENT_TEXT {
SELECT assess_comment_text
             FROM offender_assessments
            WHERE offender_book_id = :offenderBookId
              AND assessment_seq = :assessmentSeq
}

INSERT_ASSESSMENT_ITEMS{
INSERT INTO offender_assessment_items(offender_book_id,
                                           assessment_seq,                
                                           item_seq,                       
                                           assessment_id,                  
                                           score, 
                                           comment_text,                                           
                                           parent_assessment_id,
                                           create_user_id,
                                           create_date,
                                           create_datetime)
                                    VALUES(:offenderBookId,
                                           :assessmentSeq,
                                           :itemSeq,
                                           :assessmentId,
                                           :score,
                                           :assessComment,      
                                           :parentAssessmentId,
                                           :createUserId,
                                           current_timestamp,
                                           current_timestamp)
}

SELECT_OFFENDER_ASSESSMENTS_EXITSTS {
SELECT COUNT(*) FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :offenderBookId and ASSESSMENT_SEQ= :assessmentSeq
}

UPDATE_OFFENDER_ASSESSMENTS {
UPDATE offender_assessments
   	        SET calc_sup_level_type = :calcSupLevelType,
   	            review_sup_level_type = :reviewSupLevelType,
   	            score = :score,
   	            assess_comment_text = :assessCommentText,
   	            assessment_date = :assessmentDate,
   	            evaluation_result_code = :evaluationResultCode,
   	            assess_status = :assessStatus,
   	            next_review_date=:nextReviewDate,
   	            modify_user_id= :modifyUserId,
   	        	modify_datetime = current_timestamp
   	      WHERE offender_book_id = :offenderBookId
   	        AND assessment_seq = :assessmentSeq
}

INACTIVATE_OFFENDER_ASSESSMENTS{
 UPDATE offender_assessments
            SET assess_status = 'I',
            	modify_user_id= :modifyUserId,
   	        modify_datetime = current_timestamp
          WHERE offender_book_id = :offenderBookId
            AND assessment_seq   = :assessmentSeq
}
INACTIVATE_MAX_ASSESSMENT_SEQ {
SELECT coalesce (MAX(assessment_seq),0) + 1
             FROM offender_assessments
            WHERE offender_book_id = :offenderBookId
}

OCUNOQUE_CHECK_ASSESSMENTS_EXIST_OR_NOT {
SELECT count(ASSESSMENT_SEQ) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND PARENT_ASSESSMENT_ID = :PARENT_ASSESSMENT_ID AND ASSESSMENT_SEQ = :assessmentSeq
}
OCUNOQUE_REMOVE_EXISTING_ANSWER {
	DELETE FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID = :offenderBookId AND ASSESSMENT_SEQ = :assessmentSeq AND  PARENT_ASSESSMENT_ID = :parentAssessmentId
}

UPDATE_OFFENDER_ASSESSMENTS_ITEMS{
UPDATE offender_assessment_items
   	        SET score = :score,
   	       	modify_user_id= :modifyUserId,
   	        modify_datetime = current_timestamp
   	      WHERE offender_book_id = :offenderBookId
   	        AND assessment_seq = :assessmentSeq AND item_seq = :itemseq
}
OCUNOQUE_REMOVE_EXISTING_ANSWER_REMOVE {
delete from OFFENDER_ASSESSMENT_ITEMS where offender_book_id =:offenderBookId   and PARENT_ASSESSMENT_ID =:parentAssessmentId and ITEM_SEQ = :itemSeq
}

GET_EXECUTE_QUERY{
select sql_text from iwp_bookmarks ib where bookmark_name = :bookmarkName and bookmark_type ='TEXT'
}
OCUNOQUE_GET_SUPERVISION_LEVEL_TYPE
{
select SUPERVISION_LEVEL_TYPE from 	ASSESSMENT_SUPERVISIONS where ASSESSMENT_ID=:assesmentId and mini_score<=:score and max_score>=:score
}

OCUNOQUE_ASSESS_SECTION_NOTIFICATIONS_EXECUTEQUERY{
SELECT ASSESSMENT_ID ,SCORE_SEQ ,SCORE_TYPE ,MIN_SCORE ,MAX_SCORE ,NEXT_SECTION_FLAG ,NEXT_ASSESSMENT_ID ,ACTIVE_FLAG ,EXPIRY_DATE ,MESSAGE_TEXT ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG, (select assessment_code from ASSESSMENTS where assessment_id = assn.next_assessment_id) as ASS_CODE_TEMP  FROM ASSESS_SECTION_NOTIFICATIONS assn
where ASSESSMENT_ID = :ASSESSMENT_ID and next_section_flag = 'Y' and expiry_date is null order by min_score
}
OCUNOQUE_ENFORCE_MIN_MAX_FLAG{
select enforce_min_max_flag from ASSESSMENTS where assessment_id =:assessmentId
}

OCUNOQUE_GET_COUNT_CASEPLAN{
select case_plan_id  from case_plans cp where offender_book_id =:OFFENDERBOOKID and case_plan_status ='ACTIVE'
}

OCUNOQUE_GET_CRIMINOGENIC_NEEDS_DATA
{
select * from v_ass_off_needs vaon where assessment_id =:ASSESSMENT_ID  and active_flag = 'Y'
}
OCUNOQUE_GET_TREATMENT_PROTOCOLS_DATA
{
select vatp.*, ( case when vatp.referral_flag = 'Y' then ( select sum(total_count) from (select count(1) as total_count from V_OFFENDER_PRG_OBLIGATIONS vopo where STATUS in ( 'SUSP', 'REF' ) and EVENT_TYPE = 'ACP' and ( ACTIVE_FLAG = 'Y' or COMMUNITY_ACTIVE_FLAG = 'Y' ) and vopo.program_id = vatp.program_id and vopo.activity_code = vatp.program_desc and vopo.offender_id = ( select offender_id from offender_bookings ob where ob.offender_book_id = :offenderBookId) union select count(1) as total_count from (select * from offender_program_profiles where PROGRAM_ID = vatp.program_id and(offender_program_status = 'rWAIT' or (waitlist_decision_code != 'APP' and (extract(days from (localtimestamp - reject_date)) < 30) ) or offender_start_date is null ) order by case when waitlist_decision_code = 'APP' then 1 when waitlist_decision_code = 'PEN' then 2 when waitlist_decision_code = 'REJ' then 3 end , referral_date desc, oms_miscellaneous_getdesccode('PS_PRIORITY', referral_priority) desc, osinames_getoffname(osinames_getoffid(offender_book_id) ) asc) as a where a.offender_book_id = :offenderBookId ) as a) else 0 end ) as wait_list_count from v_ass_treat_prots vatp where off_ass_need_id = :OFF_ASS_NEED_ID and ( (max_score is null and :perSectionScore >= min_score) or ( :perSectionScore >= min_score and :perSectionScore <= max_score))
}

OCUNOQUE_OFFCRINEEDS_INSERT_OFFENDER_CRIMINOGENIC_NEEDS {
	insert into OFFENDER_CRIMINOGENIC_NEEDS(OFF_CRIM_NEED_ID , OFFENDER_BOOK_ID , CASE_PLAN_ID , ASSESSED_NEED_CODE , OBJECTIVE , TARGET_DATE , END_DATE , STATUS_CODE , SEAL_FLAG,create_datetime,modify_datetime,create_user_id ) values(:offCrimNeedId, :offenderBookId , :casePlanId , :assessedNeedCode , :objective , :targetDate , :endDate , :statusCode , :sealFlag,current_timestamp,null,:createUserId )
}

OCUNOQUE_GET_SEQ{
select NEXTVAL('OFF_CRIM_NEED_ID') from dual
}










