
OIMCOUNT_FIND_CGFKAGYLOCID {
 	SELECT   AL.AGY_LOC_ID CODE ,AL.DESCRIPTION DESCRIPTION     FROM AGENCY_LOCATIONS AL    WHERE AL.AGY_LOC_ID IN (SELECT CAL.AGY_LOC_ID 
 	FROM CASELOAD_AGENCY_LOCATIONS CAL , CASELOADS CAS  WHERE CAS.CASELOAD_ID = CAL.CASELOAD_ID  AND CAL.CASELOAD_ID =  :CASELOADID   
 	AND CAL.AGY_LOC_ID NOT IN ('OUT' ,'TRN' ,'CRT' )  )    AND AL.AGY_LOC_ID NOT IN ('OUT' , 'TRN' )    AND AL.DEACTIVATION_DATE IS NULL  
 	AND AL.AGENCY_LOCATION_TYPE IN ('INST' ,'JAIL' ,'HOSP' ) ORDER BY AL.AGY_LOC_ID ,AL.LIST_SEQ
}

OIMCOUNT_FIND_CGFKCOUNTTYPES {
 	SELECT DESCRIPTION ,CODE FROM REFERENCE_CODES  WHERE DOMAIN = 'COUNT_TYPES'  AND ACTIVE_FLAG = 'Y'  ORDER BY LIST_SEQ
}

OIMCOUNT_FIND_CGFKHOUSINGLEVEL1 {
select
	A.internal_location_code as LIVING_UNIT_CODE ,
	A.internal_location_id::text as CODE,
	A.description,
	coalesce(B.ACTIVE_FLAG, null, 'N') as active_flag
from
	(
	select
		AGY_LOC_ID,
		internal_location_code,
		internal_location_id,
		description,
		'N' as ACTIVE_FLAG
	from
		agency_internal_locations ail
	where
		ail.unit_type is not null
		and ail.unit_type::text <> ''::text
		and AGY_LOC_ID = :AGYLOCID)A
left outer join 
(
	select
		AGY_LOC_ID,
		internal_location_code,
		internal_location_id,
		description,
		'Y' as ACTIVE_FLAG
	from
		agency_internal_locations ail
	where
		ail.unit_type is not null
		and ail.unit_type::text <> ''::text
		and AGY_LOC_ID = :AGYLOCID
		and active_flag = 'Y' and parent_internal_location_id is null)B on
	A.internal_location_id = B.internal_location_id 
order by
	LIVING_UNIT_CODE
}

OIMCOUNT_FIND_CGFKHOUSINGLEVEL2 {
 	select
	LIV_UNIT1.LIVING_UNIT_CODE ,
	(LIV_UNIT1.LIVING_UNIT_ID)::text CODE ,
	DESCRIPTION
from
	LIVING_UNITS LIV_UNIT1
where
	AGY_LOC_ID = :AGYLOCID
	and ACTIVE_FLAG = 'Y'
	and 
 	PARENT_LIVING_UNIT_ID =:LIVING_UNIT_ID
order by
	LIVING_UNIT_CODE
}

OIMCOUNT_LIVING_UNITS_QUERY {
select LIVING_UNIT_ID,LIVING_UNIT_CODE from living_units WHERE AGY_LOC_ID = :AGY_LOC_ID

}

OIMCOUNT_LIVING_UNITS_QUERY_LOCATIONONE {
select LIVING_UNIT_ID,LIVING_UNIT_CODE from living_units WHERE AGY_LOC_ID = :AGY_LOC_ID
 AND    ACTIVE_FLAG = 'Y'  and  PARENT_LIVING_UNIT_ID IS NULL

}
OIMCOUNT_LIVING_UNITS_QUERY_LOCATIONTWO {
 	SELECT LIV_UNIT1.LIVING_UNIT_CODE          ,LIV_UNIT1.LIVING_UNIT_ID          ,DESCRIPTION FROM   LIVING_UNITS LIV_UNIT1 WHERE   AGY_LOC_ID = :AGYLOCID AND ACTIVE_FLAG = 'Y' AND 
 	PARENT_LIVING_UNIT_ID  IN(SELECT LIVING_UNIT_ID from LIVING_UNITS where LIVING_UNIT_CODE = :LOCATION1ID) ORDER BY LIVING_UNIT_CODE
}

OIMCOUNT_FIND_CGFKHOUSINGLEVEL3 {
 	select
	LIV_UNIT1.LIVING_UNIT_CODE ,
	(LIV_UNIT1.LIVING_UNIT_ID)::text CODE ,
	DESCRIPTION
from
	LIVING_UNITS LIV_UNIT1
where
	AGY_LOC_ID = :AGYLOCID
	and ACTIVE_FLAG = 'Y'
	and 
 	PARENT_LIVING_UNIT_ID =:LIVING_UNIT_ID
order by
	LIVING_UNIT_CODE
}

OIMCOUNT_FIND_CGFKINITLOCCODE {
select user_desc description      ,internal_location_code       ,to_char(internal_location_id) code  ,
case when (internal_location_id in (SELECT internal_location_id                              FROM V_INT_LOC_USAGE_LOCATIONS ,REFERENCE_CODES                               
 	WHERE AGY_LOC_ID = :AGY_LOC_ID                                 AND INTERNAL_LOCATION_USAGE = CODE                                
 	AND PARENT_CODE = 'INT_MOV_USG'                                 AND DOMAIN = 'ILOC_USG'                                 AND ACTIVE_FLAG = 'Y')) then 'Y' else 'N' end active_flag
 from v_int_loc_summaries  where agy_loc_id = :AGY_LOC_ID         
          and parent_internal_location_id is null and internal_location_code !='RTU'  and (active_flag = 'Y')  AND TRACKING_FLAG = 'Y' order by list_seq,internal_location_desc  
}

OIMCOUNT_AGENCYLOCATIONS_FIND_AGENCY_LOCATIONS {
 	SELECT  * FROM AGENCY_LOCATIONS   WHERE  
}
OIMCOUNT_AGENCYCOUNTTYPES_FIND_AGENCY_COUNT_TYPES {
SELECT COUNT_TYPE_ID, AGY_LOC_ID, COUNT_TYPE_CODE, SCHEDULED_TIME, CREATE_USER_ID, CREATE_DATETIME, ACTIVE_FLAG, EXPIRY_DATE, SEAL_FLAG, MODIFY_DATETIME, MODIFY_USER_ID ,
(SELECT count(*)  FROM AGENCY_REPORTING_LOCS WHERE COUNT_TYPE_ID = agytypes.COUNT_TYPE_ID AND LOCATION_TYPE = 'HOUS') as HOUSELOC,
(SELECT count(*)  FROM AGENCY_REPORTING_LOCS WHERE COUNT_TYPE_ID = agytypes.COUNT_TYPE_ID AND LOCATION_TYPE = 'INIT') as INTLOC
    FROM AGENCY_COUNT_TYPES agytypes WHERE AGY_LOC_ID = :CASELOADID ORDER BY SCHEDULED_TIME ,COUNT_TYPE_CODE
}
OIMCOUNT_AGENCYCOUNTTYPES_INSERT_AGENCY_COUNT_TYPES {
insert into AGENCY_COUNT_TYPES(COUNT_TYPE_ID, AGY_LOC_ID, COUNT_TYPE_CODE, SCHEDULED_TIME, CREATE_USER_ID, CREATE_DATETIME, ACTIVE_FLAG, EXPIRY_DATE, SEAL_FLAG )
values(NEXTVAL('count_type_id'), :agyLocId, :countTypeCode, :scheduledTime, :createUserId, current_timestamp, :activeFlag, :expiryDate, :sealFlag ) 
}

OIMCOUNT_AGENCYCOUNTTYPES_UPDATE_AGENCY_COUNT_TYPES {
update AGENCY_COUNT_TYPES set AGY_LOC_ID =:agyLocId, COUNT_TYPE_CODE =:countTypeCode, SCHEDULED_TIME =:scheduledTime, ACTIVE_FLAG =:activeFlag, EXPIRY_DATE =:expiryDate, SEAL_FLAG =:sealFlag, MODIFY_DATETIME = current_timestamp, MODIFY_USER_ID =:modifyUserId where COUNT_TYPE_ID =:countTypeId
}

OIMCOUNT_AGENCYCOUNTTYPES_DELETE_AGENCY_COUNT_TYPES { 
	DELETE FROM AGENCY_COUNT_TYPES WHERE  COUNT_TYPE_ID=:countTypeId
}

OIMCOUNT_AGENCYREPORTINGLOCSHOUS_FIND_AGENCY_REPORTING_LOCS {
 	SELECT *  FROM AGENCY_REPORTING_LOCS WHERE COUNT_TYPE_ID = :COUNT_TYPE_ID AND LOCATION_TYPE = 'HOUS' ORDER BY LIST_SEQ
}
OIMCOUNT_AGENCYREPORTINGLOCSHOUS_INSERT_AGENCY_REPORTING_LOCS {
insert into AGENCY_REPORTING_LOCS(COUNT_TYPE_ID, AGY_SEQ, LOCATION_TYPE, LOCATION1_ID, LOCATION2_ID, LOCATION3_ID, LIST_SEQ, CREATE_USER_ID, CREATE_DATETIME, ACTIVE_FLAG, EXPIRY_DATE, SEAL_FLAG )
   values(:countTypeId, :agySeq, :locationType, :location1Id, :location2Id, :location3Id, :listSeq, :createUserId, current_timestamp, :activeFlag, :expiryDate, :sealFlag ) 
}

OIMCOUNT_AGENCYREPORTINGLOCSHOUS_UPDATE_AGENCY_REPORTING_LOCS {
update AGENCY_REPORTING_LOCS set LOCATION1_ID =:location1Id, LOCATION2_ID =:location2Id, LOCATION3_ID =:location3Id, LIST_SEQ =:listSeq, ACTIVE_FLAG =:activeFlag, EXPIRY_DATE =:expiryDate, SEAL_FLAG =:sealFlag, MODIFY_DATETIME = CURRENT_TIMESTAMP, MODIFY_USER_ID =:modifyUserId where COUNT_TYPE_ID =:countTypeId and AGY_SEQ =:agySeq and LOCATION_TYPE =:locationType 
}

OIMCOUNT_AGENCYREPORTINGLOCSHOUS_DELETE_AGENCY_REPORTING_LOCS { 
	DELETE FROM AGENCY_REPORTING_LOCS where COUNT_TYPE_ID=:countTypeId and AGY_SEQ=:agySeq and LOCATION_TYPE=:locationType
}


OIMCOUNT_AGENCY_LOCATIONS_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM AGENCY_COUNT_TYPES A WHERE A.AGY_LOC_ID = :AGYLOCID
}

OIMCOUNT_AGENCY_LOCATIONS_WHENVALIDATEITEM {
	SELECT HOUSING_LEV_1_CODE,HOUSING_LEV_2_CODE,HOUSING_LEV_3_CODE INTO :AGENCY_LOCATIONS.HOUSG_LEV_1, :AGENCY_LOCATIONS.HOUSG_LEV_2, :AGENCY_LOCATIONS.HOUSG_LEV_3 FROM AGENCY_LOCATIONS WHERE AGY_LOC_ID = :AGENCY_LOCATIONS.AGY_LOC_ID
}

OIMCOUNT_AGENCY_LOCATIONS_WHENNEWRECORDINSTANCE {
	SELECT HOUSING_LEV_1_CODE,HOUSING_LEV_2_CODE,HOUSING_LEV_3_CODE FROM AGENCY_LOCATIONS WHERE AGY_LOC_ID=:AGYLOCID1
}

OIMCOUNT_AGENCY_COUNT_TYPES_PREINSERT {
SELECT COUNT(*) FROM AGENCY_COUNT_TYPES WHERE AGY_LOC_ID IN (:P_AGY_LOC_ID) AND COUNT_TYPE_CODE IN (:P_COUNT_TYPE_CODE) 
	AND COALESCE(SCHEDULED_TIME, 'NA') IN (:P_SCHEDULED_TIME)
}

OIMCOUNT_AGENCY_COUNT_TYPES_PREINSERTPRE_GETCOUNTTYPEID {
SELECT NEXTVAL('COUNT_TYPE_ID')
}

OIMCOUNT_AGENCY_COUNT_TYPES_POSTQUERY_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE CODE = P_COUNT_TYPE_CODE AND DOMAIN = 'COUNT_TYPES'
}

OIMCOUNT_AGENCY_COUNT_TYPES_ONCHECKDELETEMASTER {
	SELECT COUNT(*) FROM AGENCY_REPORTING_LOCS A WHERE A.COUNT_TYPE_ID IN (:COUNTTYPEID)
}


OIMCOUNT_AGENCY_COUNT_TYPES_PREUPDATE {
SELECT COUNT(*) FROM AGENCY_COUNT_TYPES WHERE AGY_LOC_ID IN (:P_AGY_LOC_ID) AND COUNT_TYPE_CODE IN (:P_COUNT_TYPE_CODE) 
	AND COALESCE(SCHEDULED_TIME, 'NA') IN (:P_SCHEDULED_TIME) AND ACTIVE_FLAG = 'Y' AND COUNT_TYPE_ID NOT IN (:COUNT_TYPE_ID) 
}

OIMCOUNT_AGENCY_REPORTING_LOCS_HOUS_POSTQUERY {
	SELECT LIVING_UNIT_CODE, DESCRIPTION FROM LIVING_UNITS WHERE LIVING_UNIT_ID = :P_LIVING_UNIT_ID
}

OIMCOUNT_AGENCY_REPORTING_LOCS_HOUS_PREINSERT_GETMAXSEQ {
SELECT  coalesce(MAX(AGY_SEQ), 0) + 1 FROM AGENCY_REPORTING_LOCS WHERE COUNT_TYPE_ID = :COUNT_TYPE_ID
}

OIMCOUNT_AGENCY_REPORTING_LOCS_HOUS_PREINSERT {
SELECT COUNT(*) FROM AGENCY_REPORTING_LOCS WHERE LOCATION_TYPE = 'HOUS' AND COUNT_TYPE_ID = :P_COUNT_TYPE_ID AND
	LOCATION1_ID = :P_LOCATION1_ID AND COALESCE(LOCATION2_ID, -1) = COALESCE(:P_LOCATION2_ID, -1) AND COALESCE(LOCATION3_ID, -1) = COALESCE(:P_LOCATION3_ID, -1)
}

OIMCOUNT_AGENCY_REPORTING_LOCS_HOUS_PREINSERT_ {
	(P_LIVING_UNIT_ID   LIVING_UNITS.LIVING_UNIT_ID%TYPE) IS SELECT 'Y' FROM LIVING_UNITS WHERE PARENT_LIVING_UNIT_ID = P_LIVING_UNIT_ID AND ACTIVE_FLAG = 'Y'
}

OIMCOUNT_AGENCY_REPORTING_LOCS_HOUS_WHENNEWRECORDINSTANCE {
	SELECT count(*) FROM AGENCY_COUNT_TYPES A WHERE A.COUNT_TYPE_ID = :COUNTTYPEID AND A.ACTIVE_FLAG = 'N'
}


OIMCOUNT_AGENCY_REPORTING_LOCS_INIT_PREINSERT {
	SELECT count(*) FROM AGENCY_REPORTING_LOCS WHERE LOCATION_TYPE IN (:P_LOCATION_TYPE) AND COUNT_TYPE_ID IN (:P_COUNT_TYPE_ID) AND LOCATION1_ID IN (:P_LOCATION1_ID)
}

OIMCOUNT_AGENCY_REPORTING_LOCS_INIT_POSTQUERY {
	SELECT INTERNAL_LOCATION_CODE FROM V_INT_LOC_SUMMARIES  WHERE INTERNAL_LOCATION_ID = :P_AGENCY_IML_ID  LIMIT 1
}

OIMCOUNT_AGENCY_REPORTING_LOCS_INIT_WHENNEWRECORDINSTANCE_ {
	SELECT 1 FROM AGENCY_COUNT_TYPES A WHERE A.COUNT_TYPE_ID = :COUNTTYPEID AND A.ACTIVE_FLAG = 'N'
}

OIMCOUNT_CREATE_FORM_GLOBALSCREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}

OIMCOUNT_PROCESS_COPY_ {
SELECT
    COUNT(*),
    MIN(location_type),
    MAX(location_type)
FROM
    agency_reporting_locs
WHERE
    count_type_id = :p_count_type_id
}

OIMCOUNT_PROCESS_COPY_ {
	SELECT LOCATION1_ID, LOCATION2_ID, LOCATION3_ID, LIST_SEQ, ACTIVE_FLAG, EXPIRY_DATE FROM AGENCY_REPORTING_LOCS WHERE COUNT_TYPE_ID =:P_COUNT_TYPE_ID AND LOCATION_TYPE = 'HOUS' ORDER BY LIST_SEQ
}

OIMCOUNT_PROCESS_COPY_ {
	SELECT LOCATION1_ID, LIST_SEQ, ACTIVE_FLAG, EXPIRY_DATE FROM AGENCY_REPORTING_LOCS WHERE COUNT_TYPE_ID = :P_COUNT_TYPE_ID AND LOCATION_TYPE = 'INIT' ORDER BY LIST_SEQ
}

OIMCOUNT_PROCESS_COPY_ {
	SELECT LIVING_UNIT_CODE FROM LIVING_UNITS WHERE LIVING_UNIT_ID = P_LIVING_UNIT_ID
}

OIMCOUNT_PROCESS_COPY_ {
}

OIMCOUNT_PROCESS_COPYl_reporting_locs_cur             (p_count_type_id   agency_count_types.count_type_id%type) {
	SELECT VIL.INTERNAL_LOCATION_DESC FROM V_INT_LOC_SUMMARIES VIL WHERE VIL.INTERNAL_LOCATION_ID = P_AGENCY_IML_ID
}

OIMCOUNT_CGKEY_DELREC {
 SELECT COUNT(*) FROM TEMP_OIDCOUNT WHERE COUNT_TYPE_ID IN (:countTypeId)
}

OIMCOUNT_CGKEY_DELREC_L_CHECK_ALC_REC_CUR {
	SELECT COUNT(*) FROM AGENCY_LOCATION_COUNTS WHERE COUNT_TYPE_ID IN (:counttypeid)
}

OIMCOUNT_CGKEY_DELREC_L_CHECK_AC_REC_CUR {
	SELECT COUNT(*) FROM AGENCY_COUNTS WHERE COUNT_TYPE_ID IN (:countTypeId)
}
OIMCOUNT_AGENCYREPORTINGLOCSINIT_FIND_AGENCY_REPORTING_LOCS {
 	SELECT *  FROM AGENCY_REPORTING_LOCS WHERE COUNT_TYPE_ID = :COUNT_TYPE_ID AND LOCATION_TYPE = 'INIT' ORDER BY LIST_SEQ
}
OIMCOUNT_ACCOUNTTYPES_CHECKBOX_CHANGED_EVENT {
 SELECT COUNT(*) FROM AGENCY_REPORTING_LOCS A  WHERE A.COUNT_TYPE_ID = :COUNT_TYPE_ID  and A.ACTIVE_FLAG = 'Y'
 }
OIMCOUNT_AGENCYCOUNTTYPES_INSERT_AGENCY_COUNT_TYPES_COUNTTYPEID {
 insert into AGENCY_COUNT_TYPES(COUNT_TYPE_ID, AGY_LOC_ID, COUNT_TYPE_CODE, SCHEDULED_TIME, CREATE_USER_ID, CREATE_DATETIME, ACTIVE_FLAG, EXPIRY_DATE, SEAL_FLAG ) values(:countTypeId, :agyLocId, :countTypeCode, :scheduledTime, :createUserId, current_timestamp, :activeFlag, :expiryDate, :sealFlag ) 
}