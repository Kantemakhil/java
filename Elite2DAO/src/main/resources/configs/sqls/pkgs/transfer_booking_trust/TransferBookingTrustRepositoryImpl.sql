TRANSFER_BOOKING_TRUST_GET_BEGIN_DATE{
SELECT BEGIN_DATE FROM MERGE_TRANSACTION_PROCESSES MTP, MERGE_PROCESSES MP WHERE MTP.MERGE_TRANSACTION_ID = :pMergeTransactionId AND MTP.PROCESS_ID = MP.PROCESS_ID AND MP.PROCESS_NAME = :pProcessName
}
TRANSFER_BOOKING_TRUST_GET_END_DATE{
SELECT END_DATE FROM MERGE_TRANSACTION_PROCESSES MTP, MERGE_PROCESSES MP WHERE MTP.MERGE_TRANSACTION_ID = :pMergeTransactionId AND MTP.PROCESS_ID = MP.PROCESS_ID AND MP.PROCESS_NAME = :pProcessName
}
TRANSFER_BOOKING_TRUST_GET_POSTED_OFF_TXN{
select COALESCE(SUM(CASE OT.TXN_POSTING_TYPE WHEN 'CR' THEN OT.TXN_ENTRY_AMOUNT WHEN 'DR' THEN OT.TXN_ENTRY_AMOUNT * -1 ELSE 0 END), 0) BALANCE from OFFENDER_TRANSACTIONS OT where OFFENDER_ID = :pOffenderId and CASELOAD_ID = :pCaseLoadId and SUB_ACCOUNT_TYPE = ( select SUB_ACCOUNT_TYPE from ACCOUNT_CODES where ACCOUNT_CODE = :pSubAcctCode)
}
TRANSFER_BOOKING_TRUST_GET_CURR_SUB_ACCOUNT_BAL{
select CASELOAD_ID, TRUST_ACCOUNT_CODE, BALANCE from OFFENDER_SUB_ACCOUNTS where OFFENDER_ID = :pOffenderId order by CASELOAD_ID, TRUST_ACCOUNT_CODE;
}

TRANSFER_BOOKING_TRUST_DEDUCTION_TXN_WITHIN_TIME{
select COUNT(*) from GL_TRANSACTIONS where DEDUCTION_ID in ( select OFFENDER_DEDUCTION_ID from OFFENDER_DEDUCTIONS where OFFENDER_ID = :pRootOffenderId and not EFFECTIVE_DATE between :leftDateTime and :rightDateTime and DEDUCTION_TYPE not in ( select DEDUCTION_TYPE from DEDUCTION_TYPES where DEDUCTION_CATEGORY = 'ALCN')) and OFFENDER_ID = :pRootOffenderId and date_trunc('day', TXN_ENTRY_DATE) + (TXN_ENTRY_TIME - date_trunc('day',TXN_ENTRY_TIME)) between :leftDateTime and :rightDateTime and TXN_REVERSED_FLAG = 'N'
}

TRANSFER_BOOKING_TRUST_DEDUCTION_TXN_OUTOF_TIME{
SELECT COUNT(*) FROM GL_TRANSACTIONS WHERE DEDUCTION_ID IN (SELECT OFFENDER_DEDUCTION_ID FROM OFFENDER_DEDUCTIONS WHERE OFFENDER_ID = :pRootOffenderId AND EFFECTIVE_DATE BETWEEN :leftDateTime AND :rightDateTime) AND OFFENDER_ID = :pRootOffenderId AND date_trunc('day',TXN_ENTRY_DATE) + (TXN_ENTRY_TIME - date_trunc('day',TXN_ENTRY_TIME)) >= :rightDateTime AND TXN_REVERSED_FLAG = 'N'
}