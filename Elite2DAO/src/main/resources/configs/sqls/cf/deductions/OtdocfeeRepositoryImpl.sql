
OTDOCFEE_FIND_CGFKOFFDEDDSPDESCRIPTION {
 	select 
	REF_CODE.DESCRIPTION DSP_DESCRIPTION ,
	REF_CODE.CODE DEDUCTION_STATUS
from
	REFERENCE_CODES REF_CODE
where
	domain = 'DED_STATUS'
	and ((ACTIVE_FLAG = 'Y'
	and EXPIRED_DATE is null ))
order by
	REF_CODE.CODE asc ,
	REF_CODE.DESCRIPTION asc

}

OTDOCFEE_FIND_CGFKOFFTFDRECEIPTDEDUCTION {
SELECT
  DED_TYPE1.DEDUCTION_TYPE CODE, DED_TYPE1.DEDUCTION_DESC DESCRIPTION,
  DED_TYPE1.DEDUCTION_DESC RECEIPT_DEDUCTION_TYPE,
  DED_TYPE1.DEDUCTION_CATEGORY DSP_DEDUCTION_CATEGORY
FROM DEDUCTION_TYPES DED_TYPE1
WHERE
  DED_TYPE1.DEDUCTION_CATEGORY IN ('FXOB' ,'CROB' ) AND
  CASELOAD_CODE IN (:CASELOADTYPE, 'BOTH' ) AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRY_DATE IS NULL ))

}

OTDOCFEE_FIND_CGFKOFFDEDDEDUCTIONTYPE {
 	SELECT
  DED_TYPE.DEDUCTION_TYPE CODE, DED_TYPE.DEDUCTION_DESC DESCRIPTION
FROM DEDUCTION_TYPES DED_TYPE
WHERE
  DED_TYPE.DEDUCTION_CATEGORY = 'CTF' AND
  DED_TYPE.DEDUCTION_TYPE IN
    (SELECT TFD.DEDUCTION_TYPE
     FROM TRANSACTION_FEE_DETAILS TFD
     WHERE
       TFD.CASELOAD_ID =:CASELOADID ) AND
  DED_TYPE.CASELOAD_CODE IN (:CASELOADTYPE ) AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRY_DATE IS NULL ))
ORDER BY
  DED_TYPE.DEDUCTION_TYPE ASC, DED_TYPE.DEDUCTION_DESC ASC

}

OTDOCFEE_OFFDED_FIND_OFFENDER_DEDUCTIONS {
 	SELECT OFFENDER_DEDUCTION_ID ,CASELOAD_ID ,OFFENDER_ID ,CREDIT_LIMIT ,DEDUCTION_TYPE ,DEDUCTION_STATUS ,DEDUCTION_PRIORITY ,INFORMATION_NUMBER ,DEDUCTION_PERCENTAGE ,PROCESS_PRIORITY_NUMBER ,
 	EFFECTIVE_DATE ,COMMENT_TEXT ,FIFO_FLAG ,PAYEE_PERSON_ID ,PAYEE_CORPORATE_ID ,MAX_MONTHLY_AMOUNT ,MAX_TOTAL_AMOUNT ,DEDUCTION_AMOUNT ,ADJUSTMENT_REASON_CODE ,
 	ADJUSTMENT_AMOUNT ,ADJUSTMENT_USER_ID ,ADJUSTMENT_TXN_ID ,ADJUSTMENT_TEXT ,MODIFY_DATE ,PAY_DEDUCTION_FLAG ,MAX_RECURSIVE_AMOUNT ,GROUP_ID ,CASE_ID ,PARENT_DEDUCTION_ID ,
 	JS_STATUS ,COLLECT_AGENCY_AMOUNT ,COLLECT_AGENCY_FLAG ,COLLECT_SENT_DATE ,OFFENDER_PAYMENT_PROFILE_ID ,SEAL_FLAG ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,
 	MODIFY_USER_ID  FROM OFFENDER_DEDUCTIONS   where DEDUCTION_TYPE in (SELECT DEDUCTION_TYPE FROM DEDUCTION_TYPES DT WHERE DT.DEDUCTION_CATEGORY = 'CTF'
	AND CASELOAD_CODE =:CASELOAD_CODE )AND CASELOAD_ID =  :CASELOAD_ID AND  OFFENDER_ID =:OFFENDER_ID
}
OTDOCFEE_OFFDED_INSERT_OFFENDER_DEDUCTIONS {
	INSERT INTO OFFENDER_DEDUCTIONS(OFFENDER_DEDUCTION_ID ,CASELOAD_ID ,OFFENDER_ID ,CREDIT_LIMIT ,DEDUCTION_TYPE ,DEDUCTION_STATUS ,DEDUCTION_PRIORITY ,INFORMATION_NUMBER ,DEDUCTION_PERCENTAGE ,PROCESS_PRIORITY_NUMBER ,EFFECTIVE_DATE ,COMMENT_TEXT ,FIFO_FLAG ,PAYEE_PERSON_ID ,PAYEE_CORPORATE_ID ,MAX_MONTHLY_AMOUNT ,MAX_TOTAL_AMOUNT ,DEDUCTION_AMOUNT ,ADJUSTMENT_REASON_CODE ,ADJUSTMENT_AMOUNT ,ADJUSTMENT_USER_ID ,ADJUSTMENT_TXN_ID ,ADJUSTMENT_TEXT ,MODIFY_DATE ,PAY_DEDUCTION_FLAG ,MAX_RECURSIVE_AMOUNT ,GROUP_ID ,CASE_ID ,PARENT_DEDUCTION_ID ,JS_STATUS ,COLLECT_AGENCY_AMOUNT ,COLLECT_AGENCY_FLAG ,COLLECT_SENT_DATE ,OFFENDER_PAYMENT_PROFILE_ID ,SEAL_FLAG ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME  )
	VALUES(:offenderDeductionId, :caseloadId, :offenderId ,:creditLimit, :deductionType, :deductionStatus, :deductionPriority, :informationNumber ,:deductionPercentage ,:processPriorityNumber ,:effectiveDate ,:commentText ,:fifoFlag ,:payeePersonId ,:payeeCorporateId ,:maxMonthlyAmount ,:maxTotalAmount ,:deductionAmount ,:adjustmentReasonCode ,:adjustmentAmount ,:adjustmentUserId ,:adjustmentTxnId ,:adjustmentText ,:modifyDate ,:payDeductionFlag ,:maxRecursiveAmount ,:groupId ,:caseId ,:parentDeductionId ,:jsStatus ,:collectAgencyAmount ,:collectAgencyFlag ,:collectSentDate ,:offenderPaymentProfileId ,:sealFlag ,current_timestamp ,:createUserId ,current_timestamp  )
} 

OTDOCFEE_OFFDED_UPDATE_OFFENDER_DEDUCTIONS {
	UPDATE OFFENDER_DEDUCTIONS set CASELOAD_ID  = :caseloadId ,OFFENDER_ID  = :offenderId ,CREDIT_LIMIT  = :creditLimit ,
	DEDUCTION_TYPE  = :deductionType ,DEDUCTION_STATUS  = :deductionStatus ,DEDUCTION_PRIORITY  = :deductionPriority ,INFORMATION_NUMBER  = :informationNumber ,
	DEDUCTION_PERCENTAGE  = :deductionPercentage ,PROCESS_PRIORITY_NUMBER  = :processPriorityNumber ,EFFECTIVE_DATE  = :effectiveDate ,COMMENT_TEXT  = :commentText ,
	FIFO_FLAG  = :fifoFlag ,PAYEE_PERSON_ID  = :payeePersonId ,PAYEE_CORPORATE_ID  = :payeeCorporateId ,MAX_MONTHLY_AMOUNT  = :maxMonthlyAmount ,MAX_TOTAL_AMOUNT  = :maxTotalAmount ,
	DEDUCTION_AMOUNT  = :deductionAmount ,ADJUSTMENT_REASON_CODE  = :adjustmentReasonCode ,ADJUSTMENT_AMOUNT  = :adjustmentAmount ,ADJUSTMENT_USER_ID  = :adjustmentUserId ,
	ADJUSTMENT_TXN_ID  = :adjustmentTxnId ,ADJUSTMENT_TEXT  = :adjustmentText ,MODIFY_DATE  = :modifyDate ,PAY_DEDUCTION_FLAG  = :payDeductionFlag ,MAX_RECURSIVE_AMOUNT  = :maxRecursiveAmount ,
	GROUP_ID  = :groupId ,CASE_ID  = :caseId ,PARENT_DEDUCTION_ID  = :parentDeductionId ,JS_STATUS  = :jsStatus ,
	COLLECT_AGENCY_AMOUNT  = :collectAgencyAmount ,COLLECT_AGENCY_FLAG  = :collectAgencyFlag ,COLLECT_SENT_DATE  = :collectSentDate ,OFFENDER_PAYMENT_PROFILE_ID  = :offenderPaymentProfileId ,
	SEAL_FLAG  = :sealFlag   ,MODIFY_DATETIME  = current_timestamp ,MODIFY_USER_ID  = :modifyUserId 
	 where OFFENDER_DEDUCTION_ID  = :offenderDeductionId
}  

OTDOCFEE_OFFTFD_FIND_OFFENDER_TXN_FEE_DETAILS {
 	SELECT OFFENDER_DEDUCTION_ID, RECEIPT_DEDUCTION_TYPE, LIST_SEQ, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, MODIFY_USER_ID, SEAL_FLAG, ROW_ID FROM OFFENDER_TXN_FEE_DETAILS where OFFENDER_DEDUCTION_ID  = :OFFENDER_DEDUCTION_ID 
}
OTDOCFEE_OFFTFD_INSERT_OFFENDER_TXN_FEE_DETAILS {
	INSERT INTO OFFENDER_TXN_FEE_DETAILS(CREATE_DATETIME, CREATE_USER_ID, LIST_SEQ, MODIFY_DATETIME, OFFENDER_DEDUCTION_ID, RECEIPT_DEDUCTION_TYPE, SEAL_FLAG) VALUES(current_timestamp, :createUserId, :listSeq, current_timestamp, :offenderDeductionId, :receiptDeductionType, :sealFlag)
} 

OTDOCFEE_OFFTFD_UPDATE_OFFENDER_TXN_FEE_DETAILS {
	UPDATE OFFENDER_TXN_FEE_DETAILS set  MODIFY_DATETIME =current_timestamp,
	MODIFY_USER_ID =:modifyUserId, RECEIPT_DEDUCTION_TYPE =:receiptDeductionType
	where OFFENDER_DEDUCTION_ID  = :offenderDeductionId and ROW_ID = (:rowId::bigint)
}  

OTDOCFEE_OFFTFD_DELETE_OFFENDER_TXN_FEE_DETAILS { 
	DELETE FROM OFFENDER_TXN_FEE_DETAILS where OFFENDER_DEDUCTION_ID  = :offenderDeductionId and ROW_ID =(:rowId::bigint)
}  

OTDOCFEE_OFFTTF_FIND_OFFENDER_TIER_TXN_FEE_AMOUNTS {
select
	OFFENDER_DEDUCTION_ID,
	FROM_AMOUNT,
	TO_AMOUNT,
	PERCENTAGE,
	FEE_AMOUNT,
	CREATE_DATETIME,
	CREATE_USER_ID,
	MODIFY_DATETIME,
	MODIFY_USER_ID,
	SEAL_FLAG,
	  TO_CHAR(ROW_ID) ROW_ID
from
	OFFENDER_TIER_TXN_FEE_AMOUNTS
where
	OFFENDER_DEDUCTION_ID = :OFFENDER_DEDUCTION_ID order by row_id
} rowid need to implement




 

OTDOCFEE_SYSPFL_FIND_SYSTEM_PROFILES {
 	SELECT  PROFILE_TYPE ,PROFILE_CODE ,DESCRIPTION ,PROFILE_VALUE ,PROFILE_VALUE_2 ,MODIFY_USER_ID ,OLD_TABLE_NAME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG  FROM SYSTEM_PROFILES  /* where  */
}
OTDOCFEE_OFFTTF_UPDATE_OFFENDER_TIER_TXN_FEE_AMOUNTS {
	UPDATE OFFENDER_TIER_TXN_FEE_AMOUNTS set  FEE_AMOUNT =:feeAmount,
	FROM_AMOUNT =:fromAmount, MODIFY_DATETIME =current_timestamp, MODIFY_USER_ID =:modifyUserId, OFFENDER_DEDUCTION_ID =:offenderDeductionId, PERCENTAGE =:percentage, SEAL_FLAG =:sealFlag, TO_AMOUNT =:toAmount where OFFENDER_DEDUCTION_ID  =:offenderDeductionId and ROW_ID = (:rowId::bigint)
} 

OTDOCFEE_OFF_BKG_ONCHECKDELETEMASTER{
	SELECT 1 FROM OFFENDER_DEDUCTIONS O WHERE O.OFFENDER_ID = :OFFENDERID
}
OTDOCFEE_OFFTTF_DELETE_OFFENDER_TIER_TXN_FEE_AMOUNTS { 
	DELETE FROM OFFENDER_TIER_TXN_FEE_AMOUNTS where OFFENDER_DEDUCTION_ID  = :offenderDeductionId and ROW_ID =(:rowId::bigint)
}
OTDOCFEE_OFFTTF_INSERT_OFFENDER_TIER_TXN_FEE_AMOUNTS {
	INSERT INTO OFFENDER_TIER_TXN_FEE_AMOUNTS(CREATE_DATETIME, CREATE_USER_ID, FEE_AMOUNT, FROM_AMOUNT, MODIFY_DATETIME,  OFFENDER_DEDUCTION_ID, PERCENTAGE, SEAL_FLAG, TO_AMOUNT) 
	VALUES(current_timestamp, :createUserId, :feeAmount, :fromAmount, current_timestamp,  :offenderDeductionId, :percentage,:sealFlag, :toAmount)
}

OTDOCFEE_OFF_DED_PREINSERT {
	SELECT  NEXTVAL('DEDUCTION_ID') FROM   DUAL
}

OTDOCFEE_CGFKCHK_OFF_DED_OFF_DED_REF_C_ {
	SELECT REF_CODE.DESCRIPTION
FROM REFERENCE_CODES REF_CODE
WHERE
  REF_CODE.CODE = :DEDUCTIONSTATUS AND
  DOMAIN = 'DED_STATUS' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OTDOCFEE_CGFKLKP_OFF_DED_OFF_DED_REF_C_ {
SELECT REF_CODE.CODE
FROM REFERENCE_CODES REF_CODE
WHERE
  REF_CODE.DESCRIPTION = :DSPDESCRIPTION AND
  DOMAIN = 'DED_STATUS' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OTDOCFEE_CGFKCHK_OFF_DED_OFF_DED_DED_T_ {
SELECT DED_TYPE.DEDUCTION_DESC
FROM DEDUCTION_TYPES DED_TYPE
WHERE
  DED_TYPE.DEDUCTION_TYPE = :DEDUCTIONTYPE AND
  DEDUCTION_CATEGORY = 'CTF' AND
  DED_TYPE.DEDUCTION_TYPE IN
    (SELECT TFD.DEDUCTION_TYPE
     FROM TRANSACTION_FEE_DETAILS TFD
     WHERE
       CASELOAD_ID = :CASELOADID) AND
  CASELOAD_CODE IN ('BOTH',:CASELOADTYPE) AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRY_DATE IS NULL))

}

OTDOCFEE_CGFKCHK_OFF_TFD_OFF_TFD_DED_T_ {
	SELECT
  DED_TYPE1.DEDUCTION_DESC, DED_TYPE1.DEDUCTION_CATEGORY
FROM DEDUCTION_TYPES DED_TYPE1
WHERE
  DED_TYPE1.DEDUCTION_TYPE = :RECEIPTDEDUCTIONTYPE AND
  DED_TYPE1.DEDUCTION_CATEGORY IN ('FXOB','CROB') AND
  CASELOAD_CODE IN ('BOTH',:CASELOADTYPE) AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRY_DATE IS NULL))

}

OTDOCFEE_CGRICHK_OFFENDER_DEDUCTIONS_ONE {
	SELECT  '1' FROM    OFFENDER_TRANSACTIONS OFF_TXN WHERE   OFF_TXN.OFFENDER_ID = :OFFENDERID
}

OTDOCFEE_CGRICHK_OFFENDER_DEDUCTIONS {
	SELECT  '1' FROM    OFFENDER_PAYMENT_PLANS PAY_PLN WHERE   (PAY_PLN.INFORMATION_NUMBER = :P_INFORMATION_NUMBER OR (PAY_PLN.INFORMATION_NUMBER IS NULL AND :P_INFORMATION_NUMBER IS NULL )) AND     (PAY_PLN.OFFENDER_DEDUCTION_ID = :P_OFFENDER_DEDUCTION_ID OR (PAY_PLN.OFFENDER_DEDUCTION_ID IS NULL AND :P_OFFENDER_DEDUCTION_ID IS NULL ))
}

OTDOCFEE_CGRICHK_OFFENDER_DEDUCTIONS_OFFENDER_DEDUCTION_ID {
	SELECT  '1' FROM    OFFENDER_PAYMENT_PLANS PAY_PLN WHERE   PAY_PLN.OFFENDER_DEDUCTION_ID = :OFFENDERDEDUCTIONID
}

OTDOCFEE_CGRICHK_OFFENDER_DEDUCTIONS_INFORMATION_NUMBER {
	SELECT  '1' FROM    OFFENDER_PAYMENT_PLANS PAY_PLN WHERE   PAY_PLN.INFORMATION_NUMBER = :INFORMATIONNUMBER
}

OTDOCFEE_CGWHEN_NEW_FORM_INSTANCE_ {
	SELECT  SYSDATE(),upper(user) FROM    DUAL
}
OTDOCFEE_POPULATE_DETAILS{
SELECT OFFENDER_DEDUCTION_ID  FROM OFFENDER_TXN_FEE_DETAILS WHERE OFFENDER_DEDUCTION_ID =:OFFENDERDEDUCTIONID
}
OTDOCFEE_POPULATE_DETAILS_RECEIPT_DEDUCTION_TYPE {
SELECT RECEIPT_DEDUCTION_TYPE
      FROM   TRANSACTION_FEE_DETAILS
      WHERE  DEDUCTION_TYPE = :DEDUCTIONTYPE
      AND    CASELOAD_ID = :CASELOADID
}
OTDOCFEE_POPULATE_DETAILS_TIERED_TRANSACTION_FEE_AMOUNTS {
 SELECT FROM_AMOUNT,TO_AMOUNT,PERCENTAGE,FEE_AMOUNT
      FROM   TIERED_TRANSACTION_FEE_AMOUNTS
      WHERE  DEDUCTION_TYPE = :deductionType
      AND    CASELOAD_ID =:caseloadId
 }
 OTDOCFEE_POST_QUERY_TWO {
 SELECT NEXTVAL('BENEFICIARY_ID') FROM dual
 }
 OTDOCFEE_POST_QUERY_TWO_PAYEE_CORPORATE_ID {
 SELECT PAYEE_CORPORATE_ID
         FROM CASELOAD_DEDUCTION_PROFILES
         WHERE CASELOAD_ID = :caseloadId
         AND DEDUCTION_TYPE = :deductionType
  }
  OTDOCFEE_POST_QUERY_TWO_UNKNOWN_BEN_ID {
SELECT NEXTVAL('UNKNOWN_BEN_ID')  FROM   dual
  } 
 OTDOCFEE_GET_OFFENDER_DEDUCTION_ID{
 	   SELECT OFFENDER_DEDUCTION_ID 
      FROM   OFFENDER_TIER_TXN_FEE_AMOUNTS
      WHERE  OFFENDER_DEDUCTION_ID = :OFFENDERDEDUCTIONID
      }
      OTDOCFEE_INSERT_INTO_OFFENDER_BENEFICIARIES {
      INSERT INTO OFFENDER_BENEFICIARIES (
                      BENEFICIARY_ID,
					  OFFENDER_DEDUCTION_ID,
					  OFFENDER_ID,
					  PERSON_ID,
					  CORPORATE_ID,
					  UNKNOWN_BEN_ID,
					  PRIORITY,
					  AMOUNT,
					  PERCENT,
					  OVERRIDE_AMOUNT,
				  	  RECEIVED_AMOUNT,
					  COMMENT_TEXT,
					  MODIFY_DATETIME,CREATE_DATETIME , CREATE_USER_ID)
			VALUES(:off_ben_id,
					  :d_off_ded_id,
					  :off_id,
					  NULL,
					 :p_corp_id,
					  :unknownben_id,
					  1,
					  999999999.99,
					  100,
					  NULL,
					  NULL,
					   NULL,
					 date_TRUNC('D',CURRENT_TIMESTAMP),current_timestamp,:createUserId)
					 
 }
 INSERT_INTO_OFFENDER_TXN_FEE_DETAILS {
 INSERT INTO OFFENDER_TXN_FEE_DETAILS (OFFENDER_DEDUCTION_ID, RECEIPT_DEDUCTION_TYPE,  CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME ) VALUES(:d_off_ded_id, :receipt_ded, current_timestamp , :createUserId , current_timestamp )
 }  
 INSERT_INTO_OFFENDER_TIER_TXN_FEE_AMOUNTS {
 INSERT INTO OFFENDER_TIER_TXN_FEE_AMOUNTS (
                              OFFENDER_DEDUCTION_ID, 
                              FROM_AMOUNT,
	    		               TO_AMOUNT,
	    		               PERCENTAGE,
 	    		               FEE_AMOUNT,CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME )                              
            VALUES ( :d_off_ded_id, 
                     :c_from,
        	         :c_to,
		             :c_percent,
 		             :c_fee_amt ,current_timestamp , :createUserId , current_timestamp )
 		    
}  
OTDOCFEE_OFFENDER_DEDUCTIONS_COUNT {
SELECT COUNT(*) FROM   OFFENDER_DEDUCTIONS WHERE  OFFENDER_ID   = :OFFENDERID AND    DEDUCTION_TYPE =  :DEDUCTIONTYPE
}
OTDOCFEE_GET_CASELOAD_TYPE {
SELECT caseload_type FROM caseloads WHERE caseload_id = :caseloadId
}
OTDOCFEE_GET_OVERLAP_COUNT{
select
	count(0)
from
	TIERED_TRANSACTION_FEE_AMOUNTS
where
	caseload_id = :caseloadId
	and deduction_type = :deductionType
	and ((:pFlag = 'F'
		and :fromAmount between FROM_AMOUNT and TO_AMOUNT
		and (TO_AMOUNT != :toAmount
			or coalesce(:toAmount ::text, '') =''))
			
	or (:pFlag = 'T'
		and (:toAmount between FROM_AMOUNT and TO_AMOUNT
			or (FROM_AMOUNT between :fromAmount and :toAmount )
				or (TO_AMOUNT between :fromAmount and :toAmount ))
			and FROM_AMOUNT != :fromAmount) );
		
		

}
--SELECT count(0) FROM TIERED_TRANSACTION_FEE_AMOUNTS WHERE caseload_id = :caseloadId AND deduction_type = :deductionType AND ((:pFlag = 'F' AND :fromAmount BETWEEN FROM_AMOUNT AND TO_AMOUNT AND (TO_AMOUNT != :toAmount OR :toAmount IS NULL)) OR (:pFlag = 'T' AND (:toAmount BETWEEN FROM_AMOUNT AND TO_AMOUNT OR (FROM_AMOUNT BETWEEN :fromAmount AND :toAmount ) OR (TO_AMOUNT BETWEEN :fromAmount AND :toAmount )) AND FROM_AMOUNT != :fromAmount) )

OTDOCFEE_OFFENDER_OLD_DATA{
select * from OFFENDER_DEDUCTIONS where  offender_deduction_id = :offender_deduction_id 
}
