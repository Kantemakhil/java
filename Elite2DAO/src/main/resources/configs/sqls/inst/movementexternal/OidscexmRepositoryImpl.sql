
OIDSCEXM_FIND_RGMOVETYPE {
 	SELECT CODE , DESCRIPTION   FROM REFERENCE_CODES   WHERE DOMAIN = 'MOVE_TYPE'    AND CODE IN ('CRT' ,'TRN' ,'INTER' ,'TAP' )    AND ( (ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL )          OR (:MODE = 'ENTER-QUERY' )  ) ORDER BY LIST_SEQ , CODE
}

OIDSCEXM_FIND_RGBUILDING {
 	SELECT LIVING_UNIT_CODE , LIVING_UNIT_ID FROM LIVING_UNITS   WHERE AGY_LOC_ID = ::AGYID AND PARENT_LIVING_UNIT_ID IS NULL  AND ACTIVE_FLAG = 'Y' ORDER BY LIST_SEQ , LIVING_UNIT_CODE
}

OIDSCEXM_FIND_RGAGYID {
	SELECT AGY_LOC.AGY_LOC_ID   CODE, AGY_LOC.DESCRIPTION DESCRIPTION, ACTIVE_FLAG  FROM   AGENCY_LOCATIONS AGY_LOC WHERE AGENCY_LOCATION_TYPE IS NOT NULL ORDER BY AGY_LOC_ID ,DESCRIPTION
}

OIDSCEXM_FIND_RGTIER {
 	SELECT LIVING_UNIT_CODE , LIVING_UNIT_ID FROM LIVING_UNITS   WHERE AGY_LOC_ID = ::AGYID  AND PARENT_LIVING_UNIT_ID = ::BUILDINGID AND ACTIVE_FLAG = 'Y' ORDER BY LIST_SEQ , LIVING_UNIT_CODE
}

OIDSCEXM_OFFSCH_FIND_V_OFFENDER_ALL_SCHEDULES {
 	SELECT EVENT_ID ,OFFENDER_BOOK_ID ,IN_OUT_STATUS ,BOOKING_NO ,BOOKING_ACTIVE_FLAG ,OFFENDER_ID ,OFFENDER_ID_DISPLAY ,OFFENDER_LAST_NAME ,OFFENDER_FIRST_NAME ,EVENT_DATE ,START_TIME ,END_TIME ,EVENT_CLASS ,EVENT_TYPE ,EVENT_TYPE_DESC ,EVENT_SUB_TYPE ,EVENT_SUB_TYPE_DESC ,ACTIVE_FLAG ,EVENT_STATUS ,EVENT_STATUS_DESC ,EVENT_OUTCOME ,EVENT_OUTCOME_DESC ,BUSY_DATE_FLAG ,OUTCOME_REASON_CODE ,REFERENCE_ID ,APPLICATION_DATE ,APPLICATION_TIME ,RETURN_DATE ,RETURN_TIME ,COMMENT_TEXT ,DETAILS ,AGY_LOC_ID ,AGY_LOC_DESC ,LIVING_UNIT_ID ,LIVING_UNIT_DESC ,LU_LEVEL_1_CODE ,LU_LEVEL_2_CODE ,LU_LEVEL_3_CODE ,LU_LEVEL_4_CODE ,AGENCY_IML_ID ,AGENCY_IML_DESC ,AGENCY_IML_LEVEL_1_CODE ,AGENCY_IML_LEVEL_2_CODE ,AGENCY_IML_LEVEL_3_CODE ,TO_AGY_LOC_ID ,TO_AGY_LOC_DESC ,TO_LOC ,TO_LOC_DESC ,ESCORT_CODE ,ESCORT_DESC ,DIRECTION_CODE ,SCHEDULE_MOVEMENT_TIME ,FROM_CITY_CODE ,FROM_CITY_NAME ,TO_CITY_CODE ,TO_CITY_NAME ,TO_INTERNAL_LOCATION_ID ,TO_INTERNAL_LOCATION_DESC ,TO_INT_LOC_LEVEL_1_CODE ,TO_INT_LOC_LEVEL_2_CODE ,TO_INT_LOC_LEVEL_3_CODE ,TO_INT_LOC_USER_DESC ,CREDITED_HOURS ,ENGAGEMENT_CODE ,UNDERSTANDING_CODE ,PIECE_WORK ,IN_TIME ,OUT_TIME ,PERFORMANCE_CODE ,TRANSPORT_CODE ,SICK_NOTE_EXPIRY_DATE ,SICK_NOTE_RECEIVED_DATE ,UNEXCUSED_ABSENCE_FLAG ,UNPAID_WORK_ACTION ,UNPAID_WORK_BEHAVIOUR ,AGREED_TRAVEL_HOUR ,CHECK_BOX_1 ,CHECK_BOX_2 ,HIDDEN_COMMENT_TEXT ,IN_CHARGE_STAFF_ID ,IN_CHARGE_STAFF_NAME ,OFF_PRGREF_ID ,CONTACT_PERSON_NAME ,TO_ADDRESS_OWNER_CLASS ,TO_ADDRESS_ID ,UNPAID_WORK_SUPERVISOR ,TA_ID ,RECORD_SOURCE ,CHECK_SUM ,PROV_STATE_CODE ,PROV_STATE_DESC ,SCHEDULED_TRIP_ID   FROM V_OFFENDER_ALL_SCHEDULES  
}

OIDSCEXM_OFFSCH_UPDATE_V_OFFENDER_ALL_SCHEDULES {
	UPDATE V_OFFENDER_ALL_SCHEDULES set ACTIVE_FLAG  = :activeFlag where EVENT_ID  = :eventId
}

OIDSCEXM_PROCESS_EXTERNAL_MOVEMENT_ROOT_OFFENDER_ID {
	SELECT ROOT_OFFENDER_ID FROM OFFENDER_BOOKINGS WHERE OFFENDER_BOOK_ID = :lvOffBookId
}

OIDSCEXM_PROCESS_EXTERNAL_MOVEMENT_UN_USED {
	SELECT NVL(MAX(BED_ASSIGN_SEQ),0) FROM BED_ASSIGNMENT_HISTORIES WHERE OFFENDER_BOOK_ID = LV_OFF_BOOK_ID
}

OIDSCEXM_CHK_NOTIFICATION {
	SELECT OPN.NOTI_SEQ, OPN.NOTI_MOVE_SEQ FROM OFFENDER_PEND_NOTIFICATIONS OPN WHERE OPN.SCHEDULE_ID = :V_SCH_ID AND OPN.OFFENDER_BOOK_ID = :V_OFF_BOOK_ID
}

OIDSCEXM_CHK_NOTIFICATION_ {
	SELECT COUNT ( * ) FROM OFFENDER_NOT_COMPLETIONS WHERE OFFENDER_BOOK_ID = V_OFF_BOOK_ID AND NOTI_SEQ = V_NOTI_S AND NOTI_MOVE_SEQ = V_NOTI_MOVE_S AND STATUS <> 'COMPLETED'
}

OIDSCEXM_CREATE_FORM_GLOBALSCREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}

OIUSSTRI_SCHTRIPS_FIND_V_OIUSSTRI {
 	SELECT SCHEDULED_TRIP_ID ,DEPARTURE_DATE ,EST_DEPARTURE_TIME ,ACT_DEPARTURE_TIME ,EST_COMP_TIME ,ROUTE_NAME ,DESCRIPTION ,STATUS   FROM V_OIUSSTRI  
}

OIUSSTRI_CREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}

OIDSCEXM_MOVEMENT_CUR {
SELECT MOVEMENT_DATE, MOVEMENT_TIME, DIRECTION_CODE  FROM OFFENDER_EXTERNAL_MOVEMENTS  WHERE OFFENDER_BOOK_ID = :offenderBookId::numeric
               AND MOVEMENT_SEQ = ( SELECT MAX ( MOVEMENT_SEQ ) FROM OFFENDER_EXTERNAL_MOVEMENTS WHERE OFFENDER_BOOK_ID = :offenderBookId::numeric )
}

OIDSCEXM_EXECUTE_QUERY {
select a.* from(
SELECT offsch.ACTIVE_FLAG, offsch.AGENCY_IML_DESC, offsch.AGENCY_IML_ID, offsch.AGENCY_IML_LEVEL_1_CODE, offsch.AGENCY_IML_LEVEL_2_CODE, offsch.AGENCY_IML_LEVEL_3_CODE, offsch.AGREED_TRAVEL_HOUR, offsch.AGY_LOC_DESC, offsch.AGY_LOC_ID, offsch.APPLICATION_DATE, offsch.APPLICATION_TIME, offsch.BOOKING_ACTIVE_FLAG, offsch.BOOKING_NO, offsch.BUSY_DATE_FLAG, offsch.CHECK_BOX_1, offsch.CHECK_BOX_2, offsch.CHECK_SUM, offsch.COMMENT_TEXT, offsch.CONTACT_PERSON_NAME, offsch.CREDITED_HOURS, offsch.DETAILS, offsch.DIRECTION_CODE, offsch.END_TIME, offsch.ENGAGEMENT_CODE, offsch.ESCORT_CODE, offsch.ESCORT_DESC, offsch.EVENT_CLASS, offsch.EVENT_DATE, offsch.EVENT_ID, 
case  WHEN offsch.event_type ::text = 'CRT'::text THEN 'Y'  ELSE 'N' END AS courtEventApp,
offsch.EVENT_OUTCOME, offsch.EVENT_OUTCOME_DESC, offsch.EVENT_STATUS, offsch.EVENT_STATUS_DESC, offsch.EVENT_SUB_TYPE, offsch.EVENT_SUB_TYPE_DESC, offsch.EVENT_TYPE_DESC, offsch.EVENT_TYPE, offsch.FROM_CITY_CODE, offsch.FROM_CITY_NAME, offsch.HIDDEN_COMMENT_TEXT, offsch.IN_CHARGE_STAFF_ID, offsch.IN_CHARGE_STAFF_NAME, offsch.IN_OUT_STATUS, offsch.IN_TIME, offsch.LIVING_UNIT_DESC, offsch.LIVING_UNIT_ID, offsch.LU_LEVEL_1_CODE, offsch.LU_LEVEL_2_CODE, offsch.LU_LEVEL_3_CODE, offsch.LU_LEVEL_4_CODE, offsch.OFF_PRGREF_ID, offsch.OFFENDER_BOOK_ID, offsch.OFFENDER_FIRST_NAME, offsch.OFFENDER_ID, offsch.OFFENDER_ID_DISPLAY, offsch.OFFENDER_LAST_NAME, offsch.OUT_TIME, offsch.OUTCOME_REASON_CODE, offsch.PERFORMANCE_CODE, offsch.PIECE_WORK, offsch.PROV_STATE_CODE, offsch.PROV_STATE_DESC, offsch.RECORD_SOURCE, offsch.REFERENCE_ID, offsch.RETURN_DATE, offsch.RETURN_TIME, offsch.SCHEDULE_MOVEMENT_TIME, offsch.SCHEDULED_TRIP_ID, offsch.SICK_NOTE_EXPIRY_DATE, offsch.SICK_NOTE_RECEIVED_DATE, offsch.START_TIME, offsch.TA_ID, offsch.TO_ADDRESS_ID, offsch.TO_ADDRESS_OWNER_CLASS, offsch.TO_AGY_LOC_DESC, offsch.TO_AGY_LOC_ID, offsch.TO_CITY_CODE, offsch.TO_CITY_NAME, offsch.TO_INT_LOC_LEVEL_1_CODE, offsch.TO_INT_LOC_LEVEL_2_CODE, offsch.TO_INT_LOC_LEVEL_3_CODE, offsch.TO_INT_LOC_USER_DESC, offsch.TO_INTERNAL_LOCATION_DESC, offsch.TO_INTERNAL_LOCATION_ID, offsch.TO_LOC_DESC, offsch.TO_LOC, offsch.TRANSPORT_CODE, offsch.UNDERSTANDING_CODE, offsch.UNEXCUSED_ABSENCE_FLAG, offsch.UNPAID_WORK_ACTION, offsch.UNPAID_WORK_BEHAVIOUR, offsch.UNPAID_WORK_SUPERVISOR
FROM v_offender_all_schedules offsch 
}

OIDSCEXM_CHECK_WAITLIST_AND_ALLOCATIONS{
SELECT COUNT (*)   FROM offender_program_profiles  WHERE (   (    (offender_end_date IS NULL OR offender_end_date > :P_DATE   )                 
                   AND offender_program_status NOT IN ('WAIT', 'PLAN')
                 )
              OR (    (reject_date IS NULL OR reject_date > :P_DATE )
                  AND offender_program_status = 'WAIT'
                 )
             )
         AND offender_book_id = :P_OFFENDER_BOOK_ID
}

OIDSCEXM_STATUSRECORDS{
SELECT COUNT (*) FROM v_offender_all_schedules WHERE EVENT_ID = :eventId 
}

OIDSCEXM_GET_COUNT_CUR{
SELECT COUNT ( * )   FROM offender_not_completions WHERE offender_book_id = :vOffBookId
         AND noti_seq = :vNotiS
         AND noti_move_seq = :vNotiMoveMs
         AND status not in ('COMPLETED')
}

OIDSCEXM_GETTOAGYLOCID {
select AGY_LOC_ID from AGENCY_LOCATIONS where DESCRIPTION = :toAgyLocDesc
}

GET_OLD_REC_OF_V_OFFENDER_ALL_SCHEDULES_2{
SELECT EVENT_ID, OFFENDER_BOOK_ID, AGY_LOC_ID, EVENT_DATE, START_TIME, END_TIME, EVENT_CLASS, EVENT_TYPE , EVENT_SUB_TYPE , EVENT_STATUS , EVENT_OUTCOME, CONFIRM_FLAG , OUTCOME_REASON_CODE, COMMENT_TEXT, REFERENCE_ID, APPLICATION_DATE , APPLICATION_TIME , RETURN_DATE, RETURN_TIME, TO_AGY_LOC_ID , ESCORT_CODE, DIRECTION_CODE , SCHEDULE_MOVEMENT_TIME, TO_INTERNAL_LOCATION_ID, FROM_CITY_CODE, TO_CITY_CODE, CREDITED_HOURS, PIECE_WORK, ENGAGEMENT_CODE, UNDERSTANDING_CODE, DETAILS , UNPAID_WORK_BEHAVIOUR , UNPAID_WORK_ACTION , SICK_NOTE_RECEIVED_DATE, SICK_NOTE_EXPIRY_DATE, UNEXCUSED_ABSENCE_FLAG, IN_TIME, OUT_TIME, TRANSPORT_CODE, PERFORMANCE_CODE, AGREED_TRAVEL_HOUR, CHECK_BOX_1 , CHECK_BOX_2, HIDDEN_COMMENT_TEXT , IN_CHARGE_STAFF_ID , OFF_PRGREF_ID , CONTACT_PERSON_NAME, TO_ADDRESS_OWNER_CLASS, TO_ADDRESS_ID , TO_CORPORATE_ID , UNPAID_WORK_SUPERVISOR , TA_ID, RECORD_SOURCE, CHECK_SUM , PROV_STATE_CODE, SCHEDULED_TRIP_ID FROM V_OFFENDER_ALL_SCHEDULES_2 WHERE EVENT_ID = :EVENT_ID
}
OIDSCEXM_EXECUTE_QUERY1
{
select offsch.offender_book_id from v_offender_all_schedules offsch where 
((offsch.event_date) between (:fromDate) and (:toDate)) 
and offsch.event_class ='EXT_MOV'
AND offsch.booking_active_flag = 'Y'
and case when offsch.event_type ='CRT' then offsch.appearance_type in ( select code from reference_codes where domain ='CRT_APP_TYPE'
and parent_code ='EXT')  else appearance_type is null end 
}
OIDSCEXM_EXECUTE_QUERY2{
select * from v_offender_all_schedules offsch where offsch.offender_book_id in (:offenderList) 
and ((offsch.event_date::DATE) between (:fromDate) and (:toDate)) 
and offsch. event_status = 'SCH' and offsch.event_status !='COMP'
and offsch.event_class ='EXT_MOV'
and case when offsch.event_type ='CRT' then (appearance_type in ( select code from reference_codes where domain ='CRT_APP_TYPE' and parent_code ='EXT') or appearance_type is null) else appearance_type is null  end 
}
OIDSCEXM_GET_CORP_ADDRESS{
SELECT COALESCE( (SELECT corporate_name FROM corporates c WHERE c.corporate_id IN (SELECT owner_id FROM addresses a WHERE address_id = :addressId) LIMIT 1), (SELECT SUBSTR(LAST_NAME || ', ' || FIRST_NAME, 1, 100) FROM OFFENDERS O, V_ADDRESS_USAGES V WHERE O.OFFENDER_ID = V.OWNER_ID AND ADDRESS_USAGE = 'TAP' AND ADDRESS_ID = :addressId LIMIT 1) ) AS corporate_name
}


