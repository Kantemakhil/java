
OIDVTOUR_FIND_RGGROUPPURPOS {
 	SELECT  CODE ,                 DESCRIPTION    FROM   REFERENCE_CODES  WHERE  DOMAIN = 'GROUP_PURPOS'       AND   (ACTIVE_FLAG = 'Y'        AND   EXPIRED_DATE IS NULL )      ORDER BY LIST_SEQ
}

OIDVTOUR_FIND_RGIDTYPE {
 	SELECT  CODE ,                 DESCRIPTION    FROM   REFERENCE_CODES  WHERE  DOMAIN = 'ID_TYPE'
 	AND   (ACTIVE_FLAG = 'Y'        AND   EXPIRED_DATE IS NULL )   ORDER BY LIST_SEQ
}

OIDVTOUR_FIND_RGSTAFFMEMBERS {
 	SELECT    LAST_NAME||', '|| FIRST_NAME  STAFF_NAME , STAFF_ID, STATUS    FROM    STAFF_MEMBERS WHERE  (COALESCE(SUSPENDED_FLAG ,'N' )='N'
 	AND    TERMINATION_DATE IS NULL )    ORDER BY   1
}

OIDVTOUR_FIND_RGAGENCYLOCATIONS {
 	SELECT   AL.DESCRIPTION ,AL.AGY_LOC_ID, AL.ACTIVE_FLAG FROM  AGENCY_LOCATIONS AL ,CASELOAD_AGENCY_LOCATIONS CAL WHERE  CAL.CASELOAD_ID = :CASELOADID
 	AND  AL.AGY_LOC_ID = CAL.AGY_LOC_ID   AND 
 	AL.AGENCY_LOCATION_TYPE = :CASELOADTYPE   AND  AL.AGY_LOC_ID NOT IN ('TRN' ,'OUT' )
}

OIDVTOUR_VISITINGGROUPS_FIND_VISITING_GROUPS {
 	SELECT GROUP_ID ,AGY_LOC_ID ,VISIT_DATE ,START_TIME ,END_TIME ,GROUP_NAME ,NO_VISITORS ,GROUP_PURPOSE ,APPROVED_BY_ID ,ESCORTED_BY_ID ,COMMENT_TEXT ,MODIFY_USER_ID ,MODIFY_DATETIME ,CREATE_DATETIME ,CREATE_USER_ID ,SEAL_FLAG   FROM VISITING_GROUPS  
}
OIDVTOUR_VISITINGGROUPS_INSERT_VISITING_GROUPS {
insert into VISITING_GROUPS(GROUP_ID , AGY_LOC_ID , VISIT_DATE , START_TIME , END_TIME , GROUP_NAME , NO_VISITORS , GROUP_PURPOSE , APPROVED_BY_ID , ESCORTED_BY_ID , COMMENT_TEXT , MODIFY_DATETIME , CREATE_DATETIME , CREATE_USER_ID , SEAL_FLAG, modify_user_id ) values(:groupId , :agyLocId , :visitDate , :startTime , :endTime , :groupName , :noVisitors , :groupPurpose , :approvedById , :escortedById , :commentText , null , current_timestamp , :createUserId , :sealFlag, null ) 
}

OIDVTOUR_VISITINGGROUPS_UPDATE_VISITING_GROUPS {
update VISITING_GROUPS set GROUP_ID = :groupId, AGY_LOC_ID = :agyLocId , VISIT_DATE = :visitDate , START_TIME = :startTime , END_TIME = :endTime , GROUP_NAME = :groupName , NO_VISITORS = :noVisitors , GROUP_PURPOSE = :groupPurpose , APPROVED_BY_ID = :approvedById , ESCORTED_BY_ID = :escortedById , COMMENT_TEXT = :commentText , MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = current_timestamp , SEAL_FLAG = :sealFlag where GROUP_ID = :groupId
}

OIDVTOUR_VISITINGGROUPS_DELETE_VISITING_GROUPS { 
	DELETE FROM VISITING_GROUPS WHERE GROUP_ID  = :groupId
}

OIDVTOUR_VISITINGMEMBERS_FIND_VISITING_MEMBERS {
 	SELECT GROUP_ID ,MEMBER_SEQ ,LAST_NAME ,FIRST_NAME ,DOB ,ID_TYPE ,IDENTIFIER ,COMMENT_TEXT ,VERIFIED_FLAG ,MODIFY_USER_ID ,MODIFY_DATETIME ,CREATE_DATETIME ,CREATE_USER_ID ,SEAL_FLAG   FROM VISITING_MEMBERS  /* where  */
}
OIDVTOUR_VISITINGMEMBERS_INSERT_VISITING_MEMBERS {
insert into VISITING_MEMBERS(GROUP_ID , MEMBER_SEQ , LAST_NAME , FIRST_NAME , DOB , ID_TYPE , IDENTIFIER , COMMENT_TEXT , VERIFIED_FLAG , MODIFY_DATETIME , CREATE_DATETIME , CREATE_USER_ID , SEAL_FLAG, modify_user_id ) values(:groupId , :memberSeq , :lastName , :firstName , :dob , :idType , :identifier , :commentText , :verifiedFlag , null , current_timestamp , :createUserId , :sealFlag, null ) 
}

OIDVTOUR_VISITINGMEMBERS_UPDATE_VISITING_MEMBERS {
	 update VISITING_MEMBERS set LAST_NAME = :lastName , FIRST_NAME = :firstName , DOB = :dob , ID_TYPE = :idType , IDENTIFIER = :identifier , COMMENT_TEXT = :commentText , VERIFIED_FLAG = :verifiedFlag , MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = current_timestamp , SEAL_FLAG = :sealFlag where GROUP_ID = :groupId and MEMBER_SEQ = :memberSeq
}

OIDVTOUR_VISITINGMEMBERS_DELETE_VISITING_MEMBERS { 
	DELETE FROM VISITING_MEMBERS WHERE GROUP_ID  = :groupId AND MEMBER_SEQ  = :memberSeq 
}


OIDVTOUR_VISITING_GROUPS_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM VISITING_MEMBERS V WHERE V.GROUP_ID = :GROUPID
}

OIDVTOUR_VISITING_GROUPS_PREINSERT {
	SELECT NEXTVAL ('GROUP_ID')
}

OIDVTOUR_VISITING_MEMBERS_PREINSERT{
SELECT COALESCE(MAX(MEMBER_SEQ),0) + 1  SEQ FROM VISITING_MEMBERS WHERE GROUP_ID = :GROUPID
}

OIDVTOUR_CREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}

OIDVTOUR_CGWHEN_NEW_FORM_INSTANCE_ {
	SELECT SYSDATE, USER FROM SYS.DUAL
}

OIDVTOUR_DEFAULT_AGY_LOC_ID_ {
select
	CAL.AGY_LOC_ID,
	AL.DESCRIPTION
from
	CASELOAD_AGENCY_LOCATIONS CAL,
	AGENCY_LOCATIONS AL
where
	CAL.CASELOAD_ID = :CASELOADID
	and CAL.AGY_LOC_ID not in ('TRN', 'OUT')
	and CAL.AGY_LOC_ID = AL.AGY_LOC_ID
	limit 3
}
