OIDOMAIL_FIND_OFFENDER_MAIL_RESTRICTIONS{
SELECT OML.RESTRICTION_ADDRESS_ID as restrictioAddressId , OML.COMMENT_TEXT , OML.RESTRICTION_TYPE , OML.CONTACT_TYPE , OML.RESTRICTION_TYPE, OML.OFFENDER_BOOK_ID , OML.CREATE_DATETIME, OML.CREATE_USER_ID, OML.MODIFY_USER_ID, OML.MODIFY_DATETIME, OML.SEAL_FLAG, OML.START_DATE , OML.END_DATE , OML.RESTRICTION_SEQ , OML.ACTIVE_FLAG , CASE WHEN OML.CONTACT_TYPE = 'PER' THEN ( SELECT COALESCE(PA.SUITE_NUMBER, '') || ' ' || COALESCE(PA.ADDRESS_LINE1, '') || ' ' || COALESCE(PA.CITY_NAME, PA.CITY_CODE) || ' ' || coalesce(PA.PROV_STATE_DESC, PA.PROV_STATE_CODE) || ' ' || COALESCE(PA.ZIP_POSTAL_CODE, '') || ' ' || COALESCE(PA.COUNTRY, '') ADDRESS FROM V_PERSON_ADDRESSES PA WHERE PA.PERSON_ID = ( SELECT OWNER_ID FROM ADDRESSES A WHERE ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID) AND PA.ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID) ELSE ( SELECT COALESCE(CA.SUITE_NUMBER, '') || ' ' || COALESCE(CA.ADDRESS_LINE1, '') || ' ' || COALESCE(CA.CITY_NAME, CA.CITY_CODE) || ' ' || coalesce(CA.PROV_STATE_DESC, '') || ' ' || COALESCE(CA.ZIP_POSTAL_CODE, '') || ' ' || COALESCE(CA.COUNTRY, '') FROM V_CORPORATE_ADDRESSES CA WHERE CA.ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID AND CA.CORPORATE_ID = ( SELECT OWNER_ID FROM ADDRESSES A WHERE ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID) ) END AS CONTACT_ADDRESS, CASE WHEN OML.CONTACT_TYPE = 'PER' THEN ( SELECT COALESCE(LAST_NAME, '') || ' ' || COALESCE(FIRST_NAME , '') FROM PERSONS P WHERE PERSON_ID = ( SELECT OWNER_ID FROM ADDRESSES A WHERE ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID)) ELSE ( SELECT CORPORATE_NAME FROM CORPORATES C WHERE CORPORATE_ID = ( SELECT OWNER_ID FROM ADDRESSES A WHERE ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID) ) END AS CONTACT_NAME, ( SELECT OWNER_ID FROM ADDRESSES A WHERE ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID) AS CORPORATE_ID, ( SELECT OWNER_ID FROM ADDRESSES A WHERE ADDRESS_ID = OML.RESTRICTION_ADDRESS_ID) AS PERSON_ID FROM OFFENDER_MAIL_RESTRICTIONS OML WHERE OML.OFFENDER_BOOK_ID =:OFFENDERBOOKID order by RESTRICTION_SEQ ASC
}
OIDOMAIL_FIND_OFFENDER_MAIL_LOGS{
select OML.OFFENDER_BOOK_ID, OML.LOG_SEQ,OML.INOUT_MAIL_TYPE, OML.LOG_DATE, OML.MAIL_ADDRESS_ID, OML.MAIL_TYPE, OML.STATUS_CODE, OML.ALERT_CODE, OML.COMMENT_TEXT, OML.CREATE_DATETIME, OML.CREATE_USER_ID, OML.MODIFY_USER_ID, OML.MODIFY_DATETIME, OML.SEAL_FLAG, OML.CONTACT_TYPE, case when OML.CONTACT_TYPE = 'PER' then ( select coalesce(PA.SUITE_NUMBER, '') || ' ' || coalesce(PA.ADDRESS_LINE1, '') || ' ' || coalesce( PA.CITY_NAME, PA.CITY_CODE) || ' ' || coalesce(PA.PROV_STATE_DESC, PA.PROV_STATE_CODE) || ' ' || coalesce(PA.ZIP_POSTAL_CODE, '') || ' ' || coalesce(PA.COUNTRY, '') ADDRESS from V_PERSON_ADDRESSES PA where PA.PERSON_ID = ( select OWNER_ID from ADDRESSES A where ADDRESS_ID = OML.MAIL_ADDRESS_ID) and PA.ADDRESS_ID = OML.MAIL_ADDRESS_ID) else ( select coalesce(CA.SUITE_NUMBER, '') || ' ' || coalesce(CA.ADDRESS_LINE1, '') || ' ' || coalesce(CA.CITY_NAME, CA.CITY_CODE) || ' ' || coalesce(CA.PROV_STATE_DESC, CA.PROV_STATE_CODE) || ' ' || coalesce(CA.ZIP_POSTAL_CODE, '') || ' ' || coalesce(CA.COUNTRY, '') from V_CORPORATE_ADDRESSES CA where CA.ADDRESS_ID = OML.MAIL_ADDRESS_ID and CA.CORPORATE_ID = ( select OWNER_ID from ADDRESSES A where ADDRESS_ID = OML.MAIL_ADDRESS_ID) ) end as CONTACT_ADDRESS, case when OML.CONTACT_TYPE = 'PER' then ( select coalesce(LAST_NAME, '') || ' ' || coalesce(FIRST_NAME , '') from PERSONS P where PERSON_ID = ( select OWNER_ID from ADDRESSES A where ADDRESS_ID = OML.MAIL_ADDRESS_ID)) else ( select CORPORATE_NAME from CORPORATES C where CORPORATE_ID = ( select OWNER_ID from ADDRESSES A where ADDRESS_ID = OML.MAIL_ADDRESS_ID) ) end as CONTACT_NAME, ( select OWNER_ID from ADDRESSES A where ADDRESS_ID = OML.MAIL_ADDRESS_ID) as CORPORATE_ID, ( select OWNER_ID from ADDRESSES A where ADDRESS_ID = OML.MAIL_ADDRESS_ID) as PERSON_ID from OFFENDER_MAIL_LOGS OML where OML.OFFENDER_BOOK_ID =:OFFENDERBOOKID order by LOG_SEQ ASC
}

OIDOMAIL_INSERT_OFFENDER_MAIL_LOGS{
INSERT INTO OFFENDER_MAIL_LOGS ( OFFENDER_BOOK_ID, LOG_SEQ,INOUT_MAIL_TYPE, LOG_DATE, MAIL_ADDRESS_ID, MAIL_TYPE, STATUS_CODE, ALERT_CODE, COMMENT_TEXT, CREATE_DATETIME, CREATE_USER_ID,  SEAL_FLAG, CONTACT_TYPE, MODIFY_USER_ID, MODIFY_DATETIME) VALUES(:offenderBookId,(select coalesce(max(log_seq),0)+1 from offender_mail_logs where offender_book_id = :offenderBookId), :inoutMailType, :logDate, :mailAddressId, :mailType, :statusCode , :alertCode, :commentText, current_timestamp, :createUserId, :sealFlag, :contactType, null, null)
}

OIDOMAIL_UPDATE_OFFENDER_MAIL_LOGS {
update OFFENDER_MAIL_LOGS set mail_type =:mailType,log_date=:logDate,mail_address_id=:mailAddressId,comment_text=:commentText, INOUT_MAIL_TYPE=:inoutMailType,
MODIFY_DATETIME = current_timestamp,MODIFY_USER_ID =:modifyUserId  ,STATUS_CODE=:statusCode
where offender_book_id =:offenderBookId and LOG_SEQ = :logSeq

}

OIDOMAIL_DELETE_OFFENDER_MAIL_LOGS {
DELETE FROM OFFENDER_MAIL_LOGS where offender_book_id=:offenderBookId and LOG_SEQ = :logSeq

}

OIDOMAIL_INSERT_OFFENDER_MAIL_RESTRICTIONS {
INSERT INTO OFFENDER_MAIL_RESTRICTIONS(restriction_seq,offender_book_id,contact_type,restriction_address_id, restriction_type, start_date ,end_date,active_flag, CREATE_DATETIME, CREATE_USER_ID, SEAL_FLAG,COMMENT_TEXT, MODIFY_USER_ID, MODIFY_DATETIME) 
VALUES(NEXTVAL('restriction_seq'),:offenderBookId,:contactType,:restrictioAddressId,:restrictionType,:startDate,:endDate ,:activeFlag,current_timestamp,:createUserId, :sealFlag,:commentText, null, null) 
}

OIDOMAIL_UPDATE_OFFENDER_MAIL_RESTRICTIONS{
update OFFENDER_MAIL_RESTRICTIONS set restriction_type=:restrictionType,start_date=:startDate,end_date=:endDate,	
MODIFY_DATETIME = current_timestamp,MODIFY_USER_ID =:modifyUserId , active_flag=:activeFlag , comment_text=:commentText
where offender_book_id =:offenderBookId and restriction_seq =:restrictionSeq
}

OIDOMAIL_DELETE_OFFENDER_MAIL_RESTRICTIONS {
DELETE FROM OFFENDER_MAIL_RESTRICTIONS where offender_book_id=:offenderBookId and  restriction_seq = :restrictionSeq 

}

OIDOMAIL_FIND_OFFENDER_MAIL_LOGS_SEQUENCE{
select coalesce(max(log_seq),0)+1 from offender_mail_logs where offender_book_id = :offenderBookId;

}
