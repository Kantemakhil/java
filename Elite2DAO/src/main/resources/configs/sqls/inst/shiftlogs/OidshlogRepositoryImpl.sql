
OIDSHLOG_FIND_AGY {
 	SELECT AL.AGY_LOC_ID code , AL.DESCRIPTION , AL.ACTIVE_FLAG FROM AGENCY_LOCATIONS AL , CASELOAD_AGENCY_LOCATIONS CAL WHERE CAL.CASELOAD_ID = :CASELOADID AND AL.AGY_LOC_ID = CAL.AGY_LOC_ID AND AL.AGENCY_LOCATION_TYPE = 'INST' AND AL.AGY_LOC_ID NOT IN ('TRN' , 'OUT' ) AND ((:MODE = 'ENTER-QUERY' ) OR (:MODE != 'ENTER-QUERY' AND AL.ACTIVE_FLAG = 'Y' ) ) ORDER BY AL.LIST_SEQ , AL.DESCRIPTION
}

OIDSHLOG_FIND_CGFKAGYSHILSTAFFID {
 	SELECT STAFF.LAST_NAME||', '||STAFF.FIRST_NAME description  ,  STAFF.STAFF_ID STAFF_ID, STATUS  FROM STAFF_MEMBERS STAFF  WHERE STAFF_ID IN (SELECT STAFF_ID FROM STAFF_ACCESSIBLE_CASELOADS  WHERE CASELOAD_ID =  :CASELOADID )   ORDER BY STAFF.LAST_NAME , STAFF.FIRST_NAME
}

OIDSHLOG_FIND_CGFKAGYSHILDSPAGYLOCID3 {
 	SELECT C.INTERNAL_LOCATION_ID ,         C.INTERNAL_LOCATION_CODE ,         C.DESCRIPTION, C.ACTIVE_FLAG     FROM INT_LOC_USAGE_LOCATIONS A , 	  INTERNAL_LOCATION_USAGES B , 	  AGENCY_INTERNAL_LOCATIONS C WHERE A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID    AND B.INTERNAL_LOCATION_USAGE='SHIFT'    AND B.AGY_LOC_ID = :DSPAGYLOCID4     AND A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID   	ORDER BY A.LIST_SEQ , C.DESCRIPTION
}

OIDSHLOG_FIND_CGFKAGYSHILAGYACTIVITYCOD {
 	SELECT REF_CODE.CODE , REF_CODE.DESCRIPTION, ACTIVE_FLAG FROM REFERENCE_CODES REF_CODE WHERE DOMAIN = 'ACT_TYPE' ORDER BY LIST_SEQ
}

OIDSHLOG_AGYSHIL_FIND_AGENCY_SHIFT_LOGS {
 	SELECT STAFF_ID ,SHIFT_LOG_SEQ ,LOG_DATE ,LOG_TIME ,AGY_ACTIVITY_CODE ,INTERNAL_LOCATION_ID2 ,INTERNAL_LOCATION_ID ,INTERNAL_LOCATION_ID3 ,MODIFY_USER_ID ,MODIFY_DATETIME ,LOCK_FLAG ,CREATE_DATETIME ,CREATE_USER_ID ,SEAL_FLAG,OBSERVATION_TEXT,REASON,START_TIME,END_TIME , error_flag ,amend_flag as amended_Flag FROM AGENCY_SHIFT_LOGS  /* where  */
}
OIDSHLOG_AGYSHIL_INSERT_AGENCY_SHIFT_LOGS {
insert into AGENCY_SHIFT_LOGS(STAFF_ID , SHIFT_LOG_SEQ , LOG_DATE , LOG_TIME , AGY_ACTIVITY_CODE , INTERNAL_LOCATION_ID2 , INTERNAL_LOCATION_ID , INTERNAL_LOCATION_ID3 , LOCK_FLAG , CREATE_DATETIME , CREATE_USER_ID , SEAL_FLAG , OBSERVATION_TEXT , REASON , START_TIME , END_TIME , amend_flag , error_flag , modify_user_id , modify_datetime ) values(:staffId , :shiftLogSeq , :logDate , :logTime , :agyActivityCode , :internalLocationId2 , :internalLocationId , :internalLocationId3 , :lockFlag , CURRENT_TIMESTAMP , :createUserId , :sealFlag, :observationDetails , :reason , :startTime , :endTime , :amendedFlag, :errorFlag , null , null )
}

OIDSHLOG_AGYSHIL_UPDATE_AGENCY_SHIFT_LOGS {
	update AGENCY_SHIFT_LOGS set STAFF_ID =:staffId , SHIFT_LOG_SEQ =:shiftLogSeq , LOG_DATE =:logDate , LOG_TIME =:logTime , AGY_ACTIVITY_CODE =:agyActivityCode , INTERNAL_LOCATION_ID2 =:internalLocationId2 , INTERNAL_LOCATION_ID =:internalLocationId , INTERNAL_LOCATION_ID3 =:internalLocationId3 , MODIFY_USER_ID =:modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP , LOCK_FLAG =:lockFlag , SEAL_FLAG =:sealFlag , OBSERVATION_TEXT =:observationDetails , REASON =:reason , START_TIME =:startTime , END_TIME =:endTime, amend_flag =:amendedFlag , error_flag =:errorFlag where SHIFT_LOG_SEQ =:shiftLogSeq
}

OIDSHLOG_AGYSHIL_DELETE_AGENCY_SHIFT_LOGS { 
	DELETE FROM AGENCY_SHIFT_LOGS where SHIFT_LOG_SEQ=:shiftLogSeq
}


OIDSHLOG_AGY_SHIL_POSTQUERY_ {
	SELECT  STAFF.LAST_NAME||', '||STAFF.FIRST_NAME FROM   STAFF_MEMBERS STAFF WHERE  STAFF.STAFF_ID = :STAFFID
}

OIDSHLOG_AGY_SHIL_PREUPDATE_ROLE {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'SHLOG_ROLE'
}
OIDSHLOG_AGY_SHIL_PREUPDATE_LOCK{
SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'SHLOG_LOCK'
}
OIDSHLOG_AGY_SHIL_PREUPDATE_BACKDT{
SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'SHLOG_BACKDT'
}


OIDSHLOG_AGY_SHIL_PREUPDATE_MEMBER_ROLES{
	SELECT 'Y' FROM STAFF_MEMBER_ROLES WHERE ROLE_ID = LV_SHLOG_ROLE AND STAFF_ID = (SELECT STAFF_ID FROM STAFF_MEMBERS WHERE USER_ID = :USER_ID)
}

OIDSHLOG_AGY_SHIL_WHENNEWRECORDINSTANCE {
	SELECT STAFF_ID, LAST_NAME||', '||FIRST_NAME description FROM STAFF_MEMBERS WHERE USER_ID = :USERID
}

OIDSHLOG_CGFKCHK_AGY_SHIL_AGY_SHIL_STA_ {
	SELECT STAFF.LAST_NAME||', '||STAFF.FIRST_NAME FROM   STAFF_MEMBERS STAFF WHERE  STAFF.STAFF_ID = :STAFFID  AND    STAFF_ID IN (SELECT STAFF_ID FROM STAFF_ACCESSIBLE_CASELOADS WHERE CASELOAD_ID = :CASELOADID) AND    STATUS = 'ACTIVE'
}


OIDSHLOG_DEFAULT_AGENCY_ {
	SELECT AGY_INTL.AGY_LOC_ID, AGY_INTL.DESCRIPTION, AGY_INTL.INTERNAL_LOCATION_ID FROM AGENCY_INTERNAL_LOCATIONS AGY_INTL WHERE AGY_INTL.ACTIVE_FLAG = 'Y' AND AGY_INTL.INTERNAL_LOCATION_TYPE = 'INST' AND AGY_INTL.PARENT_INTERNAL_LOCATION_ID IS NULL AND AGY_INTL.AGY_LOC_ID NOT IN ('TRN','OUT') AND AGY_INTL.AGY_LOC_ID IN (SELECT AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS WHERE CASELOAD_ID = :CASELOADID)
}
OIDSHLOG_PRE_INSERT_LOG_SEQ {
	SELECT coalesce (MAX(SHIFT_LOG_SEQ),0) + 1  FROM AGENCY_SHIFT_LOGS
}
OIDSHLOG_SHIFT_INTERNAL_LOCATION_ID {
select INTERNAL_LOCATION_ID from AGENCY_INTERNAL_LOCATIONS where INTERNAL_LOCATION_ID = :internalLocationCode::BIGINT and AGY_LOC_ID = :agyLocId limit 1
}
OIDSHLOG_SHIFT_LOG_WITHOUT_LOCK_SEQ {
SELECT  nextval('AGENCY_SHIFT_LOG_ID') next_seq from dual
}
OIDSHLOG_AGYSHIL_UPDATE_OBSERVATION_DETAILS_AGENCY_SHIFT_LOGS {
	UPDATE AGENCY_SHIFT_LOGS set LOG_DATE=:logDate, LOG_TIME=:logTime, STAFF_ID=:staffId, AGY_ACTIVITY_CODE=:agyActivityCode, LOCK_FLAG=:lockFlag, INTERNAL_LOCATION_ID=:internalLocationId where SHIFT_LOG_SEQ  = :shiftLogSeq 
}
CHECK_BOX_HIDE_DATA {
SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_CODE = 'SHLOG_LOCK'
}
CHECK_BOX_SHLOG_ROLE_DATA {
SELECT COUNT(*) FROM STAFF_MEMBER_ROLES WHERE ROLE_CODE='SHLOG_ROLE' AND STAFF_ID IN (SELECT STAFF_ID FROM STAFF_MEMBERS WHERE USER_ID=:USER_ID)
}
OIDSHLOG_FIND_AGENCYLIST_POSTQUERY {
 	SELECT agy_intl.agy_loc_id FROM agency_locations al, agency_internal_locations agy_intl WHERE al.agy_loc_id = agy_intl.agy_loc_id AND agy_intl.internal_location_id = :internalLocationId AND al.agency_location_type = 'INST'
}
OIDSHLOG_FIND_GETLOCATIONSLIST_POSTQUERY {
select to_char(C.INTERNAL_LOCATION_ID) as CODE,
    C.INTERNAL_LOCATION_ID,
	C.INTERNAL_LOCATION_CODE,
	C.DESCRIPTION from AGENCY_INTERNAL_LOCATIONS C 
}
OIDSHLOG_FIND_RELATED_OFFENDERS_QUERY {
select o.last_name || ' ' || o.first_name as offenderFullName,
(select description  from living_units lu where living_unit_id =ob.living_unit_id) as living_unit_description,
o.offender_id_display ,
ob.living_unit_id ,
ob.offender_book_id 
from offender_bookings ob, offenders o  where ob.living_unit_id in ( with recursive cte as (
	select
		lu1.living_unit_id,lu1.parent_living_unit_id
	from
		living_units as lu1
	where
		lu1.living_unit_id = :internalLocationId 
union
	select
		lu2.living_unit_id,lu2.parent_living_unit_id
	from
		living_units lu2
	join cte on
		cte.living_unit_id = lu2.parent_living_unit_id
    )
	select
		cte.living_unit_id 
	from
		cte) and ob.active_flag  = 'Y' and o.offender_id =ob.offender_id 

}

OIDSHLOG_INSERT_OFFENDER_SHIFT_LOGS {
insert into offenders_shift_log( SHIFT_LOG_SEQ , offender_book_id , reason , CREATE_DATETIME , CREATE_USER_ID )
values(:shiftLogSeq,:offenderBookId,:reason, CURRENT_TIMESTAMP , :createUserId )
}
OIDSHLOG_FIND_OFFENDER_SHIFT_LOGS{
select  o.last_name || ', ' ||o.first_name     as offenderFullName,
(select description  from living_units lu where living_unit_id =off_bkg.living_unit_id) as living_unit_description,
o.offender_id_display ,off_bkg.living_unit_id,osl.reason,osl.offender_book_id ,osl.shift_log_seq 
from offenders_shift_log osl,offender_bookings off_bkg,offenders o  where
osl.offender_book_id = off_bkg.offender_book_id and o.offender_id =off_bkg.offender_id and osl.SHIFT_LOG_SEQ = :shiftLogSeq
}

OIDSHLOG_UPDATE_OFFENDER_SHIFT_LOGS {
UPDATE offenders_shift_log set reason=:reason,MODIFY_DATETIME=CURRENT_TIMESTAMP, MODIFY_USER_ID=:modifyUserId where SHIFT_LOG_SEQ=:shiftLogSeq and offender_book_id=:offenderBookId
}



