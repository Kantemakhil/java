
OIDMPCON_FIND_RGCONTAINERCODE {
 	SELECT REF_CODE.DESCRIPTION  DSP_DESCRIPTION , REF_CODE.CODE  CONTAINER_CODE , REF_CODE.LIST_SEQ  DSP_LIST_SEQ FROM   REFERENCE_CODES REF_CODE WHERE   (DOMAIN='PPTY_CNTNR'  AND ((ACTIVE_FLAG='Y' AND EXPIRED_DATE IS NULL )   OR  ('' = 'QUERY' ) ) ) ORDER BY  REF_CODE.LIST_SEQ        ,REF_CODE.DESCRIPTION
}

OIDMPCON_FIND_RGLOCATIONALL {
 		SELECT C.DESCRIPTION ,        C.INTERNAL_LOCATION_CODE code ,        C.PARENT_INTERNAL_LOCATION_ID ,        C.INTERNAL_LOCATION_ID, A.LIST_SEQ, C.ACTIVE_FLAG,
(SELECT count(1)                      FROM INT_LOC_USAGE_LOCATIONS                    
 WHERE PARENT_USAGE_LOCATION_ID = A.USAGE_LOCATION_ID ) as usage_loc,
A.CAPACITY, (SELECT COUNT (* )  
                        FROM OFFENDER_PPTY_CONTAINERS                       
  WHERE INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID ) as containers
FROM INT_LOC_USAGE_LOCATIONS A ,        INTERNAL_LOCATION_USAGES B ,        AGENCY_INTERNAL_LOCATIONS C  
WHERE A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID    AND B.INTERNAL_LOCATION_USAGE = 'PROP'   
 AND B.AGY_LOC_ID IN 
(SELECT CAL.AGY_LOC_ID                           FROM CASELOAD_AGENCY_LOCATIONS CAL                          WHERE CAL.CASELOAD_ID = :CASELOADID                        
 AND CAL.AGY_LOC_ID NOT IN ( 'OUT' , 'TRN'  ) )     AND A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID    AND ((C.ACTIVE_FLAG = 'Y'    AND C.DEACTIVATE_DATE IS NULL )      

 OR ('' = 'ENTER-QUERY' ) )   ORDER BY  A.LIST_SEQ  , C.AGY_LOC_ID , C.DESCRIPTION
}

OIDMPCON_FIND_RGLOCATION_BASED_ON_CASELOAD {
 		SELECT C.DESCRIPTION ,        C.INTERNAL_LOCATION_CODE  ,        C.PARENT_INTERNAL_LOCATION_ID  ,C.INTERNAL_LOCATION_ID,         to_char(C.INTERNAL_LOCATION_ID)  code, A.LIST_SEQ, C.ACTIVE_FLAG,
(SELECT count(1)                      FROM INT_LOC_USAGE_LOCATIONS                    
 WHERE PARENT_USAGE_LOCATION_ID = A.USAGE_LOCATION_ID ) as usage_loc,
A.CAPACITY, (SELECT COUNT (* )  
                        FROM OFFENDER_PPTY_CONTAINERS                       
  WHERE INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID ) as containers
FROM INT_LOC_USAGE_LOCATIONS A ,        INTERNAL_LOCATION_USAGES B ,        AGENCY_INTERNAL_LOCATIONS C  
WHERE A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID    AND B.INTERNAL_LOCATION_USAGE = 'PROP'   
 AND B.AGY_LOC_ID IN 
(SELECT CAL.AGY_LOC_ID                           FROM CASELOAD_AGENCY_LOCATIONS CAL                          WHERE CAL.CASELOAD_ID = :CASELOADID                        
 AND CAL.AGY_LOC_ID NOT IN ( 'OUT' , 'TRN'  ) )     AND A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID    AND ((C.ACTIVE_FLAG = 'Y'    AND C.DEACTIVATE_DATE IS NULL )      

 OR ('' = 'ENTER-QUERY' ) )   ORDER BY  A.LIST_SEQ  , C.AGY_LOC_ID , C.DESCRIPTION
}

OIDMPCON_FIND_RGSTORELOCATION {
-- 	SELECT C.DESCRIPTION ,        C.INTERNAL_LOCATION_CODE CODE ,        C.PARENT_INTERNAL_LOCATION_ID ,        C.INTERNAL_LOCATION_ID          FROM INT_LOC_USAGE_LOCATIONS A ,        INTERNAL_LOCATION_USAGES B ,        AGENCY_INTERNAL_LOCATIONS C  WHERE A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID    AND B.INTERNAL_LOCATION_USAGE    = 'PROP'    AND C.INTERNAL_LOCATION_CODE     <> 'TR'    AND B.AGY_LOC_ID = :AGYLOCID    AND A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID    AND (C.ACTIVE_FLAG = 'Y'    AND C.DEACTIVATE_DATE IS NULL )    AND NOT EXISTS (SELECT 1                      FROM INT_LOC_USAGE_LOCATIONS                     WHERE PARENT_USAGE_LOCATION_ID = A.USAGE_LOCATION_ID )    AND A.CAPACITY > (SELECT COUNT (* )                        FROM OFFENDER_PPTY_CONTAINERS                       WHERE INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID ) ORDER BY  A.LIST_SEQ  ,C.DESCRIPTION
	SELECT C.DESCRIPTION ,        C.INTERNAL_LOCATION_CODE CODE ,        C.PARENT_INTERNAL_LOCATION_ID ,   A.LIST_SEQ,     C.INTERNAL_LOCATION_ID,(SELECT count(*)             
      FROM INT_LOC_USAGE_LOCATIONS 
                    WHERE PARENT_USAGE_LOCATION_ID = A.USAGE_LOCATION_ID ) as usage_loc ,a.CAPACITY  ,(SELECT COUNT (* )
                        FROM OFFENDER_PPTY_CONTAINERS                       WHERE INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID ) as containers     FROM INT_LOC_USAGE_LOCATIONS A ,  
      INTERNAL_LOCATION_USAGES B ,        AGENCY_INTERNAL_LOCATIONS C  WHERE A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID    AND B.INTERNAL_LOCATION_USAGE    = 'PROP'
  AND  B.AGY_LOC_ID = :AGYLOCID  AND A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID    AND (C.ACTIVE_FLAG = 'Y'    AND C.DEACTIVATE_DATE IS NULL )
     ORDER BY  A.LIST_SEQ
}

OIDMPCON_FIND_RGDESCRIPTION {
-- 	SELECT C.DESCRIPTION ,        C.INTERNAL_LOCATION_CODE CODE,        C.PARENT_INTERNAL_LOCATION_ID ,        C.INTERNAL_LOCATION_ID          FROM INT_LOC_USAGE_LOCATIONS A ,        INTERNAL_LOCATION_USAGES B ,        AGENCY_INTERNAL_LOCATIONS C  WHERE A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID    AND B.INTERNAL_LOCATION_USAGE = 'PROP'    AND C.INTERNAL_LOCATION_CODE <> 'TR'    AND B.AGY_LOC_ID IN (SELECT CAL.AGY_LOC_ID    FROM CASELOAD_AGENCY_LOCATIONS CAL   WHERE CAL.CASELOAD_ID = :CASELOADID                            AND CAL.AGY_LOC_ID NOT IN ( 'OUT' , 'TRN'  ) )     AND A.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID    AND ((C.ACTIVE_FLAG = 'Y'    AND C.DEACTIVATE_DATE IS NULL )        OR ('' = 'ENTER-QUERY' ) )    AND NOT EXISTS (SELECT 1                      FROM INT_LOC_USAGE_LOCATIONS                     WHERE PARENT_USAGE_LOCATION_ID = A.USAGE_LOCATION_ID )    AND A.CAPACITY > (SELECT COUNT (* )                          FROM OFFENDER_PPTY_CONTAINERS                         WHERE INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID ) ORDER BY  C.AGY_LOC_ID ,A.LIST_SEQ  ,C.DESCRIPTION

	SELECT c.description,       c.internal_location_code CODE,       c.parent_internal_location_id,  a.list_seq, c.active_flag,    c.internal_location_id, (SELECT count(*)                    FROM INT_LOC_USAGE_LOCATIONS    
                 WHERE PARENT_USAGE_LOCATION_ID = A.USAGE_LOCATION_ID )  as usage_loc,
A.CAPACITY, (SELECT COUNT (* )  
                        FROM OFFENDER_PPTY_CONTAINERS                       
  WHERE INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID ) as containers
         FROM int_loc_usage_locations a,  
     internal_location_usages b,       agency_internal_locations c WHERE a.internal_location_usage_id = b.internal_location_usage_id  
 AND b.internal_location_usage = 'PROP'  AND b.agy_loc_id IN (SELECT cal.agy_loc_id           
               FROM caseload_agency_locations cal                         WHERE cal.caseload_id = :CASELOADID             
             AND cal.agy_loc_id NOT IN ( 'OUT', 'TRN' ))    AND a.internal_location_id = c.internal_location_id   AND ((c.active_flag = 'Y'  
 AND c.deactivate_date IS NULL)       OR ('' = 'ENTER-QUERY'))  ORDER BY a.list_seq, c.agy_loc_id ,c.description

}

OIDMPCON_OFFCON_FIND_OFFENDER_PPTY_CONTAINERS {
 	SELECT off.PROPERTY_ONLY_FLAG ,off.PROPERTY_CONTAINER_ID ,off.OFFENDER_BOOK_ID ,off.AGY_LOC_ID,ref.description CONTDES
    ,off.ACTIVE_FLAG ,off.PROPOSED_DISPOSAL_DATE ,off.COMMENT_TEXT ,off.INTERNAL_LOCATION_ID 
    ,off.CONTAINER_CODE ,off.EXPIRY_DATE ,off.SEAL_MARK ,off.TRN_FROM_AGY_LOC_ID ,off.TRN_TO_AGY_LOC_ID 
    ,off.CREATE_DATETIME ,off.CREATE_USER_ID ,off.MODIFY_DATETIME ,off.MODIFY_USER_ID ,off.PROPERTY_STORAGE_ID 
    ,off.DISPOSED_TO ,off.DISPOSED_TO_NAME ,off.SEAL_FLAG,ag.DESCRIPTION LOCDES ,ag.internal_location_code  FROM OFFENDER_PPTY_CONTAINERS off,agency_internal_locations ag, reference_codes ref
    WHERE  ref.code=off.CONTAINER_CODE and ref.domain = 'PPTY_CNTNR' and  off.OFFENDER_BOOK_ID = :offenderBookId and off.AGY_LOC_ID NOT IN ('OUT')  
    and off.INTERNAL_LOCATION_ID=ag.INTERNAL_LOCATION_ID
    AND off.AGY_LOC_ID in( SELECT AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS 
    WHERE CASELOAD_ID = :agyLocId)   ORDER BY off.PROPERTY_CONTAINER_ID DESC 
 

}
OIDMPCON_OFFCON_INSERT_OFFENDER_PPTY_CONTAINERS {
--	INSERT INTO OFFENDER_PPTY_CONTAINERS(PROPERTY_ONLY_FLAG ,PROPERTY_CONTAINER_ID ,OFFENDER_BOOK_ID ,AGY_LOC_ID ,ACTIVE_FLAG ,PROPOSED_DISPOSAL_DATE ,COMMENT_TEXT ,INTERNAL_LOCATION_ID ,CONTAINER_CODE ,EXPIRY_DATE ,SEAL_MARK ,TRN_FROM_AGY_LOC_ID ,TRN_TO_AGY_LOC_ID ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,PROPERTY_STORAGE_ID ,DISPOSED_TO ,DISPOSED_TO_NAME ,SEAL_FLAG ) VALUES(:propertyOnlyFlag ,PROPERTY_CONTAINER_ID.nextval ,:offenderBookId ,:agyLocId ,:activeFlag ,:proposedDisposalDate ,:commentText ,:internalLocationId ,:containerCode ,:expiryDate ,:sealMark ,:trnFromAgyLocId ,:trnToAgyLocId ,:createDateTime ,:createUserId ,:modifyDateTime ,:modifyUserId ,:propertyStorageId ,:disposedTo ,:disposedToName ,:sealFlag )
insert into OFFENDER_PPTY_CONTAINERS(PROPERTY_ONLY_FLAG , PROPERTY_CONTAINER_ID , OFFENDER_BOOK_ID , AGY_LOC_ID , ACTIVE_FLAG , PROPOSED_DISPOSAL_DATE , COMMENT_TEXT , INTERNAL_LOCATION_ID , CONTAINER_CODE , EXPIRY_DATE , SEAL_MARK , TRN_FROM_AGY_LOC_ID , TRN_TO_AGY_LOC_ID , CREATE_DATETIME , CREATE_USER_ID , MODIFY_DATETIME , PROPERTY_STORAGE_ID , DISPOSED_TO , DISPOSED_TO_NAME , SEAL_FLAG ) values(:propertyOnlyFlag , :propertyContainerId , :offenderBookId , :agyLocId , :activeFlag , :proposedDisposalDate , :commentText , :internalLocationId , :containerCode , :expiryDate , :sealMark , :trnFromAgyLocId , :trnToAgyLocId , current_timestamp , :createUserId , null , :propertyStorageId , :disposedTo , :disposedToName , :sealFlag )
}
GET_PROPERTY_CONTAINER_ID{
select nextval('PROPERTY_CONTAINER_ID')
}

OIDMPCON_OFFCON_UPDATE_OFFENDER_PPTY_CONTAINERS {
--	UPDATE OFFENDER_PPTY_CONTAINERS set PROPERTY_ONLY_FLAG  = :propertyOnlyFlag ,PROPERTY_CONTAINER_ID  = :propertyContainerId ,OFFENDER_BOOK_ID  = :offenderBookId ,AGY_LOC_ID  = :agyLocId ,ACTIVE_FLAG  = :activeFlag ,PROPOSED_DISPOSAL_DATE  = :proposedDisposalDate ,COMMENT_TEXT  = :commentText ,INTERNAL_LOCATION_ID  = :internalLocationId ,CONTAINER_CODE  = :containerCode ,EXPIRY_DATE  = :expiryDate ,SEAL_MARK  = :sealMark ,TRN_FROM_AGY_LOC_ID  = :trnFromAgyLocId ,TRN_TO_AGY_LOC_ID  = :trnToAgyLocId ,CREATE_DATETIME  = :createDateTime ,CREATE_USER_ID  = :createUserId ,MODIFY_DATETIME  = :modifyDateTime ,MODIFY_USER_ID  = :modifyUserId ,PROPERTY_STORAGE_ID  = :propertyStorageId ,DISPOSED_TO  = :disposedTo ,DISPOSED_TO_NAME  = :disposedToName ,SEAL_FLAG  = :sealFlag  where PROPERTY_CONTAINER_ID = :propertyContainerId 
update OFFENDER_PPTY_CONTAINERS set PROPERTY_ONLY_FLAG = :propertyOnlyFlag , PROPERTY_CONTAINER_ID = :propertyContainerId , OFFENDER_BOOK_ID = :offenderBookId , AGY_LOC_ID = :agyLocId , ACTIVE_FLAG = :activeFlag , PROPOSED_DISPOSAL_DATE = :proposedDisposalDate , COMMENT_TEXT = :commentText , INTERNAL_LOCATION_ID = :internalLocationId , CONTAINER_CODE = :containerCode , EXPIRY_DATE = :expiryDate , SEAL_MARK = :sealMark , TRN_FROM_AGY_LOC_ID = :trnFromAgyLocId , TRN_TO_AGY_LOC_ID = :trnToAgyLocId , MODIFY_DATETIME = current_timestamp , MODIFY_USER_ID = :modifyUserId , PROPERTY_STORAGE_ID = :propertyStorageId , DISPOSED_TO = :disposedTo , DISPOSED_TO_NAME = :disposedToName , SEAL_FLAG = :sealFlag where PROPERTY_CONTAINER_ID = :propertyContainerId
}
OIDMPCON_OFFCON_UPDATE_SEAL_MARK_FLAG{
--UPDATE OFFENDER_PPTY_CONTAINERS set SEAL_MARK  = :sealMark where PROPERTY_CONTAINER_ID = :propertyContainerId AND OFFENDER_BOOK_ID  = :offenderBookId
update OFFENDER_PPTY_CONTAINERS set SEAL_MARK = :sealMark, MODIFY_DATETIME = current_timestamp , MODIFY_USER_ID = :modifyUserId where PROPERTY_CONTAINER_ID = :propertyContainerId and OFFENDER_BOOK_ID = :offenderBookId
}

OIDMPCON_V_PHEAD_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_PPTY_CONTAINERS O WHERE O.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OIDMPCON_OFF_CON_WHENNEWRECORDINSTANCE_ {
	SELECT COUNT(0) FROM OFFENDER_PPTY_ITEMS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND PROPERTY_CONTAINER_ID = :PROPERTYCONTAINERID
}

OIDMPCON_CGFKCHK_OFF_CON_OFF_CON_PPTY {
	SELECT A.DESCRIPTION ,A.INTERNAL_LOCATION_CODE ,A.PARENT_INTERNAL_LOCATION_ID FROM   AGENCY_INTERNAL_LOCATIONS A WHERE  A.INTERNAL_LOCATION_ID = :INTERNALLOCATIONID
}

OIDMPCON_GET_INTERNAL_LOCATION_ID {
	SELECT A.DESCRIPTION ,A.INTERNAL_LOCATION_CODE ,A.PARENT_INTERNAL_LOCATION_ID, A.INTERNAL_LOCATION_ID FROM   AGENCY_INTERNAL_LOCATIONS A WHERE  A.INTERNAL_LOCATION_CODE = :INTERNALLOCATIONCODE AND A.AGY_LOC_ID =:agyLocId
}

OIDMPCON_DEFAULT_PROP_LOCATION_ {
	SELECT C.INTERNAL_LOCATION_ID,C.DESCRIPTION FROM INTERNAL_LOCATION_USAGES ILS, INT_LOC_USAGE_LOCATIONS ILUS, (SELECT INTERNAL_LOCATION_CODE, DESCRIPTION, USER_DESC, INTERNAL_LOCATION_TYPE, INTERNAL_LOCATION_ID FROM AGENCY_INTERNAL_LOCATIONS WHERE INTERNAL_LOCATION_CODE = 'TR' ) C WHERE ILS.INTERNAL_LOCATION_USAGE_ID = ILUS.INTERNAL_LOCATION_USAGE_ID AND ILUS.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID AND ILUS.PARENT_USAGE_LOCATION_ID IS NULL AND ILS.AGY_LOC_ID = LV_AGY_LOC_ID AND ILS.INTERNAL_LOCATION_USAGE = 'PROP'
}

OIDMPCON_PROPERTY_CONTAINER_ID_NXT {
--SELECT nvl(max(PROPERTY_CONTAINER_ID),0) + 1  FROM  OFFENDER_PPTY_CONTAINERS
SELECT coalesce (max(PROPERTY_CONTAINER_ID),0) + 1  FROM  OFFENDER_PPTY_CONTAINERS
}

OIDMPCON_TYPE_LIST{
SELECT REF_CODE.DESCRIPTION  DSP_DESCRIPTION FROM   REFERENCE_CODES REF_CODE WHERE   (DOMAIN='PPTY_CNTNR'  AND ((ACTIVE_FLAG='Y' AND EXPIRED_DATE IS NULL )   OR  ('' = 'QUERY' ) ) ) ORDER BY  REF_CODE.LIST_SEQ        ,REF_CODE.DESCRIPTION
}

OIDMPCON_CHECK_PPTY_ITEMS{
 SELECT 'Y' FROM offender_ppty_items
      WHERE STATUS_CODE = 'STORED' 
      AND PROPERTY_CONTAINER_ID = :PROPERTYCONTAINERID
      }
      
 OIDMPCON_CHECK_STORAGE_CAPACITY{
 SELECT 1
      FROM DUAL
     WHERE EXISTS
          (SELECT A.INTERNAL_LOCATION_ID
             FROM INT_LOC_USAGE_LOCATIONS A,
                  INTERNAL_LOCATION_USAGES B
            WHERE A.INTERNAL_LOCATION_ID = :PROPERTYSTORAGEID::numeric 
              AND A.INTERNAL_LOCATION_USAGE_ID = B.INTERNAL_LOCATION_USAGE_ID
              AND B.INTERNAL_LOCATION_USAGE  ='PROP'
              AND A.CAPACITY >
                  (SELECT COUNT(*)
                     FROM OFFENDER_PPTY_CONTAINERS C
                     WHERE C.INTERNAL_LOCATION_ID = A.INTERNAL_LOCATION_ID))
      }
 OIDMPCON_CHECK_CONTAINER_EMPTY{
 			SELECT 1 FROM DUAL WHERE EXISTS (SELECT 1 FROM OFFENDER_PPTY_ITEMS WHERE PROPERTY_CONTAINER_ID = :PROPERTYCONTAINERID)
      }
 OIDMPCON_GET_SEAL_MARK_VALUE{
 		SELECT SEAL_MARK FROM OFFENDER_PPTY_CONTAINERS WHERE PROPERTY_CONTAINER_ID = :PROPERTYCONTAINERID
   }
    OIDMPCON_GET_LOCATION_VALUE{
 		 SELECT C.INTERNAL_LOCATION_ID,C.DESCRIPTION,C.INTERNAL_LOCATION_CODE
      FROM INTERNAL_LOCATION_USAGES ILS, 
           INT_LOC_USAGE_LOCATIONS ILUS, 
           (SELECT INTERNAL_LOCATION_CODE,
                   DESCRIPTION,
                   USER_DESC,
                   INTERNAL_LOCATION_TYPE,
                   INTERNAL_LOCATION_ID                
              FROM AGENCY_INTERNAL_LOCATIONS
             WHERE INTERNAL_LOCATION_CODE = 'TR' ) C
     WHERE ILS.INTERNAL_LOCATION_USAGE_ID = ILUS.INTERNAL_LOCATION_USAGE_ID
       AND ILUS.INTERNAL_LOCATION_ID = C.INTERNAL_LOCATION_ID
       AND ILUS.PARENT_USAGE_LOCATION_ID IS NULL
       AND ILS.AGY_LOC_ID = :AGYLOCID
       AND ILS.INTERNAL_LOCATION_USAGE = 'PROP'
   }
OIDMPCON_LV_GET_AGY_LOC {
				SELECT ILU.AGY_LOC_ID FROM INTERNAL_LOCATION_USAGES ILU, 
		       INT_LOC_USAGE_LOCATIONS ILUL
		 	   WHERE ILU.INTERNAL_LOCATION_USAGE_ID = ILUL.INTERNAL_LOCATION_USAGE_ID
               AND ILUL.INTERNAL_LOCATION_ID  = :INTERNAL_LOCATION_ID::Bigint
}
MAX_IMAGE_ID {
SELECT MAX(IMAGE_ID) FROM IMAGES
}
INSERT_IMAGE{
INSERT INTO images VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?)
}
IS_IMAGE_EXISTS{
SELECT IMAGE_ID FROM IMAGES WHERE IMAGE_OBJECT_ID=? AND IMAGE_OBJECT_SEQ=? AND IMAGE_OBJECT_TYPE = 'PPTY_CONT'
}
UPDATE_IMAGE{
UPDATE IMAGES SET IMAGE_THUMBNAIL=? where IMAGE_ID=?
}
UPDATE_CONATINER_LOCATION{ 
update OFFENDER_PPTY_CONTAINERS set  INTERNAL_LOCATION_ID = :internalLocationId , MODIFY_DATETIME = current_timestamp , MODIFY_USER_ID = :modifyUserId  where PROPERTY_CONTAINER_ID = :propertyContainerId
}

}