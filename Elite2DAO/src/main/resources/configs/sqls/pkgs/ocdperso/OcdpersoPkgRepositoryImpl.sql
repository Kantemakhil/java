GET_FUTURE_VISITS{
 SELECT OFFENDER_VISIT_ID FROM OFFENDER_VISITS WHERE OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID AND 
 OFFENDER_VISIT_ID IN (SELECT OFFENDER_VISIT_ID FROM OFFENDER_VISIT_VISITORS WHERE PERSON_ID = :P_PERSON_ID)
 AND END_TIME >= current_timestamp AND VISIT_STATUS = 'SCH'
 }    
 
GET_COUNT{ 
 SELECT COUNT (*) FROM OFFENDER_VISIT_VISITORS  WHERE OFFENDER_VISIT_ID = :P_VISIT_ID AND PERSON_ID IS NOT NULL
} 
CANCEL_FUTURE_VISIT_UPDATE_ONE{
update OFFENDER_VISIT_VISITORS set EVENT_OUTCOME = 'ABS', MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where OFFENDER_VISIT_ID = :OFFENDER_VISIT_ID and PERSON_ID = :P_PERSON_ID
}  

CANCEL_FUTURE_VISIT_UPDATE_SECOND{
 update OFFENDER_VISITS set VISIT_STATUS = 'CANC', MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where OFFENDER_VISIT_ID = :OFFENDER_VISIT_ID
}     

CANCEL_FUTURE_VISIT_UPDATE_THIRD{
 update OFFENDER_VISIT_VISITORS set EVENT_STATUS = 'CANC', EVENT_OUTCOME = 'ABS', OUTCOME_REASON_CODE = 'VNLA', MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where OFFENDER_VISIT_ID = :OFFENDER_VISIT_ID
 }
 
 GET_NAMES_CUR{
SELECT last_name, first_name, middle_name FROM persons WHERE person_id = :p_person_id
}
GET_NEW_PERSON_ID_CUR{
   select nextval('ADDRESS_ID') 
}
 
 INSERT_OPERATION_COPY_OFF_ADDR{
 insert into ADDRESSES ( ADDRESS_ID , OWNER_CLASS , OWNER_ID , OWNER_SEQ , OWNER_CODE , ADDRESS_TYPE , SUITE_NUMBER , STREET_NUMBER , STREET , STREET_DIRECTION , CITY_CODE , ZIP_POSTAL_CODE , COUNTRY_CODE , VALIDATED_PAF_FLAG , PRIMARY_FLAG , MAIL_FLAG , NO_FIXED_ADDRESS_FLAG , SERVICES_FLAG , SPECIAL_NEEDS_CODE , CONTACT_PERSON_NAME , BUSINESS_HOUR , START_DATE , END_DATE , CITY_NAME , PROV_STATE_CODE, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME,ADDRESS_LINE1,IS_ADDRESS_VALID) select :LV_ADDRESS_ID , 'PER' , :P_PERSON_ID , OWNER_SEQ , OWNER_CODE , ADDRESS_TYPE , SUITE_NUMBER , STREET_NUMBER , STREET , STREET_DIRECTION , CITY_CODE , ZIP_POSTAL_CODE , COUNTRY_CODE , VALIDATED_PAF_FLAG , PRIMARY_FLAG ,MAIL_FLAG, NO_FIXED_ADDRESS_FLAG , SERVICES_FLAG , SPECIAL_NEEDS_CODE , CONTACT_PERSON_NAME , BUSINESS_HOUR , START_DATE , END_DATE , CITY_NAME , PROV_STATE_CODE, :createUserId, CURRENT_TIMESTAMP , NULL ,ADDRESS_LINE1,IS_ADDRESS_VALID from ADDRESSES where OWNER_CLASS = 'OFF' and OWNER_ID = :P_ROOT_OFF_ID and PRIMARY_FLAG = 'Y'
 --insert into ADDRESSES ( ADDRESS_ID , OWNER_CLASS , OWNER_ID , OWNER_SEQ , OWNER_CODE , ADDRESS_TYPE , SUITE_NUMBER , STREET_NUMBER , STREET , STREET_DIRECTION , CITY_CODE , ZIP_POSTAL_CODE , COUNTRY_CODE , VALIDATED_PAF_FLAG , PRIMARY_FLAG , MAIL_FLAG , NO_FIXED_ADDRESS_FLAG , SERVICES_FLAG , SPECIAL_NEEDS_CODE , CONTACT_PERSON_NAME , BUSINESS_HOUR , START_DATE , END_DATE , CITY_NAME , PROV_STATE_CODE, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME) select :LV_ADDRESS_ID , 'PER' , :P_PERSON_ID , OWNER_SEQ , OWNER_CODE , ADDRESS_TYPE , SUITE_NUMBER , STREET_NUMBER , STREET , STREET_DIRECTION , CITY_CODE , ZIP_POSTAL_CODE , COUNTRY_CODE , VALIDATED_PAF_FLAG , 'N' , 'N' , NO_FIXED_ADDRESS_FLAG , SERVICES_FLAG , SPECIAL_NEEDS_CODE , CONTACT_PERSON_NAME , BUSINESS_HOUR , START_DATE , END_DATE , CITY_NAME , PROV_STATE_CODE, :createUserId, CURRENT_TIMESTAMP , NULL from ADDRESSES where OWNER_CLASS = 'OFF' and OWNER_ID = :P_ROOT_OFF_ID and PRIMARY_FLAG = 'Y' 
 }
 
 GET_ADDRESS_T1_OBJECT{
 select OWNER_SEQ , OWNER_CODE from ADDRESSES where OWNER_CLASS = 'OFF' and OWNER_ID = :P_ROOT_OFF_ID and PRIMARY_FLAG = 'Y'
 }
 
 GET_ADDRESS_T3_OBJECT{
 select * from ADDRESSES where address_id = :ADDRESS_ID
 }