
OIUIMAGE_FIND_RGREPORT {
 	SELECT DESCRIPTION ,MODULE_NAME FROM OMS_MODULES WHERE APPLN_CODE='IMGREP'  WHERE MODULE_TYPE = 'CARD'
}
 
OIUIMAGE_FIND_RGIMAGEVIEWTYPE {
 	SELECT DESCRIPTION , CODE , LIST_SEQ FROM REFERENCE_CODES  WHERE DOMAIN = 'IMAGE_VIEW'  
 	AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL  ORDER BY LIST_SEQ
}

OIUIMAGE_FIND_RGDUMMYIMAGEVIEWTYPE {
 	SELECT ALL REFERENCE_CODES.CODE ,  REFERENCE_CODES.DESCRIPTION , REFERENCE_CODES.LIST_SEQ FROM REFERENCE_CODES
}

OIUIMAGE_FIND_RGIMAGEPROPERTIES {
 	select
	DESCRIPTION ,
	CODE ,
	LIST_SEQ
from
	REFERENCE_CODES
where
	domain = 'IMAGE_PROP'
	and ( (ACTIVE_FLAG = 'Y'
	and EXPIRED_DATE is null )
	)
order by
	LIST_SEQ
}

OIUIMAGE_IMAGES_FIND_IMAGES {
 	SELECT IMAGE_ID ,CAPTURE_DATE ,IMAGE_OBJECT_TYPE ,IMAGE_OBJECT_ID ,IMAGE_OBJECT_SEQ ,IMAGE_VIEW_TYPE ,IMAGE_THUMBNAIL ,ACTIVE_FLAG ,ORIENTATION_TYPE ,SEAL_FLAG ,
 	CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID   FROM IMAGES  /* where  */
}
OIUIMAGE_IMAGES_INSERT_IMAGES {
	insert into IMAGES (IMAGE_ID , CAPTURE_DATE , IMAGE_OBJECT_TYPE , IMAGE_OBJECT_ID , IMAGE_OBJECT_SEQ , IMAGE_VIEW_TYPE , IMAGE_THUMBNAIL , ACTIVE_FLAG , ORIENTATION_TYPE , SEAL_FLAG , CREATE_DATETIME , CREATE_USER_ID ) 
	values(:imageId , CURRENT_TIMESTAMP, :imageObjectType, :imageObjectId , :imageObjectSeq, :imageViewType, :imageThumbnail, :activeFlag, :orientationType, :sealFlag , CURRENT_TIMESTAMP , :createUserId)
}  

OIUIMAGE_IMAGES_UPDATE_IMAGES {
	UPDATE IMAGES set ACTIVE_FLAG  = :activeFlag, MODIFY_DATETIME = CURRENT_TIMESTAMP ,MODIFY_USER_ID = :modifyUserId where IMAGE_ID  = :imageId
}   

OIUIMAGE_IMAGES_DELETE_IMAGES { 
	DELETE FROM IMAGES WHERE IMAGE_ID = :imageId
}   

OIUIMAGE_IMAGEORIGINALS_FIND_IMAGE_ORIGINALS {
 	SELECT IMAGE_ID ,IMAGE_ORIGINAL ,CREATE_USER_ID ,CREATE_DATETIME ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG ,IMAGE_FULL   FROM IMAGE_ORIGINALS   WHERE  IMAGE_ID= :imageId
}
OIUIMAGE_IMAGEORIGINALS_DELETE_IMAGE_ORIGINALS { 
	DELETE FROM IMAGE_ORIGINALS WHERE IMAGE_ID = :imageId
} 

OIUIMAGE_IMAGEORIGINALS_UPDATE_IMAGE_ORIGINALS { 
	UPDATE IMAGE_ORIGINALS SET IMAGE_ORIGINAL = :imageOriginal, IMAGE_FULL = :imageFull , MODIFY_DATETIME = CURRENT_TIMESTAMP ,MODIFY_USER_ID = :modifyUserId  WHERE IMAGE_ID = :imageId
} 

OIUIMAGE_IMAGEPROPERTIES_FIND_IMAGE_PROPERTIES {
 	SELECT IMAGE_PROPERTY_ID ,IMAGE_ID ,PROPERTY ,CREATE_USER_ID ,CREATE_DATETIME ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM IMAGE_PROPERTIES  where  IMAGE_ID=:imageId
}
OIUIMAGE_IMAGEPROPERTIES_INSERT_IMAGE_PROPERTIES {
	INSERT INTO IMAGE_PROPERTIES(IMAGE_PROPERTY_ID ,IMAGE_ID ,PROPERTY ,CREATE_USER_ID ,CREATE_DATETIME ,SEAL_FLAG ) VALUES(:imagePropertyId ,:imageId ,:property ,:createUserId ,CURRENT_TIMESTAMP  ,:sealFlag )
}

OIUIMAGE_IMAGEPROPERTIES_UPDATE_IMAGE_PROPERTIES {
	UPDATE IMAGE_PROPERTIES set PROPERTY  = :property ,MODIFY_DATETIME  = CURRENT_TIMESTAMP ,MODIFY_USER_ID  = :modifyUserId ,SEAL_FLAG  = :sealFlag
							WHERE IMAGE_PROPERTY_ID  = :imagePropertyId  AND  IMAGE_ID  = :imageId 
} 

OIUIMAGE_IMAGEPROPERTIES_DELETE_IMAGE_PROPERTIES { 
	DELETE FROM IMAGE_PROPERTIES  WHERE IMAGE_PROPERTY_ID  = :imagePropertyId  AND  IMAGE_ID  = :imageId 
} 

OIUIMAGE_SYSPFL_FIND_SYSTEM_PROFILES {
 	SELECT PROFILE_TYPE ,PROFILE_CODE ,DESCRIPTION ,PROFILE_VALUE ,PROFILE_VALUE_2 ,MODIFY_USER_ID ,OLD_TABLE_NAME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG   FROM SYSTEM_PROFILES  /* where  */
}
OIUIMAGE_STAFFMEMBERS_FIND_STAFF_MEMBERS {
 	SELECT STAFF_ID ,ASSIGNED_CASELOAD_ID ,WORKING_STOCK_LOC_ID ,WORKING_CASELOAD_ID ,USER_ID ,BADGE_ID ,LAST_NAME ,FIRST_NAME ,MIDDLE_NAME ,ABBREVIATION ,POSITION ,BIRTHDATE ,TERMINATION_DATE ,UPDATE_ALLOWED_FLAG ,DEFAULT_PRINTER_ID ,SUSPENDED_FLAG ,SUPERVISOR_STAFF_ID ,COMM_RECEIPT_PRINTER_ID ,PERSONNEL_TYPE ,AS_OF_DATE ,EMERGENCY_CONTACT ,ROLE ,SEX_CODE ,STATUS ,SUSPENSION_DATE ,SUSPENSION_REASON ,FORCE_PASSWORD_CHANGE_FLAG ,LAST_PASSWORD_CHANGE_DATE ,LICENSE_CODE ,LICENSE_EXPIRY_DATE ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,TITLE ,NAME_SEQUENCE ,QUEUE_CLUSTER_ID ,FIRST_LOGON_FLAG ,SUFFIX ,SEAL_FLAG   FROM STAFF_MEMBERS  /* where  */
}
OIUIMAGE_STAFFMEMBERS_INSERT_STAFF_MEMBERS {
	INSERT INTO STAFF_MEMBERS(STAFF_ID ,ASSIGNED_CASELOAD_ID ,WORKING_STOCK_LOC_ID ,WORKING_CASELOAD_ID ,USER_ID ,BADGE_ID ,LAST_NAME ,FIRST_NAME ,MIDDLE_NAME ,ABBREVIATION ,POSITION ,BIRTHDATE ,TERMINATION_DATE ,UPDATE_ALLOWED_FLAG ,DEFAULT_PRINTER_ID ,SUSPENDED_FLAG ,SUPERVISOR_STAFF_ID ,COMM_RECEIPT_PRINTER_ID ,PERSONNEL_TYPE ,AS_OF_DATE ,EMERGENCY_CONTACT ,ROLE ,SEX_CODE ,STATUS ,SUSPENSION_DATE ,SUSPENSION_REASON ,FORCE_PASSWORD_CHANGE_FLAG ,LAST_PASSWORD_CHANGE_DATE ,LICENSE_CODE ,LICENSE_EXPIRY_DATE ,CREATE_DATETIME ,CREATE_USER_ID  ,TITLE ,NAME_SEQUENCE ,QUEUE_CLUSTER_ID ,FIRST_LOGON_FLAG ,SUFFIX ,SEAL_FLAG ) VALUES(:staffId ,:assignedCaseloadId ,:workingStockLocId ,:workingCaseloadId ,:userId ,:badgeId ,:lastName ,:firstName ,:middleName ,:abbreviation ,:position ,:birthdate ,:terminationDate ,:updateAllowedFlag ,:defaultPrinterId ,:suspendedFlag ,:supervisorStaffId ,:commReceiptPrinterId ,:personnelType ,:asOfDate ,:emergencyContact ,:role ,:sexCode ,:status ,:suspensionDate ,:suspensionReason ,:forcePasswordChangeFlag ,:lastPasswordChangeDate ,:licenseCode ,:licenseExpiryDate ,CURRENT_TIMESTAMP ,:createUserId  ,:title ,:nameSequence ,:queueClusterId ,:firstLogonFlag ,:suffix ,:sealFlag )
} 

OIUIMAGE_STAFFMEMBERS_UPDATE_STAFF_MEMBERS {
	UPDATE STAFF_MEMBERS set STAFF_ID  = :staffId ,ASSIGNED_CASELOAD_ID  = :assignedCaseloadId ,WORKING_STOCK_LOC_ID  = :workingStockLocId ,WORKING_CASELOAD_ID  = :workingCaseloadId ,USER_ID  = :userId ,BADGE_ID  = :badgeId ,LAST_NAME  = :lastName ,FIRST_NAME  = :firstName ,MIDDLE_NAME  = :middleName ,ABBREVIATION  = :abbreviation ,POSITION  = :position ,BIRTHDATE  = :birthdate ,TERMINATION_DATE  = :terminationDate ,UPDATE_ALLOWED_FLAG  = :updateAllowedFlag ,DEFAULT_PRINTER_ID  = :defaultPrinterId ,SUSPENDED_FLAG  = :suspendedFlag ,SUPERVISOR_STAFF_ID  = :supervisorStaffId ,COMM_RECEIPT_PRINTER_ID  = :commReceiptPrinterId ,PERSONNEL_TYPE  = :personnelType ,AS_OF_DATE  = :asOfDate ,EMERGENCY_CONTACT  = :emergencyContact ,ROLE  = :role ,SEX_CODE  = :sexCode ,STATUS  = :status ,SUSPENSION_DATE  = :suspensionDate ,SUSPENSION_REASON  = :suspensionReason ,FORCE_PASSWORD_CHANGE_FLAG  = :forcePasswordChangeFlag ,LAST_PASSWORD_CHANGE_DATE  = :lastPasswordChangeDate ,LICENSE_CODE  = :licenseCode ,LICENSE_EXPIRY_DATE  = :licenseExpiryDate ,MODIFY_DATETIME  = CURRENT_TIMESTAMP ,MODIFY_USER_ID  = :modifyUserId ,TITLE  = :title ,NAME_SEQUENCE  = :nameSequence ,QUEUE_CLUSTER_ID  = :queueClusterId ,FIRST_LOGON_FLAG  = :firstLogonFlag ,SUFFIX  = :suffix ,SEAL_FLAG  = :sealFlag /* where */
} 

OIUIMAGE_STAFFMEMBERS_DELETE_STAFF_MEMBERS { 
	DELETE FROM STAFF_MEMBERS/* where */
}  

OIUIMAGE_PERSONS_FIND_PERSONS {
 	SELECT PERSON_ID ,LAST_NAME ,FIRST_NAME ,MIDDLE_NAME ,BIRTHDATE ,OCCUPATION_CODE ,CRIMINAL_HISTORY_TEXT ,NAME_TYPE ,ALIAS_PERSON_ID ,ROOT_PERSON_ID ,LANGUAGE_CODE ,COMPREHEND_ENGLISH_FLAG ,SEX ,BIRTH_PLACE ,EMPLOYER ,PROFILE_CODE ,INTERPRETER_REQUIRED ,PRIMARY_LANGUAGE_CODE ,MEMO_TEXT ,SUSPENDED_FLAG ,MARITAL_STATUS ,CITIZENSHIP ,DECEASED_DATE ,CORONER_NUMBER ,ATTENTION ,CARE_OF ,SUSPENDED_DATE ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,STAFF_FLAG ,REMITTER_FLAG ,LAST_NAME_SOUNDEX ,FIRST_NAME_KEY ,MIDDLE_NAME_KEY ,LAST_NAME_KEY ,SEAL_FLAG   FROM PERSONS  /* where  */
}

OIUIMAGE_IMAGES_POSTQUERY_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = P_DOMAIN AND CODE = :ORIENTATIONTYPE
}

OIUIMAGE_IMAGES_POSTQUERY_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'MARK_TYPE' AND CODE = :IMAGEVIEWTYPE
}

OIUIMAGE_IMAGES_KEYDELREC_ {
	SELECT COUNT(0) FROM IMAGES WHERE IMAGE_OBJECT_ID = :IMAGEOBJECTID
}

OIUIMAGE_IMAGES_WHENNEWRECORDINSTANCE_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = P_DOMAIN AND CODE = :IMAGEVIEWTYPE
}

OIUIMAGE_IMAGES_WHENNEWRECORDINSTANCE_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'BODY_PART' AND CODE = :ORIENTATIONTYPE AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL
}

OIUIMAGE_IMAGES_WHENNEWRECORDINSTANCE_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'PPTY_TYPE' AND CODE = :IMAGEVIEWTYPE
}

OIUIMAGE_IMAGES_WHENNEWRECORDINSTANCE_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES A WHERE DOMAIN = 'IMAGE_VIEW' AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL AND LIST_SEQ = (SELECT MIN(LIST_SEQ) FROM REFERENCE_CODES B WHERE B.DOMAIN = A.DOMAIN AND B.ACTIVE_FLAG = 'Y' AND B.EXPIRED_DATE IS NULL)
}

OIUIMAGE_IMAGES_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM IMAGE_ORIGINALS I WHERE I.IMAGE_ID = :IMAGEID
}

OIUIMAGE_IMAGES_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM IMAGE_PROPERTIES I WHERE I.IMAGE_ID = :IMAGEID
}

OIUIMAGE_IMAGE_PROPERTIES_POSTQUERY_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'IMAGE_PROP' AND CODE = :PROPERTY
}

OIUIMAGE_RUN_REPORT_ON_THE_WEB_ {
	SELECT LTRIM(RTRIM(DESCRIPTION)) FROM SYSTEM_PROFILES WHERE PROFILE_CODE = P_PROFILE_CODE AND PROFILE_TYPE = P_PROFILE_TYPE
}

OIUIMAGE_RUN_REPORT_ON_THE_WEB_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'ROLE_BASE'
}

OIUIMAGE_ALLOW_DELETE_ {
	select
	1
from
	STAFF_MEMBER_ROLES
where
	STAFF_MEMBER_ROLES.STAFF_ID = (
	select
		STAFF_MEMBERS.STAFF_ID
	from
		STAFF_MEMBERS
	where
		upper(STAFF_MEMBERS.USER_ID) = upper(:userName))
	and STAFF_MEMBER_ROLES.ROLE_ID::text = OMS_MISCELLANEOUS_GET_PROFILE_VALUE('CLIENT',
	'IMAGE_DELETE')
}

OIUIMAGE_READ_PROFILEREAD_PROFILE {
	SELECT PROFILE_VALUE INTO VAR.LV_INSTDIR FROM SYSTEM_PROFILES WHERE PROFILE_TYPE='CLIENT' AND PROFILE_CODE='IMG_INST_DIR'
}

OIUIMAGE_CONTROL_ONE_DEFAULT_IMAGE_ {
	SELECT 1 FROM IMAGES
	/* SAME AS THE WHERE CLAUSE OF THE BLOCK WHERE IMAGE_OBJECT_TYPE = :IMAGEOBJECTTYPE AND IMAGE_OBJECT_ID = :IMAGEOBJECTID AND IMAGE_VIEW_TYPE = :IMAGEVIEWTYPE AND (:IMAGEOBJECTTYPE IN ('OFF_BKG', 'PERSON', 'STAFF', 'OIC', 'STG') OR (:IMAGEOBJECTTYPE = 'OFF_IDM' AND IMAGE_OBJECT_SEQ = :IMAGEOBJECTSEQ))*/
}

OIUIMAGE_CONTROL_ONE_DEFAULT_IMAGE_ {
	SELECT COUNT(1) FROM IMAGES WHERE IMAGE_OBJECT_TYPE = :IMAGEOBJECTTYPE AND IMAGE_OBJECT_ID = :IMAGEOBJECTID AND IMAGE_VIEW_TYPE = :IMAGEVIEWTYPE AND (IMAGE_OBJECT_SEQ IS NULL OR IMAGE_OBJECT_SEQ = :IMAGEOBJECTSEQ) AND ACTIVE_FLAG = 'Y' AND (:IMAGEOBJECTTYPE IN ('OFF_BKG', 'PERSON', 'STAFF', 'OIC', 'STG') OR (:IMAGEOBJECTTYPE = 'OFF_IDM' AND IMAGE_OBJECT_SEQ = :IMAGEOBJECTSEQ))
}

OIUIMAGE_POPULATE_STG_GROUP_ {
	SELECT STG_DESC FROM V_STG_SET WHERE STG_ID = :STGID
}

OIUIMAGE_POPULATE_STG_GROUP_ {
	SELECT STG_DESC FROM V_STG_GANG_SET WHERE STG_ID = :STGID
}

OIUIMAGE_POPULATE_STG_GROUP_ {
	SELECT STG_DESC FROM V_STG_GROUP WHERE STG_ID = :STGID
}

OIUIMAGE_POPULATE_STG_GROUP_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_CODE = 'STG_LOV_LVL' AND   PROFILE_TYPE = 'CLIENT'
}

OIUIMAGE_DISABLE_BUTTONS_ {
	SELECT 'Y' FROM IMAGES WHERE IMAGE_ID = :IMAGEID AND IMAGE_THUMBNAIL IS NOT NULL
}

OIUIMAGE_INITIALIZE_IMAGE_RECORD_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = P_DOMAIN AND CODE = :IMAGEVIEWTYPE
}

OIUIMAGE_INITIALIZE_IMAGE_RECORD_ {
--	SELECT NEXTVAL('IMAGE_ID') FROM DUAL
	SELECT NEXTVAL('IMAGE_ID') FROM IMAGES
}

OIUIMAGE_INITIALIZE_IMAGE_RECORD_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'BODY_PART' AND CODE = :ORIENTATIONTYPE AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL
}

OIUIMAGE_INITIALIZE_IMAGE_RECORD_ {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'PPTY_TYPE' AND CODE = :IMAGEVIEWTYPE
}

OIUIMAGE_INITIALIZE_IMAGE_RECORD_ {
	SELECT CODE, DESCRIPTION FROM REFERENCE_CODES A WHERE DOMAIN = 'IMAGE_VIEW' AND ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL AND LIST_SEQ = (SELECT MIN(LIST_SEQ) FROM REFERENCE_CODES B WHERE B.DOMAIN = A.DOMAIN AND B.ACTIVE_FLAG = 'Y' AND B.EXPIRED_DATE IS NULL)
}

OIUIMAGE_RUN_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'ROLE_BASE'
}

OIUIMAGE_RUN_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'SYS' AND PROFILE_CODE = 'ROLE_PSWD'
}

OIUIMAGE_RUN_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'REPORT_ALIAS'
}

OIUIMAGE_RUN_REPORT_ {
	SELECT LTRIM(RTRIM(DESCRIPTION)) FROM SYSTEM_PROFILES WHERE PROFILE_CODE = P_PROFILE_CODE AND PROFILE_TYPE = P_PROFILE_TYPE
}
OIUIMAGE_GET_IMAGE_ID {
--SELECT NEXTVAL('IMAGE_ID') FROM DUAL
--SELECT NEXTVAL('IMAGE_ID') FROM IMAGES
SELECT NEXTVAL('IMAGE_ID') FROM DUAL
}
OIUIMAGE_UPDATE_ACTIVE_FLAG {
UPDATE IMAGES SET ACTIVE_FLAG = 'N', MODIFY_DATETIME = CURRENT_TIMESTAMP ,MODIFY_USER_ID = :modifyUserId WHERE IMAGE_ID = :imageId
} 
OIUIMAGE_GET_CODE {
SELECT CODE FROM REFERENCE_CODES WHERE DESCRIPTION=:description AND DOMAIN='PPTY_TYPE'
}
OIUIMAGE_GET_DERSCRIPTION {
SELECT DESCRIPTION FROM REFERENCE_CODES WHERE CODE=:code AND DOMAIN='PPTY_TYPE'
}
OIUIMAGE_GET_CODE_DERSCRIPTION_FROM_OIDOICUS {
SELECT DESCRIPTION, CODE, LIST_SEQ
                    FROM REFERENCE_CODES 
                    WHERE domain = 'IMAGE_OIC'
                    AND  (active_flag = 'Y' AND expired_date IS NULL)
										ORDER BY LIST_SEQ
										}
OIUIMAGE_GET_PROPERTY_DERSCRIPTION {
SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN='IMAGE_PROP' AND CODE=:code
}
OIUIMAGE_GET_IMAGE_PROPERTY_ID {
-- SELECT NEXTVAL('IMAGE_PROPERTIES_ID') FROM DUAL
 SELECT NEXTVAL('IMAGE_PROPERTIES_ID') FROM IMAGE_PROPERTIES
}
OIUIMAGE_GET_PPTYCODE {
SELECT CODE FROM REFERENCE_CODES WHERE DOMAIN='PPTY_TYPE' AND DESCRIPTION = :code
}
OIUIMAGE_ALLOW_DELETE {
    SELECT 1
        FROM STAFF_MEMBER_ROLES
       WHERE STAFF_MEMBER_ROLES.STAFF_ID =
                 (SELECT STAFF_MEMBERS.STAFF_ID
                    FROM STAFF_MEMBERS
                   WHERE STAFF_MEMBERS.USER_ID = :userName)
         AND STAFF_MEMBER_ROLES.ROLE_ID::text    = OMS_MISCELLANEOUS_GET_PROFILE_VALUE('CLIENT','IMAGE_DELETE')
 }
OIUIMAGE_CHECK_USER_ROLE {
SELECT 1
		FROM MODULE_PRIVILEGES  
		WHERE (MODULE_PRIVILEGES.MODULE_NAME = :moduleName)
		AND   (MODULE_PRIVILEGES.ACCESS_PRIVILEGE = 'A')
		AND   (MODULE_PRIVILEGES.ROLE_ID in 
      (SELECT STAFF_MEMBER_ROLES.ROLE_ID  
       FROM STAFF_MEMBER_ROLES  
       WHERE STAFF_MEMBER_ROLES.STAFF_ID = 
       		(SELECT STAFF_MEMBERS.STAFF_ID  
					 FROM STAFF_MEMBERS  
					 WHERE upper(STAFF_MEMBERS.USER_ID) = upper(:userName))))
}