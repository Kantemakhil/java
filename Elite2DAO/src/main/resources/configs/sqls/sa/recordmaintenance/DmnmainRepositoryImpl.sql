DMNMAIN_EXECUTE_QUERY {
select 
  A.DECISION_ID, A.DEFINITION_KEY, A.DEPLOYE_ID, A.DEFINITION_ID, A.DEFINITION_DESC, A.DMN_FILE, 
  A.DEF_VERSION, A.CREATE_DATETIME, A.CREATE_USER_ID, A.MODIFY_DATETIME, 
  A.MODIFY_USER_ID, A.DEPLOY_FLAG, A.HISTORY_FLAG, A.DEPLOY_DATETIME, A.DEPLOY_USER_ID,A.CATEGORY
from 
  (select 
     DEFINITION_KEY, max(def_version) max_def_version
   from DMN_PROCESS
   where
     def_version is not null 
   group by DEFINITION_KEY)B, DMN_PROCESS A
where
  A.def_version=B.max_def_version and
  A.DEFINITION_KEY=B.DEFINITION_KEY 
union all 
select 
  A.DECISION_ID, A.DEFINITION_KEY, A.DEPLOYE_ID, A.DEFINITION_ID, A.DEFINITION_DESC, A.DMN_FILE, 
  A.DEF_VERSION, A.CREATE_DATETIME, A.CREATE_USER_ID, A.MODIFY_DATETIME, 
  A.MODIFY_USER_ID, A.DEPLOY_FLAG, A.HISTORY_FLAG, A.DEPLOY_DATETIME, A.DEPLOY_USER_ID,A.CATEGORY
from DMN_PROCESS A
where
  DEFINITION_KEY is null ORDER BY DEPLOY_DATETIME desc,  MODIFY_DATETIME desc 

}

DMNMAIN_INSERT_PROCESS {
	insert
	into
	DMN_PROCESS(DECISION_ID,
	DEFINITION_DESC,
	DEPLOY_FLAG,
	HISTORY_FLAG,
	CREATE_DATETIME,
	CREATE_USER_ID,
	CATEGORY)
values(NEXTVAL('DMN_PROCESS_PROCESS_ID_SEQ'),
:definitionDesc,
'N',
'N',
CURRENT_TIMESTAMP,
:createUserId,
:category)
}

DMNMAIN_UPDATE_PROCESS {
	UPDATE DMN_PROCESS SET DMN_FILE=:dmnByte, DEPLOY_FLAG = 'Y', HISTORY_FLAG = 'N',  DEF_VERSION = :defVersion, MODIFY_DATETIME =CURRENT_TIMESTAMP, MODIFY_USER_ID = :modifyUserId where DECISION_ID=:decisionId 
}

DMNMAIN_UPDATE_PROCESS2 {
	UPDATE DMN_PROCESS SET DMN_FILE=:dmnByte, DEPLOY_FLAG = 'Y', HISTORY_FLAG = 'N', MODIFY_DATETIME =CURRENT_TIMESTAMP, MODIFY_USER_ID = :modifyUserId where DEF_VERSION = :defVersion AND DEFINITION_KEY = :definitionKey
}

DMNMAIN_INSERT_PROCESS2 {
	insert
	into
	DMN_PROCESS(DECISION_ID,
	DEFINITION_KEY,
	DEFINITION_DESC,
	DMN_FILE,
	DEF_VERSION,
	DEPLOY_FLAG,
	HISTORY_FLAG,
	CREATE_DATETIME,
	CREATE_USER_ID,
	MODIFY_DATETIME,
	MODIFY_USER_ID,
	CATEGORY)
values (NEXTVAL('DMN_PROCESS_PROCESS_ID_SEQ'),
:definitionKey,
:definitionDesc,
:dmnByte,
:defVersion,
'Y',
'Y',
CURRENT_TIMESTAMP,
:createUserId,
null,
null,
:category)
}

DMNMAIN_DELETE_PROCESS {
 	DELETE FROM TABLE   /* where  */
}

DMNMAIN_UPDATE_DEPLOYE_ID {
	UPDATE DMN_PROCESS SET DEFINITION_KEY = :definitionKey,DEFINITION_DESC=:definitionDesc, DEPLOYE_ID = :deployeId, DEFINITION_ID = :definitionId, DEPLOY_FLAG = 'N', HISTORY_FLAG = 'Y',  DEPLOY_DATETIME =CURRENT_TIMESTAMP, DEPLOY_USER_ID = :deployUserId where DECISION_ID=:decisionId 
}

DMNMAIN_PRE_INSERT {
 	SELECT DEPLOYE_ID FROM DMN_PROCESS WHERE DECISION_ID = :decisionId
}

DMNMAIN_PRE_UPDATE {
	SELECT MAX(DEF_VERSION) FROM DMN_PROCESS WHERE DEFINITION_KEY = :processKey
}

DMNMAIN_GET_DMN_PROCESS {
	SELECT * FROM DMN_PROCESS WHERE DECISION_ID = :processId
}

DMNMAIN_GET_VERSION_HISTORY {
	SELECT * FROM DMN_PROCESS WHERE DEFINITION_KEY = :processKey order by DEF_VERSION desc
}



DMNMAIN_GET_DEFINITION_ID{
	SELECT DEFINITION_ID FROM DMN_PROCESS WHERE DEF_VERSION = (SELECT MAX(DEF_VERSION) FROM DMN_PROCESS WHERE DEFINITION_KEY = :processKey) AND DEFINITION_KEY = :processKey
}

--DMNMAIN_GET_INSERT_PROCESS{
--	SELECT PROCESS FROM WORK_ITEMS WHERE ADD_TRIGGER = 'Y' AND MODULE = :moduleName
--} Not working in oracle
--
--DMNMAIN_GET_UPDATE_PROCESS{
--	SELECT PROCESS FROM WORK_ITEMS WHERE UPDATE_TRIGGER = 'Y' AND MODULE = :moduleName
--} Not working in oracle
--
--DMNMAIN_GET_DELETE_PROCESS{
--	SELECT PROCESS FROM WORK_ITEMS WHERE DELETE_TRIGGER = 'Y' AND MODULE = :moduleName
--} Not working in oracle

DMNMAIN_GET_DEFINITION_KEY{
	SELECT DEFINITION_KEY FROM DMN_PROCESS WHERE DECISION_ID = :processId
}

--DMNMAIN_GET_RELATED_DTO{
--	SELECT DTO_NAME FROM MODULE_RELATION WHERE MODULE_NAME = :moduleName
--} Not working in oracle

DEPLOYED_DMN_LIST {
select
   A.DEFINITION_KEY as code, A.DEFINITION_DESC as description
from
  (select
     DEFINITION_KEY, max(def_version) max_def_version
   from DMN_PROCESS
   where
     def_version is not null
   group by DEFINITION_KEY)B, DMN_PROCESS A
where
  A.def_version=B.max_def_version and
  A.DEFINITION_KEY=B.DEFINITION_KEY

}
DECISION_BY_DESCION_DESC { 

SELECT
    DECISION_ID, DEFINITION_KEY, DEPLOYE_ID, DEFINITION_ID, DEFINITION_DESC, DMN_FILE, 
  DEF_VERSION, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, 
  MODIFY_USER_ID, DEPLOY_FLAG, HISTORY_FLAG, DEPLOY_DATETIME, DEPLOY_USER_ID,CATEGORY
FROM
    dmn_process,
    (
        SELECT
            MAX(DECISION_ID) pid,
            DEFINITION_DESC pdesc
        FROM
            dmn_process
        WHERE
            DEFINITION_DESC = :decisionDesc
        GROUP BY
            DEFINITION_DESC
    ) bpg
WHERE
    bpg.pid = DECISION_ID




}

DMNMAIN_GET_DMN_FILE{
select DMN_FILE
from DMN_PROCESS
where
  def_version=
    (select max(def_version)
     from DMN_PROCESS where DEFINITION_KEY = :definitionKey) and
  DEFINITION_KEY = :definitionKey
}

UPDATE_DECISION_PROCESS_CATEGORY{ 
UPDATE DMN_PROCESS SET CATEGORY = :category,MODIFY_DATETIME = :modifyDatetime, MODIFY_USER_ID = :modifyUserId where DECISION_ID=:decisionId 

}