
OIDSUBLC_FIND_CGFKAGYLOCID {
select
	distinct AL.AGY_LOC_ID ,
	DESCRIPTION ,
	ACT.COUNT_TYPE_CODE HOUSINGLEV1CODE ,
	ACT.COUNT_TYPE_ID::varchar HOUSINGLEV2CODE ,
	case
		when ACT.SCHEDULED_TIME = 'NA' then null
		else ACT.SCHEDULED_TIME
	end HOUSINGLEV3CODE
from
	AGENCY_LOCATIONS AL ,
	AGENCY_COUNT_TYPES ACT
where
	AL.AGY_LOC_ID = ACT.AGY_LOC_ID
	and AL.AGY_LOC_ID in (
	select
		CAL.AGY_LOC_ID
	from
		CASELOAD_AGENCY_LOCATIONS CAL
	where
		CAL.CASELOAD_ID = :CASELOADID)
	and exists (
	select
		ARL.COUNT_TYPE_ID
	from
		AGENCY_REPORTING_LOCS ARL,
		AGENCY_LOCATION_COUNTS ALC,
		AGENCY_COUNTS AC
	where
		ALC.COUNT_TYPE_ID = ACT.COUNT_TYPE_ID
		and ACT.COUNT_TYPE_ID = AC.COUNT_TYPE_ID
		and AC.REPORTING_LOC_ID = ALC.REPORTING_LOC_ID
		and coalesce(ALC.REPORTED_COUNT::text, '') = ''
		and OUTCOME is null)
order by
	AGY_LOC_ID
}

OIDSUBLC_FIND_CGFKCOUNTTYPES {
select
	CODE ,
	DESCRIPTION
from
	REFERENCE_CODES RC ,
	AGENCY_COUNT_TYPES ACT
where
	domain = 'COUNT_TYPES'
	and RC.CODE = ACT.COUNT_TYPE_CODE
	and ACT.AGY_LOC_ID = :AGYLOCID
	and RC.ACTIVE_FLAG = 'Y'
	and ACT.ACTIVE_FLAG = 'Y'

}

OIDSUBLC_FIND_CGFKSCHTIME {
 	SELECT SCHEDULED_TIME  FROM  AGENCY_COUNT_TYPES WHERE COUNT_TYPE_CODE =:COUNTTYPE AND AGY_LOC_ID =:AGYLOCID
}

OIDSUBLC_FIND_CGFKHOUSINGLEVEL1 {
 	select
	distinct LIV_UNIT.internal_location_code code ,
	LIV_UNIT.internal_location_id living_unit_id,
	DESCRIPTION
from
	(
	select
		*
	from
		agency_internal_locations ail
	where
		ail.unit_type is not null
		and ail.unit_type::text <> ''::text) LIV_UNIT ,
	AGENCY_REPORTING_LOCS ARL
where
	ARL.COUNT_TYPE_ID = :COUNTTYPEID
	and LIV_UNIT.ACTIVE_FLAG = 'Y'
	and ARL.ACTIVE_FLAG = 'Y'
	and LIV_UNIT.internal_location_id = ARL.LOCATION1_ID
	and parent_internal_location_id is null
	and ARL.LOCATION_TYPE = 'HOUS'
	and exists (
	select
		ALC.COUNT_TYPE_ID
	from
		AGENCY_LOCATION_COUNTS ALC ,
		AGENCY_COUNTS AC ,
		TEMP_OIDCOUNT OI
	where
		ALC.REPORTING_LOC_ID = AC.REPORTING_LOC_ID
		and ALC.REPORTING_LOC_ID = OI.REPORTING_LOC_ID
		and ALC.COUNT_TYPE_ID = OI.COUNT_TYPE_ID
		and ALC.AGY_SEQ = OI.AGY_SEQ
		and ALC.COUNT_TYPE_ID = ARL.COUNT_TYPE_ID
		and ALC.AGY_SEQ = ARL.AGY_SEQ
		and OUTCOME is null )
order by
	code
}

OIDSUBLC_FIND_CGFKHOUSINGLEVEL2 {
 	SELECT DISTINCT
    liv_unit.living_unit_code    code,
    liv_unit.living_unit_id      living_unit_id,
    description
FROM
    living_units           liv_unit,
    agency_reporting_locs  arl
WHERE
        arl.count_type_id = :countTypeCodeId
    AND liv_unit.active_flag = 'Y'
    AND arl.active_flag = 'Y'
    AND parent_living_unit_id = :livingUnitId
    AND liv_unit.living_unit_id = arl.location2_id
    AND arl.location_type = 'HOUS'
    AND EXISTS (
        SELECT
            alc.count_type_id
        FROM
            agency_location_counts  alc,
            agency_counts           ac,
            temp_oidcount           oi
        WHERE
                alc.reporting_loc_id = ac.reporting_loc_id
            AND alc.reporting_loc_id = oi.reporting_loc_id
            AND alc.count_type_id = oi.count_type_id
            AND alc.agy_seq = oi.agy_seq
            AND alc.count_type_id = arl.count_type_id
            AND alc.agy_seq = arl.agy_seq
            AND outcome IS NULL
    )
ORDER BY
    code
}

OIDSUBLC_FIND_CGFKHOUSINGLEVEL3 {
 	SELECT DISTINCT
    liv_unit.living_unit_code    code,
    liv_unit.living_unit_id      living_unit_id,
    description
FROM
    living_units           liv_unit,
    agency_reporting_locs  arl
WHERE
        arl.count_type_id = :countTypeCodeId
    AND parent_living_unit_id = :livingUnitId
    AND liv_unit.living_unit_id = arl.location3_id
    AND liv_unit.active_flag = 'Y'
    AND arl.location_type = 'HOUS'
    AND arl.active_flag = 'Y'
    AND EXISTS (
        SELECT
            alc.count_type_id
        FROM
            agency_location_counts  alc,
            agency_counts           ac,
            temp_oidcount           oi
        WHERE
                alc.reporting_loc_id = ac.reporting_loc_id
            AND alc.reporting_loc_id = oi.reporting_loc_id
            AND alc.count_type_id = oi.count_type_id
            AND alc.agy_seq = oi.agy_seq
            AND alc.count_type_id = arl.count_type_id
            AND alc.agy_seq = arl.agy_seq
            AND outcome IS NULL
    )
ORDER BY
    code
}

OIDSUBLC_FIND_CGFKINITLOCCODE {
 	SELECT
    vil.internal_location_code    code,
    vil.internal_location_id      internal_location_id,
    vil.internal_location_desc    description
FROM
    v_int_loc_summaries    vil,
    agency_reporting_locs  arl
WHERE
        arl.count_type_id = :countTypeCodeId
    AND vil.active_flag = 'Y'
    AND arl.active_flag = 'Y'
    AND vil.internal_location_id = arl.location1_id
    AND arl.location_type = 'INIT'
    AND EXISTS (
        SELECT
            alc.count_type_id
        FROM
            agency_location_counts  alc,
            agency_counts           ac,
            temp_oidcount           oi
        WHERE
                alc.reporting_loc_id = ac.reporting_loc_id
            AND alc.reporting_loc_id = oi.reporting_loc_id
            AND alc.count_type_id = oi.count_type_id
            AND alc.agy_seq = oi.agy_seq
            AND alc.count_type_id = arl.count_type_id
            AND alc.agy_seq = arl.agy_seq
            AND outcome IS NULL
    )
ORDER BY
    code
}

OIDSUBLC_FIND_CGFKCONDUCTEDBY {
 	SELECT USER_ID   DESCRIPTION      , FIRST_NAME   , LAST_NAME ,STAFF_ID CODE  FROM STAFF_MEMBERS ORDER BY 1
}

OIDSUBLC_FIND_CGFKCONDUCTEDBY1 {
 	SELECT USER_ID         , FIRST_NAME         , LAST_NAME  FROM STAFF_MEMBERS ORDER BY 1
}

OIDSUBLC_FIND_CFGKRECOUNTCODE {
 	SELECT CODE  , DESCRIPTION  FROM REFERENCE_CODES WHERE DOMAIN = 'RESUBMIT_RSN' ORDER BY 1
}

OIDSUBLC_SUBLOCCNT_FIND_AGENCY_LOCATION_COUNTS {
 	SELECT REPORTING_LOC_ID ,COUNT_TYPE_ID ,AGY_SEQ ,DATE_SUBMITTED ,ACTUAL_COUNT ,REPORTED_COUNT ,CONDUCTED_BY_USERID ,ENTERED_BY_USERID ,CONDUCTED_DATETIME ,RECOUNT_RSN_CODE ,DISCREP_RSN_CODE ,RSN_CODE_USERID ,RSN_CODE_DATETIME ,RCNT_CONDUCTED_BY ,RCNT_DATETIME ,RCNT_IN_PROGRESS_FLAG ,RECOUNT_TOTAL ,COMMENT_TEXT ,VERIFIED_USER_ID ,VERIFIED_DATETIME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM AGENCY_LOCATION_COUNTS  /* where  */
}
OIDSUBLC_SUBLOCCNT_INSERT_AGENCY_LOCATION_COUNTS {
	INSERT INTO AGENCY_LOCATION_COUNTS(REPORTING_LOC_ID ,COUNT_TYPE_ID ,AGY_SEQ ,DATE_SUBMITTED ,ACTUAL_COUNT ,REPORTED_COUNT ,CONDUCTED_BY_USERID ,ENTERED_BY_USERID ,CONDUCTED_DATETIME ,RECOUNT_RSN_CODE ,DISCREP_RSN_CODE ,RSN_CODE_USERID ,RSN_CODE_DATETIME ,RCNT_CONDUCTED_BY ,RCNT_DATETIME ,RCNT_IN_PROGRESS_FLAG ,RECOUNT_TOTAL ,COMMENT_TEXT ,VERIFIED_USER_ID ,VERIFIED_DATETIME ,CREATE_DATETIME ,CREATE_USER_ID  ,SEAL_FLAG ) VALUES(:reportingLocId ,:countTypeId ,:agySeq ,:dateSubmitted ,:actualCount ,:reportedCount ,:conductedByUserid ,:enteredByUserid ,:conductedDatetime ,:recountRsnCode ,:discrepRsnCode ,:rsnCodeUserid ,:rsnCodeDatetime ,:rcntConductedBy ,:rcntDatetime ,:rcntInProgressFlag ,:recountTotal ,:commentText ,:verifiedUserId ,:verifiedDatetime ,current_timestamp ,:createUserId ,:sealFlag )
}


OIDSUBLC_SUB_LOC_CNT_WHENNEWRECORDINSTANCEWHENNEWRECORDINSTANCE {
}

OIDSUBLC_SUB_LOC_CNT_WHENCREATERECORD {
select
	distinct AL.AGY_LOC_ID ,
	DESCRIPTION ,
	ACT.COUNT_TYPE_CODE ,
	ACT.COUNT_TYPE_ID ,
	case
		when ACT.SCHEDULED_TIME = 'NA' then null
		else ACT.SCHEDULED_TIME
	end SCHEDULED_TIME
from
	AGENCY_LOCATIONS AL ,
	AGENCY_COUNT_TYPES ACT
where
	AL.AGY_LOC_ID = ACT.AGY_LOC_ID
	and AL.AGY_LOC_ID in (
	select
		CAL.AGY_LOC_ID
	from
		CASELOAD_AGENCY_LOCATIONS CAL
	where
		CAL.CASELOAD_ID = :caseloadId )
	and exists (
	select
		ARL.COUNT_TYPE_ID
	from
		AGENCY_REPORTING_LOCS ARL ,
		AGENCY_LOCATION_COUNTS ALC ,
		AGENCY_COUNTS AC
	where
		ALC.COUNT_TYPE_ID = ACT.COUNT_TYPE_ID
		and ACT.COUNT_TYPE_ID = AC.COUNT_TYPE_ID
		and AC.REPORTING_LOC_ID = ALC.REPORTING_LOC_ID
		and coalesce(ALC.REPORTED_COUNT::text, '') = ''
		and coalesce(OUTCOME::text, '') = '')
	and AL.AGY_LOC_ID = :agyLocIda
}

OIDSUBLC_OIDSUBLC_KEYEXIT {
	SELECT RCNT_IN_PROGRESS_FLAG INTO L_CHK FROM AGENCY_LOCATION_COUNTS WHERE COUNT_TYPE_ID =:SUB_LOC_CNT.COUNT_TYPE_ID AND AGY_SEQ = :SUB_LOC_CNT.AGY_SEQ AND REPORTING_LOC_ID = :SUB_LOC_CNT.REPORTING_LOC_ID

}

OIDSUBLC_CREATE_FORM_GLOBALSCREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}

OIDSUBLC_CGWHEN_NEW_FORM_INSTANCE {
	 SELECT HOUSING_LEV_1_CODE HOUSINGLEV1CODE,HOUSING_LEV_2_CODE HOUSINGLEV2CODE,HOUSING_LEV_3_CODE HOUSINGLEV3CODE , HOUSING_LEV_4_CODE HOUSINGLEV4CODE
	  FROM AGENCY_LOCATIONS WHERE AGY_LOC_ID = :AGY_LOC_ID
}

OIDSUBLC_GET_LABEL_DESCRIPTION {
	SELECT DESCRIPTION FROM REFERENCE_CODES WHERE DOMAIN = 'LIVING_UNIT' AND CODE = :CODE
}

OIDSUBLC_DEFAULT_AGY_LOC {
	SELECT ALAL.AGY_LOC_ID, ALAL.DESCRIPTION DSP_DESCRIPTION2 FROM AGENCY_LOCATIONS ALAL WHERE ALAL.AGENCY_LOCATION_TYPE = 'INST' AND ALAL.AGY_LOC_ID IN ( SELECT CA.AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS CA WHERE CA.CASELOAD_ID = :caseloadId ) AND ALAL.AGY_LOC_ID NOT IN ( 'TRN', 'OUT' )
}

OIDSUBLC_HOUSING_LEV_1_VALHOUSING_LEV_1_VAL {
	SELECT 'Y' INTO L_CHK FROM AGENCY_REPORTING_LOCS 
	WHERE LOCATION1_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID1 AND LOCATION2_ID IS NULL AND LOCATION3_ID IS NULL
}

OIDSUBLC_HOUSING_LEV_1_VALHOUSING_LEV_1_VAL {
	SELECT 'Y' INTO L_CHK1 FROM AGENCY_REPORTING_LOCS WHERE LOCATION1_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID1 AND NVL(LOCATION2_ID,0) = NVL(:SUB_LOC_CNT.NBT_LIV_UNIT_ID2,0) AND NVL(LOCATION3_ID,0) = NVL(:SUB_LOC_CNT.NBT_LIV_UNIT_ID3,0)
}

OIDSUBLC_HOUSING_LEV_1_VALHOUSING_LEV_1_VAL {
	SELECT MAX(LOCATION2_ID) INTO L_LOC2_ID FROM AGENCY_REPORTING_LOCS WHERE LOCATION1_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID1
}

OIDSUBLC_HOUSING_LEV_2_VALHOUSING_LEV_2_VAL {
	SELECT 'Y' INTO L_CHK FROM AGENCY_REPORTING_LOCS WHERE LOCATION1_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID1 AND NVL(LOCATION2_ID,0) = NVL(:SUB_LOC_CNT.NBT_LIV_UNIT_ID2,0) AND NVL(LOCATION3_ID,0) = NVL(:SUB_LOC_CNT.NBT_LIV_UNIT_ID3,0)
}

OIDSUBLC_HOUSING_LEV_2_VALHOUSING_LEV_2_VAL {
	SELECT 'Y' INTO L_CHK1 FROM AGENCY_REPORTING_LOCS WHERE LOCATION1_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID1 AND LOCATION2_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID2 AND LOCATION3_ID IS NULL
}

OIDSUBLC_HOUSING_LEV_2_VALHOUSING_LEV_2_VAL {
	SELECT MAX(LOCATION3_ID) INTO L_LOC3_ID FROM AGENCY_REPORTING_LOCS WHERE LOCATION1_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID1 AND LOCATION2_ID = :SUB_LOC_CNT.NBT_LIV_UNIT_ID2
}

OIDSUBLC_UPDATE_COUNT_RECORD_AGYSEQ_LIVINGUNITID {
	select
	AGY_SEQ
from
	AGENCY_REPORTING_LOCS
where
	LOCATION1_ID = :LIV_UNIT_ID1
	and coalesce (LOCATION2_ID,
	0) = coalesce(:LIV_UNIT_ID2,
	0)
	and coalesce(LOCATION3_ID,
	0) = coalesce(:LIV_UNIT_ID3,
	0)
	and LOCATION_TYPE = 'HOUS'
	and COUNT_TYPE_ID = :COUNT_TYPE_ID
}

OIDSUBLC_UPDATE_COUNT_RECORD_ACTUAL_COUNT_LIVINGUNITID {
	select
	COUNT(*)
from
	OFFENDER_BOOKINGS OB
where
	OB.LIVING_UNIT_ID in (with recursive cte as (
	select
		LIVING_UNIT_ID
	from
		LIVING_UNITS
	where
		LIVING_UNIT_ID = :LIV_UNIT_ID
union all
	select
		lu.LIVING_UNIT_ID
	from
		LIVING_UNITS lu
	join cte c on
		(c.LIVING_UNIT_ID = lu.PARENT_LIVING_UNIT_ID) )
	select
		*
	from
		cte )
	and OB.ACTIVE_FLAG = 'Y'
	and coalesce(OB.AGENCY_IML_ID::text, '') = ''
	and IN_OUT_STATUS = 'IN'
	and OB.AGY_LOC_ID = AGY_LOC_ID

}

OIDSUBLC_UPDATE_COUNT_RECORD_AGYSEQ_INTLOC {
	SELECT AGY_SEQ  FROM AGENCY_REPORTING_LOCS WHERE LOCATION1_ID = :INTERNAL_LOCATION_ID AND LOCATION_TYPE = 'INIT' AND COUNT_TYPE_ID = :COUNT_TYPE_ID
}

OIDSUBLC_UPDATE_COUNT_RECORD_ACTUAL_COUNT_INTLOC {
	select
	COUNT(*)
from
	OFFENDER_BOOKINGS OB
where
	
	OB.AGENCY_IML_ID in (with recursive cte as (
	select
		INTERNAL_LOCATION_ID
	from
		AGENCY_INTERNAL_LOCATIONS
	where
		INTERNAL_LOCATION_ID = :INTERNAL_LOCATION_ID
union all
	select
		AIL.INTERNAL_LOCATION_ID
	from
		AGENCY_INTERNAL_LOCATIONS AIL
	join cte c on
		(c.INTERNAL_LOCATION_ID = PARENT_INTERNAL_LOCATION_ID )

)
	select
		*
	from
		cte

)
	and OB.ACTIVE_FLAG = 'Y'
	and IN_OUT_STATUS = 'IN'
	and OB.AGY_LOC_ID = :AGY_LOC_ID
}

OIDSUBLC_UPDATE_COUNT_RECORD_GETMAXREPORTINGID {
	SELECT MAX(REPORTING_LOC_ID)  FROM AGENCY_COUNTS WHERE COUNT_TYPE_ID = :COUNT_TYPE_ID AND COUNT_IN_PROGRESS = 'Y' AND OUTCOME IS NULL
}

OIDSUBLC_UPDATE_COUNT_RECORDUPDATE_COUNT_RECORD {
	SELECT 'Y'  FROM AGENCY_LOCATION_COUNTS 
	WHERE COUNT_TYPE_ID = :COUNT_TYPE_ID AND AGY_SEQ = :AGY_SEQ AND REPORTING_LOC_ID = :REPORTING_LOC_ID 
	    AND REPORTED_COUNT IS NOT NULL
}

OIDSUBLC_RUN_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'ROLE_BASE'
}

OIDSUBLC_RUN_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'SYS' AND PROFILE_CODE = 'ROLE_PSWD'
}

OIDSUBLC_RUN_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'REPORT_ALIAS'
}

OIDSUBLC_RUN_REPORT_ {
	SELECT LTRIM(RTRIM(DESCRIPTION)) FROM SYSTEM_PROFILES WHERE PROFILE_CODE = P_PROFILE_CODE AND PROFILE_TYPE = P_PROFILE_TYPE
}
OIDSUBLC_UPDATE_QUERY_COUNTNOTEQUALS {
  update AGENCY_LOCATION_COUNTS set DATE_SUBMITTED = CURRENT_TIMESTAMP , ACTUAL_COUNT = :actualCount , REPORTED_COUNT = :reportedCount , CONDUCTED_BY_USERID = :conductedByUserid, ENTERED_BY_USERID = :enteredByUserid , RCNT_IN_PROGRESS_FLAG = 'Y', modify_datetime = current_timestamp, modify_user_id=:modifyUserId where COUNT_TYPE_ID = :countTypeId and AGY_SEQ = :agySeq and REPORTING_LOC_ID = :reportingLocId
}
OIDSUBLC_UPDATE_QUERY_COUNTEQUALS {
 UPDATE AGENCY_LOCATION_COUNTS SET DATE_SUBMITTED = CURRENT_TIMESTAMP , ACTUAL_COUNT = :actualCount , REPORTED_COUNT = :reportedCount , CONDUCTED_BY_USERID = :conductedByUserid,
      MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID =:modifyUserId , ENTERED_BY_USERID = :enteredByUserid  WHERE COUNT_TYPE_ID = :countTypeId AND AGY_SEQ = :agySeq AND REPORTING_LOC_ID = :reportingLocId
}
OIDSUBLC_RESUBMITCOUNT_UPDATE_QUERY {
 UPDATE AGENCY_LOCATION_COUNTS SET  RECOUNT_TOTAL = :recountTotal, RCNT_CONDUCTED_BY = :conductedByUserid, ENTERED_BY_USERID = :enteredByUserid, RCNT_DATETIME = CURRENT_TIMESTAMP,
  RECOUNT_RSN_CODE = :recountRsnCode  , COMMENT_TEXT = :commentText , RCNT_IN_PROGRESS_FLAG = 'N', MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID =:modifyUserId 
   WHERE COUNT_TYPE_ID = :countTypeId AND AGY_SEQ = :agySeq AND REPORTING_LOC_ID = :reportingLocId
}
OIDSUBLC_RESUBMITCOUNT_DELETE_QUERY {
UPDATE AGENCY_LOCATION_COUNTS SET  REPORTED_COUNT = null , CONDUCTED_BY_USERID = null
      , ENTERED_BY_USERID = null   , RCNT_IN_PROGRESS_FLAG = 'N'  WHERE COUNT_TYPE_ID = :countTypeId AND AGY_SEQ = :agySeq AND REPORTING_LOC_ID = :reportingLocId
}
OIDSUBLC_COUNT_QUERY {
	SELECT AGY_LOC_ID, COUNT_TYPE_ID, COUNT_TYPE_CODE, SCHEDULED_TIME, ACTUAL_COUNT, TOTAL_MALE, TOTAL_FEMALE, TOTAL_OTHER, REPORTED_COUNT, DISCREPANCY_COUNT, DATE_SUBMITTED, ENTERED_BY_USERID, LOCATION_DESCRIPTION, REPORTING_LOC_ID FROM TEMP_OIDCOUNT 
	WHERE 
	SESSION_ID = :SESSION_ID AND 
	AGY_LOC_ID <> 'CANCEL' and AGY_LOC_ID in( SELECT AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS WHERE CASELOAD_ID = :currentCaseLoadId) 
	ORDER BY LOCATION_TYPE, LIST_SEQ
	limit 1
}
OIDSUBLC_GET_USER_ID {
	SELECT USER_ID FROM STAFF_MEMBERS WHERE USER_ID = :USERID
}
OIDSUBLC_GET_SESSIONID {
		select
	USERENV_number('SESSIONID')::integer
from
	DUAL
}
OIDSUBLC_GET_DESCRIPTION {
	SELECT DESCRIPTION FROM AGENCY_LOCATIONS where AGY_LOC_ID = :AGYLOCID
}
OIDSUBLC_COUNT_RECORDUPDATE_COUNT_RECORD {
	SELECT 'Y'  FROM AGENCY_LOCATION_COUNTS 
	WHERE COUNT_TYPE_ID = :COUNT_TYPE_ID AND AGY_SEQ = :AGY_SEQ AND REPORTING_LOC_ID = :REPORTING_LOC_ID 
	    AND REPORTED_COUNT IS NOT NULL AND RCNT_IN_PROGRESS_FLAG = 'Y'
}
OIDSUBLC_CGWHEN_NEW_FORM_INSTANCE_CG_P_SESSION_ID {
	SELECT DISTINCT SESSION_ID FROM LOCKED_MODULES WHERE MODULE_NAME = 'OIDCOUNT' AND (SESSION_ID <> :SESSIONID or SESSION_ID = :SESSIONID) AND SESSION_ID IS NOT NULL ORDER BY SESSION_ID

}