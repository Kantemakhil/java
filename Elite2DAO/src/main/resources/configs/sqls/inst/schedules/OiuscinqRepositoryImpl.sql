OIUSCINQ_OFFSCH_FIND_V_OFFENDERS_ALL_SCHEDULES_OIDSTABS{
 select EVENT_ID , OFFENDER_BOOK_ID , IN_OUT_STATUS , BOOKING_NO , BOOKING_ACTIVE_FLAG , OFFENDER_ID , OFFENDER_ID_DISPLAY , OFFENDER_LAST_NAME , OFFENDER_FIRST_NAME , EVENT_DATE , START_TIME , END_TIME , EVENT_CLASS , EVENT_TYPE , EVENT_TYPE_DESC , EVENT_SUB_TYPE , EVENT_SUB_TYPE_DESC , ACTIVE_FLAG , EVENT_STATUS , EVENT_STATUS_DESC , EVENT_OUTCOME , EVENT_OUTCOME_DESC , BUSY_DATE_FLAG , OUTCOME_REASON_CODE , REFERENCE_ID , APPLICATION_DATE , APPLICATION_TIME , RETURN_DATE , RETURN_TIME , COMMENT_TEXT , DETAILS , AGY_LOC_ID , AGY_LOC_DESC , LIVING_UNIT_ID , LIVING_UNIT_DESC , LU_LEVEL_1_CODE , LU_LEVEL_2_CODE , LU_LEVEL_3_CODE , LU_LEVEL_4_CODE , AGENCY_IML_ID , AGENCY_IML_DESC , AGENCY_IML_LEVEL_1_CODE , AGENCY_IML_LEVEL_2_CODE , AGENCY_IML_LEVEL_3_CODE , TO_AGY_LOC_ID , TO_AGY_LOC_DESC , TO_LOC , TO_LOC_DESC , ESCORT_CODE , ESCORT_DESC , DIRECTION_CODE , SCHEDULE_MOVEMENT_TIME , FROM_CITY_CODE , FROM_CITY_NAME , TO_CITY_CODE , TO_CITY_NAME , TO_INTERNAL_LOCATION_ID , TO_INTERNAL_LOCATION_DESC , TO_INT_LOC_LEVEL_1_CODE , TO_INT_LOC_LEVEL_2_CODE , TO_INT_LOC_LEVEL_3_CODE , TO_INT_LOC_USER_DESC , CREDITED_HOURS , ENGAGEMENT_CODE , UNDERSTANDING_CODE , PIECE_WORK , IN_TIME , OUT_TIME , PERFORMANCE_CODE , TRANSPORT_CODE , SICK_NOTE_EXPIRY_DATE , SICK_NOTE_RECEIVED_DATE , UNEXCUSED_ABSENCE_FLAG , UNPAID_WORK_ACTION , UNPAID_WORK_BEHAVIOUR , AGREED_TRAVEL_HOUR , CHECK_BOX_1 , CHECK_BOX_2 , HIDDEN_COMMENT_TEXT , IN_CHARGE_STAFF_ID , IN_CHARGE_STAFF_NAME , OFF_PRGREF_ID , CONTACT_PERSON_NAME , TO_ADDRESS_OWNER_CLASS , TO_ADDRESS_ID , UNPAID_WORK_SUPERVISOR , TA_ID , RECORD_SOURCE , CHECK_SUM , PROV_STATE_CODE , PROV_STATE_DESC , SCHEDULED_TRIP_ID from V_OFFENDER_ALL_SCHEDULES where OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID 
 and exists ( select 'Y' from schedules_and_mvmnt_settings  where encode(setting_value, 'escape') like  '%'|| EVENT_STATUS || '%') 
 AND (
    (EVENT_DATE >= :EVENT_DATE::timestamp AND EVENT_DATE <= :RETURN_DATE::timestamp)
    OR (RETURN_DATE >= :EVENT_DATE::timestamp AND RETURN_DATE <= :RETURN_DATE::timestamp)
    OR (EVENT_DATE <= :EVENT_DATE::timestamp AND RETURN_DATE >= :RETURN_DATE::timestamp)
  ) 
}
OIUSCINQ_OFFSCH_FIND_V_OFFENDERS_ALL_SCHEDULES{
select EVENT_ID , OFFENDER_BOOK_ID , IN_OUT_STATUS , BOOKING_NO , BOOKING_ACTIVE_FLAG , OFFENDER_ID , OFFENDER_ID_DISPLAY , OFFENDER_LAST_NAME , OFFENDER_FIRST_NAME , EVENT_DATE , START_TIME , END_TIME , EVENT_CLASS , EVENT_TYPE , EVENT_TYPE_DESC , EVENT_SUB_TYPE , EVENT_SUB_TYPE_DESC , ACTIVE_FLAG , EVENT_STATUS , EVENT_STATUS_DESC , EVENT_OUTCOME , EVENT_OUTCOME_DESC , BUSY_DATE_FLAG , OUTCOME_REASON_CODE , REFERENCE_ID , APPLICATION_DATE , APPLICATION_TIME , RETURN_DATE , RETURN_TIME , COMMENT_TEXT , DETAILS , AGY_LOC_ID , AGY_LOC_DESC , LIVING_UNIT_ID , LIVING_UNIT_DESC , LU_LEVEL_1_CODE , LU_LEVEL_2_CODE , LU_LEVEL_3_CODE , LU_LEVEL_4_CODE , AGENCY_IML_ID , AGENCY_IML_DESC , AGENCY_IML_LEVEL_1_CODE , AGENCY_IML_LEVEL_2_CODE , AGENCY_IML_LEVEL_3_CODE , TO_AGY_LOC_ID , TO_AGY_LOC_DESC , TO_LOC , TO_LOC_DESC , ESCORT_CODE , ESCORT_DESC , DIRECTION_CODE , SCHEDULE_MOVEMENT_TIME , FROM_CITY_CODE , FROM_CITY_NAME , TO_CITY_CODE , TO_CITY_NAME , TO_INTERNAL_LOCATION_ID , TO_INTERNAL_LOCATION_DESC , TO_INT_LOC_LEVEL_1_CODE , TO_INT_LOC_LEVEL_2_CODE , TO_INT_LOC_LEVEL_3_CODE , TO_INT_LOC_USER_DESC , CREDITED_HOURS , ENGAGEMENT_CODE , UNDERSTANDING_CODE , PIECE_WORK , IN_TIME , OUT_TIME , PERFORMANCE_CODE , TRANSPORT_CODE , SICK_NOTE_EXPIRY_DATE , SICK_NOTE_RECEIVED_DATE , UNEXCUSED_ABSENCE_FLAG , UNPAID_WORK_ACTION , UNPAID_WORK_BEHAVIOUR , AGREED_TRAVEL_HOUR , CHECK_BOX_1 , CHECK_BOX_2 , HIDDEN_COMMENT_TEXT , IN_CHARGE_STAFF_ID , IN_CHARGE_STAFF_NAME , OFF_PRGREF_ID , CONTACT_PERSON_NAME , TO_ADDRESS_OWNER_CLASS , TO_ADDRESS_ID , UNPAID_WORK_SUPERVISOR , TA_ID , RECORD_SOURCE , CHECK_SUM , PROV_STATE_CODE , PROV_STATE_DESC , SCHEDULED_TRIP_ID from V_OFFENDER_ALL_SCHEDULES where OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID 
 and :EVENT_DATE::timestamp >= EVENT_DATE 
	and :EVENT_DATE::timestamp <= COALESCE(RETURN_DATE, EVENT_DATE)
 and EVENT_STATUS = 'SCH' order by EVENT_DATE desc , START_TIME desc
}
OIUSCINQ_OIUSCINQ_POSTINSERT_ {
	SELECT FIRST_NAME, LAST_NAME FROM STAFF_MEMBERS WHERE STAFF_ID = LV_STAFF_ID
}

OIUSCINQ_CREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}