FETECH_PROPERTY_DATA {
SELECT PROPERTY_ITEM_SEQ ,OFFENDER_BOOK_ID ,PROPERTY_TYPE ,PROPERTY_DESCRIPTION ,AGY_LOC_ID ,STATUS_CODE ,CONDITION_CODE ,RECEIVED_FROM ,PROPERTY_CONTAINER_ID ,COMMENT_TEXT ,CONFIRM_FLAG ,DISPOSED_TO_CORP_ID ,DISPOSED_TO_OFFENDER_FLAG ,DISPOSED_TO_PERSON ,DISPOSED_TO_PERSON_ID ,COLOR ,MAKE ,SERIAL_NO ,QUANTITY ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG
FROM OFFENDER_PPTY_ITEMS  
WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID AND  STATUS_CODE=:STATUS_CODE  AND AGY_LOC_ID IN (SELECT CAL.AGY_LOC_ID
                                  FROM CASELOAD_AGENCY_LOCATIONS CAL
                                 WHERE CAL.CASELOAD_ID = :CASELOAD_ID
                                   AND CAL.AGY_LOC_ID NOT IN ( 'OUT', 'TRN' )) AND PROPERTY_TYPE IN (SELECT PROPERTY_TYPE_CODE 
                                   FROM PROPERTY_GROUP_ITEMS WHERE GROUP_ID=:GROUP_CODE)
}

FETECH_GROUP_NAMES {
	select GROUP_ID,GROUP_NAME from PROPERTY_GROUPS where active_flag = 'Y' and (caseload_id is null or caseload_id = :caseloadId) order by caseload_id desc, property_seq
}

GET_DEFAULT_VALUES {
SELECT PROPGRP.PROPERTY_TYPE_CODE PROPERTY_TYPE,PROPGRP.PROPERTY_DESCRIPTION,PROPGRP.CONDITION_CODE ,PROPGRP.RECEIVED_FROM,PROPGRP.QUANTITY
FROM PROPERTY_GROUP_ITEMS PROPGRP, REFERENCE_CODES REFCODE
WHERE REFCODE.CODE=PROPGRP.PROPERTY_TYPE_CODE AND PROPGRP.GROUP_ID=:GROUP_ID 
AND REFCODE.CODE IN(SELECT PROPERTY_TYPE_CODE FROM PROPERTY_GROUP_ITEMS WHERE GROUP_ID=:GROUP_ID) 
AND REFCODE.DOMAIN='PPTY_TYPE'
ORDER BY PROPGRP.SEQUENCE
}

OIDMPITM_OFFPI_OFFENDER_PPTY_ITEMS {
SELECT PROPERTY_ITEM_SEQ ,OFFENDER_BOOK_ID ,PROPERTY_TYPE ,PROPERTY_DESCRIPTION ,AGY_LOC_ID ,STATUS_CODE ,CONDITION_CODE ,RECEIVED_FROM ,
PROPERTY_CONTAINER_ID ,COMMENT_TEXT ,CONFIRM_FLAG ,DISPOSED_TO_CORP_ID ,DISPOSED_TO_OFFENDER_FLAG ,DISPOSED_TO_PERSON ,DISPOSED_TO_PERSON_ID ,COLOR ,MAKE ,SERIAL_NO ,QUANTITY ,
CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG, PROPERTY_VALUE, PROPERTY_SIZE
FROM OFFENDER_PPTY_ITEMS
where (offender_book_id = :OFFENDERBOOKID AND (agy_loc_id IN (SELECT agy_loc_id FROM caseload_agency_locations WHERE agy_loc_id NOT IN ( 'OUT', 'TRN' ) and caseload_id = :CASELOADID ) OR (status_code IN ('OUT') AND agy_loc_id IN ('OUT', 'TRN'))   ) AND status_code = :STATUSCODE 
AND (coalesce(:PROPERTYCONATINERID::text,'')='' OR   property_container_id = :PROPERTYCONATINERID))

}

GET_GROUP_IMAGE{
SELECT IMAGE_ID,IMAGE_THUMBNAIL FROM IMAGES WHERE IMAGE_OBJECT_TYPE=:GROUP_ID
}

CHECK_REGISTERED_PROPERTY_OR_CONTAINER_ITEMS{
select cnt+cnt1 as cnt from (select (SELECT count(offender_book_id) cnt FROM offender_ppty_items WHERE offender_book_id = :offenderBookId AND status_code IN ( 'REGISTERED', 'CELL', 'MISSING'))cnt, (SELECT count(offender_book_id) cnt FROM offender_ppty_containers WHERE offender_book_id = :offenderBookId)cnt1 from dual) ab
}
OIDMPITM_CON_OFFPI_FIND_OFFENDER_PPTY_ITEMS {
select opi.PROPERTY_ITEM_SEQ ,opi.OFFENDER_BOOK_ID ,opi.PROPERTY_TYPE ,opi.PROPERTY_DESCRIPTION ,opi.AGY_LOC_ID ,opi.STATUS_CODE ,opi.CONDITION_CODE ,opi.RECEIVED_FROM ,
opi.PROPERTY_CONTAINER_ID ,opi.COMMENT_TEXT ,opi.CONFIRM_FLAG ,opi.DISPOSED_TO_CORP_ID ,opi.DISPOSED_TO_OFFENDER_FLAG ,opi.DISPOSED_TO_PERSON ,opi.DISPOSED_TO_PERSON_ID ,opi.COLOR ,opi.MAKE ,SERIAL_NO ,opi.QUANTITY ,
opi.CREATE_DATETIME ,opi.CREATE_USER_ID ,opi.MODIFY_DATETIME ,opi.MODIFY_USER_ID ,opi.SEAL_FLAG,off.PROPERTY_ONLY_FLAG ,ref.description CONTDES
,off.ACTIVE_FLAG ,off.PROPOSED_DISPOSAL_DATE ,off.INTERNAL_LOCATION_ID
,off.CONTAINER_CODE ,off.EXPIRY_DATE ,off.SEAL_MARK ,off.TRN_FROM_AGY_LOC_ID ,off.TRN_TO_AGY_LOC_ID
,off.PROPERTY_STORAGE_ID,off.DISPOSED_TO ,off.DISPOSED_TO_NAME ,ag.DESCRIPTION LOCDES  from OFFENDER_PPTY_ITEMS opi left join OFFENDER_PPTY_CONTAINERS off  on  off.PROPERTY_CONTAINER_ID = opi.PROPERTY_CONTAINER_ID and off.OFFENDER_BOOK_ID = opi.OFFENDER_BOOK_ID
left join agency_internal_locations ag on  off.INTERNAL_LOCATION_ID=ag.INTERNAL_LOCATION_ID and  off.AGY_LOC_ID in( SELECT AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS WHERE CASELOAD_ID = :agyLocId) and off.AGY_LOC_ID NOT IN ('OUT')
left join reference_codes ref on ref.code=off.CONTAINER_CODE and ref.domain = 'PPTY_CNTNR'
where opi.offender_book_id = :offenderBookId and opi.STATUS_CODE <> 'DISPOSED'  and opi.PROPERTY_CONTAINER_ID = :propertyContainerId
}

OIDMPITM_GET_MAX_EVENT_SEQ_FROM_OFFENDER_PPTY_ITEM_EVENTS {
SELECT MAX(EVENT_SEQ) FROM OFFENDER_PPTY_ITEM_EVENTS
}

OIDMPITM_ITMTX_INSERT_OFFENDER_PPTY_ITEM_EVENTS { 
INSERT INTO OFFENDER_PPTY_ITEM_EVENTS(OFFENDER_BOOK_ID,EVENT_SEQ,SEAL_FLAG,CREATE_DATETIME,MODIFY_DATETIME,CREATE_USER_ID) VALUES (:offenderBookId,:eventSeq,:sealFlag,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,:createUserId)
}

OIDMPITM_OFFPI_UPDATE_OFFENDER_PPTY_ITEMS {
	UPDATE OFFENDER_PPTY_ITEMS set STATUS_CODE  = :statusCode, DISPOSED_TO_CORP_ID = :disposedToCorpId, DISPOSED_TO_PERSON = :disposedToPerson, 
	DISPOSED_TO_PERSON_ID = :disposedToPersonId, DISPOSED_TO_OFFENDER_FLAG  = :disposedToOffenderFlag, COMMENT_TEXT = :commentText,MODIFY_DATETIME=CURRENT_TIMESTAMP,MODIFY_USER_ID=:modifyUserId  where PROPERTY_ITEM_SEQ  = :propertyItemSeq and OFFENDER_BOOK_ID  = :offenderBookId 
}

OIDMPITM_UPDATE_OFFCONT {
 UPDATE OFFENDER_PPTY_CONTAINERS SET ACTIVE_FLAG = 'N' ,INTERNAL_LOCATION_ID = NULL,seal_mark=:sealMark, COMMENT_TEXT = :commentText,MODIFY_DATETIME=CURRENT_TIMESTAMP,MODIFY_USER_ID=:modifyUserId WHERE PROPERTY_CONTAINER_ID = :propertyContainerId
         AND OFFENDER_BOOK_ID  = :offenderBookId
}

OIDMPITM_OFFPI_UPDATE_OFFENDER_PPTY_ITEMS_OIL_DATA{
SELECT * FROM OFFENDER_PPTY_ITEMS WHERE PROPERTY_ITEM_SEQ=:property_item_seq AND OFFENDER_BOOK_ID=:offender_book_id
}