
OIDMBRDT_FIND_RGGROUP {
select STG_ID , DESCRIPTION from SECURITY_THREAT_GROUPS where (ACTIVE_FLAG = 'Y')
}

OIDMBRDT_FIND_RGREASON {
 select DESCRIPTION NBT_REASON_CODE , CODE REASON_CODE from REFERENCE_CODES where domain = 'MBR_AFF_RSN' and (ACTIVE_FLAG = 'Y' ) order by LIST_SEQ
}

OIDMBRDT_FIND_RGEXPREASON {
select DESCRIPTION NBT_EXPIRY_REASON_CODE , CODE EXPIRY_REASON_CODE from REFERENCE_CODES where domain = 'MBR_EXP_RSN' and (ACTIVE_FLAG = 'Y' ) order by LIST_SEQ
}

OIDMBRDT_FIND_RGSTG1 {
select * from ( select DESCRIPTION , TO_CHAR(STG_ID) CODE , STG_CODE , DESCRIPTION DESCRIPTION1 , (case when STG_ID in ( select STG_ID from SECURITY_THREAT_GROUPS where STG_LEVEL = 'SET' and ACTIVE_FLAG = 'Y') then 'Y' else 'N' end) ACTIVE_FLAG from SECURITY_THREAT_GROUPS )A order by ACTIVE_FLAG desc
}

OIDMBRDT_FIND_RGSTG2 {
select * from ( select DESCRIPTION , TO_CHAR(STG_ID) CODE , STG_CODE , DESCRIPTION DESCRIPTION1, case when STG_ID in ( select STG_ID from SECURITY_THREAT_GROUPS where STG_LEVEL = 'GANG' and ACTIVE_FLAG = 'Y') then 'Y' else 'N' end ACTIVE_FLAG from SECURITY_THREAT_GROUPS union select STG2.DESCRIPTION || '-' || STG1.DESCRIPTION DESCRIPTION , TO_CHAR(STG1.STG_ID) CODE , STG1.STG_CODE , STG1.DESCRIPTION DESCRIPTION1, case when STG2.STG_ID in ( select STG_ID from SECURITY_THREAT_GROUPS where STG_LEVEL = 'SET' and ACTIVE_FLAG = 'Y') then 'Y' else 'N' end ACTIVE_FLAG from SECURITY_THREAT_GROUPS STG1 , SECURITY_THREAT_GROUPS STG2 where STG1.STG_LEVEL = 'SET' and STG1.ACTIVE_FLAG = 'Y' and STG1.PARENT_STG_ID = STG2.STG_ID)A order by ACTIVE_FLAG desc
}

OIDMBRDT_FIND_RGSTG3 {
select * from ( select DESCRIPTION DESCRIPTION1 , TO_CHAR(STG_ID) CODE, STG_CODE , DESCRIPTION, case when STG_ID in ( select STG_ID from SECURITY_THREAT_GROUPS where STG_LEVEL = 'NATION' and ACTIVE_FLAG = 'Y' ) then 'Y' else 'N' end ACTIVE_FLAG from SECURITY_THREAT_GROUPS union select STG2.DESCRIPTION || '-' || STG1.DESCRIPTION DESCRIPTION , TO_CHAR(STG1.STG_ID) CODE , STG1.STG_CODE , STG1.DESCRIPTION DESCCRIPTION1, case when STG2.STG_ID in ( select STG_ID from SECURITY_THREAT_GROUPS where STG1.STG_LEVEL = 'GANG' and STG1.ACTIVE_FLAG = 'Y' ) then 'Y' else 'N' end ACTIVE_FLAG from SECURITY_THREAT_GROUPS STG1 , SECURITY_THREAT_GROUPS STG2 where STG1.PARENT_STG_ID = STG2.STG_ID union select STG3.DESCRIPTION || '-' || STG2.DESCRIPTION || '-' || STG1.DESCRIPTION DESCRIPTION , TO_CHAR(STG1.STG_ID) CODE , STG1.STG_CODE , STG1.DESCRIPTION DESCRIPTION1, case when STG3.STG_ID in ( select STG_ID from SECURITY_THREAT_GROUPS where STG1.STG_LEVEL = 'SET' and STG1.ACTIVE_FLAG = 'Y' ) then 'Y' else 'N' end ACTIVE_FLAG from SECURITY_THREAT_GROUPS STG1 , SECURITY_THREAT_GROUPS STG2 , SECURITY_THREAT_GROUPS STG3 where STG1.PARENT_STG_ID = STG2.STG_ID and STG2.PARENT_STG_ID = STG3.STG_ID)A order by ACTIVE_FLAG desc, DESCRIPTION1
}

OIDMBRDT_OFFENDERASSESSMENTS_FIND_OFFENDER_ASSESSMENTS {
select OFFENDER_BOOK_ID , ASSESSMENT_SEQ , ASSESSMENT_DATE , ASSESSMENT_TYPE_ID , SCORE , ASSESS_STATUS , CALC_SUP_LEVEL_TYPE , ASSESS_STAFF_ID , ASSESS_COMMENT_TEXT , OVERRIDE_REASON_TEXT , PLACE_AGY_LOC_ID , OVERRIDED_SUP_LEVEL_TYPE , OVERRIDE_COMMENT_TEXT , OVERRIDE_STAFF_ID , EVALUATION_DATE , NEXT_REVIEW_DATE , EVALUATION_RESULT_CODE , REVIEW_SUP_LEVEL_TYPE , REVIEW_PLACEMENT_TEXT , REVIEW_COMMITTE_CODE , COMMITTE_COMMENT_TEXT , REVIEW_PLACE_AGY_LOC_ID , REVIEW_SUP_LEVEL_TEXT , MODIFY_USER_ID , ASSESS_COMMITTE_CODE , CREATION_DATE , CREATION_USER , APPROVED_SUP_LEVEL_TYPE , ASSESSMENT_CREATE_LOCATION , ASSESSOR_STAFF_ID , MODIFY_DATETIME , (select last_name ||', '||first_name from staff_members where staff_id = OFFASS.assess_staff_id) as assessorName, (select last_name ||', '||first_name from staff_members where user_id  = OFFASS.override_user_id) as OVERRIDE_USER_ID, OVERRIDE_REASON , CREATE_DATETIME , CREATE_USER_ID , SEAL_FLAG , OMS_MISCELLANEOUS_GETDESCCODE ('SUP_LVL_TYPE' , CALC_SUP_LEVEL_TYPE ) CALCSUPLEVELTYPEDESC, OMS_MISCELLANEOUS_GETDESCCODE ('SUP_LVL_TYPE' , OVERRIDED_SUP_LEVEL_TYPE ) OVERRIDEDSUPLEVELTYPEDESC from OFFENDER_ASSESSMENTS OFFASS
}

OIDMBRDT_OFFENDERSTGAFFILIATIONS_FIND_OFFENDER_STG_AFFILIATIONS {
select * from OFFENDER_STG_AFFILIATIONS where OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID order by EFFECTIVE_DATE desc
}
OIDMBRDT_OFFENDERSTGAFFILIATIONS_INSERT_OFFENDER_STG_AFFILIATIONS {
	insert into OFFENDER_STG_AFFILIATIONS (OFFENDER_BOOK_ID, STG_SEQ, EFFECTIVE_DATE, STG_ID, REASON_CODE, CREATE_USER_ID, CREATE_DATETIME, ACTIVE_FLAG, EXPIRED_BY, EXPIRY_DATE, EXPIRY_REASON_CODE, NOTIFIED_DATE, NOTIFIED_BY, APPEAL_DATE, COMMENT_TEXT, MODIFY_DATETIME, SEAL_FLAG) values(:offenderBookId, :stgSeq, :effectiveDate, :stgId, :reasonCode, :createUserId, CURRENT_TIMESTAMP, :activeFlag, :expiredBy, :expiryDate, :expiryReasonCode, :notifiedDate, :notifiedBy, :appealDate, :commentText, null , :sealFlag)
	}

OIDMBRDT_OFFENDERSTGAFFILIATIONS_UPDATE_OFFENDER_STG_AFFILIATIONS {
	UPDATE OFFENDER_STG_AFFILIATIONS 
	 SET   ACTIVE_FLAG=:activeFlag, EXPIRED_BY=:expiredBy, EXPIRY_DATE=:expiryDate, EXPIRY_REASON_CODE=:expiryReasonCode, NOTIFIED_DATE=:notifiedDate, NOTIFIED_BY=:notifiedBy, APPEAL_DATE=:appealDate, COMMENT_TEXT=:commentText,MODIFY_DATETIME=CURRENT_TIMESTAMP ,MODIFY_USER_ID=:modifyUserId 
	 where OFFENDER_BOOK_ID = :offenderBookId AND STG_SEQ = :stgSeq
}

OIDMBRDT_OFFENDERSTGDETAILS_FIND_OFFENDER_STG_DETAILS {
 	SELECT *  FROM OFFENDER_STG_DETAILS  where  OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID AND STG_SEQ = :STG_SEQ
}
OIDMBRDT_OFFENDERSTGDETAILS_INSERT_OFFENDER_STG_DETAILS {
	insert into OFFENDER_STG_DETAILS(create_user_id, create_datetime, modify_datetime) values(:createUserId, CURRENT_TIMESTAMP ,null )
}

OIDMBRDT_OFFENDERSTGDETAILS_UPDATE_OFFENDER_STG_DETAILS {
	UPDATE OFFENDER_STG_DETAILS set MODIFY_DATETIME=CURRENT_TIMESTAMP ,MODIFY_USER_ID=:modifyUserId 
}

OIDMBRDT_FORMACCESSIBLEFORMS_FIND_FORM_ACCESSIBLE_FORMS {
select * from FORM_ACCESSIBLE_FORMS where ORIGINATING_FORM = 'OIDMBRDT' and DESTINATION_FORM in ( select MODULE_NAME from MODULE_PRIVILEGES where ROLE_ID in ( select ROLE_ID from STAFF_MEMBER_ROLES where STAFF_ID = ( select STAFF_ID from STAFF_MEMBERS where USER_ID =:USER_NAME)))
}

OIDMBRDT_OFF_BKG_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_STG_AFFILIATIONS O WHERE O.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OIDMBRDT_OFF_BKG_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_ASSESSMENTS O WHERE O.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OIDMBRDT_OFFENDER_ASSESSMENTS_POSTQUERY_GET_DESCRIPTION {
	SELECT DESCRIPTION FROM ASSESSMENTS WHERE ASSESSMENT_ID = :ASSESSMENTTYPEID
}

OIDMBRDT_OFFENDER_ASSESSMENTS_POSTQUERY_GET_NAME {
	select
	concat(LAST_NAME,', ',FIRST_NAME,' ',MIDDLE_NAME )DESCRIPTION
from
	STAFF_MEMBERS
where
	STAFF_ID = :ASSESSORSTAFFID
}

OIDMBRDT_OFFENDER_STG_AFFILIATIONS_PREINSERT {
	select
	coalesce(MAX(STG_SEQ),
	0) + 1
from
	OFFENDER_STG_AFFILIATIONS
where
	OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID
}

OIDMBRDT_OFFENDER_STG_AFFILIATIONS_POSTQUERY {
	SELECT DESCRIPTION FROM SECURITY_THREAT_GROUPS WHERE STG_ID = :STGID
}

OIDMBRDT_OFFENDER_STG_AFFILIATIONS_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_STG_DETAILS O WHERE O.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND O.STG_SEQ = :STGSEQ
}

OIDMBRDT_OFFENDER_STG_DETAILS_POSTQUERY {
select
	*
from
	(
	select
		*
	from
		OFFENDER_STG_DETAILS
	where
		OFFENDER_BOOK_ID = :P_OFF_BOOK_ID
		and
STG_SEQ = :P_STG_SEQ
		and
ACTION_CODE = :P_ACTION
		and
VAL_DATE =
(
		select
			MAX(VAL_DATE)
		from
			OFFENDER_STG_DETAILS
		where
			OFFENDER_BOOK_ID = :P_OFF_BOOK_ID
			and
STG_SEQ = :P_STG_SEQ
			and
ACTION_CODE = :P_ACTION)
	order by
		create_datetime desc) as  table1 

	limit 1
}

OIDMBRDT_FORM_ACCESSIBLE_FORMS_POSTQUERY {
	SELECT DESCRIPTION FROM OMS_MODULES WHERE MODULE_NAME = :DESTINATIONFORM
}

OIDMBRDT_CREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO V_FORM_DESC FROM OMS_MODULES WHERE MODULE_NAME = V_FORM_NAME
}

OIDMBRDT_POPULATE_RG {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'STG_LOV_LVL'
}

OIDMBRDT_INSERT_CHECK_GROUP_INSERT {
	SELECT '1' FROM OFFENDER_STG_AFFILIATIONS WHERE OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID AND STG_ID = :P_STG_ID AND ACTIVE_FLAG = 'Y'
}

OIDMBRDT_CHECK_GROUP_FLAG {
	SELECT '1' FROM OFFENDER_STG_AFFILIATIONS WHERE OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID AND STG_ID = :P_STG_ID AND STG_SEQ != :P_STG_SEQ AND ACTIVE_FLAG = 'Y'
}

