
OCDNOQUE_FIND_RGASSESSMENTTYPEID {
select ASSESS.DESCRIPTION DESCRIPTION ,        ASSESS.REVIEW_CYCLE_DAYS REVIEW_CYCLE_DAYS ,        ASSESS.ASSESSMENT_ID ASSESSMENT_ID ,        ASSESS.CASELOAD_TYPE CASELOAD_TYPE ,        ASSESS.REQUIRE_APPROVAL_FLAG REQUIRE_APPROVAL_FLAG ,         ASSESS.DETERMINE_SUP_LEVEL_FLAG DETERMINE_SUP_LEVEL_FLAG ,        ASSESS.ASSESSMENT_CODE CODE ,        ASSESS.REVIEW_FLAG REVIEW_FLAG,
case when (SELECT count(*)   FROM assessments   WHERE assess.assessment_class = 'TYPE'    AND assess.parent_assessment_id IS NULL    AND (assess.caseload_type = (SELECT CASELOAD_TYPE   FROM CASELOADS   WHERE CASELOAD_ID =   (  SELECT WORKING_CASELOAD_ID      FROM STAFF_MEMBERS        WHERE USER_ID = :USER_ID))
        OR assess.caseload_type = 'BOTH') 
   AND (  assess.active_flag = 'Y'        OR 'ENTER-QUERY' = 'ENTER-QUERY')    AND ((assess.assessment_id in (select pa.assessment_id                                    from program_assessments pa                                    where pa.program_id = :PROGRAMID
                                     and pa.active_flag = 'Y')                                    AND assess.SCREEN_CODE IN ('EVAL','BOTH'))        OR (:PROGRAMID IS NULL AND assess.SCREEN_CODE IN ('ASSESS', 'BOTH'))) ) >0 then 'Y' else 'N' end SEAL_FLAG 
from assessments assess 
}
OCDNOQUE_FIND_RGASSESSMENTTYPEIDWITHOUTPROGRAMID {
select
  DESCRIPTION,active_flag, REVIEW_CYCLE_DAYS, ASSESSMENT_ID, CASELOAD_TYPE,
  REQUIRE_APPROVAL_FLAG, DETERMINE_SUP_LEVEL_FLAG, CODE, REVIEW_FLAG, SEAL_FLAG
from
  (select
     assess.description description,assess.active_flag, assess.review_cycle_days review_cycle_days,
     assess.assessment_id assessment_id, assess.caseload_type caseload_type,
     assess.require_approval_flag require_approval_flag,
     assess.determine_sup_level_flag determine_sup_level_flag,
     assess.assessment_code code, assess.review_flag review_flag,
     case
       when ( select COUNT(*) from assessments where assess.assessment_class = 'TYPE' and assess.parent_assessment_id is null and ( assess.caseload_type in ('BOTH','INST','COMM') )  and ( ( assess.assessment_id in ( select pa.assessment_id from program_assessments pa where pa.program_id is null and pa.active_flag = 'Y' ) and assess.screen_code in ( 'EVAL', 'BOTH' ) ) or ( assess.screen_code in ( 'ASSESS', 'BOTH' ) ) ) ) > 0 then 'Y'
       else 'N'
     end seal_flag
   from assessments assess
   
   order by
     assess.list_seq, description)A
where
  seal_flag = 'Y' 
}
OCDNOQUE_FIND_RGASSESSMENTTYPEID_ONLOAD {
SELECT ASSESS.DESCRIPTION DESCRIPTION ,        ASSESS.REVIEW_CYCLE_DAYS REVIEW_CYCLE_DAYS ,        ASSESS.ASSESSMENT_ID ASSESSMENT_ID ,        ASSESS.CASELOAD_TYPE CASELOAD_TYPE ,        ASSESS.REQUIRE_APPROVAL_FLAG REQUIRE_APPROVAL_FLAG ,         ASSESS.DETERMINE_SUP_LEVEL_FLAG DETERMINE_SUP_LEVEL_FLAG ,        ASSESS.ASSESSMENT_CODE CODE ,        ASSESS.REVIEW_FLAG REVIEW_FLAG,
 CASE WHEN ((ASSESS.CASELOAD_TYPE = (SELECT CASELOAD_TYPE   FROM CASELOADS   WHERE CASELOAD_ID =   (  SELECT WORKING_CASELOAD_ID      FROM STAFF_MEMBERS        WHERE USER_ID = :USERID)) OR ASSESS.CASELOAD_TYPE = 'BOTH' ) ) THEN 1 ELSE 0 END LISTSEQ FROM ASSESSMENTS ASSESS 
 WHERE ASSESS.ASSESSMENT_CLASS = 'TYPE'    AND ASSESS.PARENT_ASSESSMENT_ID IS NULL  
}
OCDNOQUE_FIND_RGASSESSCOMMITTECODE {
select
REF_CODE.DESCRIPTION DESCRIPTION ,
REF_CODE.LIST_SEQ LIST_SEQ ,
REF_CODE.CODE CODE,
case
when ( PARENT_CODE =
case
when (
select
CASELOAD_TYPE
from
CASELOADS
where
CASELOAD_ID = (
select
WORKING_CASELOAD_ID
from
STAFF_MEMBERS
where
USER_ID = :USERID)) = 'COMM' then 'COMM'
when (
select
CASELOAD_TYPE
from
CASELOADS
where
CASELOAD_ID = (
select
WORKING_CASELOAD_ID
from
STAFF_MEMBERS
where
USER_ID = :USERID)) = 'INST' then 'INST'
end ) then 1
else 0
end SEQVALUE
from
REFERENCE_CODES REF_CODE
where
domain = 'ASSESS_COMM'
and (REF_CODE.ACTIVE_FLAG = 'Y')
order by
REF_CODE.LIST_SEQ asc ,
REF_CODE.DESCRIPTION asc;

}
OCDNOQUE_FIND_RGAGENCYLOCATIONS {
select
DESCRIPTION DESCRIPTION,
AGY_LOC_ID CODE ,
case
when ( AGENCY_LOCATION_TYPE =
case
when (
select
CASELOAD_TYPE
from
CASELOADS
where
CASELOAD_ID = (
select
WORKING_CASELOAD_ID
from
STAFF_MEMBERS
where
USER_ID = :USERID)) = 'COMM' then 'COMM'
when (
select
CASELOAD_TYPE
from
CASELOADS
where
CASELOAD_ID = (
select
WORKING_CASELOAD_ID
from
STAFF_MEMBERS
where
USER_ID = :USERID)) = 'INST' then 'INST'
end ) then 1
else 0
end LISTSEQ
from
AGENCY_LOCATIONS
where
AGY_LOC_ID not in ('TRN' , 'OUT' )
and (coalesce(DEACTIVATION_DATE::text, '') = '')
order by
DESCRIPTION;
}

OCDNOQUE_FIND_RGSTAFFMEMBERS {
	SELECT CONCAT(LAST_NAME,', ',FIRST_NAME,' ',MIDDLE_NAME) DESCRIPTION ,STAFF_ID FROM STAFF_MEMBERS WHERE (STATUS = 'ACTIVE' OR '' = 'ENTER-QUERY' ) ORDER BY 1;
}

OCDNOQUE_FIND_RGOVERRIDEDSUPLEVELTYPE {
 	select
	OMS_MISCELLANEOUS_GETDESCCODE ('SUP_LVL_TYPE' ,
	A.SUPERVISION_LEVEL_TYPE ) DESCRIPTION ,
	A.SUPERVISION_LEVEL_TYPE CODE
from
	ASSESSMENT_RESULTS A
where
	A.ASSESSMENT_ID = :ASSESSMENTTYPEID
	and A.ACTIVE_FLAG = 'Y'
order by
	A.LIST_SEQ ,
	A.SUPERVISION_LEVEL_TYPE
}

OCDNOQUE_FIND_RGPLACEAGYLOCID {
 	SELECT AGY_LOC_ID CODE, DESCRIPTION   FROM AGENCY_LOCATIONS  WHERE AGENCY_LOCATION_TYPE = (SELECT CASELOAD_TYPE   FROM CASELOADS   WHERE CASELOAD_ID =   (  SELECT WORKING_CASELOAD_ID      FROM STAFF_MEMBERS        WHERE USER_ID = :USERID))
 	AND AGY_LOC_ID NOT IN ('OUT' , 'TRN' )    AND DEACTIVATION_DATE IS NULL
}

OCDNOQUE_FIND_RGOVERRIDEREASON {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'OVERRIDE_RSN'
	and (ACTIVE_FLAG = 'Y'
		or '' = 'ENTER-QUERY' )
order by
	LIST_SEQ
}

OCDNOQUE_OFFASS_FIND_V_OFFASS_ASS {
SELECT V.OFFENDER_BOOK_ID ,V.ASSESSMENT_SEQ ,V.ASSESSMENT_DATE ,V.ASSESSMENT_TYPE_ID ,V.SCORE ,V.ASSESS_STATUS ,OMS_MISCELLANEOUS_GETDESCCODE ('SUP_LVL_TYPE' ,v.CALC_SUP_LEVEL_TYPE )
CALC_SUP_LEVEL_TYPE ,V.ASSESS_STAFF_ID ,V.ASSESS_COMMENT_TEXT ,V.OVERRIDE_REASON_TEXT ,V.PLACE_AGY_LOC_ID ,OMS_MISCELLANEOUS_GETDESCCODE('SUP_LVL_TYPE' ,v.OVERRIDED_SUP_LEVEL_TYPE ) 
OVERRIDED_SUP_LEVEL_TYPE ,V.OVERRIDE_COMMENT_TEXT ,V.OVERRIDE_STAFF_ID ,V.EVALUATION_DATE ,V.NEXT_REVIEW_DATE ,V.EVALUATION_RESULT_CODE ,OMS_MISCELLANEOUS_GETDESCCODE 
('SUP_LVL_TYPE' ,v.REVIEW_SUP_LEVEL_TYPE )REVIEW_SUP_LEVEL_TYPE ,V.REVIEW_PLACEMENT_TEXT ,V.REVIEW_COMMITTE_CODE ,V.COMMITTE_COMMENT_TEXT ,V.REVIEW_PLACE_AGY_LOC_ID ,
V.REVIEW_SUP_LEVEL_TEXT ,V.MODIFY_USER_ID ,OMS_MISCELLANEOUS_GETDESCCODE ('ASSESS_COMM' ,v.ASSESS_COMMITTE_CODE )ASSESS_COMMITTE_CODE ,V.CREATION_DATE ,V.CREATION_USER ,
V.APPROVED_SUP_LEVEL_TYPE ,V.CASELOAD_TYPE ,V.MEDICAL_FLAG ,V.REQUIRE_APPROVAL_FLAG,V.OVERRIDE_SCORE 
 	FROM V_OFFASS_ASS V WHERE
 	 
}
OCDNOQUE_OFFASS1_FIND_OFFENDER_ASSESSMENTS {
  	select
	OFFENDER_BOOK_ID ,
	ASSESSMENT_SEQ ,
	ASSESSMENT_DATE ,
	ASSESSMENT_TYPE_ID ,
	SCORE ,
	ASSESS_STATUS ,
	CALC_SUP_LEVEL_TYPE ,
	ASSESS_STAFF_ID ,
	ASSESS_COMMENT_TEXT ,
	OVERRIDE_REASON_TEXT ,
	PLACE_AGY_LOC_ID ,
	OVERRIDED_SUP_LEVEL_TYPE ,
	OVERRIDE_COMMENT_TEXT ,
	OVERRIDE_STAFF_ID ,
	EVALUATION_DATE ,
	NEXT_REVIEW_DATE ,
	EVALUATION_RESULT_CODE ,
	REVIEW_SUP_LEVEL_TYPE ,
	REVIEW_PLACEMENT_TEXT ,
	REVIEW_COMMITTE_CODE ,
	COMMITTE_COMMENT_TEXT ,
	REVIEW_PLACE_AGY_LOC_ID ,
	REVIEW_SUP_LEVEL_TEXT ,
	MODIFY_USER_ID ,
	ASSESS_COMMITTE_CODE ,
	CREATION_DATE ,
	CREATION_USER ,
	APPROVED_SUP_LEVEL_TYPE ,
	ASSESSMENT_CREATE_LOCATION ,
	ASSESSOR_STAFF_ID ,
	MODIFY_DATETIME ,
	(select CONCAT(SM.LAST_NAME||', '|| SM.FIRST_NAME)  FROM STAFF_MEMBERS SM where SM.user_id = OVERRIDE_USER_ID)  as OVERRIDE_USER_ID,
	OVERRIDE_REASON ,
	CREATE_DATETIME ,
	CREATE_USER_ID ,
	SEAL_FLAG ,
	CREATION_DATE,
	OMS_MISCELLANEOUS_GETDESCCODE ('SUP_LVL_TYPE' ,
	CALC_SUP_LEVEL_TYPE ) CALCSUPLEVELTYPEDESC,
	OMS_MISCELLANEOUS_GETDESCCODE ('SUP_LVL_TYPE' ,
	OVERRIDED_SUP_LEVEL_TYPE ) OVERRIDEDSUPLEVELTYPEDESC
from
	OFFENDER_ASSESSMENTS
where
	(OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID
	and ASSESSMENT_SEQ = :ASSESSMENT_SEQ)
 	
 	
}
OCDNOQUE_OFFASS1_INSERT_OFFENDER_ASSESSMENTS {
	INSERT INTO OFFENDER_ASSESSMENTS(OFFENDER_BOOK_ID ,ASSESSMENT_SEQ ,ASSESSMENT_DATE ,ASSESSMENT_TYPE_ID ,SCORE ,ASSESS_STATUS ,CALC_SUP_LEVEL_TYPE ,ASSESS_STAFF_ID ,ASSESS_COMMENT_TEXT ,OVERRIDE_REASON_TEXT ,PLACE_AGY_LOC_ID ,OVERRIDED_SUP_LEVEL_TYPE ,OVERRIDE_COMMENT_TEXT ,OVERRIDE_STAFF_ID ,EVALUATION_DATE ,NEXT_REVIEW_DATE ,EVALUATION_RESULT_CODE ,REVIEW_SUP_LEVEL_TYPE ,REVIEW_PLACEMENT_TEXT ,REVIEW_COMMITTE_CODE ,COMMITTE_COMMENT_TEXT ,REVIEW_PLACE_AGY_LOC_ID ,REVIEW_SUP_LEVEL_TEXT ,ASSESS_COMMITTE_CODE ,CREATION_DATE ,CREATION_USER ,APPROVED_SUP_LEVEL_TYPE ,ASSESSMENT_CREATE_LOCATION ,ASSESSOR_STAFF_ID ,OVERRIDE_USER_ID ,OVERRIDE_REASON ,CREATE_DATETIME ,CREATE_USER_ID ,SEAL_FLAG, MODIFY_USER_ID, MODIFY_DATETIME ) 
	VALUES(:offenderBookId ,:assessmentSeq ,:assessmentDate ,:assessmentTypeId ,:score ,:assessStatus ,:calcSupLevelType ,:assessStaffId ,:assessCommentText ,:overrideReasonText ,:placeAgyLocId ,:overridedSupLevelType ,:overrideCommentText ,:overrideStaffId ,:evaluationDate ,:nextReviewDate ,:evaluationResultCode ,:reviewSupLevelType ,:reviewPlacementText ,:reviewCommitteCode ,:committeCommentText ,:reviewPlaceAgyLocId ,:reviewSupLevelText ,:assessCommitteCode ,current_timestamp ,:creationUser ,:approvedSupLevelType ,:assessmentCreateLocation ,:assessorStaffId ,:overrideUserId ,:overrideReason ,CURRENT_TIMESTAMP ,:createUserId ,:sealFlag, null, null )
}

OCDNOQUE_OFFASS1_UPDATE_OFFENDER_ASSESSMENTS {
UPDATE OFFENDER_ASSESSMENTS set ASSESS_COMMENT_TEXT  = :assessCommentText ,PLACE_AGY_LOC_ID  = :placeAgyLocId ,OVERRIDED_SUP_LEVEL_TYPE  = :overridedSupLevelType ,NEXT_REVIEW_DATE  = :nextReviewDate,MODIFY_DATETIME  = current_timestamp ,OVERRIDE_REASON  = :overrideReason , ASSESS_COMMITTE_CODE  = :assessCommitteCode,ASSESSMENT_CREATE_LOCATION  = :assessmentCreateLocation ,ASSESSOR_STAFF_ID  = :assessorStaffId, ASSESSMENT_DATE  = :assessmentDate, OVERRIDE_USER_ID = :overrideUserId ,MODIFY_USER_ID = :modifyUserId,override_comment_text = :overrideCommentText,override_score =:overrideScore
where OFFENDER_BOOK_ID  = :offenderBookId AND ASSESSMENT_SEQ  = :assessmentSeq
}

OCDNOQUE_OFF_BKG_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM V_OFFASS_ASS V WHERE V.OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OCDNOQUE_OFF_ASS_POSTQUERY {
	SELECT count(*) FROM ASSESSMENTS WHERE ASSESSMENT_ID = :ASSESSMENTTYPEID AND ASSESSMENT_CLASS = 'TYPE' AND coalesce (CALCULATE_TOTAL_FLAG, 'N') = 'N'
}

OCDNOQUE_OFF_ASS1_POSTQUERY {
	SELECT CASELOAD_TYPE, REQUIRE_APPROVAL_FLAG, DETERMINE_SUP_LEVEL_FLAG, ASSESSMENT_CODE, REVIEW_FLAG, CALCULATE_TOTAL_FLAG FROM ASSESSMENTS WHERE ASSESSMENT_ID = :ASSESSMENT_ID
}

OCDNOQUE_OFF_ASS1_PREINSERT_GETSEQ {
	SELECT coalesce(MAX(ASSESSMENT_SEQ),0) + 1 ASSESSMENT_SEQ  FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :OFFENDERBOOKID
}

OCDNOQUE_OFF_ASS1_PREINSERT_GET_ASSESS_STAFF_ID {
	SELECT STAFF_ID FROM STAFF_MEMBERS WHERE USER_ID = :USERID
}

OCDNOQUE_CGFKCHK_ASSESSMENT_TYPE_ID_ {
	SELECT ASSESS1.DESCRIPTION FROM ASSESSMENTS ASSESS1 WHERE ASSESS1.ASSESSMENT_ID = :ASSESSMENTTYPEID
}

OCDNOQUE_CGFKCHK_ASSESSMENT_TYPE_ID1_ {
	SELECT ASSESS.DESCRIPTION, ASSESS.REVIEW_CYCLE_DAYS FROM ASSESSMENTS ASSESS WHERE ASSESS.ASSESSMENT_ID = :ASSESSMENTTYPEID AND ASSESSMENT_CLASS = 'TYPE' AND PARENT_ASSESSMENT_ID IS NULL
}

OCDNOQUE_CGFKCHK_AGY_LOC_ID_ {
	SELECT AL1.DESCRIPTION FROM AGENCY_LOCATIONS AL1 WHERE AL1.AGY_LOC_ID = P_COLUMN
}

OCDNOQUE_CGFKCHK_NBT_STAFF_ID_ {
	SELECT STAFF1.USER_ID FROM STAFF_MEMBERS STAFF1 WHERE STAFF1.STAFF_ID = P_COLUMN_VALUE
}

OCDNOQUE_UPDATE_PREVASS_ {
	SELECT V_OFFASS.ASSESSMENT_SEQ ,V_OFFASS.ASSESSMENT_TYPE_ID FROM V_OFFASS_ASS  V_OFFASS WHERE V_OFFASS.OFFENDER_BOOK_ID = L_OFFENDER_BOOK_ID AND V_OFFASS.CASELOAD_TYPE = L_CASELOAD_TYPE AND V_OFFASS.ASSESS_STATUS = 'A' AND V_OFFASS.ASSESSMENT_SEQ =(SELECT MAX(OA2.ASSESSMENT_SEQ) FROM V_OFFASS_ASS OA2 WHERE OA2.OFFENDER_BOOK_ID = L_OFFENDER_BOOK_ID AND OA2.ASSESSMENT_SEQ < L_CURASS_SEQ AND OA2.CASELOAD_TYPE = L_CASELOAD_TYPE)
}

OCDNOQUE_GET_STAFF_ID_ {
	SELECT STAFF_ID, NAME FROM STAFF_MEMBERS_V1 WHERE USER_ID = P_USER_ID
}

OCDNOQUE_SET_CASENOTE_ACCESS_ {
	SELECT   coalesce(COUNT(CAL.UPDATE_ALLOWED_FLAG),0) FROM CASELOAD_AGENCY_LOCATIONS CAL WHERE CAL.UPDATE_ALLOWED_FLAG = 'Y' AND CAL.CASELOAD_ID = LV_CASELOAD_ID AND CAL.AGY_LOC_ID IN (SELECT OBAL.AGY_LOC_ID FROM OFFENDER_BOOKING_AGY_LOCS OBAL WHERE OBAL.OFFENDER_BOOK_ID = LV_OFF_BOOK_ID AND OBAL.REMOVED_DATE IS NULL)
}

OCDNOQUE_SET_CASENOTE_ACCESS_ {
	SELECT   coalesce(COUNT(CAL.UPDATE_ALLOWED_FLAG),0) FROM CASELOAD_AGENCY_LOCATIONS CAL WHERE CAL.UPDATE_ALLOWED_FLAG = 'Y' AND CAL.CASELOAD_ID = LV_CASELOAD_ID AND CAL.AGY_LOC_ID IN (SELECT OEM.TO_AGY_LOC_ID FROM OFFENDER_EXTERNAL_MOVEMENTS OEM WHERE OEM.OFFENDER_BOOK_ID = LV_OFF_BOOK_ID AND OEM.MOVEMENT_SEQ = (SELECT MAX(OEM2.MOVEMENT_SEQ) FROM OFFENDER_EXTERNAL_MOVEMENTS OEM2 WHERE OEM2.OFFENDER_BOOK_ID = OEM.OFFENDER_BOOK_ID AND OEM2.DIRECTION_CODE = 'IN'))
}

OCDNOQUE_SET_CASENOTE_ACCESS_ {
	SELECT   SAC.UPDATE_ALLOWED_FLAG FROM STAFF_ACCESSIBLE_CASELOADS SAC WHERE CASELOAD_ID = LV_CASELOAD_ID AND EXISTS ( SELECT 'X' FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = SAC.STAFF_ID AND SM.USER_ID = LV_USER_ID)
}

OCDNOQUE_GET_CNOTE_ALLUPD_PROFILE_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'CNOTE_ALLUPD'
}

OCDNOQUE_POST_QUERY_FOR_OFF_ASS {
	SELECT ASSESSMENT_CODE CODE ,DESCRIPTION FROM ASSESSMENTS WHERE ASSESSMENT_ID = :ASSESSMENTTYPEID
}

OCDNOQUE_SECURITY_CHECK_NEW_ {
	SELECT   coalesce(COUNT(CAL.UPDATE_ALLOWED_FLAG),0) FROM CASELOAD_AGENCY_LOCATIONS CAL WHERE CAL.UPDATE_ALLOWED_FLAG = 'Y' AND CAL.CASELOAD_ID = LV_CASELOAD_ID AND CAL.AGY_LOC_ID IN (SELECT OBAL.AGY_LOC_ID FROM OFFENDER_BOOKING_AGY_LOCS OBAL WHERE OBAL.OFFENDER_BOOK_ID = LV_OFF_BOOK_ID AND OBAL.REMOVED_DATE IS NULL)
}

OCDNOQUE_SECURITY_CHECK_NEW_ {
	SELECT   coalesce(COUNT(CAL.UPDATE_ALLOWED_FLAG),0) FROM CASELOAD_AGENCY_LOCATIONS CAL WHERE CAL.UPDATE_ALLOWED_FLAG = 'Y' AND CAL.CASELOAD_ID = LV_CASELOAD_ID AND CAL.AGY_LOC_ID IN (SELECT OBAL.AGY_LOC_ID FROM OFFENDER_BOOKING_AGY_LOCS OBAL WHERE OBAL.OFFENDER_BOOK_ID = LV_OFF_BOOK_ID /*AND OBAL.REMOVED_DATE IS NULL*/)
}

OCDNOQUE_SECURITY_CHECK_NEW_ {
	SELECT   coalesce(COUNT(CAL.UPDATE_ALLOWED_FLAG),0) FROM CASELOAD_AGENCY_LOCATIONS CAL WHERE CAL.UPDATE_ALLOWED_FLAG = 'Y' AND CAL.CASELOAD_ID = LV_CASELOAD_ID AND CAL.AGY_LOC_ID = LV_AGY_LOC_ID
}

OCDNOQUE_SECURITY_CHECK_NEW_ {
	SELECT   SAC.UPDATE_ALLOWED_FLAG FROM STAFF_ACCESSIBLE_CASELOADS SAC WHERE CASELOAD_ID = LV_CASELOAD_ID AND EXISTS ( SELECT 'X' FROM STAFF_MEMBERS SM WHERE SM.STAFF_ID = SAC.STAFF_ID AND SM.USER_ID = LV_USER_ID)
}

OCDNOQUE_POST_QUERY_FOR_OFF_ASS1_ {
	SELECT DESCRIPTION FROM AGENCY_LOCATIONS WHERE AGY_LOC_ID = :ASSESSMENTCREATELOCATION
}

OCDNOQUE_POST_QUERY_FOR_OFF_ASS1_ {
	SELECT LAST_NAME||', '||FIRST_NAME ||' '||MIDDLE_NAME FROM STAFF_MEMBERS WHERE STAFF_ID = :ASSESSORSTAFFID
}
OCDNOQUE_PRE_QUERY_FOR_GET_SORE {
  SELECT SUM(SCORE) FROM OFFENDER_ASSESSMENT_ITEMS WHERE OFFENDER_BOOK_ID=:OFFENDER_BOOK_ID AND  ASSESSMENT_SEQ = :ASSESSMENT_SEQ 
  }
  
  OCDNOQUE_POST_QUERY_FOR_GET_REVIEW_SUP_LEVEL_TYPE{
   SELECT * FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID AND ASSESSMENT_SEQ = (SELECT MAX(ASSESSMENT_SEQ) FROM OFFENDER_ASSESSMENTS  WHERE OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID  AND REVIEW_SUP_LEVEL_TYPE IS NOT NULL)
}
OCDNOQUE_OFFASS1_POST_INSERT_UPDATE_OFFENDER_ASSESSMENTS {
 UPDATE offender_assessments
         SET assess_status = 'I',
         	modify_user_id= :modifyUserId,
   	        modify_datetime = current_timestamp
       WHERE offender_book_id = l_offender_book_id
         AND assessment_seq   = l_prevass_seq
}
OCDNOQUE_GET_MAX_ASSESSMENT_DATE_CUR {
SELECT MAX(ASSESSMENT_DATE) FROM OFFENDER_ASSESSMENTS WHERE OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID AND ASSESSMENT_TYPE_ID = :ASSESSMENT_TYPE_ID
AND ('' IS NULL OR ASSESSMENT_SEQ IS NOT NULL)
 }
OCDNOQUE_SCORE_RANGE{
select min(mini_score) as minScore ,max(max_score) as maxScore,assessment_id  from assessment_supervisions where active_flag ='Y' group by assessment_id 
 }
 
 OCDNOQUE_GET_STAFF_IDS{
 SELECT STAFF_ID,USER_ID ,CONCAT(LAST_NAME||', '|| FIRST_NAME) as FIRST_NAME FROM STAFF_MEMBERS SM 
 }
 
OCDNOQUE_GET_WORKING_CASELOAD_TYPE{
select caseload_type from caseloads where caseload_id = ( select working_caseload_id from staff_members where user_id = upper(:UserID) )
}

OCDNOQUE_GET_AUTHORITY{
select rc.code ,rc.description,rc.active_flag,list_seq  from reference_codes rc where "domain" = 'ASSESS_COMM' and parent_code =:parentcode order by list_seq
}


OCDNOQUE_GET_EVAL_RECORDS{
select ASSESS.DESCRIPTION DESCRIPTION , ASSESS.REVIEW_CYCLE_DAYS REVIEW_CYCLE_DAYS , ASSESS.ASSESSMENT_ID ASSESSMENT_ID , ASSESS.CASELOAD_TYPE CASELOAD_TYPE , ASSESS.REQUIRE_APPROVAL_FLAG REQUIRE_APPROVAL_FLAG , ASSESS.DETERMINE_SUP_LEVEL_FLAG DETERMINE_SUP_LEVEL_FLAG , ASSESS.ASSESSMENT_CODE CODE , ASSESS.REVIEW_FLAG REVIEW_FLAG, ASSESS.screen_code , case when ASSESS.screen_code  in ('EVAL','BOTH')  and ASSESS.active_flag ='Y' then 'Y' else 'N' end as SEAL_FLAG from assessments ASSESS where ASSESS.parent_assessment_id is null
}
