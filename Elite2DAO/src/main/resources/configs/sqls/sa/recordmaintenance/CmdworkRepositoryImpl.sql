CMDWORK_FIND_RGWORKTYPE {
 	select
	REF_CODE.DESCRIPTION DESCRIPTION,
	REF_CODE.CODE CODE
from
	REFERENCE_CODES REF_CODE
where
	domain = 'TASK_TYPE'
	and (ACTIVE_FLAG = 'Y'
		and EXPIRED_DATE is null )
order by
	LIST_SEQ ,
	REF_CODE.DESCRIPTION
}

CMDWORK_FIND_RGMODULES_PROCESS_WORKFLOW {
 	SELECT DESCRIPTION, MODULE_NAME CODE FROM OMS_MODULES WHERE MODULE_TYPE = 'SCREEN' AND PROCESS_WORKFLOW = 'Y' AND  DESCRIPTION IS NOT NULL ORDER BY 1
}

CMDWORK_FIND_RGMODULES_USER_TASK {
 	SELECT DESCRIPTION, MODULE_NAME CODE FROM OMS_MODULES WHERE MODULE_TYPE = 'SCREEN' AND USER_TASK = 'Y' AND  DESCRIPTION IS NOT NULL ORDER BY 1
}

CMDWORK_FIND_RGPROCESS{
select
  to_char(A.PROCESS_ID) CODE, A.PROCESS_DESC DESCRIPTION
from
  (select Process_key ,max(def_version) max_def_version
   from BPMN_PROCESS
   where
     def_version is not null group by Process_key )B, BPMN_PROCESS A
where
  A.def_version=B.max_def_version and
  A.Process_key=B.Process_key
--	SELECT BPMN_PROS.PROCESS_ID CODE, BPMN_PROS.PROCESS_DESC DESCRIPTION FROM BPMN_PROCESS BPMN_PROS ORDER BY PROCESS_ID
}

CMDWORK_WORKITEMS_EXECUTE_QUERY{
	SELECT WORK_ID, BUSINESS_FUNCTION, TRIGGER_ID, PROCESS, ADD_TRIGGER, UPDATE_TRIGGER, DELETE_TRIGGER, CREATE_USER_ID, MODIFY_DATETIME, MODIFY_USER_ID, CREATE_DATETIME FROM WORK_ITEMS WHERE TRIGGER_ID IS NOT NULL ORDER BY WORK_ID
}

CMDWORK_INSERT_WORKITEMS{
	INSERT INTO WORK_ITEMS(WORK_ID, BUSINESS_FUNCTION, TRIGGER_ID, PROCESS, ADD_TRIGGER, UPDATE_TRIGGER, DELETE_TRIGGER, CREATE_USER_ID, MODIFY_DATETIME, MODIFY_USER_ID, CREATE_DATETIME) 
	VALUES(:workId, :businessFunction, :triggerId, :process, :addTrigger, :updateTrigger, :deleteTrigger, :createUserId,null, null,CURRENT_TIMESTAMP)
}

CMDWORK_UPDATE_WORKITEMS{
	UPDATE WORK_ITEMS SET BUSINESS_FUNCTION = :businessFunction, TRIGGER_ID = :triggerId, PROCESS = :process, ADD_TRIGGER = :addTrigger, UPDATE_TRIGGER = :updateTrigger, DELETE_TRIGGER = :deleteTrigger, MODIFY_DATETIME =CURRENT_TIMESTAMP, MODIFY_USER_ID = :modifyUserId WHERE WORK_ID = :workId
}
CMDWORK_UPDATE_WORKITEMS_ON_PROCESS_DEPLOY { 
UPDATE WORK_ITEMS SET BUSINESS_FUNCTION = :businessFunction, TRIGGER_ID = :triggerId, PROCESS = :process, MODIFY_DATETIME =CURRENT_TIMESTAMP, MODIFY_USER_ID = :modifyUserId WHERE WORK_ID = :workId
}

CMDWORK_DELETE_WORKITEMS{
	DELETE FROM WORK_ITEMS WHERE WORK_ID = :workId
}

CMDWORK_WORKITEMS_PREINSERT {
	SELECT  NEXTVAL('WORK_ITEMS_WORK_ID_SEQ') FROM DUAL
}

CMDWORK_GET_WORK_ID {
	SELECT WORK_ID from WORK_ITEMS where PROCESS = :processId
}

CMDWORK_GET_RELATED_DTO {
	SELECT DTO_NAME FROM MODULE_TRIGGERS WHERE MODULE_NAME = :moduleName
}

CMDWORK_RGMODULE_TRIGGERS_RECORD_GROUP {
	SELECT MODULE_NAME, MODULE_DESCRIPTION, TRIGGER_NAME, TRIGGER_ID CODE, DTO_NAME FROM MODULE_TRIGGERS ORDER BY 1
}

CMDWORK_DELETE_TRIGGER {
	DELETE FROM WORK_ITEMS WHERE TRIGGER_ID = :triggerId
}

CMDWORK_VALIDATE_DEPLOY {
		SELECT 
  B.PROCESS_ID, B.PROCESS_KEY, B.DEPLOYE_ID, B.PROCESS_DESC, 
  B.DEPLOY_FLAG, B.HISTORY_FLAG, B.CREATE_DATETIME, B.CREATE_USER_ID, 
  B.MODIFY_DATETIME, B.MODIFY_USER_ID, B.PROC_DEF_ID, B.DEF_VERSION, 
  B.TRIGGER_ID, B.DEPLOY_DATETIME, B.DEPLOY_USER_ID
FROM 
  (SELECT PROCESS
   FROM WORK_ITEMS
   WHERE
     TRIGGER_ID=:triggerId)A, BPMN_PROCESS B
WHERE
  A.PROCESS=B.PROCESS_ID AND
  B.PROCESS_DESC<> 
    (SELECT PROCESS_DESC
     FROM BPMN_PROCESS
     WHERE
       PROCESS_ID=:process)
}
CMDWORK_DELETE_WORKITEMS_BY_TRIG_ID{
	DELETE FROM WORK_ITEMS WHERE trigger_id = :triggerId
}

GET_MODULE_TRIGGER_DATA {
	SELECT MODULE_NAME, MODULE_DESCRIPTION, TRIGGER_NAME, TRIGGER_ID CODE, DTO_NAME FROM MODULE_TRIGGERS WHERE TRIGGER_ID=:triggerId
}
