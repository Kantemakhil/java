
OIDSTEST_FIND_RGWITNESS {
 	SELECT LAST_NAME || ', ' || FIRST_NAME DESCRIPTION ,        STAFF_ID  CODE    FROM STAFF_MEMBERS   WHERE STATUS = 'ACTIVE'    AND (STAFF_ID::text != :TAKENSTAFFID::text OR :TAKENSTAFFID::text IS NULL )  ORDER BY LAST_NAME ASC
}

OIDSTEST_FIND_RGSUBTESRSLT {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'SUB_TES_RSLT'
	and (ACTIVE_FLAG = 'Y'
	)
order by
	LIST_SEQ ,
	DESCRIPTION
}

OIDSTEST_FIND_RGSUBTESDISP {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'SUB_TES_DISP'
	and (ACTIVE_FLAG = 'Y'
	)
order by
	LIST_SEQ ,
	DESCRIPTION
}

OIDSTEST_FIND_RGSUBTESTYPE {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'SUB_TES_TYPE'
	and (ACTIVE_FLAG = 'Y'
	)
order by
	LIST_SEQ asc
}

OIDSTEST_FIND_RGSUBTESRSN {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'SUB_TES_RSN'
	and (ACTIVE_FLAG = 'Y' )
order by
	LIST_SEQ ,
	DESCRIPTION
}

OIDSTEST_FIND_RGTAKENBY {
SELECT LAST_NAME || ', ' || FIRST_NAME  DESCRIPTION,        STAFF_ID  CODE  FROM STAFF_MEMBERS   
 	WHERE STATUS = 'ACTIVE'    AND (STAFF_ID::text != :STAFF_ID::text OR :STAFF_ID::text IS NULL )  ORDER BY LAST_NAME ASC  
}

OIDSTEST_FIND_RGTESTEDBY {
 	select
	(STAFF2.LAST_NAME || ', ' || STAFF2.FIRST_NAME ) DESCRIPTION ,
	STAFF2.STAFF_ID  STAFF_ID ,
	null CODE
from
	STAFF_MEMBERS STAFF2
where
	STATUS = 'ACTIVE'
	and (:EXTAGENCY = 'N'
	or :EXTAGENCY is null )
union
select
	CORP.CORPORATE_NAME as  NAME ,
	null STAFF_ID ,
	to_char(CORP.CORPORATE_ID) CORP_ID
from
	CORPORATES CORP
where
	CORP.SUSPENDED_FLAG != 'Y'
	and CORP.ACTIVE_FLAG = 'Y'
	and (EXPIRY_DATE is null
	or EXPIRY_DATE < current_timestamp)
	and :EXTAGENCY = 'Y'
order by
	DESCRIPTION asc
}

OIDSTEST_FIND_RGSUBSTANCE {
 	select
	DESCRIPTION ,
	CODE
from
	REFERENCE_CODES
where
	domain = 'SUBSTANCE'
	and (ACTIVE_FLAG = 'Y'
	)
order by
	CODE
}

OIDSTEST_SUBSAMPL_FIND_OFFENDER_SAMPLES {
 	SELECT *  FROM OFFENDER_SAMPLES  WHERE  OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID ORDER BY SAMPLE_DATE DESC
}
OIDSTEST_SUBSAMPL_INSERT_OFFENDER_SAMPLES {
INSERT INTO OFFENDER_SAMPLES(OFFENDER_BOOK_ID, SAMPLE_DATE, SAMPLE_TYPE, SAMPLE_REASON, TAKEN_STAFF_ID, WITNESS_STAFF_ID, COMMENT_TEXT, OFF_CC_ID, SAMPLE_TIME, SEAL_FLAG, OFFENDER_SAMPLE_ID, EXTERNAL_TEST_AGENCY_FLAG, TEST_STAFF_ID, TEST_CORPORATE_ID, SAMPLE_TEST_DATE, CREATE_DATETIME,CREATE_USER_ID ,TESTED_POSITIVE_FLAG)
	VALUES(:offenderBookId,:sampleDate,:sampleType,:sampleReason,:takenStaffId,:witnessStaffId,:commentText,:ofCcId,:sampleTime,:sealFlag,nextVal('OFFENDER_SAMPLE_ID_SEQ'),:externalTestAgencyFlag,:testStaffId,:testCorporateId,:sampleTestDate,CURRENT_TIMESTAMP,:createUserId,:testedByTemp)
}

OIDSTEST_SUBSAMPL_UPDATE_OFFENDER_SAMPLES {
	UPDATE OFFENDER_SAMPLES   
	  SET SAMPLE_DATE=:sampleDate, SAMPLE_TYPE=:sampleType, SAMPLE_REASON=:sampleReason, TAKEN_STAFF_ID=:takenStaffId, WITNESS_STAFF_ID=:witnessStaffId, COMMENT_TEXT=:commentText, OFF_CC_ID=:ofCcId, SAMPLE_TIME=:sampleTime, SEAL_FLAG=:sealFlag, EXTERNAL_TEST_AGENCY_FLAG=:externalTestAgencyFlag, TEST_STAFF_ID=:testStaffId, TEST_CORPORATE_ID=:testCorporateId, SAMPLE_TEST_DATE=:sampleTestDate,
	  MODIFY_DATETIME =CURRENT_TIMESTAMP, MODIFY_USER_ID =:modifyUserId, TESTED_POSITIVE_FLAG =:testedPositiveFlag
	WHERE OFFENDER_BOOK_ID =:offenderBookId and OFFENDER_SAMPLE_ID=:offenderSampleId
}

OIDSTEST_SUBSAMPL_DELETE_OFFENDER_SAMPLES { 
	DELETE FROM OFFENDER_SAMPLES WHERE OFFENDER_BOOK_ID =:offenderBookId and OFFENDER_SAMPLE_ID=:offenderSampleId
}

OIDSTEST_SUBTEST_FIND_OFFENDER_SAMPLE_SUBSTANCES {
 	select
	*
from
	OFFENDER_SAMPLE_SUBSTANCES
where
	OFFENDER_SAMPLE_ID = :OFFENDER_SAMPLE_ID
order by
	case
		when result_code =(
		select
			code
		from
			reference_codes
		where
			domain = 'SUB_TES_RSLT'
			and code = result_code
			and parent_code = 'P') then 1
	end ,
	oms_miscellaneous_getdesccode('SUBSTANCE',
	substance_code),
	SUBSTANCE_CODE

}
OIDSTEST_SUBTEST_INSERT_OFFENDER_SAMPLE_SUBSTANCES {
	INSERT INTO OFFENDER_SAMPLE_SUBSTANCES(OFFENDER_SAMPLE_SUBSTANCE_ID, OFFENDER_SAMPLE_ID, SUBSTANCE_CODE, RESULT_CODE, DISPOSITION_CODE, COMMENT_TEXT, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, SEAL_FLAG)
	VALUES(nextVal('OFFENDER_SAMPLE_SUBS_ID_SEQ'),:offenderSampleId,:substanceCode,:resultCode,:dispositionCode,:commentText,CURRENT_TIMESTAMP,:createUserId,null,:sealFlag)
}

OIDSTEST_SUBTEST_UPDATE_OFFENDER_SAMPLE_SUBSTANCES {
	UPDATE OFFENDER_SAMPLE_SUBSTANCES 
	SET   SUBSTANCE_CODE=:substanceCode, RESULT_CODE=:resultCode, DISPOSITION_CODE=:dispositionCode, COMMENT_TEXT=:commentText,
	MODIFY_DATETIME =CURRENT_TIMESTAMP, MODIFY_USER_ID =:modifyUserId
	WHERE OFFENDER_SAMPLE_SUBSTANCE_ID =:offenderSampleSubstanceId
}

OIDSTEST_SUBTEST_DELETE_OFFENDER_SAMPLE_SUBSTANCES { 
	DELETE FROM OFFENDER_SAMPLE_SUBSTANCES WHERE OFFENDER_SAMPLE_SUBSTANCE_ID =:offenderSampleSubstanceId
}

OIDSTEST_SYSPFL_FIND_SYSTEM_PROFILES {
 	SELECT PROFILE_TYPE ,PROFILE_CODE ,DESCRIPTION ,PROFILE_VALUE ,PROFILE_VALUE_2 ,MODIFY_USER_ID ,OLD_TABLE_NAME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG   FROM SYSTEM_PROFILES  /* where  */
}

OIDSTEST_SUB_SAMPL_POSTQUERY_STAFFID {
	SELECT STAFF1.LAST_NAME||', '||STAFF1.FIRST_NAME LAST_NAME , STAFF_ID FROM STAFF_MEMBERS STAFF1 WHERE STAFF1.STAFF_ID = :TESTSTAFFID
}

OIDSTEST_SUB_SAMPL_POSTQUERY_CORPORATE_ID {
	SELECT CORPORATE_NAME, CORPORATE_ID FROM CORPORATES WHERE CORPORATE_ID  = :TESTCORPORATEID
}

OIDSTEST_SUB_SAMPL_PREINSERT {
	select
	NEXTVAL('OFFENDER_SAMPLE_ID_SEQ')
from
	DUAL
}

OIDSTEST_SUB_SAMPL_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_SAMPLE_SUBSTANCES O WHERE O.OFFENDER_SAMPLE_ID = :OFFENDERSAMPLEID
}

OIDSTEST_SUB_TEST_PREINSERT {
	select
	NEXTVAL('OFFENDER_SAMPLE_SUBS_ID_SEQ')

from
	DUAL
}

OIDSTEST_OIDSTEST_PREINSERT_ {
	select
	coalesce(MAX(SAMPLE_SEQ),
	0)+ 1
from
	SUBSTANCE_SAMPLES
}

OIDSTEST_OIDSTEST_PREINSERT_ {
	SELECT coalesce(MAX(TEST_SEQ),0)+1 FROM SUBSTANCE_TESTS
}

OIDSTEST_SET_POSITIVE_FLAG {
	SELECT PARENT_CODE FROM REFERENCE_CODES WHERE CODE IN (SELECT RESULT_CODE FROM OFFENDER_SAMPLE_SUBSTANCES WHERE OFFENDER_SAMPLE_ID = :OFFENDERSAMPLEID) AND DOMAIN = 'SUB_TES_RSLT' AND PARENT_CODE IS NOT NULL
}

OIDSTEST_SET_DATE_TESTED {
	SELECT COUNT(*) FROM OFFENDER_SAMPLE_SUBSTANCES WHERE OFFENDER_SAMPLE_ID = :OFFENDERSAMPLEID
}


OIDSTEST_SUBTEST_FIND_SUBSTANCE_SAMPLES {
 	SELECT *  FROM SUBSTANCE_SAMPLES   WHERE  OFFENDER_BOOK_ID = :OFFENDER_BOOK_ID
}


OIDSTEST_SET_TESTED_POSITIVE_FLAG {
select
	count(*)
from
	OFFENDER_SAMPLE_SUBSTANCES oss
where
	OFFENDER_SAMPLE_ID = :OFFENDERSAMPLEID
	and 'POS' in(
	select
		rc.parent_code
	from 
		reference_codes rc
	where
		rc.domain = 'SUB_TES_RSLT'
		and rc.active_flag = 'Y'
		and oss.result_code = rc.code)
}