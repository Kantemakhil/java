
OIDEHLOC_FIND_RGASSIGNMENTREASON {
 	SELECT  CODE ,DESCRIPTION    FROM REFERENCE_CODES   WHERE DOMAIN = 'CHG_HOUS_RSN' AND ACTIVE_FLAG ='Y'
}

OIDEHLOC_VOFFBKG_FIND_V_HEADER_BLOCK {
 	SELECT OFFENDER_ID ,ALIAS_OFFENDER_ID ,OFFENDER_ID_DISPLAY ,LAST_NAME ,FIRST_NAME ,MIDDLE_NAME ,SUFFIX ,BIRTH_DATE ,OFFENDER_BOOK_ID ,BOOKING_NO ,BOOKING_BEGIN_DATE ,BOOKING_END_DATE ,AGY_LOC_ID ,AGENCY_IML_ID ,LIVING_UNIT_ID ,DISCLOSURE_FLAG ,ACTIVE_FLAG ,BOOKING_STATUS ,LIVING_UNIT_DESCRIPTION ,IN_OUT_STATUS ,STATUS_DISPLAY ,ROOT_OFFENDER_ID ,ASSIGNED_STAFF_ID ,AGY_LOC_TYPE ,CREATE_AGY_LOC_ID ,BOOKING_TYPE ,BOOKING_CREATED_DATE ,LOCATION_CODE ,LIV_UNIT_DESC ,INTAKE_AGY_LOC_ID ,COMMUNITY_ACTIVE_FLAG ,CREATE_INTAKE_AGY_LOC_ID ,COMMUNITY_STATUS ,STATUS_REASON ,HEADER_STATUS ,AGE ,GENDER ,OFFICER ,PRISON_LOCATION ,OFF_ALERTS ,STATUS_1 ,STATUS_2 ,STATUS_3 ,ETHNICITY ,MOVEMENT_REASON ,OFF_SUP_LEVEL   FROM V_HEADER_BLOCK_FN(:USERID) V_HEADER_BLOCK  
}
OIDEHLOC_VOFFBKG_UPDATE_V_HEADER_BLOCK {
	UPDATE V_HEADER_BLOCK set OFFENDER_ID  = :offenderId ,ALIAS_OFFENDER_ID  = :aliasOffenderId ,OFFENDER_ID_DISPLAY  
	= :offenderIdDisplay ,LAST_NAME  = :lastName ,FIRST_NAME  = :firstName ,MIDDLE_NAME  = :middleName ,SUFFIX  = :suffix ,
	BIRTH_DATE  = :birthDate ,OFFENDER_BOOK_ID  = :offenderBookId ,BOOKING_NO  = :bookingNo ,
	BOOKING_BEGIN_DATE  = :bookingBeginDate ,BOOKING_END_DATE  = :bookingEndDate ,AGY_LOC_ID  = :agyLocId ,
	AGENCY_IML_ID  = :agencyImlId ,LIVING_UNIT_ID  = :livingUnitId ,DISCLOSURE_FLAG  = :disclosureFlag ,
	ACTIVE_FLAG  = :activeFlag ,BOOKING_STATUS  = :bookingStatus ,LIVING_UNIT_DESCRIPTION  = :livingUnitDescription ,
	IN_OUT_STATUS  = :inOutStatus ,STATUS_DISPLAY  = :statusDisplay ,ROOT_OFFENDER_ID  = :rootOffenderId ,
	ASSIGNED_STAFF_ID  = :assignedStaffId ,AGY_LOC_TYPE  = :agyLocType ,CREATE_AGY_LOC_ID  = :createAgyLocId ,
	BOOKING_TYPE  = :bookingType ,BOOKING_CREATED_DATE  = :bookingCreatedDate ,LOCATION_CODE  = :locationCode ,
	LIV_UNIT_DESC  = :livUnitDesc ,INTAKE_AGY_LOC_ID  = :intakeAgyLocId ,COMMUNITY_ACTIVE_FLAG  = :communityActiveFlag ,
	CREATE_INTAKE_AGY_LOC_ID  = :createIntakeAgyLocId ,COMMUNITY_STATUS  = :communityStatus ,
	STATUS_REASON  = :statusReason ,HEADER_STATUS  = :headerStatus ,AGE  = :age ,GENDER  = :gender ,OFFICER  = :officer ,
	PRISON_LOCATION  = :prisonLocation ,OFF_ALERTS  = :offAlerts ,STATUS_1  = :status1 ,STATUS_2  = :status2 ,
	STATUS_3  = :status3 ,ETHNICITY  = :ethnicity ,MOVEMENT_REASON  = :movementReason ,OFF_SUP_LEVEL  = :offSupLevel  where
	OFFENDER_ID  = :offenderId
}

OIDEHLOC_SYSPFL_FIND_SYSTEM_PROFILES {
 	SELECT PROFILE_TYPE ,PROFILE_CODE ,DESCRIPTION ,PROFILE_VALUE ,PROFILE_VALUE_2 ,MODIFY_USER_ID ,OLD_TABLE_NAME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG   FROM SYSTEM_PROFILES  /* where  */
}

OIDEHLOC_CGWHEN_NEW_FORM_INSTANCE_ {
	SELECT  SYSDATE, USER FROM    SYS.DUAL
}
OIDEHLOC_STAFF_MEMBERS_ID {
 SELECT STAFF_ID FROM STAFF_MEMBERS WHERE UPPER(USER_ID) =:userId AND STATUS = 'ACTIVE'

}
OIDEHLOC_STAFF_MEMBER_ROLES {
SELECT 'Y' FROM STAFF_MEMBER_ROLES SMR, OMS_ROLES R WHERE SMR.ROLE_ID = R.ROLE_ID AND UPPER(R.ROLE_CODE) = 'MOVE_ADMIN' AND SMR.STAFF_ID = :STAFFID
}
OIDEHLOC_OFFENDER_BOOKINGS {
 UPDATE OFFENDER_BOOKINGS SET LIVING_UNIT_ID = :livingUnitId, modify_datetime = CURRENT_TIMESTAMP,MODIFY_USER_ID=:modifyUserId WHERE OFFENDER_BOOK_ID = :offenderBookId
}
OIDEHLOC_BED_ASSIGNMENT_HISTORIES {
SELECT COALESCE( MAX( BED_ASSIGN_SEQ), 0) FROM BED_ASSIGNMENT_HISTORIES WHERE OFFENDER_BOOK_ID = :offenderBookId

}
OIDEHLOC_UPDATE_BED_ASSIGNMENT_HISTORIES {
 UPDATE BED_ASSIGNMENT_HISTORIES SET ASSIGNMENT_END_DATE = date_trunc('day',current_timestamp ), 
 ASSIGNMENT_END_TIME = current_timestamp,modify_user_id =:modifyUserId, modify_datetime = current_timestamp WHERE OFFENDER_BOOK_ID = :offenderBookId   AND BED_ASSIGN_SEQ = :bedAssignSeq

}
OIDEHLOC_INSERT_BED_ASSIGNMENT_HISTORIES {

INSERT INTO BED_ASSIGNMENT_HISTORIES ( OFFENDER_BOOK_ID,
                BED_ASSIGN_SEQ,
                LIVING_UNIT_ID,
                ASSIGNMENT_DATE,
                ASSIGNMENT_TIME,
                ASSIGNMENT_REASON,
                CREATE_USER_ID,
                CREATE_DATETIME
               )
       VALUES ( :offenderBookId, :bedAssignSeq,:livingUnitId, date_trunc('day',current_timestamp ), current_timestamp, :assignmentReason,:createUserId,current_timestamp)
}
OIDEHLOC_CHECK_OFF_STATUS {
SELECT ACTIVE_FLAG FROM OFFENDER_BOOKINGS WHERE OFFENDER_BOOK_ID = :offenderBookId
}
OIDEHLOC_GET_OFFENDER_BOOK_ID {
	SELECT OFFENDER_BOOK_ID FROM V_HEADER_BLOCK_FN(:USERID) V_HEADER_BLOCK WHERE OFFENDER_ID_DISPLAY = :offenderIdDisplay
}
OIDEHLOC_GETTING_OLD_RECORDS{
select * from OFFENDER_BOOKINGS where offender_book_id =:offenderBokkId

}
OIDEHLOC_CHECK_OVERRIDE_LOCATION
{
select
	'Y'
from
	STAFF_MEMBER_ROLES SMR,
	OMS_ROLES R
where
	SMR.ROLE_ID = R.ROLE_ID
	and UPPER(R.ROLE_CODE) = 'MOVE_ADMIN'
	and SMR.STAFF_ID = (SELECT STAFF_ID FROM STAFF_MEMBERS WHERE UPPER(USER_ID) =:userId AND STATUS = 'ACTIVE')
}

	 	   