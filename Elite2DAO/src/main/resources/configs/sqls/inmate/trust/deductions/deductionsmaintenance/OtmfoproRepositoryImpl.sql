
OTMFOPRO_FIND_CGFKCSLDDDRECEIPTTXNTYPE {
 	SELECT TXN_TYPE.TXN_TYPE CODE  ,TXN_TYPE.DESCRIPTION DESCRIPTION FROM TRANSACTION_TYPES TXN_TYPE WHERE TXN_USAGE = 'R' AND ACTIVE_FLAG = 'Y' AND ALL_CASELOAD_FLAG = 'Y' AND CASELOAD_TYPE = :caseloadType ORDER BY TXN_TYPE.TXN_TYPE  ,TXN_TYPE.DESCRIPTION
}

OTMFOPRO_FIND_RGCONDITION {
 	SELECT CC.COMM_CONDITION_TYPE ,         CC.COMM_CONDITION_CODE ,         CC.DESCRIPTION ,         CC.CATEGORY_TYPE    FROM COMMUNITY_CONDITIONS CC   WHERE CC.PROGRAM_METHOD = 'FIN'     AND ((ACTIVE_FLAG = 'Y' AND EXPIRY_DATE IS NULL ) OR         '' = 'QUERY' )   ORDER BY CC.LIST_SEQ ,            CC.DESCRIPTION
}

OTMFOPRO_FIND_CGFKCSLDDPACCOUNTCODE {
 	SELECT TO_CHAR(AC_CODE.ACCOUNT_CODE) CODE /* CG$FK */  ,INITCAP(AC_CODE.ACCOUNT_NAME ) DESCRIPTION FROM ACCOUNT_CODES AC_CODE WHERE POSTING_STATUS_FLAG = 'Y' AND SUB_ACCOUNT_TYPE IS NULL AND CASELOAD_TYPE = :caseloadType ORDER BY AC_CODE.ACCOUNT_CODE ,INITCAP(AC_CODE.ACCOUNT_NAME )
}

OTMFOPRO_FIND_RGCORP {
 	SELECT CRP.CORPORATE_ID , CORPORATE_NAME  FROM CORPORATES CRP , CORPORATE_TYPES CTP WHERE CRP.CORPORATE_ID = CTP.CORPORATE_ID  AND CTP.CORPORATE_TYPE NOT IN ('VENDOR' ,'PROGRAM' ) UNION (SELECT CORPORATE_ID ,  CORPORATE_NAME   FROM CORPORATES CRP2  WHERE NOT EXISTS ( SELECT 1 FROM CORPORATE_TYPES CTP2 WHERE CRP2.CORPORATE_ID = CTP2.CORPORATE_ID  )  ) ORDER BY 1
}

OTMFOPRO_FIND_CGFKCSLDDPDEDUCTIONTYPE {
 	SELECT DED_TYPE.DEDUCTION_TYPE CODE /* CG$FK */ , INITCAP(DED_TYPE.DEDUCTION_DESC ) DESCRIPTION FROM DEDUCTION_TYPES DED_TYPE WHERE DED_TYPE.DEDUCTION_CATEGORY IN ('FXOB' ,'TAX' ) AND DED_TYPE.CASELOAD_CODE IN ('BOTH' , :caseloadType ) ORDER BY DED_TYPE.DEDUCTION_TYPE
}

OTMFOPRO_CSLDDP_FIND_CASELOAD_DEDUCTION_PROFILES {
SELECT  DELAY_RECAPTURE, ACTIVE_FLAG, CASELOAD_ID, DEDUCTION_TYPE, EFFECTIVE_DATE, FIFO_FLAG, FO_AL_ALL_OFFENDER_FLAG, PERCENTAGE, INTERNAL_PRIORITY_NO, EXTERNAL_PRIORITY_NO, ACCOUNT_CODE, CO_LIMIT_AMOUNT, CO_CREDIT_WHEN_INDIGENT_FLAG, MAX_MONTHLY_AMOUNT, MAX_TOTAL_AMOUNT, EXPIRY_DATE, PAYEE_PERSON_ID, PAYEE_CORPORATE_ID, MODIFY_USER_ID, MODIFY_DATE, LIST_SEQ, FLAT_RATE, MINIMUM_TRUST_BALANCE, INDIGENT_MANDATORY_FLAG, COMM_CONDITION_TYPE, COMM_CONDITION_CODE, MAX_RECURSIVE_AMOUNT, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, CATEGORY_TYPE, SEAL_FLAG FROM CASELOAD_DEDUCTION_PROFILES 
    WHERE  CASELOAD_ID = :caseloadId #param AND DEDUCTION_TYPE IN (SELECT DEDUCTION_TYPE FROM DEDUCTION_TYPES WHERE DEDUCTION_CATEGORY IN ('FXOB', 'TAX') AND CASELOAD_CODE IN ('BOTH',:caseloadType))
}
OTMFOPRO_CSLDDP_INSERT_CASELOAD_DEDUCTION_PROFILES {
    insert into CASELOAD_DEDUCTION_PROFILES(DELAY_RECAPTURE, ACTIVE_FLAG, CASELOAD_ID, DEDUCTION_TYPE, EFFECTIVE_DATE, FIFO_FLAG, FO_AL_ALL_OFFENDER_FLAG, PERCENTAGE, INTERNAL_PRIORITY_NO, EXTERNAL_PRIORITY_NO, ACCOUNT_CODE, CO_LIMIT_AMOUNT, CO_CREDIT_WHEN_INDIGENT_FLAG, MAX_MONTHLY_AMOUNT, MAX_TOTAL_AMOUNT, EXPIRY_DATE, PAYEE_PERSON_ID, PAYEE_CORPORATE_ID, MODIFY_DATE, LIST_SEQ, FLAT_RATE, MINIMUM_TRUST_BALANCE, INDIGENT_MANDATORY_FLAG, COMM_CONDITION_TYPE, COMM_CONDITION_CODE, MAX_RECURSIVE_AMOUNT, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, CATEGORY_TYPE, SEAL_FLAG) values( :delayRecapture, :activeFlag, :caseloadId, :deductionType, :effectiveDate, :fifoFlag, :foAlAllOffenderFlag, :percentage, :internalPriorityNo, :externalPriorityNo, :accountCode, :coLimitAmount, :coCreditWhenIndigentFlag, :maxMonthlyAmount, :maxTotalAmount, :expiryDate, :payeePersonId, :payeeCorporateId, CURRENT_TIMESTAMP, :listSeq, :flatRate, :minimumTrustBalance, :indigentMandatoryFlag, :commConditionType, :commConditionCode, :maxRecursiveAmount, CURRENT_TIMESTAMP, :createUserId , CURRENT_TIMESTAMP, :categoryType, :sealFlag) 
}

OTMFOPRO_CSLDDP_UPDATE_CASELOAD_DEDUCTION_PROFILES {
    update CASELOAD_DEDUCTION_PROFILES set DELAY_RECAPTURE = :delayRecapture , ACTIVE_FLAG = :activeFlag , EFFECTIVE_DATE = :effectiveDate , FIFO_FLAG = :fifoFlag , FO_AL_ALL_OFFENDER_FLAG = :foAlAllOffenderFlag , PERCENTAGE = :percentage , INTERNAL_PRIORITY_NO = :internalPriorityNo , EXTERNAL_PRIORITY_NO = :externalPriorityNo , ACCOUNT_CODE = :accountCode , CO_LIMIT_AMOUNT = :coLimitAmount , CO_CREDIT_WHEN_INDIGENT_FLAG = :coCreditWhenIndigentFlag , MAX_MONTHLY_AMOUNT = :maxMonthlyAmount , MAX_TOTAL_AMOUNT = :maxTotalAmount , EXPIRY_DATE = :expiryDate , PAYEE_PERSON_ID = :payeePersonId , PAYEE_CORPORATE_ID = :payeeCorporateId , LIST_SEQ = :listSeq , FLAT_RATE = :flatRate , MINIMUM_TRUST_BALANCE = :minimumTrustBalance , INDIGENT_MANDATORY_FLAG = :indigentMandatoryFlag , COMM_CONDITION_TYPE = :commConditionType , COMM_CONDITION_CODE = :commConditionCode , MAX_RECURSIVE_AMOUNT = :maxRecursiveAmount , CATEGORY_TYPE = :categoryType , SEAL_FLAG = :sealFlag, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where CASELOAD_ID = :caseloadId and DEDUCTION_TYPE = :deductionType 
}

OTMFOPRO_CSLDDP_DELETE_CASELOAD_DEDUCTION_PROFILES { 
	DELETE FROM CASELOAD_DEDUCTION_PROFILES WHERE CASELOAD_ID = :caseloadId AND DEDUCTION_TYPE = :deductionType
}

OTMFOPRO_CSLDDBEN_FIND_CASELOAD_DED_BENEFICIARIES {
 	SELECT ODB.* ,(SELECT CO_CREDIT_WHEN_INDIGENT_FLAG FROM CASELOAD_DEDUCTION_PROFILES WHERE CASELOAD_ID = ODB.CASELOAD_ID AND DEDUCTION_TYPE = ODB.DEDUCTION_TYPE)  CO_CREDIT_WHEN_INDIGENT_FLAG
FROM CASELOAD_DED_BENEFICIARIES ODB  WHERE ODB.CASELOAD_ID = :caseloadId AND ODB.DEDUCTION_TYPE = :deductionType
}
OTMFOPRO_CSLDDBEN_INSERT_CASELOAD_DED_BENEFICIARIES {
   insert into CASELOAD_DED_BENEFICIARIES(CASELOAD_DED_BENEFICIARY_ID, CASELOAD_ID, DEDUCTION_TYPE, PERSON_ID, CORPORATE_ID, PRIORITY, AMOUNT, percent, MODIFY_DATE, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, SEAL_FLAG ) values(NEXTVAL('CASELOAD_DED_BENEFICIARY_ID'), :caseloadId, :deductionType, :personId, :corporateId, :priority, :amount, :percent, CURRENT_DATE, CURRENT_TIMESTAMP, :createUserId, CURRENT_TIMESTAMP, :sealFlag) 
}

OTMFOPRO_CSLDDBEN_UPDATE_CASELOAD_DED_BENEFICIARIES {
    update CASELOAD_DED_BENEFICIARIES set PERSON_ID = :personId, CORPORATE_ID = :corporateId, PRIORITY = :priority, AMOUNT = :amount, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where CASELOAD_DED_BENEFICIARY_ID = :caseloadDedBeneficiaryId
}

OTMFOPRO_CSLDDBEN_DELETE_CASELOAD_DED_BENEFICIARIES { 
	DELETE FROM CASELOAD_DED_BENEFICIARIES WHERE CASELOAD_DED_BENEFICIARY_ID = :caseloadDedBeneficiaryId
}

OTMFOPRO_CSLDDD_FIND_CASELOAD_DEDUCTION_DETAILS {
 	SELECT *  FROM CASELOAD_DEDUCTION_DETAILS  WHERE CASELOAD_ID = :caseloadId AND DEDUCTION_TYPE = :deductionType
}
OTMFOPRO_CSLDDD_INSERT_CASELOAD_DEDUCTION_DETAILS {
 insert into CASELOAD_DEDUCTION_DETAILS(CASELOAD_ID, DEDUCTION_TYPE, RECEIPT_TXN_TYPE, PERCENTAGE, MODIFY_DATE, LIST_SEQ, FLAT_RATE, MINIMUM_TRUST_BALANCE_FLAG, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, SEAL_FLAG) values( :caseloadId, :deductionType, :receiptTxnType, :percentage, CURRENT_DATE, :listSeq, :flatRate, :minimumTrustBalanceFlag, CURRENT_TIMESTAMP, :createUserId , CURRENT_TIMESTAMP, :sealFlag) 
}

OTMFOPRO_CSLDDD_UPDATE_CASELOAD_DEDUCTION_DETAILS {
    update CASELOAD_DEDUCTION_DETAILS set PERCENTAGE = :percentage, FLAT_RATE = :flatRate, MINIMUM_TRUST_BALANCE_FLAG = :minimumTrustBalanceFlag, MODIFY_USER_ID = :modifyUserId ,MODIFY_DATE = CURRENT_DATE, MODIFY_DATETIME = CURRENT_TIMESTAMP where DEDUCTION_TYPE = :deductionType and CASELOAD_ID = :caseloadId and RECEIPT_TXN_TYPE = :receiptTxnType
}

OTMFOPRO_CSLDDD_DELETE_CASELOAD_DEDUCTION_DETAILS { 
	DELETE FROM CASELOAD_DEDUCTION_DETAILS WHERE DEDUCTION_TYPE = :deductionType AND CASELOAD_ID = :caseloadId AND RECEIPT_TXN_TYPE = :receiptTxnType
}


OTMFOPRO_CSLD_DP_PREDELETEPRE-DELETE {
	DELETE FROM CASELOAD_DED_BENEFICIARIES WHERE CASELOAD_ID = :CASELOADID AND DEDUCTION_TYPE = :DEDUCTIONTYPE
}

OTMFOPRO_CSLD_DP_PREDELETEPRE-DELETE {
	DELETE FROM CASELOAD_DEDUCTION_DETAILS WHERE CASELOAD_ID = :CASELOADID AND DEDUCTION_TYPE = :DEDUCTIONTYPE
}

OTMFOPRO_CSLD_DP_POSTQUERY {
	SELECT CC.DESCRIPTION INTO :CSLD_DP.DSP_DESCRIPTION2 FROM COMMUNITY_CONDITIONS CC WHERE COMM_CONDITION_TYPE = :CSLD_DP.COMM_CONDITION_TYPE AND COMM_CONDITION_CODE = :CSLD_DP.COMM_CONDITION_CODE AND CATEGORY_TYPE = :CSLD_DP.CATEGORY_TYPE
}

OTMFOPRO_CSLD_DBEN_PREINSERT_ {
    	select NEXTVAL('CASELOAD_DED_BENEFICIARY_ID')
}

OTMFOPRO_CREATE_FORM_GLOBALSCREATE_FORM_GLOBALS {
	SELECT DESCRIPTION INTO   V_FORM_DESC FROM   OMS_MODULES WHERE  MODULE_NAME = V_FORM_NAME
}

OTMFOPRO_CGFKCHK_CSLD_DP_DEDPROF_AC_CO_ {
	SELECT AC_CODE.ACCOUNT_NAME FROM   ACCOUNT_CODES AC_CODE WHERE  AC_CODE.ACCOUNT_CODE = :ACCOUNTCODE AND     POSTING_STATUS_FLAG = 'Y' AND SUB_ACCOUNT_TYPE IS NULL AND CASELOAD_TYPE = :CASELOADTYPE ORDER BY AC_CODE.ACCOUNT_CODE ,AC_CODE.ACCOUNT_NAME
}

OTMFOPRO_CGFKCHK_CSLD_DP_DEDPROF_DEDTY_ {
	SELECT DED_TYPE.DEDUCTION_DESC FROM   DEDUCTION_TYPES DED_TYPE WHERE  DED_TYPE.DEDUCTION_TYPE = :DEDUCTIONTYPE AND     DED_TYPE.DEDUCTION_TYPE IN (SELECT DED_TYPE.DEDUCTION_TYPE FROM DEDUCTION_TYPES WHERE DEDUCTION_CATEGORY = 'FXOB' AND CASELOAD_CODE IN ('BOTH',:CASELOADTYPE))
}

OTMFOPRO_CGFKCHK_CSLD_DBEN_CSLD_DBEN_P {
	SELECT PER.FIRST_NAME ,PER.LAST_NAME, PER.PERSON_ID FROM   PERSONS PER WHERE  PER.PERSON_ID = :personId
}

OTMFOPRO_CGFKCHK_CSLD_DBEN_CSLD_DBEN_C {
	SELECT CORP.CASELOAD_ID ,CORP.CORPORATE_NAME, CORP.CORPORATE_ID FROM   CORPORATES CORP WHERE  CORP.CORPORATE_ID = :corporateId
}

OTMFOPRO_CGWHEN_NEW_FORM_INSTANCE_ {
	select current_timestamp,USER
}

OTMFOPRO_CGFKCHK_CSLD_DD_CSLD_DD_TXNTY {
	SELECT TXN_TYPE.TXN_TYPE CODE,  TXN_TYPE.DESCRIPTION DESCRIPTION FROM   TRANSACTION_TYPES TXN_TYPE WHERE  TXN_USAGE = 'R' AND ACTIVE_FLAG = 'Y' AND ALL_CASELOAD_FLAG = 'Y' AND CASELOAD_TYPE = :caseloadType ORDER BY TXN_TYPE.TXN_TYPE ,TXN_TYPE.DESCRIPTION
}

OTMFOPRO_CGRICHK_CASELOAD_DEDUCTION_PR_ {
	SELECT  '1' FROM    CASELOAD_DEDUCTION_DETAILS CSLD_DD , OFFENDER_SENT_OBLIGATIONS OFF_ST_ WHERE   CSLD_DD.CASELOAD_ID = P_CASELOAD_ID AND     CSLD_DD.DEDUCTION_TYPE = P_DEDUCTION_TYPE AND     OFF_ST_.DEDUCTION_TYPE = CSLD_DD.DEDUCTION_TYPE AND     OFF_ST_.CASELOAD_ID = CSLD_DD.CASELOAD_ID
}

OTMFOPRO_CGRICHK_CASELOAD_DEDUCTION_DE_ {
	SELECT  '1' FROM    OFFENDER_SENT_OBLIGATIONS OFF_ST_ WHERE   OFF_ST_.DEDUCTION_TYPE = P_DEDUCTION_TYPE AND     OFF_ST_.CASELOAD_ID = P_CASELOAD_ID
}
OTMFOPRO_GET_PRIORITY_AMOUNT {
	SELECT COALESCE (SUM (amount), 0) FROM caseload_ded_beneficiaries  WHERE caseload_id = :caseloadId AND deduction_type = :deductionType AND priority = :priority

}
OTMFOPRO_CALCULATE_ON {
	SELECT FROM_BALANCE_TYPE FROM DEDUCTION_TYPES WHERE DEDUCTION_TYPE = :deductionType
}
OTMFOPRO_CALC_BEN_TOTAL {
SELECT COUNT(*) p_ben_count, COALESCE (SUM (csld_db.amount), 0) p_ben_total FROM caseload_ded_beneficiaries csld_db
       WHERE csld_db.caseload_id = :caseloadId AND csld_db.deduction_type = :deductionType
}
OTMFOPRO_DED_PRIORITIES {
	SELECT deduction_type, priority, amount, caseload_ded_beneficiary_id,MODIFY_USER_ID FROM caseload_ded_beneficiaries WHERE caseload_id = :caseloadId AND deduction_type = :deductionType
}
OTMFOPRO_UPDATE_CASELOAD_DED_BENEFICIARIES_AMOUNT {
	update caseload_ded_beneficiaries set amount = 999999999.99, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where caseload_id = :caseloadId and deduction_type = :deductionType
}
OTMFOPRO_UPDATE_CASELOAD_DED_BENEFICIARIES_PERCENTAGE {
	update caseload_ded_beneficiaries set percent = :percent, MODIFY_USER_ID =  :modifyUserId  , MODIFY_DATETIME = CURRENT_TIMESTAMP where caseload_ded_beneficiary_id = :caseloadDedBeneficiaryId
}
OTMFOPRO_COUNT_MIN_BAL_LOGIC {
	SELECT COUNT (*) FROM caseload_deduction_details WHERE caseload_id = caseload_id = :caseloadId AND deduction_type = :deductionType AND COALESCE (minimum_trust_balance_flag, 'N') = 'Y'

}
OTMFOPRO_GET_MAX_EXTERNAL_PRIORITY_NO {
	SELECT COALESCE (MAX (external_priority_no), 0) + 1 FROM caseload_deduction_profiles WHERE caseload_id = :caseloadId

}
OTMFOPRO_GET_MAX_INTERNAL_PRIORITY_NO {
	SELECT COALESCE (MAX (internal_priority_no), 0) + 1 FROM caseload_deduction_profiles WHERE caseload_id = :caseloadId AND external_priority_no = :externalPriorityNo

}
OTMFOPRO_V_PARENT_EXISTS {
	SELECT COUNT (*) FROM deduction_types  WHERE deduction_type = :deductionType AND parent_deduction_type IS NOT NULL
}
OTMFOPRO_V_BEN_COUNT {
	SELECT COUNT (*) FROM caseload_ded_beneficiaries WHERE caseload_id = :caseloadId  AND deduction_type = :deductionType
}
OTMFOPRO_GET_RECEIPT_PERCENTAGE {
	SELECT COALESCE(MAX (COALESCE (percentage, 0)), 0) FROM caseload_deduction_details  WHERE caseload_id = :caseloadId   AND deduction_type = :deductionType

}
OTMFOPRO_UPDATE_CASELOAD_DEDUCTION_PROFILES_PERCENTAGE {
	update caseload_deduction_profiles set percentage = :percentage, MODIFY_USER_ID = :modifyUserId  , MODIFY_DATETIME = CURRENT_TIMESTAMP where caseload_id = :caseloadId and deduction_type = :deductionType
}
OTMFOPRO_GET_PERCENT_AND_ENTERNAL_PRIORITY {
	SELECT percentage "per", external_priority_no "extPrioNo"  FROM caseload_deduction_profiles  WHERE deduction_type = :deductionType  AND caseload_id = :caseloadId
}