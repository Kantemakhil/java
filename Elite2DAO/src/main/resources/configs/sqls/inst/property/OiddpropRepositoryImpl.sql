
OIDDPROP_FIND_CGFKITMTXPROPERTYCONTAINER {
select (OFF_CON1.PROPERTY_CONTAINER_ID)::text CODE , OFF_CON1.OFFENDER_BOOK_ID DSP_OFFENDER_BOOK_ID , OFF_CON1.AGY_LOC_ID DSP_AGY_LOC_ID , OFF_CON1.PROPERTY_STORAGE_ID DSP_PROPERTY_STORAGE_ID , AGY_INT.DESCRIPTION , OFF_CON1.CONTAINER_CODE , TAG_UTILS_GET_REF_DESCP('PPTY_CNTNR' , OFF_CON1.CONTAINER_CODE ) CONTAINER_DESC from OFFENDER_PPTY_CONTAINERS OFF_CON1 , AGENCY_INTERNAL_LOCATIONS AGY_INT where OFF_CON1.AGY_LOC_ID in ( select AGY_LOC_ID from CASELOAD_AGENCY_LOCATIONS where CASELOAD_ID = :CASELOADID and AGY_LOC_ID not in ( 'OUT' , 'TRN' ) ) and OFF_CON1.OFFENDER_BOOK_ID = :OFFENDERBOOKID and OFF_CON1.ACTIVE_FLAG = 'Y' and OFF_CON1.INTERNAL_LOCATION_ID = AGY_INT.INTERNAL_LOCATION_ID order by OFF_CON1.CONTAINER_CODE , OFF_CON1.PROPERTY_CONTAINER_ID asc
}

OIDDPROP_FIND_RGDSPCORPORATENAME {
 	SELECT CORP.CORPORATE_ID ,CORP.CORPORATE_NAME  FROM  (SELECT CRP.CORPORATE_ID  , CRP.CORPORATE_NAME , CRP.CASELOAD_ID           FROM CORPORATES CRP , CORPORATE_TYPES CTP         WHERE CRP.CORPORATE_ID = CTP.CORPORATE_ID            AND CTP.CORPORATE_TYPE NOT IN ('VENDOR' ,'PROGRAM' )           AND CRP.ACTIVE_FLAG = 'Y'        UNION          SELECT CRP2.CORPORATE_ID  , CRP2.CORPORATE_NAME , CRP2.CASELOAD_ID            FROM CORPORATES CRP2           WHERE CRP2.ACTIVE_FLAG = 'Y'             AND NOT EXISTS               (SELECT 1                   FROM CORPORATE_TYPES CTP2                   WHERE CRP2.CORPORATE_ID = CTP2.CORPORATE_ID )        ) CORP ORDER BY CORP.CORPORATE_NAME
}

OIDDPROP_FIND_RGDISPOSEDTOPERSON {
 	SELECT (PER.PERSON_ID)::text CODE  ,                 SUBSTR(PER.LAST_NAME||',  '||PER.FIRST_NAME ,1 ,72 )  DESCRIPTION FROM   PERSONS PER
}

OIDDPROP_FIND_CGFKITMTXFROMSTATUSCODE {
 	SELECT DESCRIPTION , REF_CODE.CODE  ,REF_CODE.LIST_SEQ  FROM   REFERENCE_CODES REF_CODE WHERE   (DOMAIN = 'PPTY_ITM_STS' AND ((ACTIVE_FLAG = 'Y' AND       EXPIRED_DATE IS NULL ) OR   (:MODE = 'QUERY' ) ) AND REF_CODE.CODE != 'TRANSIT' AND REF_CODE.CODE IN    (SELECT DISTINCT ITEM_STATUS_FROM       FROM ITEM_TRANSACTION_STATII      WHERE ITEM_STATUS_TO != 'DISPOSED' ) ) ORDER BY  REF_CODE.LIST_SEQ ASC
}

OIDDPROP_ITMTX_FIND_OFFENDER_PPTY_ITEM_TXNS {
 	SELECT PROPERTY_ITEM_TXN_ID ,OFFENDER_BOOK_ID ,PROPERTY_ITEM_SEQ ,EVENT_SEQ ,FROM_STATUS_CODE ,TO_STATUS_CODE ,CREATE_DATE ,CREATE_USER_ID ,COMMENT_TEXT ,AGY_LOC_ID ,DISPOSED_TO_OFFENDER_FLAG ,VERIFICATION_FLAG ,VERIFY_FLAG ,DISPOSED_TO_CORP_ID ,DISPOSED_TO_PERSON ,PROPERTY_CONTAINER_ID ,PROPERTY_CONTAINER_TXN_ID ,TO_PROPERTY_CONTAINER_ID ,DISPOSED_TO_PERSON_ID ,COLOR ,MAKE ,SERIAL_NO ,CREATE_DATETIME ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM OFFENDER_PPTY_ITEM_TXNS  /* where  */
}
OIDDPROP_ITMTX_INSERT_OFFENDER_PPTY_ITEM_TXNS {
	INSERT INTO OFFENDER_PPTY_ITEM_TXNS(PROPERTY_ITEM_TXN_ID ,OFFENDER_BOOK_ID ,PROPERTY_ITEM_SEQ ,EVENT_SEQ ,FROM_STATUS_CODE ,TO_STATUS_CODE, COMMENT_TEXT ,AGY_LOC_ID ,DISPOSED_TO_OFFENDER_FLAG ,VERIFICATION_FLAG ,VERIFY_FLAG ,DISPOSED_TO_CORP_ID ,DISPOSED_TO_PERSON ,PROPERTY_CONTAINER_ID ,PROPERTY_CONTAINER_TXN_ID ,TO_PROPERTY_CONTAINER_ID ,DISPOSED_TO_PERSON_ID ,COLOR ,MAKE ,SERIAL_NO,SEAL_FLAG, CREATE_DATE,CREATE_USER_ID,CREATE_DATETIME,MODIFY_DATETIME )
	VALUES(NEXTVAL('PROPERTY_ITEM_TXN_ID') ,:offenderBookId ,:propertyItemSeq ,:eventSeq ,:fromStatusCode ,:toStatusCode ,:commentText ,:agyLocId ,:disposedToOffenderFlag ,:verificationFlag ,:verifyFlag ,:disposedToCorpId ,:disposedToPerson ,:propertyContainerId ,:propertyContainerTxnId ,:toPropertyContainerId ,:disposedToPersonId ,:color ,:make ,:serialNo,:sealFlag,CURRENT_TIMESTAMP,:createUserId,CURRENT_TIMESTAMP,null )
}

OIDDPROP_ITMTX_UPDATE_OFFENDER_PPTY_ITEM_TXNS {
	UPDATE OFFENDER_PPTY_ITEM_TXNS set FROM_STATUS_CODE  = :fromStatusCode ,TO_STATUS_CODE  = :toStatusCode, DISPOSED_TO_PERSON  = :disposedToPerson ,DISPOSED_TO_PERSON_ID  = :disposedToPersonId ,MODIFY_DATETIME=CURRENT_TIMESTAMP,MODIFY_USER_ID=:modifyUserId where  OFFENDER_BOOK_ID  = :offenderBookId and PROPERTY_ITEM_SEQ  = :propertyItemSeq
}
OIDDPROP_ITMTX_INSERT_OFFENDER_PPTY_ITEM_EVENTS { 
INSERT INTO OFFENDER_PPTY_ITEM_EVENTS(OFFENDER_BOOK_ID,EVENT_SEQ,SEAL_FLAG,MODIFY_DATETIME,CREATE_DATETIME,CREATE_USER_ID)
VALUES (:offenderBookId,:eventSeq,:sealFlag,null,CURRENT_TIMESTAMP,:createUserId)
}
OIDDPROP_GET_MAX_EVENT_SEQ_FROM_OFFENDER_PPTY_ITEM_EVENTS {
SELECT MAX(EVENT_SEQ) FROM OFFENDER_PPTY_ITEM_EVENTS WHERE OFFENDER_BOOK_ID = :offenderBookId
}
OIDDPROP_OFFPI_FIND_OFFENDER_PPTY_ITEMS {
 	SELECT PROPERTY_ITEM_SEQ ,OFFENDER_BOOK_ID ,PROPERTY_TYPE ,PROPERTY_DESCRIPTION ,AGY_LOC_ID ,STATUS_CODE ,CONDITION_CODE ,RECEIVED_FROM ,PROPERTY_CONTAINER_ID ,COMMENT_TEXT ,CONFIRM_FLAG ,DISPOSED_TO_CORP_ID ,DISPOSED_TO_OFFENDER_FLAG ,DISPOSED_TO_PERSON ,DISPOSED_TO_PERSON_ID ,COLOR ,MAKE ,SERIAL_NO ,QUANTITY ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,MODIFY_USER_ID ,SEAL_FLAG   FROM OFFENDER_PPTY_ITEMS  /* where  */
}
OIDDPROP_OFFPI_UPDATE_OFFENDER_PPTY_ITEMS {
	UPDATE OFFENDER_PPTY_ITEMS set STATUS_CODE  = :statusCode, DISPOSED_TO_CORP_ID = :disposedToCorpId, DISPOSED_TO_PERSON = :disposedToPerson, 
	DISPOSED_TO_PERSON_ID = :disposedToPersonId, DISPOSED_TO_OFFENDER_FLAG  = :disposedToOffenderFlag, COMMENT_TEXT = :commentText, MODIFY_DATETIME=CURRENT_TIMESTAMP,MODIFY_USER_ID=:modifyUserId where PROPERTY_ITEM_SEQ  = :propertyItemSeq and OFFENDER_BOOK_ID  = :offenderBookId 
}

OIDDPROP_SYSPFL_FIND_SYSTEM_PROFILES {
 	SELECT PROFILE_TYPE ,PROFILE_CODE ,DESCRIPTION ,PROFILE_VALUE ,PROFILE_VALUE_2 ,MODIFY_USER_ID ,OLD_TABLE_NAME ,CREATE_DATETIME ,CREATE_USER_ID ,MODIFY_DATETIME ,SEAL_FLAG   FROM SYSTEM_PROFILES  /* where  */
}

OIDDPROP_CGFKCHK_ITM_TX_ITM_TX_OFF_CON {
	SELECT OFF_CON1.OFFENDER_BOOK_ID ,OFF_CON1.AGY_LOC_ID ,OFF_CON1.PROPERTY_STORAGE_ID ,OFF_CON1.CONTAINER_CODE ,PPTY_STG1.DESCRIPTION FROM   OFFENDER_PPTY_CONTAINERS OFF_CON1 ,PROPERTY_STORAGES PPTY_STG1 WHERE  OFF_CON1.PROPERTY_CONTAINER_ID = :PROPERTYCONTAINERID AND     (OFF_CON1.AGY_LOC_ID = :PPTYAGYLOCID AND OFF_CON1.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND OFF_CON1.ACTIVE_FLAG = 'Y') AND    PPTY_STG1.PROPERTY_STORAGE_ID = OFF_CON1.PROPERTY_STORAGE_ID
}

OIDDPROP_CGFKCHK_ITM_TX_ITM_TX_REF_COD_ {
	SELECT REF_CODE.LIST_SEQ ,REF_CODE.DESCRIPTION FROM   REFERENCE_CODES REF_CODE WHERE  REF_CODE.CODE = :FROMSTATUSCODE AND     (DOMAIN = 'PPTY_ITM_STS' AND ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL) OR   (:MODE = 'QUERY')) AND REF_CODE.CODE IN (SELECT DISTINCT ITEM_STATUS_FROM FROM ITEM_TRANSACTION_STATII WHERE ITEM_STATUS_TO = 'DISPOSED'))
}

OIDDPROP_CGFKCHK_OFF_PI_OFF_PI_OFF_CON {
	SELECT OFF_CON.PROPERTY_STORAGE_ID ,AGY_INT.DESCRIPTION FROM   OFFENDER_PPTY_CONTAINERS OFF_CON ,AGENCY_INTERNAL_LOCATIONS AGY_INT WHERE  OFF_CON.PROPERTY_CONTAINER_ID = :PROPERTYCONTAINERID AND OFF_CON.INTERNAL_LOCATION_ID = AGY_INT.INTERNAL_LOCATION_ID
}

OIDDPROP_CGFKCHK_OFF_PI_OFF_PI_REF_COD_ {
	SELECT  '1' FROM   REFERENCE_CODES WHERE  CODE = :MAKE
}

OIDDPROP_CGFKCHK_OFF_PI_OFF_PI_REF_2_ {
	SELECT  '1' FROM   REFERENCE_CODES WHERE  CODE = :COLOR
}

OIDDPROP_PRINT_REPORT_OLD_GET_PRINT_FORMAT_CUR {
	SELECT PRINT_FORMAT_CODE FROM OMS_MODULES WHERE MODULE_NAME = :MODULE_NAME
}

	OIDDPROP_PRINT_REPORT_OLD_GET_PRINTER_NAME_CUR {
 SELECT PRTS.DESCRIPTION FROM CASELOAD_FORMAT_PRINTERS CFP, PRINTERS PRTS WHERE PRTS.PRINTER_ID = CFP.DEFAULT_PRINTER_ID AND CFP.CASELOAD_ID =:CASELOAD_ID AND (CFP.PRINT_FORMAT_CODE = :PRINT_FORMAT_CODE OR :PRINT_FORMAT_CODE IS NULL)
}


OIDDPROP_PRINT_REPORT_ {
	SELECT PRINT_FORMAT_CODE FROM OMS_MODULES WHERE MODULE_NAME = :MODULE_NAME
}

OIDDPROP_PRINT_REPORT_GET_PRINTER_NAME_CUR {
	SELECT PRTS.DESCRIPTION FROM CASELOAD_FORMAT_PRINTERS CFP, PRINTERS PRTS WHERE PRTS.PRINTER_ID = CFP.DEFAULT_PRINTER_ID AND CFP.CASELOAD_ID = :CASELOAD_ID AND (CFP.PRINT_FORMAT_CODE = :PRINT_FORMAT_CODE OR :PRINT_FORMAT_CODE IS NULL)
}

OIDDPROP_PRINT_REPORT_ROLE_CUR {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = :PROFILE_TYPE AND PROFILE_CODE = :PROFILE_CODE
}

OIDDPROP_PRINT_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'SYS' AND PROFILE_CODE = 'ROLE_PSWD'
}

OIDDPROP_PRINT_REPORT_ {
	SELECT PROFILE_VALUE FROM SYSTEM_PROFILES WHERE PROFILE_TYPE = 'CLIENT' AND PROFILE_CODE = 'REPORT_ALIAS'
}

OIDDPROP_PRINT_REPORT_L_SYSTEM_PROFILES_DESC_CUR {
	SELECT LTRIM(RTRIM(DESCRIPTION)) FROM SYSTEM_PROFILES WHERE PROFILE_CODE = :PROFILE_CODE AND PROFILE_TYPE = :PROFILE_TYPE
}

OIDDPROP_PRINT_COLOR_DESCRIPTION {
SELECT DESCRIPTION FROM   REFERENCE_CODES WHERE  DOMAIN = 'PPTY_COLOR' AND CODE = :CODE
}

OIDDPROP_PRINT_CONDITION_DESCRIPTION {
SELECT DESCRIPTION FROM   REFERENCE_CODES WHERE  DOMAIN = 'PPTY_CONDIT' AND CODE = :CODE
}
OIDDPROP_UPDATE_OFFCONT {
 UPDATE OFFENDER_PPTY_CONTAINERS SET ACTIVE_FLAG = 'N' ,INTERNAL_LOCATION_ID = NULL WHERE PROPERTY_CONTAINER_ID = :propertyContainerId
         AND OFFENDER_BOOK_ID  = :offenderBookId
}
OIDDPROP_CON_OFFPI_FIND_OFFENDER_PPTY_ITEMS {
select opi.PROPERTY_ITEM_SEQ ,opi.OFFENDER_BOOK_ID ,opi.PROPERTY_TYPE ,opi.PROPERTY_DESCRIPTION ,opi.AGY_LOC_ID ,opi.STATUS_CODE ,opi.CONDITION_CODE ,opi.RECEIVED_FROM ,
opi.PROPERTY_CONTAINER_ID ,opi.COMMENT_TEXT ,opi.CONFIRM_FLAG ,opi.DISPOSED_TO_CORP_ID ,opi.DISPOSED_TO_OFFENDER_FLAG ,opi.DISPOSED_TO_PERSON ,opi.DISPOSED_TO_PERSON_ID ,opi.COLOR ,opi.MAKE , opi.PROPERTY_SIZE, SERIAL_NO ,opi.QUANTITY ,
opi.PROPERTY_SIZE, opi.PROPERTY_VALUE,
opi.CREATE_DATETIME ,opi.CREATE_USER_ID ,opi.MODIFY_DATETIME ,opi.MODIFY_USER_ID ,opi.SEAL_FLAG,off.PROPERTY_ONLY_FLAG ,ref.description CONTDES
,off.ACTIVE_FLAG ,off.PROPOSED_DISPOSAL_DATE ,off.INTERNAL_LOCATION_ID
,off.CONTAINER_CODE ,off.EXPIRY_DATE ,off.SEAL_MARK ,off.TRN_FROM_AGY_LOC_ID ,off.TRN_TO_AGY_LOC_ID
,off.PROPERTY_STORAGE_ID,off.DISPOSED_TO ,off.DISPOSED_TO_NAME ,ag.DESCRIPTION LOCDES  from OFFENDER_PPTY_ITEMS opi left join OFFENDER_PPTY_CONTAINERS off  on  off.PROPERTY_CONTAINER_ID = opi.PROPERTY_CONTAINER_ID and off.OFFENDER_BOOK_ID = opi.OFFENDER_BOOK_ID
left join agency_internal_locations ag on  off.INTERNAL_LOCATION_ID=ag.INTERNAL_LOCATION_ID and  off.AGY_LOC_ID in( SELECT AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS WHERE CASELOAD_ID = :agyLocId) and off.AGY_LOC_ID NOT IN ('OUT')
left join reference_codes ref on ref.code=off.CONTAINER_CODE and ref.domain = 'PPTY_CNTNR'
where opi.offender_book_id = :offenderBookId and opi.STATUS_CODE <> 'DISPOSED'
}

OIDDPROP_GET_OFFPPTY_DETAILS{
SELECT PROPERTY_ITEM_SEQ, OFFENDER_BOOK_ID, PROPERTY_TYPE, PROPERTY_DESCRIPTION, AGY_LOC_ID, STATUS_CODE, CONDITION_CODE, RECEIVED_FROM, PROPERTY_CONTAINER_ID, COMMENT_TEXT, CONFIRM_FLAG, DISPOSED_TO_CORP_ID, DISPOSED_TO_OFFENDER_FLAG, DISPOSED_TO_PERSON, DISPOSED_TO_PERSON_ID, COLOR, MAKE, SERIAL_NO, QUANTITY, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME, MODIFY_USER_ID, SEAL_FLAG FROM OFFENDER_PPTY_ITEMS WHERE OFFENDER_BOOK_ID=:OFFENDERBOOKID AND PROPERTY_CONTAINER_ID= :PROPERTYCONTAINERID AND STATUS_CODE <> 'DISPOSED'
}

OIDDPROP_GET_CORP_LIST{
select (v.CORPORATE_ID)::text  CODE, v.CORPORATE_NAME DESCRIPTION, v.ACTIVE_FLAG from CORPORATE_TYPES CT 
	inner join CORPORATES v on v.corporate_id = CT.corporate_id where ct.corporate_type = 'DISP'
}
OIDDPROP_OFFPI_UPDATE_OFFENDER_PPTYITEMS_OLD_DATA{
select * from OFFENDER_PPTY_ITEMS where PROPERTY_ITEM_SEQ=:PROPERTY_ITEM_SEQ and OFFENDER_BOOK_ID=:OFFENDER_BOOK_ID
}

GET_OFFENDER_CONATCT_PERSONS { 
SELECT (PER.PERSON_ID)::text CODE, SUBSTR(PER.LAST_NAME||',  '||PER.FIRST_NAME ,1 ,72 )  DESCRIPTION, ACTIVE_FLAG FROM   PERSONS PER,offender_contact_persons OC where OC.person_id =PER.person_id  and OC.offender_book_id =:offenderBookId

}