DELETE_OFFENDER_SENTENCE_ADJUSTS{
DELETE FROM offender_sentence_adjusts offadj WHERE offender_book_id =:p_offbook_id AND offender_key_date_adjust_id =:p_key_date_id AND sentence_seq = (SELECT sentence_seq FROM offender_sentences WHERE offender_book_id =:p_offbook_id AND sentence_seq = offadj.sentence_seq AND sentence_status = 'A')
}
INSERT_OFFENDER_SENTENCE_ADJUSTS{
/* INSERT INTO offender_sentence_adjusts (offender_sentence_adjust_id, offender_book_id, sentence_seq, sentence_adjust_code, offender_key_date_adjust_id, adjust_from_date, adjust_to_date, adjust_days, adjust_status, comment_text, adjust_date) SELECT offender_sentence_adjust_id.NEXTVAL, offsent.offender_book_id, offsent.sentence_seq, offkeyd.sentence_adjust_code, offkeyd.offender_key_date_adjust_id, offkeyd.adjust_from_date, offkeyd.adjust_to_date, offkeyd.adjust_days, offkeyd.adjust_status,
offkeyd.comment_text, offkeyd.adjust_date FROM offender_sentences offsent, offender_key_date_adjusts offkeyd WHERE offsent.offender_book_id =:p_offbook_id AND offkeyd.offender_key_date_adjust_id =:p_key_date_id AND offsent.offender_book_id = offkeyd.offender_book_id AND offkeyd.adjust_from_date BETWEEN offsent.start_date AND offsent.sed_calculated_date AND offsent.sentence_status = 'A' AND offsent.sentence_level = 'IND' */
insert into offender_sentence_adjusts (offender_sentence_adjust_id, offender_book_id, sentence_seq, sentence_adjust_code, offender_key_date_adjust_id, adjust_from_date, adjust_to_date, adjust_days, adjust_status, comment_text, adjust_date, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME ) select NEXTVAL('offender_sentence_adjust_id'), offsent.offender_book_id, offsent.sentence_seq, offkeyd.sentence_adjust_code, offkeyd.offender_key_date_adjust_id, offkeyd.adjust_from_date, offkeyd.adjust_to_date, offkeyd.adjust_days, offkeyd.adjust_status, offkeyd.comment_text, offkeyd.adjust_date, :createUserId, CURRENT_TIMESTAMP , CURRENT_TIMESTAMP from offender_sentences offsent, offender_key_date_adjusts offkeyd where offsent.offender_book_id =:p_offbook_id and offkeyd.offender_key_date_adjust_id =:p_key_date_id and offsent.offender_book_id = offkeyd.offender_book_id and offkeyd.adjust_from_date between offsent.start_date and offsent.sed_calculated_date and offsent.sentence_status = 'A' and offsent.sentence_level = 'IND'
}
GET_SENTENCE_CURSER {
SELECT SENTENCE_SEQ, START_DATE, END_DATE, CONSEC_TO_SENTENCE_SEQ, SENTENCE_CATEGORY, SENTENCE_CALC_TYPE FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :pOffBookId AND SENTENCE_LEVEL = 'IND' AND ( SENTENCE_STATUS = 'A' OR SENTENCE_STATUS = 'PAID' ) START WITH OFFENDER_BOOK_ID = :pOffBookId AND CONSEC_TO_SENTENCE_SEQ IS NULL CONNECT BY PRIOR SENTENCE_SEQ = CONSEC_TO_SENTENCE_SEQ AND OFFENDER_BOOK_ID =:pOffBookId ORDER SIBLINGS BY START_DATE
}

GET_END_DATE {
 SELECT SENTENCE_END_DATE (:pStartDate, YEARS, MONTHS, WEEKS, DAYS, LIFE_SENTENCE_FLAG ) FROM OFFENDER_SENTENCE_TERMS WHERE OFFENDER_BOOK_ID = :pOffBookId AND SENTENCE_SEQ = :pSentSeq AND TERM_SEQ = :pTermSeq
}
GET_SED_CALCULATED_DATE {
SELECT SED_CALCULATED_DATE, SENTENCE_CATEGORY FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :pOffBookId AND SENTENCE_SEQ = :pConsecToSent
}
GET_AGG_CURSER {
SELECT NVL (ARD_CALCULATED_DATE, NVL (CRD_CALCULATED_DATE, PED_CALCULATED_DATE) ) RELEASE_DATE FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :pOffBookId AND SENTENCE_CALC_TYPE = 'AGG-IND' AND SENTENCE_CATEGORY = :SentCategory
}
GET_ADJUST_DAYS_CURSER {
SELECT NVL (SUM (ADJUST_DAYS), 0) FROM OFFENDER_SENTENCE_ADJUSTS WHERE OFFENDER_BOOK_ID = :pOffBookId AND SENTENCE_ADJUST_CODE = :pAdjCode AND SENTENCE_SEQ = :pSentSeq
}


CALCULATE_MONTHS_VALUE {
select
  case
    when DAY_OUT > DAY_IN then DATE_OUT - (DAY_OUT - DAY_IN)
    when DAY_IN > DAY_OUT then DATE_OUT
    else DATE_OUT-1
  end DATE_OUT from(select TO_NUMBER (TO_CHAR (:dateinput, 'DD'))DAY_IN, TO_NUMBER (TO_CHAR (:dateinput, 'DD'))DAY_OUT, ADD_MONTHS (:dateinput,:months)DATE_OUT from dual)
  }
  
  GET_DAYS_BETWEEN{
  select case when P_END_DATE < P_START_DATE then 1 else NVL(P_END_DATE - P_START_DATE + 1,0) end V_TERM_PERIOD from(select to_date(:pEndDate,'DD/MM/YYYY') P_END_DATE, to_date(:pStartDAte,'DD/MM/YYYY')P_START_DATE from dual)
  }
  CALCULATE_HDCEDDATE{
  select case when V_MONTHS >= 3 AND V_MONTHS < 4 then P_START_DATE + 30 when V_MONTHS >= 4 AND V_MONTHS < 18 then P_START_DATE + FLOOR ((P_START_DATE-P_END_DATE) / 4) when V_MONTHS >= 18 AND V_MONTHS < 48 then P_START_DATE + FLOOR((P_START_DATE-P_END_DATE)/2-135) end V_HDCED_DATE from (select P_END_DATE, P_START_DATE, MONTHS_BETWEEN (P_END_DATE, P_START_DATE) V_MONTHS from (select to_date(:pEndDate,'DD/MM/YYYY') P_END_DATE, to_date(:pStartDate,'DD/MM/YYYY') P_START_DATE from dual))
  }
  GET_EXT_TERM_CURSER {
  SELECT DAYS_BETWEEN (SYSDATE,
 	                     YEARS,
 						 MONTHS,
  						 WEEKS,
  						 DAYS )
  	  FROM OFFENDER_SENTENCE_TERMS
   	 WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID
  	   AND SENTENCE_SEQ 	= :P_SENTENCE_SEQ
  	   AND TERM_SEQ 		= 2
  	   }
  	   
  	 UPDATE_OFFENDER_SENTENCE_TERMS_REC{  
  	   UPDATE OFFENDER_SENTENCE_TERMS
       SET START_DATE       = :P_START_DATE,
           END_DATE 	   	   = :P_END_DATE
       WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID
         AND SENTENCE_SEQ     = :P_SENT_SEQ
         AND TERM_SEQ         = :P_TERM_SEQ
  }
  
  GET_LTD_MTD_DTD_DATES{
  select P_MTD_DATE, case when MONTHS_BETWEEN (P_END_DATE, P_START_DATE) < 12 then ADD_MONTHS(P_MTD_DATE, 1) else ADD_MONTHS(P_MTD_DATE,2) end P_LTD_DATE, case when MONTHS_BETWEEN (P_END_DATE, P_START_DATE) < 12 then ADD_MONTHS(P_MTD_DATE,-1) else ADD_MONTHS(P_MTD_DATE,-2) end P_ETD_DATE from (select P_START_DATE, P_END_DATE, P_START_DATE + FLOOR ((P_START_DATE-P_END_DATE) / 2)P_MTD_DATE from (select to_date(:pStartDate,'DD/MM/YYYY')P_START_DATE, to_date(:pEndDate,'DD/MM/YYYY')P_END_DATE from dual))
  }
  
  UPDATE_OFFENDER_SENTENCES_VALUES {
 /* UPDATE OFFENDER_SENTENCES
            SET START_DATE 	   	   = :vStartDate,
               END_DATE 	  	   =: vEndDateOne,
                ARD_CALCULATED_DATE   = :vArdDate,
                CRD_CALCULATED_DATE   = :vCrdDate,
                PED_CALCULATED_DATE   = :vPedDate,
                NPD_CALCULATED_DATE   = :vNpdDate,
                LED_CALCULATED_DATE   = :vledDateOne,  
                SED_CALCULATED_DATE   = :vSedDateOne, 	
                AGGREGATE_ADJUST_DAYS = :aggregateAdjustDays,
                HDCED_CALCULATED_DATE = :vHdcedDate,
                EXTENDED_DAYS 		   = :vExtDays,
                AGG_SENTENCE_SEQ 	   = NULL,
                SENTENCE_STATUS 	   = :string,
   			 MTD_CALCULATED_DATE   = :vMtdDate,
   			 ETD_CALCULATED_DATE   = :vEtdDate,
  			 LTD_CALCULATED_DATE   = :vLtdDate
         WHERE OFFENDER_BOOK_ID 	   = :offenderBookId
           AND SENTENCE_SEQ 		   = :sentenceSeq  */
           
 update OFFENDER_SENTENCES set START_DATE = :vStartDate, END_DATE =:vEndDateOne, ARD_CALCULATED_DATE = :vArdDate, CRD_CALCULATED_DATE = :vCrdDate, PED_CALCULATED_DATE = :vPedDate, NPD_CALCULATED_DATE = :vNpdDate, LED_CALCULATED_DATE = :vledDateOne, SED_CALCULATED_DATE = :vSedDateOne, AGGREGATE_ADJUST_DAYS = :aggregateAdjustDays, HDCED_CALCULATED_DATE = :vHdcedDate, EXTENDED_DAYS = :vExtDays, AGG_SENTENCE_SEQ = null, SENTENCE_STATUS = :string, MTD_CALCULATED_DATE = :vMtdDate, ETD_CALCULATED_DATE = :vEtdDate, LTD_CALCULATED_DATE = :vLtdDate, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where OFFENDER_BOOK_ID = :offenderBookId and SENTENCE_SEQ = :sentenceSeq          
  }
  
 DELETE_OFFENDER_SENTENCES_VALUES{
 DELETE FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :offenderBookId AND SENTENCE_LEVEL = 'AGG' AND SENTENCE_STATUS = 'A' AND SENTENCE_CALC_TYPE = 'AGG-IND'
 }
  DELETE_OFFENDER_SENTENCES_AGGFINE_VALUES{
  DELETE FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :offenderBookId AND SENTENCE_LEVEL = 'AGG' AND SENTENCE_STATUS = 'A' AND SENTENCE_CALC_TYPE = 'AGG-FINE'
  }
 GET_SINGLE_TERM_SENT_CURSER {
 SELECT START_DATE, END_DATE, SENTENCE_SEQ, SENTENCE_CATEGORY, SED_CALCULATED_DATE, CONSEC_TO_SENTENCE_SEQ, AGGREGATE_ADJUST_DAYS, NVL(EXTENDED_DAYS,0) EXTENDED_DAYS FROM OFFENDER_SENTENCES WHERE SENTENCE_LEVEL = 'IND' AND SENTENCE_CALC_TYPE NOT IN ('A/FINE','CIVIL') AND SENTENCE_STATUS = 'A' AND ( SENTENCE_CATEGORY = '1991' OR CONSEC_TO_SENTENCE_SEQ IS NOT NULL OR ( SENTENCE_CATEGORY = '2003' AND DAYS_BETWEEN (START_DATE, END_DATE) < DAYS_BETWEEN (START_DATE, 0, 12, 0, 0)) ) START WITH OFFENDER_BOOK_ID = P_OFFBOOK_ID AND CONSEC_TO_SENTENCE_SEQ IS NULL CONNECT BY PRIOR SENTENCE_SEQ = CONSEC_TO_SENTENCE_SEQ AND OFFENDER_BOOK_ID = :P_OFFBOOK_ID ORDER SIBLINGS BY START_DATE
 }
 
 
 GET_CONSEQ_TO_AGG_SENT_SEQ {
SELECT AGG_SENTENCE_SEQ, SENTENCE_CATEGORY FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :pOffBookId AND SENTENCE_SEQ = :pConsecToSent
}
GET_MAX_SENTENCE_SEQ_VALUE {
 SELECT NVL (MAX (SENTENCE_SEQ), 0) + 1
        FROM OFFENDER_SENTENCES
       WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID
       }
       
       
 INSERT_OFFENDER_SENTENCE_AGGCOUNT_VALUE{
 -- INSERT INTO OFFENDER_SENTENCES (OFFENDER_BOOK_ID, SENTENCE_SEQ, ORDER_ID, COUNTS, SENTENCE_CALC_TYPE, SENTENCE_STATUS, START_DATE, END_DATE, SENTENCE_CATEGORY, SENTENCE_LEVEL, ARD_CALCULATED_DATE, CRD_CALCULATED_DATE, PED_CALCULATED_DATE, SED_CALCULATED_DATE, HDCED_CALCULATED_DATE, AGGREGATE_ADJUST_DAYS, EXTENDED_DAYS) SELECT OFFENDER_BOOK_ID, :V_AGG_SENT_SEQ, ORDER_ID, 1, :P_CALC_TYPE, 'A', START_DATE, END_DATE, SENTENCE_CATEGORY, 'AGG', ARD_CALCULATED_DATE, CRD_CALCULATED_DATE, PED_CALCULATED_DATE, SED_CALCULATED_DATE, HDCED_CALCULATED_DATE, AGGREGATE_ADJUST_DAYS, EXTENDED_DAYS FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_SEQ = :P_SENTENCE_SEQ
insert into OFFENDER_SENTENCES (OFFENDER_BOOK_ID, SENTENCE_SEQ, ORDER_ID, COUNTS, SENTENCE_CALC_TYPE, SENTENCE_STATUS, START_DATE, END_DATE, SENTENCE_CATEGORY, SENTENCE_LEVEL, ARD_CALCULATED_DATE, CRD_CALCULATED_DATE, PED_CALCULATED_DATE, SED_CALCULATED_DATE, HDCED_CALCULATED_DATE, AGGREGATE_ADJUST_DAYS, EXTENDED_DAYS, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME ) select OFFENDER_BOOK_ID, :V_AGG_SENT_SEQ, ORDER_ID, 1, :P_CALC_TYPE, 'A', START_DATE, END_DATE, SENTENCE_CATEGORY, 'AGG', ARD_CALCULATED_DATE, CRD_CALCULATED_DATE, PED_CALCULATED_DATE, SED_CALCULATED_DATE, HDCED_CALCULATED_DATE, AGGREGATE_ADJUST_DAYS, EXTENDED_DAYS, CREATE_USER_ID, CURRENT_TIMESTAMP , CURRENT_TIMESTAMP from OFFENDER_SENTENCES where OFFENDER_BOOK_ID = :P_OFFBOOK_ID and SENTENCE_SEQ = :P_SENTENCE_SEQ
 }
 
 UPDATE_AGGSENTENCE_OFFENDER_SENTENCES {
/* UPDATE OFFENDER_SENTENCES
      SET AGG_SENTENCE_SEQ = :P_AGG_SENT_SEQ
    WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID
	  AND SENTENCE_SEQ     = :P_SENTENCE_SEQ  */
 update OFFENDER_SENTENCES set AGG_SENTENCE_SEQ = :P_AGG_SENT_SEQ, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where OFFENDER_BOOK_ID = :P_OFFBOOK_ID and SENTENCE_SEQ = :P_SENTENCE_SEQ
	  }
	  
GET_SINGLE_TERM_SENT_EXT_CURSER {
SELECT SENTENCE_SEQ, START_DATE, END_DATE, SED_CALCULATED_DATE, SENTENCE_CATEGORY, NVL(EXTENDED_DAYS,0) FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_STATUS = 'A' AND SENTENCE_LEVEL = 'AGG' AND ((:P_AGG_SEQ IS NOT NULL AND SENTENCE_SEQ = :P_AGG_SEQ) OR ((ARD_CALCULATED_DATE >= :P_START_DATE OR CRD_CALCULATED_DATE >= :P_START_DATE OR PED_CALCULATED_DATE >= :P_START_DATE) AND P_AGG_SEQ IS NULL))
}

GET_REMAND_ADJUST_DAYS{
SELECT NVL (SUM (ADJUST_DAYS), 0) FROM OFFENDER_SENTENCE_ADJUSTS WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_ADJUST_CODE = 'RX' AND SENTENCE_SEQ IN ( SELECT SENTENCE_SEQ FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND ( AGG_SENTENCE_SEQ = :V_AGG_SENT_SEQ OR SENTENCE_SEQ = :V_AGG_SENT_SEQ) )
}

GET_ADDED_DAYS_CURSER {
SELECT NVL (SUM (ADJUST_DAYS), 0) FROM OFFENDER_SENTENCE_ADJUSTS WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_ADJUST_CODE IN ('ADA','PADA') AND SENTENCE_SEQ IN ( SELECT SENTENCE_SEQ FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND AGG_SENTENCE_SEQ = :V_AGG_SENT_SEQ)
}
UPDATE_OFFENDER_SENTENCES_SINGLE_TERM{
-- UPDATE OFFENDER_SENTENCES SET ARD_CALCULATED_DATE = :V_ARD_DATE, CRD_CALCULATED_DATE = :V_CRD_DATE, PED_CALCULATED_DATE = :V_PED_DATE, NPD_CALCULATED_DATE = :V_NPD_DATE, LED_CALCULATED_DATE = :LedCalDate, HDCED_CALCULATED_DATE = :V_HDCED_DATE, SED_CALCULATED_DATE = :SedCalcDate, SENTENCE_CALC_TYPE = 'AGG-IND', END_DATE = :EndDate, AGGREGATE_ADJUST_DAYS = :AggreAdjustDates, COUNTS = :Counts, EXTENDED_DAYS = :ExtendDays WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_SEQ = :V_AGG_SENT_SEQ
update OFFENDER_SENTENCES set ARD_CALCULATED_DATE = :V_ARD_DATE, CRD_CALCULATED_DATE = :V_CRD_DATE, PED_CALCULATED_DATE = :V_PED_DATE, NPD_CALCULATED_DATE = :V_NPD_DATE, LED_CALCULATED_DATE = :LedCalDate, HDCED_CALCULATED_DATE = :V_HDCED_DATE, SED_CALCULATED_DATE = :SedCalcDate, SENTENCE_CALC_TYPE = 'AGG-IND', END_DATE = :EndDate, AGGREGATE_ADJUST_DAYS = :AggreAdjustDates, COUNTS = :Counts, EXTENDED_DAYS = :ExtendDays, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where OFFENDER_BOOK_ID = :P_OFFBOOK_ID and SENTENCE_SEQ = :V_AGG_SENT_SEQ 
}
UPDATE_OFFENDER_SENTENCES_SET_NULL_VALUE {
-- UPDATE OFFENDER_SENTENCES SET AGG_SENTENCE_SEQ = NULL WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND AGG_SENTENCE_SEQ IN ( SELECT SENTENCE_SEQ FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_LEVEL = 'AGG' AND SENTENCE_CALC_TYPE = 'AGG-IND' AND COUNTS = 1)
update OFFENDER_SENTENCES set AGG_SENTENCE_SEQ = null, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where OFFENDER_BOOK_ID = :P_OFFBOOK_ID and AGG_SENTENCE_SEQ in ( select SENTENCE_SEQ from OFFENDER_SENTENCES where OFFENDER_BOOK_ID = :P_OFFBOOK_ID and SENTENCE_LEVEL = 'AGG' and SENTENCE_CALC_TYPE = 'AGG-IND' and COUNTS = 1) 
}
 DELETE_FROM_OFFEDNER_SENTENCES_SINGLE_TERM{
 DELETE FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_LEVEL = 'AGG' AND SENTENCE_CALC_TYPE = 'AGG-IND' AND COUNTS = 1
 }
	CALCULATE_FINE_SENTENCE_CURSER{
	SELECT START_DATE, END_DATE, SED_CALCULATED_DATE, SENTENCE_SEQ, FINE_AMOUNT FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_LEVEL = 'IND' AND SENTENCE_STATUS = 'A' AND SENTENCE_CALC_TYPE = 'A/FINE' ORDER BY SED_CALCULATED_DATE DESC
	}
	GET_FINE_AMOUNT{
	 SELECT SUM(FINE_AMOUNT) FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND (SENTENCE_STATUS = 'A' OR SENTENCE_STATUS = 'PAID') AND SENTENCE_CALC_TYPE = 'A/FINE'
}
	  
GET_SED_DATE_CUR {
SELECT  MAX(sed_calculated_date) FROM offender_sentences WHERE offender_book_id = :offenderBookId AND sentence_seq != :sentenceSeq AND sentence_level = 'IND' AND sentence_status = 'A' AND sentence_calc_type = 'A/FINE' AND sed_calculated_date <= :sedCalculatedDate
}

UPDATE_OFF_SEN{
-- UPDATE offender_sentences SET sed_calculated_date = :SED_CALCULATED_DATE, ard_calculated_date = :SED_CALCULATED_DATE, sentence_status = 'PAID' WHERE offender_book_id = :OFFENDER_BOOK_ID AND sentence_seq = :SENTENCE_SEQ
update offender_sentences set sed_calculated_date = :SED_CALCULATED_DATE, ard_calculated_date = :SED_CALCULATED_DATE, sentence_status = 'PAID', MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where offender_book_id = :OFFENDER_BOOK_ID and sentence_seq = :SENTENCE_SEQ
}	 

UPDATE_AGG_SENT_SEQ{
-- UPDATE offender_sentences SET agg_sentence_seq = :AGG_SENTENCE_SEQ WHERE offender_book_id = :OFFENDER_BOOK_ID AND sentence_seq = :SENTENCE_SEQ
update offender_sentences set agg_sentence_seq = :AGG_SENTENCE_SEQ, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where offender_book_id = :OFFENDER_BOOK_ID and sentence_seq = :SENTENCE_SEQ
}
UPDATE_OFFEN_SEN_TWO{
-- UPDATE offender_sentences SET sed_calculated_date = :V_AGG_SED, ard_calculated_date = :V_AGG_SED - :vAggSedTwo WHERE offender_book_id = :OFFENDER_BOOK_ID AND sentence_level = 'IND' AND sentence_status = 'A' AND sentence_calc_type = 'A/FINE' AND sed_calculated_date >= :V_AGG_SED AND sentence_status != 'PAID'  
update offender_sentences set sed_calculated_date = :V_AGG_SED, ard_calculated_date = :V_AGG_SED - :vAggSedTwo, MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where offender_book_id = :OFFENDER_BOOK_ID and sentence_level = 'IND' and sentence_status = 'A' and sentence_calc_type = 'A/FINE' and sed_calculated_date >= :V_AGG_SED and sentence_status != 'PAID'
}
UPDATE_OFFEN_SEN_THREE{
-- UPDATE offender_sentences SET start_date = :V_AGG_START_DATE, sed_calculated_date = :V_AGG_SED, ard_calculated_date = :V_AGG_ARD, crd_calculated_date = :V_AGG_CRD, ped_calculated_date = :V_AGG_PED, sentence_calc_type = 'AGG-FINE' WHERE offender_book_id = :OFFENDER_BOOK_ID AND sentence_seq = :V_AGG_SENT_SEQ 
update offender_sentences set start_date = :V_AGG_START_DATE, sed_calculated_date = :V_AGG_SED, ard_calculated_date = :V_AGG_ARD, crd_calculated_date = :V_AGG_CRD, ped_calculated_date = :V_AGG_PED, sentence_calc_type = 'AGG-FINE', MODIFY_USER_ID = :modifyUserId , MODIFY_DATETIME = CURRENT_TIMESTAMP where offender_book_id = :OFFENDER_BOOK_ID and sentence_seq = :V_AGG_SENT_SEQ
}
GET_MAX_DATES_CURSER {
SELECT MAX (HDCED_CALCULATED_DATE) HDCED_CALCULATED_DATE, MAX (ARD_CALCULATED_DATE) ARD_CALCULATED_DATE, MAX (CRD_CALCULATED_DATE) CRD_CALCULATED_DATE, MAX (PED_CALCULATED_DATE) PED_CALCULATED_DATE, MAX (NPD_CALCULATED_DATE) NPD_CALCULATED_DATE, MAX (DECODE (SENTENCE_CATEGORY, '1991', LED_CALCULATED_DATE, SED_CALCULATED_DATE ) ) LED_CALCULATED_DATE, MAX (SED_CALCULATED_DATE) SED_CALCULATED_DATE, MAX (MTD_CALCULATED_DATE) MTD_CALCULATED_DATE, MAX (LTD_CALCULATED_DATE) LTD_CALCULATED_DATE, MAX (ETD_CALCULATED_DATE) ETD_CALCULATED_DATE FROM OFFENDER_SENTENCES WHERE OFFENDER_BOOK_ID = :P_OFFBOOK_ID AND SENTENCE_LEVEL IN ('IND', 'AGG') AND AGG_SENTENCE_SEQ IS NULL AND SENTENCE_STATUS = 'A'
}

INSERT_OFFENDER_SENTENCES_CALCULATION_VALUES {
-- INSERT INTO OFFENDER_SENT_CALCULATIONS (OFFENDER_SENT_CALCULATION_ID, OFFENDER_BOOK_ID, CALCULATION_DATE, HDCED_CALCULATED_DATE, ARD_CALCULATED_DATE, CRD_CALCULATED_DATE, PED_CALCULATED_DATE, NPD_CALCULATED_DATE, LED_CALCULATED_DATE, SED_CALCULATED_DATE, MTD_CALCULATED_DATE, LTD_CALCULATED_DATE, ETD_CALCULATED_DATE, CALC_REASON_CODE, RECORD_DATETIME, RECORD_USER_ID, COMMENT_TEXT ) VALUES (OFFENDER_SENT_CALCULATION_ID.NEXTVAL, :P_OFFBOOK_ID, SYSDATE, :hdcedCalculatedDate, :ardCalculatedDate, :crdCalculatedDate, :pedCalculatedDate, :npdCalculatedDate, :ledCalculatedDate, :sedCalculatedDate, :mtdCalculatedDate, :ltdCalculatedDate, :etdCalculatedDate, :calculationReason, SYSDATE, USER, :commentText )
insert into OFFENDER_SENT_CALCULATIONS (OFFENDER_SENT_CALCULATION_ID, OFFENDER_BOOK_ID, CALCULATION_DATE, HDCED_CALCULATED_DATE, ARD_CALCULATED_DATE, CRD_CALCULATED_DATE, PED_CALCULATED_DATE, NPD_CALCULATED_DATE, LED_CALCULATED_DATE, SED_CALCULATED_DATE, MTD_CALCULATED_DATE, LTD_CALCULATED_DATE, ETD_CALCULATED_DATE, CALC_REASON_CODE, RECORD_DATETIME, RECORD_USER_ID, COMMENT_TEXT , CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME ) values (NEXTVAL('OFFENDER_SENT_CALCULATION_ID'), :P_OFFBOOK_ID, CURRENT_TIMESTAMP, :hdcedCalculatedDate, :ardCalculatedDate, :crdCalculatedDate, :pedCalculatedDate, :npdCalculatedDate, :ledCalculatedDate, :sedCalculatedDate, :mtdCalculatedDate, :ltdCalculatedDate, :etdCalculatedDate, :calculationReason, CURRENT_TIMESTAMP, user, :commentText , :createUserId, CURRENT_TIMESTAMP , CURRENT_TIMESTAMP)
}

GET_STA_RT_DATE{
SELECT start_date FROM offender_sentences WHERE offender_book_id = :offenderBookId AND sentence_level = 'IND' AND sentence_status = 'A' AND sentence_calc_type = 'A/FINE' AND sed_calculated_date >= :vAggSed AND sentence_status != 'PAID' 
}

GET_V_AGG_ARD_FROM_UPDATE{
SELECT MAX(ard_calculated_date) FROM offender_sentences
}	 