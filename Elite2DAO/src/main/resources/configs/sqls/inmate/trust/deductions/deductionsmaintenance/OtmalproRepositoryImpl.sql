
OTMALPRO_FIND_CGFKCSLDDPACCOUNTCODE {
 	SELECT AC_CODE.ACCOUNT_CODE ACCOUNT_CODE   ,AC_CODE.ACCOUNT_NAME ACCOUNT_NAME FROM ACCOUNT_CODES AC_CODE
 	WHERE SUB_ACCOUNT_TYPE IS NOT NULL AND CASELOAD_TYPE = :CASELOADTYPE 
 	ORDER BY AC_CODE.ACCOUNT_CODE  ,AC_CODE.ACCOUNT_NAME
}

OTMALPRO_FIND_CGFKCSLDDDRECEIPTTXNTYPE {
 	SELECT TXN_TYPE.TXN_TYPE RECEIPT_TXN_TYPE  ,
 	TXN_TYPE.DESCRIPTION DESCRIPTION FROM TRANSACTION_TYPES TXN_TYPE WHERE TXN_USAGE = 'R' AND
 	ACTIVE_FLAG = 'Y' AND ALL_CASELOAD_FLAG = 'Y' AND CASELOAD_TYPE = :CASELOADTYPE ORDER BY TXN_TYPE.TXN_TYPE  ,
 	TXN_TYPE.DESCRIPTION
}

OTMALPRO_FIND_CGFKCSLDDPDEDUCTIONTYPE {
 	select	DED_TYPE.DEDUCTION_TYPE DEDUCTION_TYPE ,DED_TYPE.DEDUCTION_DESC DEDUCTION_DESC,
(select description  from reference_codes rc   where "domain" ='BALANCE_TYPE' and code =DED_TYPE.from_balance_type) as calculateon from
	DEDUCTION_TYPES DED_TYPE where DEDUCTION_CATEGORY = 'ALCN' and ACTIVE_FLAG = 'Y'	and CASELOAD_CODE in ('BOTH' ,:CASELOADTYPE )
order by	DED_TYPE.DEDUCTION_TYPE ,	DED_TYPE.DEDUCTION_DESC
}

OTMALPRO_CSLDDP_FIND_CASELOAD_DEDUCTION_PROFILES {
 	SELECT *  FROM CASELOAD_DEDUCTION_PROFILES  WHERE   

}   
OTMALPRO_CSLDDP_INSERT_CASELOAD_DEDUCTION_PROFILES {
--	INSERT INTO CASELOAD_DEDUCTION_PROFILES(DELAY_RECAPTURE,ACTIVE_FLAG,CASELOAD_ID,DEDUCTION_TYPE,EFFECTIVE_DATE,FIFO_FLAG,FO_AL_ALL_OFFENDER_FLAG,PERCENTAGE,INTERNAL_PRIORITY_NO,
--	EXTERNAL_PRIORITY_NO,ACCOUNT_CODE,CO_LIMIT_AMOUNT,CO_CREDIT_WHEN_INDIGENT_FLAG,MAX_MONTHLY_AMOUNT,MAX_TOTAL_AMOUNT,EXPIRY_DATE,PAYEE_PERSON_ID,PAYEE_CORPORATE_ID,MODIFY_USER_ID,MODIFY_DATE,
--	LIST_SEQ,FLAT_RATE,MINIMUM_TRUST_BALANCE,INDIGENT_MANDATORY_FLAG,COMM_CONDITION_TYPE,COMM_CONDITION_CODE,MAX_RECURSIVE_AMOUNT,CREATE_DATETIME,CREATE_USER_ID,MODIFY_DATETIME,CATEGORY_TYPE,
--	SEAL_FLAG) VALUES(:delayRecapture,:activeFlag,:caseloadId,:deductionType,:effectiveDate,:fifoFlag,:foAlAllOffenderFlag,:percentage,:internalPriorityNo,:externalPriorityNo,:accountCode,
--	:coLimitAmount,:coCreditWhenIndigentFlag,:maxMonthlyAmount,:maxTotalAmount,:expiryDate,:payeePersonId,:payeeCorporateId,:modifyUserId,CURRENT_TIMESTAMP,:listSeq,:flatRate,:minimumTrustBalance,
--	:indigentMandatoryFlag,:commConditionType,:commConditionCode,:maxRecursiveAmount,CURRENT_TIMESTAMP,:createUserId,:modifyDateTime,:categoryType,:sealFlag
--	)
 insert into CASELOAD_DEDUCTION_PROFILES(DELAY_RECAPTURE, ACTIVE_FLAG, CASELOAD_ID, DEDUCTION_TYPE, 
 EFFECTIVE_DATE, FIFO_FLAG, FO_AL_ALL_OFFENDER_FLAG, PERCENTAGE, INTERNAL_PRIORITY_NO, EXTERNAL_PRIORITY_NO,
 ACCOUNT_CODE, CO_LIMIT_AMOUNT, CO_CREDIT_WHEN_INDIGENT_FLAG, MAX_MONTHLY_AMOUNT, MAX_TOTAL_AMOUNT, EXPIRY_DATE,
 PAYEE_PERSON_ID, PAYEE_CORPORATE_ID, MODIFY_DATE, LIST_SEQ, FLAT_RATE, MINIMUM_TRUST_BALANCE, 
 INDIGENT_MANDATORY_FLAG, COMM_CONDITION_TYPE, COMM_CONDITION_CODE, MAX_RECURSIVE_AMOUNT, CREATE_DATETIME,
 CREATE_USER_ID, MODIFY_DATETIME, CATEGORY_TYPE, SEAL_FLAG) 
 values(:delayRecapture, :activeFlag, :caseloadId,
 :deductionType, :effectiveDate, :fifoFlag, :foAlAllOffenderFlag, :percentage, :internalPriorityNo, 
 :externalPriorityNo, :accountCode, :coLimitAmount, :coCreditWhenIndigentFlag, :maxMonthlyAmount, 
 :maxTotalAmount, :expiryDate, :payeePersonId, :payeeCorporateId, CURRENT_TIMESTAMP, :listSeq, :flatRate, 
 :minimumTrustBalance, :indigentMandatoryFlag, :commConditionType, :commConditionCode, :maxRecursiveAmount,
 CURRENT_TIMESTAMP, :createUserId, CURRENT_TIMESTAMP, :categoryType, :sealFlag ) 
}

OTMALPRO_CSLDDP_UPDATE_CASELOAD_DEDUCTION_PROFILES {
--	UPDATE CASELOAD_DEDUCTION_PROFILES   SET ACCOUNT_CODE = :accountCode, EFFECTIVE_DATE = :effectiveDate, ACTIVE_FLAG = :activeFlag, EXPIRY_DATE = :expiryDate, FO_AL_ALL_OFFENDER_FLAG = :foAlAllOffenderFlag, PAYEE_CORPORATE_ID = :payeeCorporateId,
--	MAX_MONTHLY_AMOUNT =:maxMonthlyAmount, MAX_TOTAL_AMOUNT=:maxTotalAmount, LIST_SEQ= :listSeq  WHERE DEDUCTION_TYPE = :deductionType AND CASELOAD_ID = :caseloadId
UPDATE CASELOAD_DEDUCTION_PROFILES   SET ACCOUNT_CODE = :accountCode, EFFECTIVE_DATE = :effectiveDate, 
ACTIVE_FLAG = :activeFlag, EXPIRY_DATE = :expiryDate, FO_AL_ALL_OFFENDER_FLAG = :foAlAllOffenderFlag, 
PAYEE_CORPORATE_ID = :payeeCorporateId,
	MAX_MONTHLY_AMOUNT =:maxMonthlyAmount, MAX_TOTAL_AMOUNT=:maxTotalAmount, LIST_SEQ= :listSeq,
	MODIFY_DATETIME= CURRENT_TIMESTAMP,MODIFY_USER_ID = :modifyUserId  WHERE DEDUCTION_TYPE = :deductionType AND 
	CASELOAD_ID = :caseloadId
}

OTMALPRO_CSLDDP_DELETE_CASELOAD_DEDUCTION_PROFILES { 
	DELETE FROM CASELOAD_DEDUCTION_PROFILES WHERE DEDUCTION_TYPE = :deductionType AND CASELOAD_ID = :caseloadId

}

OTMALPRO_CSLDDD_FIND_CASELOAD_DEDUCTION_DETAILS {
 	SELECT  * FROM CASELOAD_DEDUCTION_DETAILS  where CASELOAD_ID=:caseloadId and DEDUCTION_TYPE=:deductionType
}
OTMALPRO_CSLDDD_INSERT_CASELOAD_DEDUCTION_DETAILS {
--	INSERT INTO CASELOAD_DEDUCTION_DETAILS(CASELOAD_ID, DEDUCTION_TYPE, RECEIPT_TXN_TYPE, PERCENTAGE, FLAT_RATE, MODIFY_DATE) 
--	VALUES(:caseloadId, :deductionType, :receiptTxnType, :percentage, :flatRate, SYSDATE)
--INSERT INTO CASELOAD_DEDUCTION_DETAILS(CASELOAD_ID, DEDUCTION_TYPE, RECEIPT_TXN_TYPE, PERCENTAGE, FLAT_RATE, MODIFY_DATE,CREATE_DATETIME,CREATE_USER_ID,MODIFY_DATETIME,MODIFY_USER_ID) 
--	VALUES(:caseloadId, :deductionType, :receiptTxnType, :percentage, :flatRate, CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,:createUserId,CURRENT_TIMESTAMP,:modifyUserId)
insert into CASELOAD_DEDUCTION_DETAILS(CASELOAD_ID, DEDUCTION_TYPE, RECEIPT_TXN_TYPE, PERCENTAGE, FLAT_RATE,
MODIFY_DATE, CREATE_DATETIME, CREATE_USER_ID, MODIFY_DATETIME) 
values(:caseloadId, :deductionType, :receiptTxnType, :percentage, :flatRate, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
:createUserId, CURRENT_TIMESTAMP) 
}

OTMALPRO_CSLDDD_UPDATE_CASELOAD_DEDUCTION_DETAILS {
--	UPDATE CASELOAD_DEDUCTION_DETAILS SET PERCENTAGE = :percentage   WHERE CASELOAD_ID = :caseloadId AND DEDUCTION_TYPE = :deductionType AND RECEIPT_TXN_TYPE = :receiptTxnType
UPDATE CASELOAD_DEDUCTION_DETAILS SET PERCENTAGE = :percentage,MODIFY_DATETIME= CURRENT_TIMESTAMP,
MODIFY_USER_ID=:modifyUserId  WHERE CASELOAD_ID = :caseloadId AND DEDUCTION_TYPE = :deductionType AND 
RECEIPT_TXN_TYPE = :receiptTxnType

}

OTMALPRO_CSLDDD_DELETE_CASELOAD_DEDUCTION_DETAILS { 
	DELETE FROM CASELOAD_DEDUCTION_DETAILS WHERE CASELOAD_ID = :caseloadId AND DEDUCTION_TYPE = :deductionType AND
	RECEIPT_TXN_TYPE = :receiptTxnType
}


OTMALPRO_CGFKCHK_CSLD_DP_DEDPROF_AC_CO_ {
	SELECT AC_CODE.ACCOUNT_NAME FROM   ACCOUNT_CODES AC_CODE WHERE  AC_CODE.ACCOUNT_CODE = :ACCOUNTCODE AND     SUB_ACCOUNT_TYPE IS NOT NULL AND AC_CODE.CASELOAD_TYPE= :CASELOADTYPE
}

OTMALPRO_CGFKCHK_CSLD_DP_DEDPROF_DEDTY_ {
	SELECT DED_TYPE.DEDUCTION_DESC FROM   DEDUCTION_TYPES DED_TYPE WHERE  DED_TYPE.DEDUCTION_TYPE = :DEDUCTIONTYPE 
	AND     DEDUCTION_CATEGORY = 'ALCN' AND ACTIVE_FLAG = 'Y' AND  
	DED_TYPE.CASELOAD_CODE IN ('BOTH', :CASELOADTYPE)
}

OTMALPRO_CGWHEN_NEW_FORM_INSTANCE_ {
	--SELECT  SYSDATE, USER FROM    SYS.DUAL
SELECT  current_timestamp, 'OMS_OWNER' --createUserId
}

OTMALPRO_CGFKCHK_CSLD_DD_CSLD_DD_TXNTY {
	SELECT TXN_TYPE.DESCRIPTION FROM   TRANSACTION_TYPES TXN_TYPE WHERE  TXN_TYPE.TXN_TYPE = :RECEIPTTXNTYPE AND     TXN_USAGE = 'R' AND ACTIVE_FLAG = 'Y' AND ALL_CASELOAD_FLAG = 'Y'
	AND TXN_TYPE.CASELOAD_TYPE = :CASELOADTYPE
}

OTMALPRO_FROM_BALANCE_TYPE {
SELECT FROM_BALANCE_TYPE FROM DEDUCTION_TYPES  WHERE DEDUCTION_CATEGORY = 'ALCN'    AND
DEDUCTION_TYPE = :deductionType
}

OTMALPRO_FROM_BALANCE_TYPE_DESC {
SELECT  DESCRIPTION  FROM REFERENCE_CODES  WHERE DOMAIN = 'BALANCE_TYPE'  AND CODE = :fromBalType
}
OTMALPRO_EXTERNAL_PRIORITY_NO {
--SELECT NVL(MAX(EXTERNAL_PRIORITY_NO),0) + 1    EXT_PRT   FROM   CASELOAD_DEDUCTION_PROFILES     WHERE  CASELOAD_ID = :caseloadId
SELECT COALESCE(MAX(EXTERNAL_PRIORITY_NO),0) + 1 EXT_PRT FROM CASELOAD_DEDUCTION_PROFILES WHERE  CASELOAD_ID = :caseloadId
}
OTMALPRO_COMPAREEFFECTIVEDATEC {
select oms_date_time_compare_date_time(TO_DATE(:effectiveDate, 'DD/MM/YYYY')::text,
	null::text,
	to_char(sysdate(), 'DD-MON-YYYY HH24:MI:SS')::text,
	null::text) datetime
from
	DUAL

}
--SELECT oms_date_time.compare_date_time(TO_DATE(:effectiveDate, 'DD/MM/YYYY'),null, 
      --    to_char(sysdate,'DD-MON-YYYY HH24:MI:SS'),null)  TO_DATE  FROM DUAL
          
CHECKEXISTS_RECORD_OTMALPRO {
SELECT CASELOAD_ID, DEDUCTION_TYPE         FROM CASELOAD_DEDUCTION_PROFILES        WHERE CASELOAD_ID = :caseloadId      AND DEDUCTION_TYPE = :deductionType
}
OTMALPRO_GTEPERCENTAGEANDEXTERNALPRIORITY {
 SELECT PERCENTAGE, EXTERNAL_PRIORITY_NO       FROM CASELOAD_DEDUCTION_PROFILES     WHERE DEDUCTION_TYPE = :deductionType      AND CASELOAD_ID = :caseloadId 
}
OTMALPRO_GETMAXPERCENATGE {
SELECT MAX(PERCENTAGE) 
 FROM CASELOAD_DEDUCTION_DETAILS       WHERE CASELOAD_ID = :caseloadId     AND DEDUCTION_TYPE = :deductionType
}
OTMALPRO_UPDATECASELOADDEDUCTIONPROFILES {

--UPDATE CASELOAD_DEDUCTION_PROFILES        SET PERCENTAGE = :percentage       WHERE CASELOAD_ID = :caseloadId          AND DEDUCTION_TYPE = :deductionType
--UPDATE CASELOAD_DEDUCTION_PROFILES        SET PERCENTAGE = :percentage   WHERE CASELOAD_ID = :caseloadId          AND DEDUCTION_TYPE = :deductionType
--update CASELOAD_DEDUCTION_PROFILES set PERCENTAGE = :percentage, MODIFY_DATETIME = CURRENT_TIMESTAMP, MODIFY_USER_ID ='OMS_OWNER' where CASELOAD_ID = :caseloadId and DEDUCTION_TYPE = :deductionType
update CASELOAD_DEDUCTION_PROFILES set PERCENTAGE = :percentage, MODIFY_DATETIME = CURRENT_TIMESTAMP, MODIFY_USER_ID = :modifyUserId where CASELOAD_ID = :caseloadId and DEDUCTION_TYPE = :deductionType
}
OTMALPRO_UPDATECASELOADDEDUCTIONPROFILES_WITHOUTTXNTYPE {
--UPDATE CASELOAD_DEDUCTION_PROFILES        SET PERCENTAGE = 0  WHERE CASELOAD_ID = :caseloadId        AND DEDUCTION_TYPE = :deductionType
UPDATE CASELOAD_DEDUCTION_PROFILES        SET PERCENTAGE = 0 ,MODIFY_DATETIME= CURRENT_TIMESTAMP,MODIFY_USER_ID=:modifyUserId   WHERE CASELOAD_ID = :caseloadId  AND DEDUCTION_TYPE = :deductionType
}

OTMALPRO_CHECKEXISTS {
SELECT CASELOAD_ID, DEDUCTION_TYPE         FROM CASELOAD_DEDUCTION_PROFILES        WHERE CASELOAD_ID = :caseloadId      AND DEDUCTION_TYPE = :deductionType
}

OTMALPRO_ALLOCTYPE_VALIDATION {
select
	'Y'
from
	CASELOAD_DEDUCTION_PROFILES
where
	deduction_type = :allocType and caseload_id = :caseloadId 
}
OTMALPRO_CHECK_FOR_DELETE{
select count(*) from CASELOAD_DEDUCTION_DETAILS where caseload_id =:caseLoad and deduction_type =:deductionType
}
