
OIMTGOPT_FIND_LNATION {
 	SELECT ALL SECURITY_THREAT_GROUPS.DESCRIPTION, SECURITY_THREAT_GROUPS.STG_CODE, TO_CHAR(SECURITY_THREAT_GROUPS.STG_ID) CODE
FROM SECURITY_THREAT_GROUPS WHERE SECURITY_THREAT_GROUPS.PARENT_STG_ID IS NULL AND SECURITY_THREAT_GROUPS.ACTIVE_FLAG = 'Y'
AND SECURITY_THREAT_GROUPS.STG_ID NOT IN (SELECT PARENT_STG_ID FROM SECURITY_THREAT_GROUPS WHERE STG_ID = :PARENTSTGID)   
}
   
OIMTGOPT_FIND_LGANG {
 	SELECT ALL SECURITY_THREAT_GROUPS.DESCRIPTION, SECURITY_THREAT_GROUPS.STG_CODE, TO_CHAR(SECURITY_THREAT_GROUPS.STG_ID) CODE, SECURITY_THREAT_GROUPS.PARENT_STG_ID FROM SECURITY_THREAT_GROUPS
WHERE SECURITY_THREAT_GROUPS.STG_LEVEL = 'GANG' AND SECURITY_THREAT_GROUPS.ACTIVE_FLAG = 'Y' AND STG_ID NOT IN ( SELECT STG_ID FROM SECURITY_THREAT_GROUPS WHERE STG_ID = :PARENTSTGID
  UNION  SELECT STG_ID FROM SECURITY_THREAT_GROUPS  WHERE STG_ID IN (SELECT PARENT_STG_ID  FROM SECURITY_THREAT_GROUPS   WHERE STG_ID = :PARENTSTGID))
}

OIMTGOPT_STGHTY_FIND_SECURITY_THREAT_GROUPS_HTY {
 	SELECT STG_ID, HTY_SEQ, LIST_SEQ, EFFECTIVE_DATE, ACTION, FROM_STG_LEVEL, TO_STG_LEVEL, FROM_P_STG_ID, TO_P_STG_ID, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME, MODIFY_USER_ID, SEAL_FLAG FROM SECURITY_THREAT_GROUPS_HTY  WHERE STG_ID = :STGID ORDER BY EFFECTIVE_DATE  DESC
}
OIMTGOPT_STGHTY_INSERT_SECURITY_THREAT_GROUPS_HTY {
insert into SECURITY_THREAT_GROUPS_HTY(STG_ID, HTY_SEQ, LIST_SEQ, EFFECTIVE_DATE, action, FROM_STG_LEVEL, TO_STG_LEVEL, FROM_P_STG_ID, TO_P_STG_ID, CREATE_USER_ID, CREATE_DATETIME, MODIFY_DATETIME, SEAL_FLAG) values(:stgId, :htySeq, :listSeq, :effectiveDate, :action, :fromStgLevel, :toStgLevel, :fromPStgId, :toPStgId, :createUserId, current_timestamp, null , :sealFlag)
}

OIMTGOPT_STGHTY1_FIND_SECURITY_THREAT_GROUPS_HTY {
 	SELECT  * FROM SECURITY_THREAT_GROUPS_HTY  /* where  */
}

OIMTGOPT_STG_HTY1_POSTQUERY {
	SELECT DESCRIPTION FROM SECURITY_THREAT_GROUPS WHERE STG_ID = :TOPSTGID
}

OIMTGOPT_CREATE_FORM_GLOBALS {
	SELECT DESCRIPTION  FROM OMS_MODULES WHERE MODULE_NAME = :V_FORM_NAME
}

OIMTGOPT_CGTEWHEN_RADIO_CHANGED {
	SELECT COUNT(*) FROM SECURITY_THREAT_GROUPS WHERE STG_LEVEL = 'SET' AND ACTIVE_FLAG = 'Y' AND PARENT_STG_ID = :STGID
}

OIMTGOPT_GET_WORK_FLOW_SEQ {
	select
	coalesce(MAX(HTY_SEQ),
	0)+ 1
from
	SECURITY_THREAT_GROUPS_HTY
where
	STG_ID = :STGID
}
OIMTGOPT_SECURITY_THREAT_GROUPS_PRE_COMMIT {
	SELECT LIST_SEQ, STG_LEVEL, PARENT_STG_ID FROM SECURITY_THREAT_GROUPS WHERE STG_ID = :STGID
}

OIMTGOPT_UPDATE_SECURITY_THREAT_GROUPS {
	UPDATE SECURITY_THREAT_GROUPS
		    SET PARENT_STG_ID = :toPStgId,
		        CREATE_USER_ID = :createUserId,
		        modify_user_id = :modifyUserId,
	            modify_datetime = current_timestamp 
		  WHERE STG_ID = :stgId
}

OIMTGOPT_UPDATE_SECURITY_THREAT_GROUPS_ONE {
	UPDATE SECURITY_THREAT_GROUPS
		    SET PARENT_STG_ID = :toPStgId,
		        STG_LEVEL = 'SET',
		        modify_user_id = :modifyUserId,
	            modify_datetime = current_timestamp 
		  WHERE STG_ID = :stgId
}
OIMTGOPT_LV_TO_P_ID_STG_ID {
SELECT STG_ID PARENT_STG_ID
	     FROM SECURITY_THREAT_GROUPS
	     WHERE STG_ID IN (SELECT PARENT_STG_ID 
	                        FROM SECURITY_THREAT_GROUPS
	                       WHERE STG_ID IN (SELECT PARENT_STG_ID 
                                                     FROM SECURITY_THREAT_GROUPS
                                                    WHERE STG_ID = :STGID))
}
OIMTGOPT_UPDATE_SECURITY_THREAT_GROUPS_TWO {
	UPDATE SECURITY_THREAT_GROUPS
		    SET PARENT_STG_ID = :toPStgId,
		        STG_LEVEL = 'GANG',
		        modify_user_id = :modifyUserId,
	            modify_datetime = current_timestamp
		  WHERE STG_ID = :stgId
}