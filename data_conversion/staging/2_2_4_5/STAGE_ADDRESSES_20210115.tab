ALTER TABLE stage_addresses
 MODIFY ( invalid_reason default NULL,
          invalid_flag default 'N'
        );


COMMENT ON COLUMN stage_addresses.invalid_reason IS 'The reason the record has been marked as invalid. Used for feedback purposes prior to conversion. Not used by the conversion logic.';
COMMENT ON COLUMN stage_addresses.invalid_flag IS 'A flag to indicate whether the record is considered invalid. Marked N by default. Updated to ''Y'' to flag possible problem records. Not used by conversion logic. Its purpose is to allow feedback on problem records during pre-conversion validation checking. Conversion logic will not attempt to sidestep these records, so faulty records should be reviewed and issues resolved prior to execution of conversion.';

CREATE OR REPLACE TRIGGER stage_addresses_t1
BEFORE INSERT OR UPDATE ON stage_addresses
REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW

BEGIN
/* 
============================================================
   Version Number = 1.1  Date Modified 26-JAN-2021  
============================================================
  MODIFICATION HISTORY                                      
   Person       Date      version      Comments             
-----------  ---------    -----------  -------------------------------
   D. Roy    26/01/2021   1.1          Corrected new reference
   D. Roy    15/01/2021   1.0          Created   
*/

   :NEW.offender_id_display := UPPER(:NEW.offender_id_display);
   :NEW.owner_class := UPPER(:NEW.owner_class);
   :NEW.city := UPPER(:NEW.city);
   :NEW.country := UPPER(:NEW.country);
   :NEW.primary_flag := UPPER(:NEW.primary_flag);
   :NEW.mail_flag := UPPER(:NEW.mail_flag);
   :NEW.nfa_flag := UPPER(:NEW.nfa_flag);
   :NEW.prov_state_code := UPPER(:NEW.prov_state_code);
   :NEW.street := UPPER(:NEW.street);
   :NEW.zip_postal_code := UPPER(:NEW.zip_postal_code);
   :NEW.suite_number := UPPER(:NEW.suite_number);
   :NEW.street_number := UPPER(:NEW.street_number);
   :NEW.street_direction := UPPER(:NEW.street_direction);
   :NEW.address_type1 := UPPER(:NEW.address_type1);
   :NEW.address_type2 := UPPER(:NEW.address_type2);
   :NEW.address_type3 := UPPER(:NEW.address_type3);
END;
/
