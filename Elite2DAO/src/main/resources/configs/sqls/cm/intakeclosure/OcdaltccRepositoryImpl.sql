 OCDALTCC_FIND_OFFENDERSTATUS {
SELECT STATUS_CODE CODE , DESCRIPTION DESCRIPTION FROM COMMUNITY_HEADER_STATUSES WHERE ACTIVE_FLAG = 'Y' AND coalesce(EXPIRY_DATE::text, '') = '' ORDER BY STATUS_CODE,LIST_SEQ
}

OCDALTCC_FIND_CGFKOFFAGY1DSPDESCRIPTION22 {
SELECT
  AL1.DESCRIPTION DESCRIPTION, AL1.AGY_LOC_ID CODE,
  CASE
    WHEN(NOT EXISTS (SELECT 1 FROM OFFENDER_BOOKING_AGY_LOCS OB WHERE OB.AGY_LOC_ID = AL1.AGY_LOC_ID AND OB.OFFENDER_BOOK_ID =:offenderBookId AND ( coalesce(OB.REMOVED_DATE::text, '') = '' OR OB.REMOVED_DATE >= SYSDATE() ) ) AND AL1.AGY_LOC_ID NOT IN ('OUT' , 'TRN' ) AND AL1.AGENCY_LOCATION_TYPE = 'COMM' AND coalesce(AL1.DEACTIVATION_DATE::text, '') = '') THEN 'Y'
    ELSE 'N'
  END ACTIVE_FLAG
FROM AGENCY_LOCATIONS AL1
ORDER BY
  ACTIVE_FLAG DESC,AL1.LONG_DESCRIPTION 
  }

OCDALTCC_FIND_CGFKOFFAGY1DSPDESCRIPTION {
SELECT REF_CODE.DESCRIPTION DESCRIPTION  ,REF_CODE.LIST_SEQ LIST_SEQ  ,REF_CODE.CODE CODE FROM REFERENCE_CODES REF_CODE
        WHERE (DOMAIN = 'INTAKE_RSN' AND (ACTIVE_FLAG = 'Y' OR '' <>'NORMAL' ) )  AND PARENT_CODE='ADDLOC' ORDER BY REF_CODE.LIST_SEQ ,REF_CODE.DESCRIPTION
  }
		
OCDALTCC_OFFAGY_FIND_OFFENDER_BOOKING_AGY_LOCS {
 	SELECT *  FROM OFFENDER_BOOKING_AGY_LOCS 
}
OCDALTCC_OFFAGY_INSERT_OFFENDER_BOOKING_AGY_LOCS {
	INSERT INTO OFFENDER_BOOKING_AGY_LOCS(CASELOAD_ID,AGY_LOC_ID,OFFENDER_BOOK_ID,ADDITION_DATE,REASON_CODE,REMOVED_REASON_CODE,REMOVED_DATE,ADDITION_COMMENT,
	REMOVAL_COMMENT,OFFENDER_STATUS,CREATE_DATETIME,CREATE_USER_ID,MODIFY_DATETIME,ADDITION_TIME,SEAL_FLAG,PTR_ID)
	VALUES(:caseloadId,:agyLocId,:offenderBookId,:additionDate,:reasonCode,:removedReasonCode,:removedDate,:additionComment,:removalComment,:offenderStatus,
CURRENT_TIMESTAMP,:createUserId,null,:additionTime,:sealFlag,:ptrId )
}

OCDALTCC_OFFAGY_UPDATE_OFFENDER_BOOKING_AGY_LOCS {
	UPDATE OFFENDER_BOOKING_AGY_LOCS set OFFENDER_STATUS=:offenderStatus,MODIFY_USER_ID=:modifyUserId,MODIFY_DATETIME=CURRENT_TIMESTAMP where OFFENDER_BOOK_ID =:offenderBookId and CASELOAD_ID =:caseloadId 
	and AGY_LOC_ID=:agyLocId and ADDITION_DATE=:additionDate
}


OCDALTCC_OFFAGY_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_BOOKING_AGY_LOCS O WHERE O.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND O.CASELOAD_ID = :CASELOADID AND O.AGY_LOC_ID = :AGYLOCID AND O.ADDITION_DATE = :ADDITIONDATE
}		

OCDALTCC_CGWHEN_NEW_FORM_INSTANCE_ {
	SELECT  SYSDATE(), USER FROM DUAL
}

OCDALTCC_CGFKCHK_OFFAGY_AGENCY_LOCATIO{
	SELECT AL.DESCRIPTION FROM   AGENCY_LOCATIONS AL WHERE  AL.AGY_LOC_ID = :AGYLOCID
}

OCDALTCC_CGFKCHK_OFFAGY1_OFFAGY_REF_CO_ {
	SELECT REF_CODE.CODE ,REF_CODE.LIST_SEQ FROM   REFERENCE_CODES REF_CODE WHERE (REF_CODE.DESCRIPTION = :DSPDESCRIPTION OR (coalesce(REF_CODE.DESCRIPTION::text, '') = '' AND coalesce(:DSPDESCRIPTION::text, '') = '' )) AND     DOMAIN = 'OPEN_CT_RSN'
}

OCDALTCC_CGFKLKP_OFFAGY1_OFFAGY_REF_CO_ {
	SELECT REF_CODE.CODE ,REF_CODE.LIST_SEQ FROM   REFERENCE_CODES REF_CODE WHERE  (REF_CODE.DESCRIPTION = :DSPDESCRIPTION OR (REF_CODE.DESCRIPTION IS NULL AND :DSPDESCRIPTION IS NULL )) AND     DOMAIN = 'OPEN_CT_RSN'
}

OCDALTCC_CGFKCHK_OFFAGY1_AGENCY_LOCATI_ {
	SELECT AL1.DESCRIPTION FROM   AGENCY_LOCATIONS AL1 WHERE  AL1.AGY_LOC_ID = :AGYLOCID AND    AL1.AGY_LOC_ID  IN (SELECT AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS WHERE CASELOAD_ID = :CASELOADID) AND NOT EXISTS ( SELECT 1 FROM OFFENDER_BOOKING_AGY_LOCS OB WHERE OB.CASELOAD_ID = :CASELOADID AND OB.AGY_LOC_ID = AL1.AGY_LOC_ID AND OB.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ( coalesce(OB.REMOVED_DATE::text, '') = '' OR OB.REMOVED_DATE >= sysdate() ) ) AND AL1.AGY_LOC_ID NOT IN ('OUT', 'TRN') AND AL1.AGENCY_LOCATION_TYPE = 'COMM' AND coalesce(AL1.DEACTIVATION_DATE::text, '') = '' ORDER BY AL1.LONG_DESCRIPTION
}

OCDALTCC_CGFKLKP_OFFAGY1_AGENCY_LOCATI_ {
	SELECT AL1.AGY_LOC_ID FROM   AGENCY_LOCATIONS AL1 WHERE  AL1.DESCRIPTION = :DSPDESCRIPTION22 -- @@@ VENU 14/03/2005, COMMENTED CODE AS PER THE REQ. IN TR+ 395. /*AND    AL1.AGY_LOC_ID IN (SELECT AGY_LOC_ID FROM CASELOAD_AGENCY_LOCATIONS WHERE CASELOAD_ID = :CASELOADID)*/
 AND  NOT EXISTS ( SELECT 1 FROM OFFENDER_BOOKING_AGY_LOCS OB WHERE OB.CASELOAD_ID = :CASELOADID AND OB.AGY_LOC_ID = AL1.AGY_LOC_ID AND OB.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND ( coalesce(OB.REMOVED_DATE::text, '') = '' OR OB.REMOVED_DATE >= sysdate() ) ) AND AL1.AGY_LOC_ID NOT IN ('OUT', 'TRN') AND AL1.AGENCY_LOCATION_TYPE = 'COMM' AND coalesce(AL1.DEACTIVATION_DATE::text, '') = '' ORDER BY AL1.LONG_DESCRIPTION

}

OCDALTCC_CGUVCHK_OFFAGY_PK_ {
SELECT  '1' FROM    OFFENDER_BOOKING_AGY_LOCS WHERE   CASELOAD_ID = :P_CASELOAD_ID AND     AGY_LOC_ID = :P_AGY_LOC_ID AND     OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID AND     ADDITION_DATE = :P_ADDITION_DATE
}
OCDALTCC_EVENTDATE {
SELECT *
        FROM offender_booking_events
       WHERE offender_book_id = :offenderBookId
         AND event_seq =
                (SELECT MAX(event_seq)
                   FROM offender_booking_events
                  WHERE offender_book_id = :offenderBookId
                    AND booking_event_code = 'INTAKE')
}

OCDALTCC_EVENTSEQ {
SELECT coalesce(MAX(event_seq)+1,1)
       FROM offender_booking_events
      WHERE offender_book_id = :offenderBookId
      }

OCDALTCC_PRE_INSERT {
INSERT INTO offender_booking_events
      (
         offender_book_id,
         event_seq,
         booking_event_code,
         reason_code,
         to_agy_loc_id,
         event_date,
         event_time,
         comment_text,
         CREATE_USER_ID,
         create_datetime,
         modify_datetime
      )
      VALUES
      (
         :offenderBookId,
         :eventSeq,
         'AAC',
         :reasonCode,
         :agyLocId,
         CURRENT_TIMESTAMP,
         cast(date_TRUNC('D',sysdate())as date),
         :additionComment,
         :createUserId,
         CURRENT_TIMESTAMP,
         null
         
      )
      }
      OCDALTCC_OFFAGY_FIND_OFFENDER_BOOKING_AGY_ONE_LOCS {
 	SELECT *  FROM OFFENDER_BOOKING_AGY_LOCS  WHERE OFFENDER_BOOK_ID = :offenderBookId AND CASELOAD_ID = :caseloadId AND AGY_LOC_ID = :agyLocId
 	}
 	OCDALTCC_ADDITION_DATE_TRIGGER {
 	SELECT TO_DATE (TO_CHAR(:ADDITION_DATE ::DATE,'MM-DD-YYYY' ::TEXT) || TO_CHAR(:ADDITION_TIME::DATE ,'HH24:MI:SS'::TEXT),'MM-DD-YYYY  HH24:MI:SS')
 	}