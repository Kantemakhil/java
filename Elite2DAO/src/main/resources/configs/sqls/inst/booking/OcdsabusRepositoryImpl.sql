
OCDSABUS_FIND_AGE {
 	SELECT CODE
FROM REFERENCE_CODES
WHERE
  DOMAIN = 'AGE' AND
  ACTIVE_FLAG = 'Y' AND
  EXPIRED_DATE IS NULL AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ))
}

OCDSABUS_FIND_LSOURCEINFO {
 	SELECT
  DESCRIPTION, CODE
FROM REFERENCE_CODES
WHERE
  DOMAIN = 'SUBSTAN_INFO' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ))
ORDER BY
  LIST_SEQ, DESCRIPTION
}

OCDSABUS_FIND_CGFKOFFSUDSPDESCRIPTION {
 	SELECT
  REFERENCE_CODES.DESCRIPTION DSP_DESCRIPTION ,
  REFERENCE_CODES.LIST_SEQ DSP_LIST_SEQ, REFERENCE_CODES.CODE SUBSTANCE_TYPE
FROM REFERENCE_CODES REFERENCE_CODES
WHERE
  DOMAIN = 'SUBSTANCE' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ))
ORDER BY
  REFERENCE_CODES.LIST_SEQ, REFERENCE_CODES.DESCRIPTION

}

OCDSABUS_FIND_CGFKOFFSTDSPDESCRIPTION3 {
 	SELECT
  REFERENCE_CODES2.DESCRIPTION DSP_DESCRIPTION3 ,
  REFERENCE_CODES2.LIST_SEQ DSP_LIST_SEQ2, REFERENCE_CODES2.CODE TREATMENT_CODE
FROM REFERENCE_CODES REFERENCE_CODES2
WHERE
  DOMAIN = 'SUBS_TREAT' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ))
ORDER BY
  REFERENCE_CODES2.LIST_SEQ, REFERENCE_CODES2.DESCRIPTION

}

OCDSABUS_FIND_CGFKOFFSTDSPDESCRIPTION {
 	SELECT
  REFERENCE_CODES3.DESCRIPTION DSP_DESCRIPTION ,
  REFERENCE_CODES3.LIST_SEQ DSP_LIST_SEQ, REFERENCE_CODES3.CODE TREATMENT_PLACE
FROM REFERENCE_CODES REFERENCE_CODES3
WHERE
  DOMAIN = 'SUBS_PROV' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ))
ORDER BY
  REFERENCE_CODES3.LIST_SEQ, REFERENCE_CODES3.DESCRIPTION
}

OCDSABUS_FIND_CGFKOFFSDDSPDESCRIPTION {
 	SELECT
  REFERENCE_CODES1.DESCRIPTION DSP_DESCRIPTION ,
  REFERENCE_CODES1.LIST_SEQ DSP_LIST_SEQ, REFERENCE_CODES1.CODE USE_LEVEL
FROM REFERENCE_CODES REFERENCE_CODES1
WHERE
  DOMAIN = 'CONSUMPTION' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL ))
ORDER BY
  REFERENCE_CODES1.LIST_SEQ, REFERENCE_CODES1.DESCRIPTION

}

OCDSABUS_OFFSU_FIND_OFFENDER_SUBSTANCE_USES {
select OFFENDER_BOOK_ID, ROOT_OFFENDER_ID, SUBSTANCE_TYPE, ROW_ID::text, AGE_USED, CASELOAD_TYPE, MODIFY_USER_ID, MODIFY_DATETIME, CREATE_DATETIME, CREATE_USER_ID, SEAL_FLAG from OFFENDER_SUBSTANCE_USES where OFFENDER_BOOK_ID = :offender_book_id order by SUBSTANCE_TYPE
}
OCDSABUS_OFFSU_INSERT_OFFENDER_SUBSTANCE_USES {
insert into OFFENDER_SUBSTANCE_USES(OFFENDER_BOOK_ID, ROOT_OFFENDER_ID, SUBSTANCE_TYPE, AGE_USED, CASELOAD_TYPE, MODIFY_DATETIME, CREATE_DATETIME, CREATE_USER_ID, SEAL_FLAG ) values(:offenderBookId, :rootOffenderId, :substanceType, :ageUsed, :caseloadType, NULL, CURRENT_TIMESTAMP, :createUserId, :sealFlag)
}  

OCDSABUS_OFFSU_UPDATE_OFFENDER_SUBSTANCE_USES {
update OFFENDER_SUBSTANCE_USES set SUBSTANCE_TYPE =:substanceType, AGE_USED =:ageUsed, MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID = :modifyUserId where ROW_ID =cast(:rowId as Integer)
}  

OCDSABUS_OFFSU_DELETE_OFFENDER_SUBSTANCE_USES { 
	DELETE FROM OFFENDER_SUBSTANCE_USES where OFFENDER_BOOK_ID=:offenderBookId and SUBSTANCE_TYPE=:substanceType
}   

OCDSABUS_OFFSD_FIND_OFFENDER_SUBSTANCE_DETAILS {
 	SELECT  OFFENDER_BOOK_ID,ROOT_OFFENDER_ID,SUBSTANCE_TYPE,SEQ_NUMBER,USE_PERIOD,USE_LEVEL,CASELOAD_TYPE,MODIFY_DATETIME,MODIFY_USER_ID,COMMENT_TEXT,SOURCE_OF_INFO,CREATE_DATETIME,CREATE_USER_ID,SEAL_FLAG FROM OFFENDER_SUBSTANCE_DETAILS  WHERE OFFENDER_BOOK_ID = :offender_book_id and SUBSTANCE_TYPE=:substance_type ORDER BY SUBSTANCE_TYPE 
}
OCDSABUS_OFFSD_INSERT_OFFENDER_SUBSTANCE_DETAILS {
insert into OFFENDER_SUBSTANCE_DETAILS(OFFENDER_BOOK_ID, ROOT_OFFENDER_ID, SUBSTANCE_TYPE, SEQ_NUMBER, USE_PERIOD, USE_LEVEL, CASELOAD_TYPE, MODIFY_DATETIME, COMMENT_TEXT, SOURCE_OF_INFO, CREATE_DATETIME, CREATE_USER_ID, SEAL_FLAG ) values(:offenderBookId, :rootOffenderId, :substanceType, :seqNumber, :usePeriod, :useLevel, :caseloadType, NULL, :commentText, :sourceOfInfo, CURRENT_TIMESTAMP, :createUserId, :sealFlag) 
} 

OCDSABUS_OFFSD_UPDATE_OFFENDER_SUBSTANCE_DETAILS {
update OFFENDER_SUBSTANCE_DETAILS set USE_PERIOD =:usePeriod, USE_LEVEL =:useLevel, SOURCE_OF_INFO =:sourceOfInfo, COMMENT_TEXT =:commentText, MODIFY_DATETIME =CURRENT_TIMESTAMP, MODIFY_USER_ID =:modifyUserId where OFFENDER_BOOK_ID =:offenderBookId and SUBSTANCE_TYPE =:substanceType and SEQ_NUMBER =:seqNumber
} 

OCDSABUS_OFFSD_DELETE_OFFENDER_SUBSTANCE_DETAILS { 
	DELETE FROM OFFENDER_SUBSTANCE_DETAILS where OFFENDER_BOOK_ID=:offenderBookId and SUBSTANCE_TYPE=:substanceType and SEQ_NUMBER=:seqNumber
}  

OCDSABUS_OFFST_FIND_OFFENDER_SUBSTANCE_TREATMENTS {
 	SELECT OFFENDER_BOOK_ID,TREATMENT_SEQ,SUBSTANCE_TYPE,TREATMENT_FROM_DATE,FROM_DATE_FLAG,ROOT_OFFENDER_ID,CASELOAD_TYPE,MODIFY_DATETIME,MODIFY_USER_ID,TO_DATE_FLAG,TREATMENT_TO_DATE,TREATMENT_CODE,COMMENT_TEXT,TREATMENT_PLACE,CREATE_DATETIME,CREATE_USER_ID,SEAL_FLAG  FROM OFFENDER_SUBSTANCE_TREATMENTS WHERE OFFENDER_BOOK_ID = :offender_book_id and SUBSTANCE_TYPE=:substance_type ORDER BY TREATMENT_TO_DATE DESC   
}
OCDSABUS_OFFST_INSERT_OFFENDER_SUBSTANCE_TREATMENTS {
insert into OFFENDER_SUBSTANCE_TREATMENTS(OFFENDER_BOOK_ID, TREATMENT_SEQ, SUBSTANCE_TYPE, TREATMENT_FROM_DATE, FROM_DATE_FLAG, ROOT_OFFENDER_ID, CASELOAD_TYPE, MODIFY_DATETIME, TO_DATE_FLAG, TREATMENT_TO_DATE, TREATMENT_CODE, COMMENT_TEXT, TREATMENT_PLACE, CREATE_DATETIME, CREATE_USER_ID, SEAL_FLAG ) values(:offenderBookId, :treatmentSeq, :substanceType, :treatmentFromDate, :fromDateFlag, :rootOffenderId, :caseloadType, NULL, :toDateFlag, :treatmentToDate, :treatmentCode, :commentText, :treatmentPlace, CURRENT_TIMESTAMP, :createUserId, :sealFlag)
}  

OCDSABUS_OFFST_UPDATE_OFFENDER_SUBSTANCE_TREATMENTS {
update OFFENDER_SUBSTANCE_TREATMENTS set TREATMENT_TO_DATE =:treatmentToDate, TREATMENT_PLACE =:treatmentPlace, TREATMENT_CODE =:treatmentCode, TREATMENT_FROM_DATE =:treatmentFromDate, COMMENT_TEXT =:commentText, MODIFY_DATETIME = CURRENT_TIMESTAMP, MODIFY_USER_ID =:modifyUserId where OFFENDER_BOOK_ID =:offenderBookId and SUBSTANCE_TYPE =:substanceType and TREATMENT_SEQ =:treatmentSeq
}  

OCDSABUS_OFFST_DELETE_OFFENDER_SUBSTANCE_TREATMENTS { 
	DELETE FROM OFFENDER_SUBSTANCE_TREATMENTS where OFFENDER_BOOK_ID=:offenderBookId and SUBSTANCE_TYPE=:substanceType and TREATMENT_SEQ=:treatmentSeq
} 


OCDSABUS_OFF_SU_ONCHECKDELETEMASTER {
	SELECT 1 FROM OFFENDER_SUBSTANCE_DETAILS O WHERE O.OFFENDER_BOOK_ID = :offender_book_id AND O.SUBSTANCE_TYPE = :substance_type
}

OCDSABUS_OFF_ST_ONCHECKDELETEMASTER {
	SELECT 1 FROM OFFENDER_SUBSTANCE_TREATMENTS O WHERE O.OFFENDER_BOOK_ID = :offender_book_id AND O.SUBSTANCE_TYPE = :substance_type
}

OCDSABUS_OFF_ST_PREINSERT {
	SELECT coalesce (MAX(TREATMENT_SEQ),0) + 1
FROM OFFENDER_SUBSTANCE_TREATMENTS
WHERE
  OFFENDER_BOOK_ID = :OFFENDERBOOKID AND
  SUBSTANCE_TYPE = :substanceType
}
OCDSABUS_OFF_SD_PREINSERT {
	select
	coalesce 
	(MAX(SEQ_NUMBER),
	0) + 1
from
	OFFENDER_SUBSTANCE_DETAILS
where
	OFFENDER_BOOK_ID = :OFFENDERBOOKID
	and SUBSTANCE_TYPE =:substanceType
}
OCDSABUS_CGFKCHK_OFF_SU_OFF_SU_REF_COD_ {
	SELECT
  REFERENCE_CODES.DESCRIPTION, REFERENCE_CODES.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES
WHERE
  REFERENCE_CODES.CODE = :SUBSTANCETYPE AND
  DOMAIN = 'SUBSTANCE' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OCDSABUS_CGFKLKP_OFF_SU_OFF_SU_REF_COD_ {
	SELECT
  REFERENCE_CODES.CODE, REFERENCE_CODES.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES
WHERE
  REFERENCE_CODES.DESCRIPTION = :NBTDESCRIPTION AND
  DOMAIN = 'SUBSTANCE' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OCDSABUS_CGUVCHK_OFFENDER_SUBSTANCE_US_ {
SELECT  '1' FROM    OFFENDER_SUBSTANCE_USES WHERE   OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID AND     SUBSTANCE_TYPE = :P_SUBSTANCE_TYPE
}

OCDSABUS_CGFKCHK_OFF_SD_OFF_SD_REF_COD_ {
	SELECT
  REFERENCE_CODES1.DESCRIPTION, REFERENCE_CODES1.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES1
WHERE
  REFERENCE_CODES1.CODE = :USELEVEL AND
  DOMAIN = 'CONSUMPTION' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OCDSABUS_CGFKLKP_OFF_SD_OFF_SD_REF_COD_ {
	SELECT
  REFERENCE_CODES1.CODE, REFERENCE_CODES1.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES1
WHERE
  REFERENCE_CODES1.DESCRIPTION = :DSPDESCRIPTION AND
  DOMAIN = 'CONSUMPTION' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OCDSABUS_CGUVCHK_OFFENDER_SUBSTANCE_DE_ {
	SELECT  '1' FROM    OFFENDER_SUBSTANCE_DETAILS WHERE   OFFENDER_BOOK_ID = :P_OFFENDER_BOOK_ID AND     SUBSTANCE_TYPE = :P_SUBSTANCE_TYPE AND     SEQ_NUMBER = :P_SEQ_NUMBER
}

OCDSABUS_CGFKCHK_OFF_ST_OFF_ST_REF_COD_ {
	SELECT
  REFERENCE_CODES3.DESCRIPTION, REFERENCE_CODES3.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES3
WHERE
  REFERENCE_CODES3.CODE = :TREATMENTPLACE AND
  DOMAIN = 'SUBS_PROV' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OCDSABUS_CGFKLKP_OFF_ST_OFF_ST_REF_COD_ {
	SELECT 
  REFERENCE_CODES3.CODE, REFERENCE_CODES3.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES3
WHERE
  REFERENCE_CODES3.DESCRIPTION = :DSPDESCRIPTION AND
  DOMAIN = 'SUBS_PROV' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))
}

OCDSABUS_CGFKCHK_OFF_ST_OFF_ST_REF_2_ {
	SELECT
  REFERENCE_CODES2.DESCRIPTION, REFERENCE_CODES2.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES2
WHERE
  REFERENCE_CODES2.CODE = :TREATMENTCODE AND
  DOMAIN = 'SUBS_TREAT' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}

OCDSABUS_CGFKLKP_OFF_ST_OFF_ST_REF_2_ {
	SELECT
  REFERENCE_CODES2.CODE, REFERENCE_CODES2.LIST_SEQ
FROM REFERENCE_CODES REFERENCE_CODES2
WHERE
  REFERENCE_CODES2.DESCRIPTION = :DSPDESCRIPTION3 AND
  DOMAIN = 'SUBS_TREAT' AND
  ((ACTIVE_FLAG = 'Y' AND EXPIRED_DATE IS NULL))

}
OCDSABUS_CONSTRAINT_VALIDATIONS {
  select
 tc.table_name
from
 information_schema.table_constraints as tc
join information_schema.key_column_usage as kcu on
 tc.constraint_name = kcu.constraint_name
 and tc.table_schema = kcu.table_schema
join information_schema.constraint_column_usage as ccu on
 ccu.constraint_name = tc.constraint_name
 and ccu.table_schema = tc.table_schema
where
 tc.constraint_type = 'FOREIGN KEY'
 and upper(ccu.table_name)= 'OFFENDER_SUBSTANCE_USES'
 and upper(tc.CONSTRAINT_NAME)= :CONSTRAINTNAME
 and upper(tc.constraint_schema)= 'OMS_OWNER'
}
