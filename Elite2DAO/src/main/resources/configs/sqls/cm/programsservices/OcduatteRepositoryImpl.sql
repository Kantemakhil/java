
OCDUATTE_FIND_RGATTENDANCE {
 	SELECT
  RC.DESCRIPTION DESCRIPTION, RC.CODE CODE
FROM REFERENCE_CODES RC
WHERE
  RC.DOMAIN = 'OUTCOMES' AND
  RC.CODE NOT IN ('PENDING' ) AND
  (RC.ACTIVE_FLAG = 'Y') AND
  RC.CODE IN
    (SELECT EMO.OUTCOME_CODE
     FROM
       EVENT_MEASURE_OUTCOMES EMO, EVENT_MEASURES EM
     WHERE
       EM.EVENT_TYPE = 'UW' AND
       EMO.EVENT_MEASURE_ID = EM.EVENT_MEASURE_ID AND
       EM.EVENT_SUB_TYPE = 'WS' AND
       EM.ACTIVE_FLAG = 'Y' AND
       (:pShowOutcome IS NULL OR EMO.OUTCOME_CODE IN ('AACA' ,'AAME' ,'AAED' ,'AAFA' ,'AAOT' ,'AACU' ,'RES' ,'CANC' ,'AASD' ) ) ) AND
  (RC.ACTIVE_FLAG = 'Y' )
ORDER BY
  LIST_SEQ, DESCRIPTION, CODE

}
OCDUATTE_FIND_RGATTENDANCE_MODIFIED{
select
  A.DESCRIPTION, A.CODE, coalesce(B.ACTIVE_FLAG,'N') as ACTIVE_FLAG
from (SELECT
     RC.DESCRIPTION DESCRIPTION, RC.CODE CODE
   FROM REFERENCE_CODES RC
   WHERE
     RC.DOMAIN = 'OUTCOMES' AND
     RC.CODE IN (SELECT EMO.OUTCOME_CODE
        FROM
          EVENT_MEASURE_OUTCOMES EMO, EVENT_MEASURES EM
        WHERE
          EMO.EVENT_MEASURE_ID = EM.EVENT_MEASURE_ID AND (coalesce(:pShowOutcome::text, '') = '' OR EMO.OUTCOME_CODE IN ('AACA' ,'AAME' ,'AAED' ,'AAFA' ,'AAOT' ,'AACU' ,'RES' ,'CANC' ,'AASD' ) ) )
   ORDER BY
     LIST_SEQ, DESCRIPTION, CODE)A
  left join(SELECT RC.DESCRIPTION DESCRIPTION ,RC.CODE CODE,'Y' ACTIVE_FLAG FROM REFERENCE_CODES RC WHERE RC.DOMAIN = 'OUTCOMES' AND RC.CODE NOT IN ('PENDING' ) AND (RC.ACTIVE_FLAG = 'Y') AND RC.CODE IN (SELECT EMO.OUTCOME_CODE FROM EVENT_MEASURE_OUTCOMES EMO ,EVENT_MEASURES EM WHERE EM.EVENT_TYPE = 'UW' AND EMO.EVENT_MEASURE_ID = EM.EVENT_MEASURE_ID AND EM.EVENT_SUB_TYPE = 'WS' AND EM.ACTIVE_FLAG = 'Y' AND (coalesce(:pShowOutcome::text, '') = '' OR EMO.OUTCOME_CODE IN ('AACA' ,'AAME' ,'AAED' ,'AAFA' ,'AAOT' ,'AACU' ,'RES' ,'CANC' ,'AASD' ) ) ) AND (RC.ACTIVE_FLAG = 'Y') ORDER BY LIST_SEQ ,DESCRIPTION ,CODE )B ON
    A.DESCRIPTION=B.DESCRIPTION and
    A.CODE=B.CODE
}
OCDUATTE_FIND_RGSUPERVISOR {
 	SELECT DISTINCT sm.last_name || ', ' || sm.first_name description, tm.staff_id code FROM team_staff_members tm, staff_members sm, offender_team_assignments ota WHERE sm.staff_id = tm.staff_id AND tm.team_id = ota.team_id AND ota.function_type = 'UNPAID_WORK' AND ota.offender_book_id = :offenderbookid AND ( ( tm.active_flag = 'Y' ) OR '' = 'ENTER-QUERY' ) ORDER BY 1
}

OCDUATTE_FIND_RGBEHAVIOUR {
 	SELECT
  REFERENCE_CODES.DESCRIPTION DESCRIPTION, REFERENCE_CODES.CODE CODE
FROM REFERENCE_CODES
WHERE
  DOMAIN = 'PS_BEHAVIOUR' AND
  (ACTIVE_FLAG = 'Y')
ORDER BY
  LIST_SEQ, DESCRIPTION, CODE

}

OCDUATTE_FIND_RGWORKQUALITY {
 	SELECT
  REFERENCE_CODES.DESCRIPTION DESCRIPTION, REFERENCE_CODES.CODE CODE
FROM REFERENCE_CODES
WHERE
  DOMAIN = 'PS_UPW_QUAL' AND
  (ACTIVE_FLAG = 'Y')
ORDER BY
  LIST_SEQ, DESCRIPTION, CODE

}

OCDUATTE_FIND_RGPROJECTS {
 	SELECT
  DESCRIPTION, to_char(CRS_ACTY_ID) CODE, LIST_SEQ
FROM COURSE_ACTIVITIES CA
WHERE
  COURSE_ACTIVITY_TYPE = 'WS' AND
  PROVIDER_PARTY_CLASS = 'TEAM' AND
  CA.PROVIDER_PARTY_ID = :NBTTEAMID AND
  (CA.ACTIVE_FLAG = 'Y')
ORDER BY LIST_SEQ

}

OCDUATTE_FIND_RGPROJECTS_NBT_CODE {
 	SELECT
  CA.CODE CODE, CA.DESCRIPTION DESCRIPTION, CA.CRS_ACTY_ID, OPP.OFF_PRGREF_ID
FROM
  COURSE_ACTIVITIES CA, OFFENDER_PROGRAM_PROFILES OPP
WHERE
  CA.COURSE_ACTIVITY_TYPE = 'WS' AND
  CA.COURSE_CLASS = 'COURSE' AND
  (CA.ACTIVE_FLAG = 'Y' ) AND
  CA.PROVIDER_PARTY_CLASS = 'TEAM' AND
  OPP.OFFENDER_BOOK_ID = :OFFENDERBOOKID AND
  OPP.CRS_ACTY_ID = CA.CRS_ACTY_ID

}

OCDUATTE_FIND_RGSKILLS {
 	SELECT
  REFERENCE_CODES.DESCRIPTION DESCRIPTION, REFERENCE_CODES.CODE CODE
FROM REFERENCE_CODES
WHERE
  DOMAIN = 'PS_UPW_SKILL' AND
  (ACTIVE_FLAG = 'Y')
ORDER BY
  LIST_SEQ, DESCRIPTION, CODE

}

OCDUATTE_FIND_RGSTAFFCHECK {
 	SELECT DISTINCT
  SM.LAST_NAME||', '||SM.FIRST_NAME STAFF_DESC, SM.STAFF_ID STAFF_ID,
  SLR.ROLE STAFF_ROLE
FROM
  STAFF_MEMBERS SM, STAFF_LOCATION_ROLES SLR
WHERE
  SM.STATUS = 'ACTIVE' AND
  (UPPER(SM.LAST_NAME||', '||SM.FIRST_NAME ) = :NBTSTAFFDESC ) AND
  SLR.SAC_STAFF_ID = SM.STAFF_ID AND SLR.ROLE = 'UW' ORDER BY STAFF_DESC

}

OCDUATTE_FIND_RGTEAMS {
 SELECT
    t.description,
    t.team_code code,
    t.team_id
    
FROM
    automation_teams   t,
    team_functions   tf
WHERE
    tf.team_id = t.team_id
    AND t.active_flag = 'Y'
    AND tf.function_type = 'UNPAID_WORK'
    AND t.team_id IN (
        SELECT
            tm.team_id
        FROM
            team_staff_members    tm,
            staff_members   sua
        WHERE
            tm.staff_id = sua.staff_id
            AND sua.user_id = :createUserId
    )
ORDER BY
    t.description    
}
OCDUATTE_OFFCOURSEATTEND_FIND_V_OFFENDER_COURSE_EVENTS {
 	SELECT
  EVENT_ID, OFFENDER_BOOK_ID, EVENT_CLASS, EVENT_TYPE, EVENT_SUB_TYPE,
  OFF_PRGREF_ID, REFERENCE_ID, CRS_SCH_ID, CRS_APPT_ID, PROGRAM_ID, COURSE_CODE,
  DESCRIPTION, CRS_ACTY_ID, WEEKDAY, EVENT_DATE, START_TIME, END_TIME, IN_TIME,
  OUT_TIME, EVENT_STATUS, EVENT_OUTCOME, AGY_LOC_ID, TO_INTERNAL_LOCATION_ID,
  COMMENT_TEXT, OUTCOME_REASON_CODE, PIECE_WORK, ENGAGEMENT_CODE,
  UNDERSTANDING_CODE, CREDITED_HOURS, AGREED_TRAVEL_HOUR, BEHAVIOUR_CODE,
  ACTION_CODE, SICK_NOTE_RECEIVED_DATE, SICK_NOTE_EXPIRY_DATE, PERFORMANCE_CODE,
  TO_AGY_LOC_ID, TO_ADDRESS_ID, PERFORMANCE_DESC, EVENT_OUTCOME_DESC,
  SUPERVISOR_STAFF_ID, UNEXCUSED_ABSENCE_FLAG, DIRECTION_CODE,
  EXT_MOVE_OUT_TIME, EXT_MOVE_IN_TIME, SCHEDULE_MOVEMENT_TIME, SESSION_NO,
  RECORD_SOURCE, CHECK_SUM
FROM V_OFFENDER_COURSE_EVENTS

}
OCDUATTE_OFFCOURSEATTEND_UPDATE_V_OFFENDER_COURSE_EVENTS {
	UPDATE V_OFFENDER_COURSE_EVENTS set OFFENDER_BOOK_ID=:offenderBookId,EVENT_CLASS=:eventClass,EVENT_TYPE=:eventType,EVENT_SUB_TYPE=:eventSubType,OFF_PRGREF_ID=:offPrgrefId,REFERENCE_ID=:referenceId,CRS_SCH_ID=:crsSchId,CRS_APPT_ID=:crsApptId,PROGRAM_ID=:programId,COURSE_CODE=:courseCode,DESCRIPTION=:description,CRS_ACTY_ID=:crsActyId,WEEKDAY=:weekday,EVENT_DATE=:eventDate,START_TIME=:startTime,END_TIME=:endTime,IN_TIME=:inTime,OUT_TIME=:outTime,EVENT_STATUS=:eventStatus,EVENT_OUTCOME=:eventOutcome,AGY_LOC_ID=:agyLocId,TO_INTERNAL_LOCATION_ID=:toInternalLocationId,COMMENT_TEXT=:commentText,OUTCOME_REASON_CODE=:outcomeReasonCode,PIECE_WORK=:pieceWork,ENGAGEMENT_CODE=:engagementCode,UNDERSTANDING_CODE=:understandingCode,CREDITED_HOURS=:creditedHours,AGREED_TRAVEL_HOUR=:agreedTravelHour,BEHAVIOUR_CODE=:behaviourCode,ACTION_CODE=:actionCode,SICK_NOTE_RECEIVED_DATE=:sickNoteReceivedDate,SICK_NOTE_EXPIRY_DATE=:sickNoteExpiryDate,PERFORMANCE_CODE=:performanceCode,TO_AGY_LOC_ID=:toAgyLocId,TO_ADDRESS_ID=:toAddressId,PERFORMANCE_DESC=:performanceDesc,EVENT_OUTCOME_DESC=:eventOutcomeDesc,SUPERVISOR_STAFF_ID=:supervisorStaffId,UNEXCUSED_ABSENCE_FLAG=:unexcusedAbsenceFlag,DIRECTION_CODE=:directionCode,EXT_MOVE_OUT_TIME=:extMoveOutTime,EXT_MOVE_IN_TIME=:extMoveInTime,SCHEDULE_MOVEMENT_TIME=:scheduleMovementTime,SESSION_NO=:sessionNo,RECORD_SOURCE=:recordSource,CHECK_SUM=:checkSum where EVENT_ID=:eventId 
} 

OCDUATTE_OFFCOURSESKILLS_FIND_OFFENDER_COURSE_SKILLS {
select
	EVENT_ID,
	SKILL_CODE,
	NO_OF_HOURS,
	STAFF_ID,
	COMMENT_TEXT,
	STAFF_ROLE,
	CREATE_DATETIME,
	CREATE_USER_ID,
	MODIFY_DATETIME,
	MODIFY_USER_ID,
	SEAL_FLAG,
	 ROW_ID
from
	OFFENDER_COURSE_SKILLS
where
	STAFF_ROLE = 'TUTOR'
	and EVENT_ID = :eventId order by row_id
}
OCDUATTE_OFFCOURSESKILLS_INSERT_OFFENDER_COURSE_SKILLS {
	insert
	into
	OFFENDER_COURSE_SKILLS(EVENT_ID,
	SKILL_CODE,
	NO_OF_HOURS,
	STAFF_ID,
	COMMENT_TEXT,
	STAFF_ROLE,
	CREATE_DATETIME,
	CREATE_USER_ID,
	MODIFY_DATETIME,
	MODIFY_USER_ID,
	SEAL_FLAG)
values(:eventId,
:skillCode,
:noOfHours,
:staffId,
:commentText,
:staffRole,
CURRENT_TIMESTAMP,
:createUserId,
null,
:modifyUserId,
:sealFlag)
}

OCDUATTE_OFFCOURSESKILLS_UPDATE_OFFENDER_COURSE_SKILLS {
	update
	OFFENDER_COURSE_SKILLS
set
	EVENT_ID =:eventId,
	SKILL_CODE =:skillCode,
	NO_OF_HOURS =:noOfHours,
	STAFF_ID =:staffId,
	COMMENT_TEXT =:commentText,
	STAFF_ROLE =:staffRole,
	CREATE_DATETIME =CURRENT_TIMESTAMP,
	CREATE_USER_ID =:createUserId,
	MODIFY_DATETIME =CURRENT_TIMESTAMP,
	MODIFY_USER_ID =:modifyUserId,
	SEAL_FLAG =:sealFlag
where
	EVENT_ID =:eventId
	and ROWID = :rowId
}

OCDUATTE_OFFCOURSESKILLS_DELETE_OFFENDER_COURSE_SKILLS { 
	DELETE  FROM OFFENDER_COURSE_SKILLS WHERE EVENT_ID=:eventId AND  ROWID = :rowId
}


OCDUATTE_OFF_COURSE_ATTEND_ONCHECKDELETEMASTER_ {
	SELECT 1 FROM OFFENDER_COURSE_SKILLS O WHERE O.EVENT_ID = :EVENTID
}

OCDUATTE_OFFCOURSESKILLS_FIND_STAFF_NAMES {
SELECT  Last_Name||', '||First_Name staffDesc FROM  STAFF_MEMBERS WHERE staff_ID = :pStaffId
}

OCDUATTE_COMPARE_DATE_TIME {

}
OCDUATTE_VOFFENDER_COURSE_EVENTS_CHECK_UA_FAIL_CUR {
SELECT OFFENDER_BOOK_ID, SENTENCE_SEQ, EVENT_DATE FROM V_OFFENDER_SENTENCE_EVENTS V_OFF_SENT WHERE V_OFF_SENT.EVENT_ID = :pEventId
}
OCDUATTE_VOFFENDER_COURSE_EVENTS_CHECK_UA_EVENT_OUTCOME {
SELECT 'Y' FROM EVENT_MEASURES EVENT_MEASURE, EVENT_MEASURE_OUTCOMES EVENT_OUT WHERE EVENT_MEASURE.EVENT_TYPE = :pEventType AND EVENT_MEASURE.EVENT_SUB_TYPE = :pEventSubType AND EVENT_OUT.OUTCOME_CODE = :pEventOutcome AND EVENT_OUT.SET_COUNTER_FLAG = 'Y' AND EVENT_OUT.EVENT_MEASURE_ID = EVENT_MEASURE.EVENT_MEASURE_ID
}
OCDUATTE_VOFFENDER_COURSE_EVENTS_CHECK_UA_COUNT_SENTENCE_UA {
SELECT COUNT(*)
FROM OFFENDER_SENTENCE_UA_EVENTS
WHERE
  offender_book_id = :pOffenderBookId AND
  sentence_seq = :pSentenceSeq AND
  event_date = :pEventDate AND
  event_id != :pEventId
}
OCDUATTE_VOFFENDER_COURSE_EVENTS_OLD_OBJECT {
select * from V_OFFENDER_COURSE_EVENTS where EVENT_ID=:eventId 
}
