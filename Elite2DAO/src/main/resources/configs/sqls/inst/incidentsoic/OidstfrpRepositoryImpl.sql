OIDSTFRP_SELECT_STAFF_REPORT_ALL_DATA{
select ISR.INCIDENT_REPORT_ID,
	AIP.STAFF_ID,
	ISR.REPORT_TIME,
	ISR.REPORT_TYPE,
	ISR.LOCK_FLAG,
	ISR.CREATE_USER_ID,
	ISR.MODIFY_USER_ID,
	ISR.MODIFY_DATETIME,
	ISR.AGENCY_INCIDENT_ID,
	ISR.PARTY_SEQ,
	ISR.SEAL_FLAG,
	ISR.REPORT_DETAILS,
	ISR.LOCKED_BY,
	ISR.LOCK_REFERENCE_TIME ,
	ISR.rep_complet_flag,
	ISR.CREATE_DATETIME from INCIDENT_STAFF_REPORTS ISR, AGENCY_INCIDENT_PARTIES AIP WHERE AIP.AGENCY_INCIDENT_ID = ISR.AGENCY_INCIDENT_ID AND ISR.PARTY_SEQ = AIP.PARTY_SEQ AND 
}
	
OIDSTFRP_INSERT_VALUES_STAFF_REPORT{
 INSERT INTO INCIDENT_STAFF_REPORTS
      (
      INCIDENT_REPORT_ID,
      AGENCY_INCIDENT_ID,
      PARTY_SEQ,
      REPORT_TYPE,
      REPORT_TIME,
      REPORT_DETAILS,
      REPORTER_STAFF_ID,
      REP_COMPLET_FLAG,     
      LOCK_FLAG,
      LOCKED_BY,
      LOCK_REFERENCE_TIME,
      CREATE_USER_ID,
      CREATE_DATETIME
      ) 
      VALUES (
      :incidentReportId,
      :agencyIncidentId,
      :partySeq,
      :reportType,
      :reportTime,
      :reportDetails,
      :reporterStaffId,
      :repCompletFlag,      
      :lockFlag,
      :lockedBy,
      :lockReferenceTime,
      :createUserId,
      CURRENT_TIMESTAMP
      )
}


NEXT_ID_GET {
SELECT NEXTVAL('INCIDENT_STAFF_REPORTS_SEQ') FROM DUAL
}

 

OIDSTFRP_UPDATE_VALUES_SATFF_REPORT{
 UPDATE INCIDENT_STAFF_REPORTS 
 SET
REPORT_TIME=:reportTime,
REPORT_TYPE=:reportType,
REPORT_DETAILS=:reportDetails,
REP_COMPLET_FLAG =:repCompletFlag,
LOCK_FLAG=:lockFlag,
LOCKED_BY =:lockedBy,
REPORTER_STAFF_ID=:reporterStaffId,
MODIFY_DATETIME = CURRENT_TIMESTAMP,
MODIFY_USER_ID =:modifyUserId
   WHERE  AGENCY_INCIDENT_ID=:agencyIncidentId AND INCIDENT_REPORT_ID=:incidentReportId
	}
	
OIDSTFRP_DELETE_VALUES_STAFF_REPORT
{
DELETE FROM INCIDENT_STAFF_REPORTS 
where INCIDENT_REPORT_ID=:incidentReportId AND AGENCY_INCIDENT_ID=:agencyIncidentId
}

OCUINCFE_STAFF_FORCE_SELECT_DATA{
SELECT 
ISF.LIST_SEQ,
ISF.INCIDENT_REPORT_ID,
ISF.FORCE_USED,
ISF.FORCE_DETAIL,
ISF.CREATE_DATETIME,
ISF.CREATE_USER_ID,
ISF.MODIFY_USER_ID,
ISF.MODIFY_DATETIME,
ISF.SEAL_FLAG,
ISF.REASON_FORCE_USED
FROM INCIDENT_STAFF_FORCES ISF where  ISF.INCIDENT_REPORT_ID =:incidentReportId order by list_seq
}

OCUINCFE_STAFF_EQUIPMENT_SELECT_DATA{
SELECT		
ISE.INCIDENT_REPORT_ID,
ISE.EQUIPMENT_USED,
ISE.EQUIPMENT_DETAIL,
ISE.CREATE_DATETIME,
ISE.CREATE_USER_ID,
ISE.MODIFY_USER_ID,
ISE.MODIFY_DATETIME,
ISE.SEAL_FLAG
FROM INCIDENT_STAFF_EQUIPMENTS ISE   where  ISE.INCIDENT_REPORT_ID =:incidentReportId
}

OCUINCFE_STAFF_FORCE_INSERT_DATA{
INSERT INTO INCIDENT_STAFF_FORCES
(
LIST_SEQ,
INCIDENT_REPORT_ID,
FORCE_USED, 
FORCE_DETAIL,
REASON_FORCE_USED,
CREATE_USER_ID,
CREATE_DATETIME
) 
VALUES (	
:listSeq,
:incidentReportId,
:forceUsed,
:forceDetail,
:reasonForceUsed,
:createUserId,
CURRENT_TIMESTAMP
)
}

OCUINCFE_STAFF_EQUIPMENT_INSERT_DATA{
INSERT INTO INCIDENT_STAFF_EQUIPMENTS
(
INCIDENT_REPORT_ID,
EQUIPMENT_USED, 
EQUIPMENT_DETAIL,
CREATE_USER_ID,
CREATE_DATETIME
) 
VALUES (	
:incidentReportId,
:equipmentUsed,
:equipmentDetail,
:createUserId,
CURRENT_TIMESTAMP
	)
}

OCUINCFE_STAFF_FORCE_UPDATE_DATA{
UPDATE INCIDENT_STAFF_FORCES SET
FORCE_DETAIL=:forceDetail,
MODIFY_DATETIME = CURRENT_TIMESTAMP ,
MODIFY_USER_ID =:modifyUserId ,
FORCE_USED=:forceUsed,REASON_FORCE_USED=:reasonForceUsed ,  LIST_SEQ=:listSeq
WHERE LIST_SEQ=:sequenceNumberTemp  and INCIDENT_REPORT_ID=:incidentReportId
}

OCUINCFE_STAFF_EQUIPMENT_UPDATE_DATA{
UPDATE INCIDENT_STAFF_EQUIPMENTS
SET EQUIPMENT_DETAIL=:equipmentDetail, equipment_used = :equipmentUsed ,MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID =:modifyUserId 
WHERE INCIDENT_REPORT_ID=:incidentReportId and equipment_used=:equipmentUsedTemp
}

OCUINCFE_STAFF_FORCE_DELETE_DATA{
DELETE FROM INCIDENT_STAFF_FORCES
WHERE INCIDENT_REPORT_ID=:incidentReportId and LIST_SEQ=:listSeq
}

OCUINCFE_STAFF_EQUIPMENT_DELETE_DATA{
DELETE FROM INCIDENT_STAFF_EQUIPMENTS
WHERE EQUIPMENT_USED=:equipmentUsed AND INCIDENT_REPORT_ID=:incidentReportId AND equipment_used = :equipmentUsed
} 
GET_INCIDENT_STAFF_FORCE_COUNT { 
SELECT count(*) from INCIDENT_STAFF_FORCES WHERE INCIDENT_REPORT_ID=:incidentReportId
}

GET_AGENCY_INCIDENT_PARTIES_STAFF_REPORT_TYPE {
select report_type from incident_staff_reports where agency_incident_id = :agencyIncidentId and PARTY_SEQ=:partySeq
}

UPDATE_AGENCY_INCIDENT_PARTIES_STAFF_REPORT_TYPE {
update agency_incident_parties set staff_report_type = :staffReportType where agency_incident_id = :agencyIncidentId and staff_id = :staffId, MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID =:modifyUserId
}

GET_INCIDENT_STAFF_REPORT_LOCK_FLAG {
select lock_flag from INCIDENT_STAFF_REPORTS where incident_report_id = :incidentReportId 
}

UPDATE_AGENCY_INCIDENT_PARTIES_LOCK_REFERENCE_TIME {
update incident_staff_reports set lock_reference_time = :lockReferenceTime, MODIFY_DATETIME = CURRENT_TIMESTAMP , MODIFY_USER_ID =:modifyUserId where agency_incident_id = :agencyIncidentId  AND INCIDENT_REPORT_ID=:incidentReportId
}

OIDISTRFP_GET_COUNTDOWN_TIME{
  select * from staff_reports_maint where report_type = :reportType
}

OIDISTRFP_GET_LOCK_REFERENCE_TIME{
select * from INCIDENT_STAFF_REPORTS where agency_incident_id = :agencyIncidentId and party_seq = :partySeq
}
OIDISTRFP_UPDATE_LOCK_FlAG{
update INCIDENT_STAFF_REPORTS set REP_COMPLET_FLAG =:repCompletFlag, LOCK_FLAG=:lockFlag  WHERE  AGENCY_INCIDENT_ID=:agencyIncidentId AND INCIDENT_REPORT_ID=:incidentReportId
}


